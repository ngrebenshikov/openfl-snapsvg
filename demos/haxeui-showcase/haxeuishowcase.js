(function () { "use strict";
var $hxClasses = {},$estr = function() { return js.Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ApplicationMain = function() { };
$hxClasses["ApplicationMain"] = ApplicationMain;
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.main = function() {
	ApplicationMain.completed = 0;
	ApplicationMain.loaders = new haxe.ds.StringMap();
	ApplicationMain.urlLoaders = new haxe.ds.StringMap();
	ApplicationMain.total = 0;
	openfl.Lib.get_current().loaderInfo = openfl.display.LoaderInfo.create(null);
	try {
		if(Reflect.hasField(window,"winParameters")) Reflect.setField(openfl.Lib.get_current().loaderInfo,"parameters",(Reflect.field(window,"winParameters"))());
		openfl.Lib.get_current().get_stage().loaderInfo = openfl.Lib.get_current().loaderInfo;
	} catch( e ) {
	}
	ApplicationMain.preloader = new NMEPreloader();
	openfl.Lib.get_current().addChild(ApplicationMain.preloader);
	ApplicationMain.preloader.onInit();
	var loader = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/default/circle.png",loader);
	var loader1 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/default/collapse.png",loader1);
	var loader2 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/default/cross.png",loader2);
	var loader3 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/default/expand.png",loader3);
	var loader4 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/default/up_down.png",loader4);
	var loader5 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_down.png",loader5);
	var loader6 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_down_dark.png",loader6);
	var loader7 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_down_disabled.png",loader7);
	var loader8 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_left.png",loader8);
	var loader9 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_left_disabled.png",loader9);
	var loader10 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_right.png",loader10);
	var loader11 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_right2.png",loader11);
	var loader12 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_right_dark.png",loader12);
	var loader13 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_right_disabled.png",loader13);
	var loader14 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_up.png",loader14);
	var loader15 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/arrow_up_disabled.png",loader15);
	var loader16 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/circle_dark.png",loader16);
	var loader17 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/cross_dark.png",loader17);
	var loader18 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/cross_dark_disabled.png",loader18);
	var urlLoader = new openfl.net.URLLoader();
	urlLoader.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/gradient/gradient.css",urlLoader);
	var urlLoader1 = new openfl.net.URLLoader();
	urlLoader1.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/gradient/gradient.min.css",urlLoader1);
	var urlLoader2 = new openfl.net.URLLoader();
	urlLoader2.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/gradient/gradient_mobile.css",urlLoader2);
	var urlLoader3 = new openfl.net.URLLoader();
	urlLoader3.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/gradient/gradient_mobile.min.css",urlLoader3);
	var loader19 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/gripper_horizontal.png",loader19);
	var loader20 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/gripper_horizontal_disabled.png",loader20);
	var loader21 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/gripper_vertical.png",loader21);
	var loader22 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/gradient/gripper_vertical_disabled.png",loader22);
	var urlLoader4 = new openfl.net.URLLoader();
	urlLoader4.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/accordion.css",urlLoader4);
	var urlLoader5 = new openfl.net.URLLoader();
	urlLoader5.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/accordion.min.css",urlLoader5);
	var loader23 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/button.png",loader23);
	var urlLoader6 = new openfl.net.URLLoader();
	urlLoader6.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/buttons.css",urlLoader6);
	var urlLoader7 = new openfl.net.URLLoader();
	urlLoader7.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/buttons.min.css",urlLoader7);
	var urlLoader8 = new openfl.net.URLLoader();
	urlLoader8.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/calendar.css",urlLoader8);
	var loader24 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/checkbox.png",loader24);
	var loader25 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/container.png",loader25);
	var loader26 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/down_arrow.png",loader26);
	var loader27 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/hscroll_thumb_gripper_down.png",loader27);
	var loader28 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/hscroll_thumb_gripper_over.png",loader28);
	var loader29 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/hscroll_thumb_gripper_up.png",loader29);
	var loader30 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/left_arrow.png",loader30);
	var loader31 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/right_arrow.png",loader31);
	var loader32 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/up_arrow.png",loader32);
	var loader33 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/vscroll_thumb_gripper_down.png",loader33);
	var loader34 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/vscroll_thumb_gripper_over.png",loader34);
	var loader35 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/glyphs/vscroll_thumb_gripper_up.png",loader35);
	var loader36 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/hprogress.png",loader36);
	var loader37 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/hscroll.png",loader37);
	var urlLoader9 = new openfl.net.URLLoader();
	urlLoader9.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/listview.css",urlLoader9);
	var urlLoader10 = new openfl.net.URLLoader();
	urlLoader10.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/listview.min.css",urlLoader10);
	var loader38 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/listview.png",loader38);
	var urlLoader11 = new openfl.net.URLLoader();
	urlLoader11.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/menus.css",urlLoader11);
	var loader39 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/optionbox.png",loader39);
	var loader40 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/popup.png",loader40);
	var urlLoader12 = new openfl.net.URLLoader();
	urlLoader12.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/popups.css",urlLoader12);
	var urlLoader13 = new openfl.net.URLLoader();
	urlLoader13.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/rtf.css",urlLoader13);
	var urlLoader14 = new openfl.net.URLLoader();
	urlLoader14.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/scrolls.css",urlLoader14);
	var urlLoader15 = new openfl.net.URLLoader();
	urlLoader15.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/scrolls.min.css",urlLoader15);
	var urlLoader16 = new openfl.net.URLLoader();
	urlLoader16.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/sliders.css",urlLoader16);
	var loader41 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/tab.png",loader41);
	var urlLoader17 = new openfl.net.URLLoader();
	urlLoader17.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/tabs.css",urlLoader17);
	var loader42 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/textinput.png",loader42);
	var loader43 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/vprogress.png",loader43);
	var loader44 = new openfl.display.Loader();
	ApplicationMain.loaders.set("styles/windows/vscroll.png",loader44);
	var urlLoader18 = new openfl.net.URLLoader();
	urlLoader18.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("styles/windows/windows.css",urlLoader18);
	var loader45 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/slinky_small.jpg",loader45);
	var loader46 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/slinky_tiny.jpg",loader46);
	var urlLoader19 = new openfl.net.URLLoader();
	urlLoader19.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen-Bold.eot",urlLoader19);
	var urlLoader20 = new openfl.net.URLLoader();
	urlLoader20.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen-Bold.svg",urlLoader20);
	var urlLoader21 = new openfl.net.URLLoader();
	urlLoader21.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen-Bold.woff",urlLoader21);
	var urlLoader22 = new openfl.net.URLLoader();
	urlLoader22.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen.eot",urlLoader22);
	var urlLoader23 = new openfl.net.URLLoader();
	urlLoader23.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen.svg",urlLoader23);
	var urlLoader24 = new openfl.net.URLLoader();
	urlLoader24.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("fonts/Oxygen.woff",urlLoader24);
	var urlLoader25 = new openfl.net.URLLoader();
	urlLoader25.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/code.css",urlLoader25);
	var urlLoader26 = new openfl.net.URLLoader();
	urlLoader26.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/code.min.css",urlLoader26);
	var urlLoader27 = new openfl.net.URLLoader();
	urlLoader27.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/rtf.css",urlLoader27);
	var urlLoader28 = new openfl.net.URLLoader();
	urlLoader28.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/rtf.min.css",urlLoader28);
	var loader47 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-alignment-center.png",loader47);
	var loader48 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-alignment-justify.png",loader48);
	var loader49 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-alignment-left.png",loader49);
	var loader50 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-alignment-right.png",loader50);
	var loader51 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-bold.png",loader51);
	var loader52 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-italic.png",loader52);
	var loader53 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-list.png",loader53);
	var loader54 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/rtfview/edit-underline.png",loader54);
	var urlLoader29 = new openfl.net.URLLoader();
	urlLoader29.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/openfl.svg",urlLoader29);
	var urlLoader30 = new openfl.net.URLLoader();
	urlLoader30.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/demo.xml",urlLoader30);
	var urlLoader31 = new openfl.net.URLLoader();
	urlLoader31.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/example.hx",urlLoader31);
	var urlLoader32 = new openfl.net.URLLoader();
	urlLoader32.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/example.txt",urlLoader32);
	var loader55 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-alignment-center.png",loader55);
	var loader56 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-alignment-justify.png",loader56);
	var loader57 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-alignment-left.png",loader57);
	var loader58 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-alignment-right.png",loader58);
	var loader59 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-bold.png",loader59);
	var loader60 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-italic.png",loader60);
	var loader61 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-list.png",loader61);
	var loader62 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/rtfview/edit-underline.png",loader62);
	var urlLoader33 = new openfl.net.URLLoader();
	urlLoader33.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/code.css",urlLoader33);
	var urlLoader34 = new openfl.net.URLLoader();
	urlLoader34.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/code.min.css",urlLoader34);
	var urlLoader35 = new openfl.net.URLLoader();
	urlLoader35.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/rtf.css",urlLoader35);
	var urlLoader36 = new openfl.net.URLLoader();
	urlLoader36.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/rtf.min.css",urlLoader36);
	var urlLoader37 = new openfl.net.URLLoader();
	urlLoader37.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/default/webview.css",urlLoader37);
	var urlLoader38 = new openfl.net.URLLoader();
	urlLoader38.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/gradient/webview.css",urlLoader38);
	var urlLoader39 = new openfl.net.URLLoader();
	urlLoader39.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/gradient/webview.min.css",urlLoader39);
	var urlLoader40 = new openfl.net.URLLoader();
	urlLoader40.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/css/webview.css",urlLoader40);
	var loader63 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/haxe_ui.png",loader63);
	var loader64 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/icone_cocktail_blanche_ombre.png",loader64);
	var loader65 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/img/icone_haxe_blanche_ombre.png",loader65);
	var urlLoader41 = new openfl.net.URLLoader();
	urlLoader41.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/openfl.svg",urlLoader41);
	var urlLoader42 = new openfl.net.URLLoader();
	urlLoader42.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/demo.xml",urlLoader42);
	var urlLoader43 = new openfl.net.URLLoader();
	urlLoader43.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/example.html",urlLoader43);
	var urlLoader44 = new openfl.net.URLLoader();
	urlLoader44.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/test.html",urlLoader44);
	var loader66 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/haxe_ui.png",loader66);
	var loader67 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/icone_cocktail_blanche_ombre.png",loader67);
	var loader68 = new openfl.display.Loader();
	ApplicationMain.loaders.set("img/icone_haxe_blanche_ombre.png",loader68);
	var urlLoader45 = new openfl.net.URLLoader();
	urlLoader45.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/default/webview.css",urlLoader45);
	var urlLoader46 = new openfl.net.URLLoader();
	urlLoader46.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/gradient/webview.css",urlLoader46);
	var urlLoader47 = new openfl.net.URLLoader();
	urlLoader47.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/gradient/webview.min.css",urlLoader47);
	var urlLoader48 = new openfl.net.URLLoader();
	urlLoader48.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("css/webview.css",urlLoader48);
	var urlLoader49 = new openfl.net.URLLoader();
	urlLoader49.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/application-default-icon.svg",urlLoader49);
	var urlLoader50 = new openfl.net.URLLoader();
	urlLoader50.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/data/views.xml",urlLoader50);
	var loader69 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/application-dialog.png",loader69);
	var loader70 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/blue-document-css.png",loader70);
	var loader71 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/blue-document-haxe.png",loader71);
	var loader72 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/blue-document-xml.png",loader72);
	var loader73 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/blue-document.png",loader73);
	var loader74 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/fav_16.png",loader74);
	var loader75 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/fav_32.png",loader75);
	var loader76 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/grid.png",loader76);
	var loader77 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/images.png",loader77);
	var loader78 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-accordion.png",loader78);
	var loader79 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-button.png",loader79);
	var loader80 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-buttons.png",loader80);
	var loader81 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-check-boxes.png",loader81);
	var loader82 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-combo-box-calendar.png",loader82);
	var loader83 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-flow-vertical.png",loader83);
	var loader84 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-flow.png",loader84);
	var loader85 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-labels.png",loader85);
	var loader86 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-layered-pane.png",loader86);
	var loader87 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-list-box-blue.png",loader87);
	var loader88 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-menu-blue.png",loader88);
	var loader89 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-panel.png",loader89);
	var loader90 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-progress-bar-vertical.png",loader90);
	var loader91 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-progress-bar.png",loader91);
	var loader92 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-radio-buttons.png",loader92);
	var loader93 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-scroll-bar-horizontal.png",loader93);
	var loader94 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-scroll-bar.png",loader94);
	var loader95 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-scroll-pane-image.png",loader95);
	var loader96 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-slider-050.png",loader96);
	var loader97 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-slider-vertical-050.png",loader97);
	var loader98 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-spacer.png",loader98);
	var loader99 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-split-panel-vertical.png",loader99);
	var loader100 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-split-panel.png",loader100);
	var loader101 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-tab-content.png",loader101);
	var loader102 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-tab.png",loader102);
	var loader103 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/icons/ui-text-field.png",loader103);
	var loader104 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/images/slinky.jpg",loader104);
	var urlLoader51 = new openfl.net.URLLoader();
	urlLoader51.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/AbsoluteLayout/AbsoluteLayout.hx",urlLoader51);
	var urlLoader52 = new openfl.net.URLLoader();
	urlLoader52.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/AbsoluteLayout/AbsoluteLayout.xml",urlLoader52);
	var urlLoader53 = new openfl.net.URLLoader();
	urlLoader53.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Accordions/Accordions.hx",urlLoader53);
	var urlLoader54 = new openfl.net.URLLoader();
	urlLoader54.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Accordions/Accordions.xml",urlLoader54);
	var urlLoader55 = new openfl.net.URLLoader();
	urlLoader55.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/BoxLayout/BoxLayout.hx",urlLoader55);
	var urlLoader56 = new openfl.net.URLLoader();
	urlLoader56.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/BoxLayout/BoxLayout.xml",urlLoader56);
	var urlLoader57 = new openfl.net.URLLoader();
	urlLoader57.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/BusyPopup/BusyPopup.hx",urlLoader57);
	var urlLoader58 = new openfl.net.URLLoader();
	urlLoader58.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/BusyPopup/BusyPopup.xml",urlLoader58);
	var urlLoader59 = new openfl.net.URLLoader();
	urlLoader59.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Buttons/Buttons.hx",urlLoader59);
	var urlLoader60 = new openfl.net.URLLoader();
	urlLoader60.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Buttons/Buttons.xml",urlLoader60);
	var urlLoader61 = new openfl.net.URLLoader();
	urlLoader61.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CalendarPopup/CalendarPopup.hx",urlLoader61);
	var urlLoader62 = new openfl.net.URLLoader();
	urlLoader62.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CalendarPopup/CalendarPopup.xml",urlLoader62);
	var urlLoader63 = new openfl.net.URLLoader();
	urlLoader63.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CheckBoxes/CheckBoxes.hx",urlLoader63);
	var urlLoader64 = new openfl.net.URLLoader();
	urlLoader64.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CheckBoxes/CheckBoxes.xml",urlLoader64);
	var urlLoader65 = new openfl.net.URLLoader();
	urlLoader65.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ContinuousLayout/HContinuousLayout.hx",urlLoader65);
	var urlLoader66 = new openfl.net.URLLoader();
	urlLoader66.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ContinuousLayout/HContinuousLayout.xml",urlLoader66);
	var urlLoader67 = new openfl.net.URLLoader();
	urlLoader67.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ContinuousLayout/VContinuousLayout.hx",urlLoader67);
	var urlLoader68 = new openfl.net.URLLoader();
	urlLoader68.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ContinuousLayout/VContinuousLayout.xml",urlLoader68);
	var urlLoader69 = new openfl.net.URLLoader();
	urlLoader69.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CustomPopup/CustomPopup.hx",urlLoader69);
	var urlLoader70 = new openfl.net.URLLoader();
	urlLoader70.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CustomPopup/CustomPopup.xml",urlLoader70);
	var urlLoader71 = new openfl.net.URLLoader();
	urlLoader71.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/CustomPopup/CustomPopupContent.xml",urlLoader71);
	var urlLoader72 = new openfl.net.URLLoader();
	urlLoader72.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/DateSelectors/DateSelectors.hx",urlLoader72);
	var urlLoader73 = new openfl.net.URLLoader();
	urlLoader73.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/DateSelectors/DateSelectors.xml",urlLoader73);
	var urlLoader74 = new openfl.net.URLLoader();
	urlLoader74.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/GridLayout/GridLayout.hx",urlLoader74);
	var urlLoader75 = new openfl.net.URLLoader();
	urlLoader75.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/GridLayout/GridLayout.xml",urlLoader75);
	var urlLoader76 = new openfl.net.URLLoader();
	urlLoader76.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/HorizontalLayout/HorizontalLayout.hx",urlLoader76);
	var urlLoader77 = new openfl.net.URLLoader();
	urlLoader77.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/HorizontalLayout/HorizontalLayout.xml",urlLoader77);
	var urlLoader78 = new openfl.net.URLLoader();
	urlLoader78.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Images/Images.hx",urlLoader78);
	var urlLoader79 = new openfl.net.URLLoader();
	urlLoader79.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Images/Images.xml",urlLoader79);
	var urlLoader80 = new openfl.net.URLLoader();
	urlLoader80.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListPopup/ListPopup.hx",urlLoader80);
	var urlLoader81 = new openfl.net.URLLoader();
	urlLoader81.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListPopup/ListPopup.xml",urlLoader81);
	var urlLoader82 = new openfl.net.URLLoader();
	urlLoader82.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListSelectors/ListSelectors.hx",urlLoader82);
	var urlLoader83 = new openfl.net.URLLoader();
	urlLoader83.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListSelectors/ListSelectors.xml",urlLoader83);
	var urlLoader84 = new openfl.net.URLLoader();
	urlLoader84.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListViews/ListViews.hx",urlLoader84);
	var urlLoader85 = new openfl.net.URLLoader();
	urlLoader85.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ListViews/ListViews.xml",urlLoader85);
	var urlLoader86 = new openfl.net.URLLoader();
	urlLoader86.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/OptionBoxes/OptionBoxes.hx",urlLoader86);
	var urlLoader87 = new openfl.net.URLLoader();
	urlLoader87.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/OptionBoxes/OptionBoxes.xml",urlLoader87);
	var urlLoader88 = new openfl.net.URLLoader();
	urlLoader88.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ProgressBars/HProgressBars.hx",urlLoader88);
	var urlLoader89 = new openfl.net.URLLoader();
	urlLoader89.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ProgressBars/HProgressBars.xml",urlLoader89);
	var urlLoader90 = new openfl.net.URLLoader();
	urlLoader90.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ProgressBars/VProgressBars.hx",urlLoader90);
	var urlLoader91 = new openfl.net.URLLoader();
	urlLoader91.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ProgressBars/VProgressBars.xml",urlLoader91);
	var urlLoader92 = new openfl.net.URLLoader();
	urlLoader92.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollBars/HScrollBars.hx",urlLoader92);
	var urlLoader93 = new openfl.net.URLLoader();
	urlLoader93.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollBars/HScrollBars.xml",urlLoader93);
	var urlLoader94 = new openfl.net.URLLoader();
	urlLoader94.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollBars/VScrollBars.hx",urlLoader94);
	var urlLoader95 = new openfl.net.URLLoader();
	urlLoader95.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollBars/VScrollBars.xml",urlLoader95);
	var urlLoader96 = new openfl.net.URLLoader();
	urlLoader96.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollViews/ScrollViews.hx",urlLoader96);
	var urlLoader97 = new openfl.net.URLLoader();
	urlLoader97.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/ScrollViews/ScrollViews.xml",urlLoader97);
	var urlLoader98 = new openfl.net.URLLoader();
	urlLoader98.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/SimplePopup/SimplePopup.hx",urlLoader98);
	var urlLoader99 = new openfl.net.URLLoader();
	urlLoader99.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/SimplePopup/SimplePopup.xml",urlLoader99);
	var urlLoader100 = new openfl.net.URLLoader();
	urlLoader100.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Sliders/HSliders.hx",urlLoader100);
	var urlLoader101 = new openfl.net.URLLoader();
	urlLoader101.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Sliders/HSliders.xml",urlLoader101);
	var urlLoader102 = new openfl.net.URLLoader();
	urlLoader102.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Sliders/VSliders.hx",urlLoader102);
	var urlLoader103 = new openfl.net.URLLoader();
	urlLoader103.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/Sliders/VSliders.xml",urlLoader103);
	var loader105 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/slinky.jpg",loader105);
	var loader106 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/slinky_large.jpg",loader106);
	var loader107 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/slinky_small.jpg",loader107);
	var urlLoader104 = new openfl.net.URLLoader();
	urlLoader104.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/TextFields/TextFields.hx",urlLoader104);
	var urlLoader105 = new openfl.net.URLLoader();
	urlLoader105.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/TextFields/TextFields.xml",urlLoader105);
	var urlLoader106 = new openfl.net.URLLoader();
	urlLoader106.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/TextInputs/TextInputs.hx",urlLoader106);
	var urlLoader107 = new openfl.net.URLLoader();
	urlLoader107.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/TextInputs/TextInputs.xml",urlLoader107);
	var urlLoader108 = new openfl.net.URLLoader();
	urlLoader108.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/VerticalLayout/VerticalLayout.hx",urlLoader108);
	var urlLoader109 = new openfl.net.URLLoader();
	urlLoader109.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/VerticalLayout/VerticalLayout.xml",urlLoader109);
	var urlLoader110 = new openfl.net.URLLoader();
	urlLoader110.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/WebViews/example.html",urlLoader110);
	var loader108 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/WebViews/img/haxe_ui.png",loader108);
	var loader109 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/WebViews/img/icone_cocktail_blanche_ombre.png",loader109);
	var loader110 = new openfl.display.Loader();
	ApplicationMain.loaders.set("assets/resources/WebViews/img/icone_haxe_blanche_ombre.png",loader110);
	var urlLoader111 = new openfl.net.URLLoader();
	urlLoader111.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/WebViews/WebViews.hx",urlLoader111);
	var urlLoader112 = new openfl.net.URLLoader();
	urlLoader112.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/resources/WebViews/WebViews.xml",urlLoader112);
	var urlLoader113 = new openfl.net.URLLoader();
	urlLoader113.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/about.xml",urlLoader113);
	var urlLoader114 = new openfl.net.URLLoader();
	urlLoader114.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/main.xml",urlLoader114);
	var urlLoader115 = new openfl.net.URLLoader();
	urlLoader115.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/prefs.xml",urlLoader115);
	var urlLoader116 = new openfl.net.URLLoader();
	urlLoader116.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("assets/ui/todo.xml",urlLoader116);
	var urlLoader117 = new openfl.net.URLLoader();
	urlLoader117.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("ui/about.xml",urlLoader117);
	var urlLoader118 = new openfl.net.URLLoader();
	urlLoader118.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("ui/main.xml",urlLoader118);
	var urlLoader119 = new openfl.net.URLLoader();
	urlLoader119.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("ui/prefs.xml",urlLoader119);
	var urlLoader120 = new openfl.net.URLLoader();
	urlLoader120.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("ui/todo.xml",urlLoader120);
	var urlLoader121 = new openfl.net.URLLoader();
	urlLoader121.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("data/views.xml",urlLoader121);
	var urlLoader122 = new openfl.net.URLLoader();
	urlLoader122.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/AbsoluteLayout/AbsoluteLayout.hx",urlLoader122);
	var urlLoader123 = new openfl.net.URLLoader();
	urlLoader123.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/AbsoluteLayout/AbsoluteLayout.xml",urlLoader123);
	var urlLoader124 = new openfl.net.URLLoader();
	urlLoader124.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Accordions/Accordions.hx",urlLoader124);
	var urlLoader125 = new openfl.net.URLLoader();
	urlLoader125.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Accordions/Accordions.xml",urlLoader125);
	var urlLoader126 = new openfl.net.URLLoader();
	urlLoader126.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/BoxLayout/BoxLayout.hx",urlLoader126);
	var urlLoader127 = new openfl.net.URLLoader();
	urlLoader127.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/BoxLayout/BoxLayout.xml",urlLoader127);
	var urlLoader128 = new openfl.net.URLLoader();
	urlLoader128.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/BusyPopup/BusyPopup.hx",urlLoader128);
	var urlLoader129 = new openfl.net.URLLoader();
	urlLoader129.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/BusyPopup/BusyPopup.xml",urlLoader129);
	var urlLoader130 = new openfl.net.URLLoader();
	urlLoader130.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Buttons/Buttons.hx",urlLoader130);
	var urlLoader131 = new openfl.net.URLLoader();
	urlLoader131.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Buttons/Buttons.xml",urlLoader131);
	var urlLoader132 = new openfl.net.URLLoader();
	urlLoader132.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CalendarPopup/CalendarPopup.hx",urlLoader132);
	var urlLoader133 = new openfl.net.URLLoader();
	urlLoader133.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CalendarPopup/CalendarPopup.xml",urlLoader133);
	var urlLoader134 = new openfl.net.URLLoader();
	urlLoader134.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CheckBoxes/CheckBoxes.hx",urlLoader134);
	var urlLoader135 = new openfl.net.URLLoader();
	urlLoader135.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CheckBoxes/CheckBoxes.xml",urlLoader135);
	var urlLoader136 = new openfl.net.URLLoader();
	urlLoader136.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ContinuousLayout/HContinuousLayout.hx",urlLoader136);
	var urlLoader137 = new openfl.net.URLLoader();
	urlLoader137.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ContinuousLayout/HContinuousLayout.xml",urlLoader137);
	var urlLoader138 = new openfl.net.URLLoader();
	urlLoader138.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ContinuousLayout/VContinuousLayout.hx",urlLoader138);
	var urlLoader139 = new openfl.net.URLLoader();
	urlLoader139.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ContinuousLayout/VContinuousLayout.xml",urlLoader139);
	var urlLoader140 = new openfl.net.URLLoader();
	urlLoader140.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CustomPopup/CustomPopup.hx",urlLoader140);
	var urlLoader141 = new openfl.net.URLLoader();
	urlLoader141.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CustomPopup/CustomPopup.xml",urlLoader141);
	var urlLoader142 = new openfl.net.URLLoader();
	urlLoader142.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/CustomPopup/CustomPopupContent.xml",urlLoader142);
	var urlLoader143 = new openfl.net.URLLoader();
	urlLoader143.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/DateSelectors/DateSelectors.hx",urlLoader143);
	var urlLoader144 = new openfl.net.URLLoader();
	urlLoader144.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/DateSelectors/DateSelectors.xml",urlLoader144);
	var urlLoader145 = new openfl.net.URLLoader();
	urlLoader145.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/GridLayout/GridLayout.hx",urlLoader145);
	var urlLoader146 = new openfl.net.URLLoader();
	urlLoader146.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/GridLayout/GridLayout.xml",urlLoader146);
	var urlLoader147 = new openfl.net.URLLoader();
	urlLoader147.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/HorizontalLayout/HorizontalLayout.hx",urlLoader147);
	var urlLoader148 = new openfl.net.URLLoader();
	urlLoader148.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/HorizontalLayout/HorizontalLayout.xml",urlLoader148);
	var urlLoader149 = new openfl.net.URLLoader();
	urlLoader149.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Images/Images.hx",urlLoader149);
	var urlLoader150 = new openfl.net.URLLoader();
	urlLoader150.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Images/Images.xml",urlLoader150);
	var urlLoader151 = new openfl.net.URLLoader();
	urlLoader151.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListPopup/ListPopup.hx",urlLoader151);
	var urlLoader152 = new openfl.net.URLLoader();
	urlLoader152.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListPopup/ListPopup.xml",urlLoader152);
	var urlLoader153 = new openfl.net.URLLoader();
	urlLoader153.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListSelectors/ListSelectors.hx",urlLoader153);
	var urlLoader154 = new openfl.net.URLLoader();
	urlLoader154.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListSelectors/ListSelectors.xml",urlLoader154);
	var urlLoader155 = new openfl.net.URLLoader();
	urlLoader155.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListViews/ListViews.hx",urlLoader155);
	var urlLoader156 = new openfl.net.URLLoader();
	urlLoader156.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ListViews/ListViews.xml",urlLoader156);
	var urlLoader157 = new openfl.net.URLLoader();
	urlLoader157.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/OptionBoxes/OptionBoxes.hx",urlLoader157);
	var urlLoader158 = new openfl.net.URLLoader();
	urlLoader158.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/OptionBoxes/OptionBoxes.xml",urlLoader158);
	var urlLoader159 = new openfl.net.URLLoader();
	urlLoader159.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ProgressBars/HProgressBars.hx",urlLoader159);
	var urlLoader160 = new openfl.net.URLLoader();
	urlLoader160.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ProgressBars/HProgressBars.xml",urlLoader160);
	var urlLoader161 = new openfl.net.URLLoader();
	urlLoader161.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ProgressBars/VProgressBars.hx",urlLoader161);
	var urlLoader162 = new openfl.net.URLLoader();
	urlLoader162.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ProgressBars/VProgressBars.xml",urlLoader162);
	var urlLoader163 = new openfl.net.URLLoader();
	urlLoader163.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollBars/HScrollBars.hx",urlLoader163);
	var urlLoader164 = new openfl.net.URLLoader();
	urlLoader164.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollBars/HScrollBars.xml",urlLoader164);
	var urlLoader165 = new openfl.net.URLLoader();
	urlLoader165.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollBars/VScrollBars.hx",urlLoader165);
	var urlLoader166 = new openfl.net.URLLoader();
	urlLoader166.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollBars/VScrollBars.xml",urlLoader166);
	var urlLoader167 = new openfl.net.URLLoader();
	urlLoader167.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollViews/ScrollViews.hx",urlLoader167);
	var urlLoader168 = new openfl.net.URLLoader();
	urlLoader168.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/ScrollViews/ScrollViews.xml",urlLoader168);
	var urlLoader169 = new openfl.net.URLLoader();
	urlLoader169.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/SimplePopup/SimplePopup.hx",urlLoader169);
	var urlLoader170 = new openfl.net.URLLoader();
	urlLoader170.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/SimplePopup/SimplePopup.xml",urlLoader170);
	var urlLoader171 = new openfl.net.URLLoader();
	urlLoader171.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Sliders/HSliders.hx",urlLoader171);
	var urlLoader172 = new openfl.net.URLLoader();
	urlLoader172.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Sliders/HSliders.xml",urlLoader172);
	var urlLoader173 = new openfl.net.URLLoader();
	urlLoader173.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Sliders/VSliders.hx",urlLoader173);
	var urlLoader174 = new openfl.net.URLLoader();
	urlLoader174.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/Sliders/VSliders.xml",urlLoader174);
	var loader111 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/slinky.jpg",loader111);
	var loader112 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/slinky_large.jpg",loader112);
	var loader113 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/slinky_small.jpg",loader113);
	var urlLoader175 = new openfl.net.URLLoader();
	urlLoader175.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/TextFields/TextFields.hx",urlLoader175);
	var urlLoader176 = new openfl.net.URLLoader();
	urlLoader176.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/TextFields/TextFields.xml",urlLoader176);
	var urlLoader177 = new openfl.net.URLLoader();
	urlLoader177.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/TextInputs/TextInputs.hx",urlLoader177);
	var urlLoader178 = new openfl.net.URLLoader();
	urlLoader178.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/TextInputs/TextInputs.xml",urlLoader178);
	var urlLoader179 = new openfl.net.URLLoader();
	urlLoader179.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/VerticalLayout/VerticalLayout.hx",urlLoader179);
	var urlLoader180 = new openfl.net.URLLoader();
	urlLoader180.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/VerticalLayout/VerticalLayout.xml",urlLoader180);
	var urlLoader181 = new openfl.net.URLLoader();
	urlLoader181.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/WebViews/example.html",urlLoader181);
	var loader114 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/WebViews/img/haxe_ui.png",loader114);
	var loader115 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/WebViews/img/icone_cocktail_blanche_ombre.png",loader115);
	var loader116 = new openfl.display.Loader();
	ApplicationMain.loaders.set("resources/WebViews/img/icone_haxe_blanche_ombre.png",loader116);
	var urlLoader182 = new openfl.net.URLLoader();
	urlLoader182.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/WebViews/WebViews.hx",urlLoader182);
	var urlLoader183 = new openfl.net.URLLoader();
	urlLoader183.set_dataFormat(openfl.net.URLLoaderDataFormat.BINARY);
	ApplicationMain.urlLoaders.set("resources/WebViews/WebViews.xml",urlLoader183);
	var loader117 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/application-dialog.png",loader117);
	var loader118 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/blue-document-css.png",loader118);
	var loader119 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/blue-document-haxe.png",loader119);
	var loader120 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/blue-document-xml.png",loader120);
	var loader121 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/blue-document.png",loader121);
	var loader122 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/fav_16.png",loader122);
	var loader123 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/fav_32.png",loader123);
	var loader124 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/grid.png",loader124);
	var loader125 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/images.png",loader125);
	var loader126 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-accordion.png",loader126);
	var loader127 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-button.png",loader127);
	var loader128 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-buttons.png",loader128);
	var loader129 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-check-boxes.png",loader129);
	var loader130 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-combo-box-calendar.png",loader130);
	var loader131 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-flow-vertical.png",loader131);
	var loader132 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-flow.png",loader132);
	var loader133 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-labels.png",loader133);
	var loader134 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-layered-pane.png",loader134);
	var loader135 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-list-box-blue.png",loader135);
	var loader136 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-menu-blue.png",loader136);
	var loader137 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-panel.png",loader137);
	var loader138 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-progress-bar-vertical.png",loader138);
	var loader139 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-progress-bar.png",loader139);
	var loader140 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-radio-buttons.png",loader140);
	var loader141 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-scroll-bar-horizontal.png",loader141);
	var loader142 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-scroll-bar.png",loader142);
	var loader143 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-scroll-pane-image.png",loader143);
	var loader144 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-slider-050.png",loader144);
	var loader145 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-slider-vertical-050.png",loader145);
	var loader146 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-spacer.png",loader146);
	var loader147 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-split-panel-vertical.png",loader147);
	var loader148 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-split-panel.png",loader148);
	var loader149 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-tab-content.png",loader149);
	var loader150 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-tab.png",loader150);
	var loader151 = new openfl.display.Loader();
	ApplicationMain.loaders.set("icons/ui-text-field.png",loader151);
	var loader152 = new openfl.display.Loader();
	ApplicationMain.loaders.set("images/slinky.jpg",loader152);
	var resourcePrefix = "__ASSET__:bitmap_";
	var _g = 0;
	var _g1 = haxe.Resource.listNames();
	while(_g < _g1.length) {
		var resourceName = _g1[_g];
		++_g;
		if(StringTools.startsWith(resourceName,resourcePrefix)) {
			var type = Type.resolveClass(StringTools.replace(resourceName.substring(resourcePrefix.length),"_","."));
			if(type != null) {
				ApplicationMain.total++;
				var instance = Type.createInstance(type,[0,0,true,16777215,ApplicationMain.bitmapClass_onComplete]);
			}
		}
	}
	ApplicationMain.total += Lambda.count(ApplicationMain.loaders) + Lambda.count(ApplicationMain.urlLoaders);
	if(ApplicationMain.total == 0) ApplicationMain.begin(); else {
		var $it0 = ApplicationMain.loaders.keys();
		while( $it0.hasNext() ) {
			var path = $it0.next();
			var loader153 = ApplicationMain.loaders.get(path);
			loader153.contentLoaderInfo.addEventListener("complete",ApplicationMain.loader_onComplete);
			loader153.load(new openfl.net.URLRequest(path));
		}
		var $it1 = ApplicationMain.urlLoaders.keys();
		while( $it1.hasNext() ) {
			var path1 = $it1.next();
			var urlLoader184 = ApplicationMain.urlLoaders.get(path1);
			urlLoader184.addEventListener("complete",ApplicationMain.loader_onComplete);
			urlLoader184.load(new openfl.net.URLRequest(path1));
		}
	}
};
ApplicationMain.begin = function() {
	ApplicationMain.preloader.addEventListener(openfl.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	ApplicationMain.preloader.onLoaded();
};
ApplicationMain.bitmapClass_onComplete = function(instance) {
	ApplicationMain.completed++;
	var classType = Type.getClass(instance);
	classType.preload = instance;
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
};
ApplicationMain.loader_onComplete = function(event) {
	ApplicationMain.completed++;
	ApplicationMain.preloader.onUpdate(ApplicationMain.completed,ApplicationMain.total);
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
};
ApplicationMain.preloader_onComplete = function(event) {
	ApplicationMain.preloader.removeEventListener(openfl.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	openfl.Lib.get_current().removeChild(ApplicationMain.preloader);
	ApplicationMain.preloader = null;
	if(Reflect.field(haxe.ui.showcase.Main,"main") == null) {
		var mainDisplayObj = Type.createInstance(DocumentClass,[]);
		if(js.Boot.__instanceof(mainDisplayObj,openfl.display.DisplayObject)) openfl.Lib.get_current().addChild(mainDisplayObj);
	} else Reflect.callMethod(haxe.ui.showcase.Main,Reflect.field(haxe.ui.showcase.Main,"main"),[]);
};
var haxe = {};
haxe.ui = {};
haxe.ui.showcase = {};
haxe.ui.showcase.Main = function() { };
$hxClasses["haxe.ui.showcase.Main"] = haxe.ui.showcase.Main;
haxe.ui.showcase.Main.__name__ = ["haxe","ui","showcase","Main"];
haxe.ui.showcase.Main.main = function() {
	if(haxe.ui.showcase.util.Prefs.get_theme() == "default") haxe.ui.toolkit.core.Toolkit.theme = new haxe.ui.toolkit.themes.DefaultTheme(); else if(haxe.ui.showcase.util.Prefs.get_theme() == "gradient") haxe.ui.toolkit.core.Toolkit.theme = new haxe.ui.toolkit.themes.GradientTheme(); else if(haxe.ui.showcase.util.Prefs.get_theme() == "windows") haxe.ui.toolkit.core.Toolkit.theme = new haxe.ui.toolkit.themes.WindowsTheme();
	haxe.ui.toolkit.core.PopupManager.get_instance().defaultTitle = "Component Showcase";
	haxe.ui.toolkit.core.Toolkit.set_defaultTransition("none");
	haxe.ui.toolkit.core.Toolkit.setTransitionForClass(haxe.ui.toolkit.containers.Accordion,"slide");
	haxe.ui.toolkit.core.Toolkit.setTransitionForClass(haxe.ui.toolkit.containers.Stack,"fade");
	haxe.ui.toolkit.core.Toolkit.setTransitionForClass(haxe.ui.toolkit.controls.Menu,"none");
	haxe.ui.toolkit.core.Toolkit.setTransitionForClass(haxe.ui.toolkit.controls.popups.Popup,"slide");
	if(haxe.ui.showcase.util.Prefs.get_selectionMethod() != "theme") haxe.ui.toolkit.style.StyleManager.get_instance().addStyle("ListSelector",new haxe.ui.toolkit.style.Style({ selectionMethod : haxe.ui.showcase.util.Prefs.get_selectionMethod()}));
	haxe.ui.toolkit.core.Toolkit.init();
	haxe.ui.toolkit.core.Toolkit.openFullscreen(function(root) {
		root.addChild(new haxe.ui.showcase.MainController().get_view());
	});
};
var DocumentClass = function() { };
$hxClasses["DocumentClass"] = DocumentClass;
DocumentClass.__name__ = ["DocumentClass"];
DocumentClass.__super__ = haxe.ui.showcase.Main;
DocumentClass.prototype = $extend(haxe.ui.showcase.Main.prototype,{
	__class__: DocumentClass
});
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = ["DateTools"];
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "C":
		return StringTools.lpad(Std.string(Std["int"](d.getFullYear() / 100)),"0",2);
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H"?"0":" ",2);
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0?12:hour),e == "I"?"0":" ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) return "PM"; else return "AM";
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "s":
		return Std.string(Std["int"](d.getTime() / 1000));
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "t":
		return "\t";
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "u":
		var t = d.getDay();
		if(t == 0) return "7"; else if(t == null) return "null"; else return "" + t;
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	case "Y":
		return Std.string(d.getFullYear());
	default:
		throw "Date.format %" + e + "- not implemented yet.";
	}
};
DateTools.__format = function(d,f) {
	var r = new StringBuf();
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) break;
		r.addSub(f,p,np - p);
		r.add(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	r.addSub(f,p,f.length - p);
	return r.b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var openfl = {};
openfl.AssetLibrary = function() {
};
$hxClasses["openfl.AssetLibrary"] = openfl.AssetLibrary;
openfl.AssetLibrary.__name__ = ["openfl","AssetLibrary"];
openfl.AssetLibrary.prototype = {
	exists: function(id,type) {
		return false;
	}
	,getBitmapData: function(id) {
		return null;
	}
	,getBytes: function(id) {
		return null;
	}
	,getFont: function(id) {
		return null;
	}
	,getMovieClip: function(id) {
		return null;
	}
	,getMusic: function(id) {
		return this.getSound(id);
	}
	,getPath: function(id) {
		return null;
	}
	,getSound: function(id) {
		return null;
	}
	,getText: function(id) {
		var bytes = this.getBytes(id);
		if(bytes == null) return null; else return bytes.readUTFBytes(bytes.length);
	}
	,isLocal: function(id,type) {
		return true;
	}
	,list: function(type) {
		return null;
	}
	,load: function(handler) {
		handler(this);
	}
	,loadBitmapData: function(id,handler) {
		handler(this.getBitmapData(id));
	}
	,loadBytes: function(id,handler) {
		handler(this.getBytes(id));
	}
	,loadFont: function(id,handler) {
		handler(this.getFont(id));
	}
	,loadMovieClip: function(id,handler) {
		handler(this.getMovieClip(id));
	}
	,loadMusic: function(id,handler) {
		handler(this.getMusic(id));
	}
	,loadSound: function(id,handler) {
		handler(this.getSound(id));
	}
	,loadText: function(id,handler) {
		var callback = function(bytes) {
			if(bytes == null) handler(null); else handler(bytes.readUTFBytes(bytes.length));
		};
		this.loadBytes(id,callback);
	}
	,__class__: openfl.AssetLibrary
};
var DefaultAssetLibrary = function() {
	openfl.AssetLibrary.call(this);
	DefaultAssetLibrary.path.set("styles/default/circle.png","styles/default/circle.png");
	var value = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/default/circle.png",value);
	DefaultAssetLibrary.path.set("styles/default/collapse.png","styles/default/collapse.png");
	var value1 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/default/collapse.png",value1);
	DefaultAssetLibrary.path.set("styles/default/cross.png","styles/default/cross.png");
	var value2 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/default/cross.png",value2);
	DefaultAssetLibrary.path.set("styles/default/expand.png","styles/default/expand.png");
	var value3 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/default/expand.png",value3);
	DefaultAssetLibrary.path.set("styles/default/up_down.png","styles/default/up_down.png");
	var value4 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/default/up_down.png",value4);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_down.png","styles/gradient/arrow_down.png");
	var value5 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_down.png",value5);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_down_dark.png","styles/gradient/arrow_down_dark.png");
	var value6 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_down_dark.png",value6);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_down_disabled.png","styles/gradient/arrow_down_disabled.png");
	var value7 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_down_disabled.png",value7);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_left.png","styles/gradient/arrow_left.png");
	var value8 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_left.png",value8);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_left_disabled.png","styles/gradient/arrow_left_disabled.png");
	var value9 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_left_disabled.png",value9);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_right.png","styles/gradient/arrow_right.png");
	var value10 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_right.png",value10);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_right2.png","styles/gradient/arrow_right2.png");
	var value11 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_right2.png",value11);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_right_dark.png","styles/gradient/arrow_right_dark.png");
	var value12 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_right_dark.png",value12);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_right_disabled.png","styles/gradient/arrow_right_disabled.png");
	var value13 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_right_disabled.png",value13);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_up.png","styles/gradient/arrow_up.png");
	var value14 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_up.png",value14);
	DefaultAssetLibrary.path.set("styles/gradient/arrow_up_disabled.png","styles/gradient/arrow_up_disabled.png");
	var value15 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/arrow_up_disabled.png",value15);
	DefaultAssetLibrary.path.set("styles/gradient/circle_dark.png","styles/gradient/circle_dark.png");
	var value16 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/circle_dark.png",value16);
	DefaultAssetLibrary.path.set("styles/gradient/cross_dark.png","styles/gradient/cross_dark.png");
	var value17 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/cross_dark.png",value17);
	DefaultAssetLibrary.path.set("styles/gradient/cross_dark_disabled.png","styles/gradient/cross_dark_disabled.png");
	var value18 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/cross_dark_disabled.png",value18);
	DefaultAssetLibrary.path.set("styles/gradient/gradient.css","styles/gradient/gradient.css");
	var value19 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gradient.css",value19);
	DefaultAssetLibrary.path.set("styles/gradient/gradient.min.css","styles/gradient/gradient.min.css");
	var value20 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gradient.min.css",value20);
	DefaultAssetLibrary.path.set("styles/gradient/gradient_mobile.css","styles/gradient/gradient_mobile.css");
	var value21 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gradient_mobile.css",value21);
	DefaultAssetLibrary.path.set("styles/gradient/gradient_mobile.min.css","styles/gradient/gradient_mobile.min.css");
	var value22 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gradient_mobile.min.css",value22);
	DefaultAssetLibrary.path.set("styles/gradient/gripper_horizontal.png","styles/gradient/gripper_horizontal.png");
	var value23 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gripper_horizontal.png",value23);
	DefaultAssetLibrary.path.set("styles/gradient/gripper_horizontal_disabled.png","styles/gradient/gripper_horizontal_disabled.png");
	var value24 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gripper_horizontal_disabled.png",value24);
	DefaultAssetLibrary.path.set("styles/gradient/gripper_vertical.png","styles/gradient/gripper_vertical.png");
	var value25 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gripper_vertical.png",value25);
	DefaultAssetLibrary.path.set("styles/gradient/gripper_vertical_disabled.png","styles/gradient/gripper_vertical_disabled.png");
	var value26 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/gradient/gripper_vertical_disabled.png",value26);
	DefaultAssetLibrary.path.set("styles/windows/accordion.css","styles/windows/accordion.css");
	var value27 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/accordion.css",value27);
	DefaultAssetLibrary.path.set("styles/windows/accordion.min.css","styles/windows/accordion.min.css");
	var value28 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/accordion.min.css",value28);
	DefaultAssetLibrary.path.set("styles/windows/button.png","styles/windows/button.png");
	var value29 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/button.png",value29);
	DefaultAssetLibrary.path.set("styles/windows/buttons.css","styles/windows/buttons.css");
	var value30 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/buttons.css",value30);
	DefaultAssetLibrary.path.set("styles/windows/buttons.min.css","styles/windows/buttons.min.css");
	var value31 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/buttons.min.css",value31);
	DefaultAssetLibrary.path.set("styles/windows/calendar.css","styles/windows/calendar.css");
	var value32 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/calendar.css",value32);
	DefaultAssetLibrary.path.set("styles/windows/checkbox.png","styles/windows/checkbox.png");
	var value33 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/checkbox.png",value33);
	DefaultAssetLibrary.path.set("styles/windows/container.png","styles/windows/container.png");
	var value34 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/container.png",value34);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/down_arrow.png","styles/windows/glyphs/down_arrow.png");
	var value35 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/down_arrow.png",value35);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/hscroll_thumb_gripper_down.png","styles/windows/glyphs/hscroll_thumb_gripper_down.png");
	var value36 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/hscroll_thumb_gripper_down.png",value36);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/hscroll_thumb_gripper_over.png","styles/windows/glyphs/hscroll_thumb_gripper_over.png");
	var value37 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/hscroll_thumb_gripper_over.png",value37);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/hscroll_thumb_gripper_up.png","styles/windows/glyphs/hscroll_thumb_gripper_up.png");
	var value38 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/hscroll_thumb_gripper_up.png",value38);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/left_arrow.png","styles/windows/glyphs/left_arrow.png");
	var value39 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/left_arrow.png",value39);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/right_arrow.png","styles/windows/glyphs/right_arrow.png");
	var value40 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/right_arrow.png",value40);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/up_arrow.png","styles/windows/glyphs/up_arrow.png");
	var value41 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/up_arrow.png",value41);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/vscroll_thumb_gripper_down.png","styles/windows/glyphs/vscroll_thumb_gripper_down.png");
	var value42 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/vscroll_thumb_gripper_down.png",value42);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/vscroll_thumb_gripper_over.png","styles/windows/glyphs/vscroll_thumb_gripper_over.png");
	var value43 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/vscroll_thumb_gripper_over.png",value43);
	DefaultAssetLibrary.path.set("styles/windows/glyphs/vscroll_thumb_gripper_up.png","styles/windows/glyphs/vscroll_thumb_gripper_up.png");
	var value44 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/glyphs/vscroll_thumb_gripper_up.png",value44);
	DefaultAssetLibrary.path.set("styles/windows/hprogress.png","styles/windows/hprogress.png");
	var value45 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/hprogress.png",value45);
	DefaultAssetLibrary.path.set("styles/windows/hscroll.png","styles/windows/hscroll.png");
	var value46 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/hscroll.png",value46);
	DefaultAssetLibrary.path.set("styles/windows/listview.css","styles/windows/listview.css");
	var value47 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/listview.css",value47);
	DefaultAssetLibrary.path.set("styles/windows/listview.min.css","styles/windows/listview.min.css");
	var value48 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/listview.min.css",value48);
	DefaultAssetLibrary.path.set("styles/windows/listview.png","styles/windows/listview.png");
	var value49 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/listview.png",value49);
	DefaultAssetLibrary.path.set("styles/windows/menus.css","styles/windows/menus.css");
	var value50 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/menus.css",value50);
	DefaultAssetLibrary.path.set("styles/windows/optionbox.png","styles/windows/optionbox.png");
	var value51 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/optionbox.png",value51);
	DefaultAssetLibrary.path.set("styles/windows/popup.png","styles/windows/popup.png");
	var value52 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/popup.png",value52);
	DefaultAssetLibrary.path.set("styles/windows/popups.css","styles/windows/popups.css");
	var value53 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/popups.css",value53);
	DefaultAssetLibrary.path.set("styles/windows/rtf.css","styles/windows/rtf.css");
	var value54 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/rtf.css",value54);
	DefaultAssetLibrary.path.set("styles/windows/scrolls.css","styles/windows/scrolls.css");
	var value55 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/scrolls.css",value55);
	DefaultAssetLibrary.path.set("styles/windows/scrolls.min.css","styles/windows/scrolls.min.css");
	var value56 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/scrolls.min.css",value56);
	DefaultAssetLibrary.path.set("styles/windows/sliders.css","styles/windows/sliders.css");
	var value57 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/sliders.css",value57);
	DefaultAssetLibrary.path.set("styles/windows/tab.png","styles/windows/tab.png");
	var value58 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/tab.png",value58);
	DefaultAssetLibrary.path.set("styles/windows/tabs.css","styles/windows/tabs.css");
	var value59 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/tabs.css",value59);
	DefaultAssetLibrary.path.set("styles/windows/textinput.png","styles/windows/textinput.png");
	var value60 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/textinput.png",value60);
	DefaultAssetLibrary.path.set("styles/windows/vprogress.png","styles/windows/vprogress.png");
	var value61 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/vprogress.png",value61);
	DefaultAssetLibrary.path.set("styles/windows/vscroll.png","styles/windows/vscroll.png");
	var value62 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/vscroll.png",value62);
	DefaultAssetLibrary.path.set("styles/windows/windows.css","styles/windows/windows.css");
	var value63 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("styles/windows/windows.css",value63);
	DefaultAssetLibrary.path.set("img/slinky_small.jpg","img/slinky_small.jpg");
	var value64 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/slinky_small.jpg",value64);
	DefaultAssetLibrary.path.set("img/slinky_tiny.jpg","img/slinky_tiny.jpg");
	var value65 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/slinky_tiny.jpg",value65);
	DefaultAssetLibrary.path.set("fonts/Oxygen-Bold.eot","fonts/Oxygen-Bold.eot");
	var value66 = Reflect.field(openfl.AssetType,"binary".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen-Bold.eot",value66);
	DefaultAssetLibrary.path.set("fonts/Oxygen-Bold.svg","fonts/Oxygen-Bold.svg");
	var value67 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen-Bold.svg",value67);
	DefaultAssetLibrary.className.set("fonts/Oxygen-Bold.ttf",__ASSET__fonts_oxygen_bold_ttf);
	var value68 = Reflect.field(openfl.AssetType,"font".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen-Bold.ttf",value68);
	DefaultAssetLibrary.path.set("fonts/Oxygen-Bold.woff","fonts/Oxygen-Bold.woff");
	var value69 = Reflect.field(openfl.AssetType,"binary".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen-Bold.woff",value69);
	DefaultAssetLibrary.path.set("fonts/Oxygen.eot","fonts/Oxygen.eot");
	var value70 = Reflect.field(openfl.AssetType,"binary".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen.eot",value70);
	DefaultAssetLibrary.path.set("fonts/Oxygen.svg","fonts/Oxygen.svg");
	var value71 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen.svg",value71);
	DefaultAssetLibrary.className.set("fonts/Oxygen.ttf",__ASSET__fonts_oxygen_ttf);
	var value72 = Reflect.field(openfl.AssetType,"font".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen.ttf",value72);
	DefaultAssetLibrary.path.set("fonts/Oxygen.woff","fonts/Oxygen.woff");
	var value73 = Reflect.field(openfl.AssetType,"binary".toUpperCase());
	DefaultAssetLibrary.type.set("fonts/Oxygen.woff",value73);
	DefaultAssetLibrary.path.set("assets/css/code.css","assets/css/code.css");
	var value74 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/code.css",value74);
	DefaultAssetLibrary.path.set("assets/css/code.min.css","assets/css/code.min.css");
	var value75 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/code.min.css",value75);
	DefaultAssetLibrary.path.set("assets/css/rtf.css","assets/css/rtf.css");
	var value76 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/rtf.css",value76);
	DefaultAssetLibrary.path.set("assets/css/rtf.min.css","assets/css/rtf.min.css");
	var value77 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/rtf.min.css",value77);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-alignment-center.png","assets/img/rtfview/edit-alignment-center.png");
	var value78 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-alignment-center.png",value78);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-alignment-justify.png","assets/img/rtfview/edit-alignment-justify.png");
	var value79 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-alignment-justify.png",value79);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-alignment-left.png","assets/img/rtfview/edit-alignment-left.png");
	var value80 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-alignment-left.png",value80);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-alignment-right.png","assets/img/rtfview/edit-alignment-right.png");
	var value81 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-alignment-right.png",value81);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-bold.png","assets/img/rtfview/edit-bold.png");
	var value82 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-bold.png",value82);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-italic.png","assets/img/rtfview/edit-italic.png");
	var value83 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-italic.png",value83);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-list.png","assets/img/rtfview/edit-list.png");
	var value84 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-list.png",value84);
	DefaultAssetLibrary.path.set("assets/img/rtfview/edit-underline.png","assets/img/rtfview/edit-underline.png");
	var value85 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/rtfview/edit-underline.png",value85);
	DefaultAssetLibrary.path.set("assets/openfl.svg","assets/openfl.svg");
	var value86 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/openfl.svg",value86);
	DefaultAssetLibrary.path.set("assets/ui/demo.xml","assets/ui/demo.xml");
	var value87 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/demo.xml",value87);
	DefaultAssetLibrary.path.set("assets/ui/example.hx","assets/ui/example.hx");
	var value88 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/example.hx",value88);
	DefaultAssetLibrary.path.set("assets/ui/example.txt","assets/ui/example.txt");
	var value89 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/example.txt",value89);
	DefaultAssetLibrary.path.set("img/rtfview/edit-alignment-center.png","img/rtfview/edit-alignment-center.png");
	var value90 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-alignment-center.png",value90);
	DefaultAssetLibrary.path.set("img/rtfview/edit-alignment-justify.png","img/rtfview/edit-alignment-justify.png");
	var value91 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-alignment-justify.png",value91);
	DefaultAssetLibrary.path.set("img/rtfview/edit-alignment-left.png","img/rtfview/edit-alignment-left.png");
	var value92 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-alignment-left.png",value92);
	DefaultAssetLibrary.path.set("img/rtfview/edit-alignment-right.png","img/rtfview/edit-alignment-right.png");
	var value93 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-alignment-right.png",value93);
	DefaultAssetLibrary.path.set("img/rtfview/edit-bold.png","img/rtfview/edit-bold.png");
	var value94 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-bold.png",value94);
	DefaultAssetLibrary.path.set("img/rtfview/edit-italic.png","img/rtfview/edit-italic.png");
	var value95 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-italic.png",value95);
	DefaultAssetLibrary.path.set("img/rtfview/edit-list.png","img/rtfview/edit-list.png");
	var value96 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-list.png",value96);
	DefaultAssetLibrary.path.set("img/rtfview/edit-underline.png","img/rtfview/edit-underline.png");
	var value97 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/rtfview/edit-underline.png",value97);
	DefaultAssetLibrary.path.set("css/code.css","css/code.css");
	var value98 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/code.css",value98);
	DefaultAssetLibrary.path.set("css/code.min.css","css/code.min.css");
	var value99 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/code.min.css",value99);
	DefaultAssetLibrary.path.set("css/rtf.css","css/rtf.css");
	var value100 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/rtf.css",value100);
	DefaultAssetLibrary.path.set("css/rtf.min.css","css/rtf.min.css");
	var value101 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/rtf.min.css",value101);
	DefaultAssetLibrary.path.set("assets/css/default/webview.css","assets/css/default/webview.css");
	var value102 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/default/webview.css",value102);
	DefaultAssetLibrary.path.set("assets/css/gradient/webview.css","assets/css/gradient/webview.css");
	var value103 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/gradient/webview.css",value103);
	DefaultAssetLibrary.path.set("assets/css/gradient/webview.min.css","assets/css/gradient/webview.min.css");
	var value104 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/gradient/webview.min.css",value104);
	DefaultAssetLibrary.path.set("assets/css/webview.css","assets/css/webview.css");
	var value105 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/css/webview.css",value105);
	DefaultAssetLibrary.path.set("assets/img/haxe_ui.png","assets/img/haxe_ui.png");
	var value106 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/haxe_ui.png",value106);
	DefaultAssetLibrary.path.set("assets/img/icone_cocktail_blanche_ombre.png","assets/img/icone_cocktail_blanche_ombre.png");
	var value107 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/icone_cocktail_blanche_ombre.png",value107);
	DefaultAssetLibrary.path.set("assets/img/icone_haxe_blanche_ombre.png","assets/img/icone_haxe_blanche_ombre.png");
	var value108 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/img/icone_haxe_blanche_ombre.png",value108);
	DefaultAssetLibrary.path.set("assets/openfl.svg","assets/openfl.svg");
	var value109 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/openfl.svg",value109);
	DefaultAssetLibrary.path.set("assets/ui/demo.xml","assets/ui/demo.xml");
	var value110 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/demo.xml",value110);
	DefaultAssetLibrary.path.set("assets/ui/example.html","assets/ui/example.html");
	var value111 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/example.html",value111);
	DefaultAssetLibrary.path.set("assets/ui/test.html","assets/ui/test.html");
	var value112 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/test.html",value112);
	DefaultAssetLibrary.path.set("img/haxe_ui.png","img/haxe_ui.png");
	var value113 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/haxe_ui.png",value113);
	DefaultAssetLibrary.path.set("img/icone_cocktail_blanche_ombre.png","img/icone_cocktail_blanche_ombre.png");
	var value114 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/icone_cocktail_blanche_ombre.png",value114);
	DefaultAssetLibrary.path.set("img/icone_haxe_blanche_ombre.png","img/icone_haxe_blanche_ombre.png");
	var value115 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("img/icone_haxe_blanche_ombre.png",value115);
	DefaultAssetLibrary.path.set("css/default/webview.css","css/default/webview.css");
	var value116 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/default/webview.css",value116);
	DefaultAssetLibrary.path.set("css/gradient/webview.css","css/gradient/webview.css");
	var value117 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/gradient/webview.css",value117);
	DefaultAssetLibrary.path.set("css/gradient/webview.min.css","css/gradient/webview.min.css");
	var value118 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/gradient/webview.min.css",value118);
	DefaultAssetLibrary.path.set("css/webview.css","css/webview.css");
	var value119 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("css/webview.css",value119);
	DefaultAssetLibrary.path.set("assets/application-default-icon.svg","assets/application-default-icon.svg");
	var value120 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/application-default-icon.svg",value120);
	DefaultAssetLibrary.path.set("assets/data/views.xml","assets/data/views.xml");
	var value121 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/data/views.xml",value121);
	DefaultAssetLibrary.path.set("assets/icons/application-dialog.png","assets/icons/application-dialog.png");
	var value122 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/application-dialog.png",value122);
	DefaultAssetLibrary.path.set("assets/icons/blue-document-css.png","assets/icons/blue-document-css.png");
	var value123 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/blue-document-css.png",value123);
	DefaultAssetLibrary.path.set("assets/icons/blue-document-haxe.png","assets/icons/blue-document-haxe.png");
	var value124 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/blue-document-haxe.png",value124);
	DefaultAssetLibrary.path.set("assets/icons/blue-document-xml.png","assets/icons/blue-document-xml.png");
	var value125 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/blue-document-xml.png",value125);
	DefaultAssetLibrary.path.set("assets/icons/blue-document.png","assets/icons/blue-document.png");
	var value126 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/blue-document.png",value126);
	DefaultAssetLibrary.path.set("assets/icons/fav_16.png","assets/icons/fav_16.png");
	var value127 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/fav_16.png",value127);
	DefaultAssetLibrary.path.set("assets/icons/fav_32.png","assets/icons/fav_32.png");
	var value128 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/fav_32.png",value128);
	DefaultAssetLibrary.path.set("assets/icons/grid.png","assets/icons/grid.png");
	var value129 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/grid.png",value129);
	DefaultAssetLibrary.path.set("assets/icons/images.png","assets/icons/images.png");
	var value130 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/images.png",value130);
	DefaultAssetLibrary.path.set("assets/icons/ui-accordion.png","assets/icons/ui-accordion.png");
	var value131 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-accordion.png",value131);
	DefaultAssetLibrary.path.set("assets/icons/ui-button.png","assets/icons/ui-button.png");
	var value132 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-button.png",value132);
	DefaultAssetLibrary.path.set("assets/icons/ui-buttons.png","assets/icons/ui-buttons.png");
	var value133 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-buttons.png",value133);
	DefaultAssetLibrary.path.set("assets/icons/ui-check-boxes.png","assets/icons/ui-check-boxes.png");
	var value134 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-check-boxes.png",value134);
	DefaultAssetLibrary.path.set("assets/icons/ui-combo-box-calendar.png","assets/icons/ui-combo-box-calendar.png");
	var value135 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-combo-box-calendar.png",value135);
	DefaultAssetLibrary.path.set("assets/icons/ui-flow-vertical.png","assets/icons/ui-flow-vertical.png");
	var value136 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-flow-vertical.png",value136);
	DefaultAssetLibrary.path.set("assets/icons/ui-flow.png","assets/icons/ui-flow.png");
	var value137 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-flow.png",value137);
	DefaultAssetLibrary.path.set("assets/icons/ui-labels.png","assets/icons/ui-labels.png");
	var value138 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-labels.png",value138);
	DefaultAssetLibrary.path.set("assets/icons/ui-layered-pane.png","assets/icons/ui-layered-pane.png");
	var value139 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-layered-pane.png",value139);
	DefaultAssetLibrary.path.set("assets/icons/ui-list-box-blue.png","assets/icons/ui-list-box-blue.png");
	var value140 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-list-box-blue.png",value140);
	DefaultAssetLibrary.path.set("assets/icons/ui-menu-blue.png","assets/icons/ui-menu-blue.png");
	var value141 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-menu-blue.png",value141);
	DefaultAssetLibrary.path.set("assets/icons/ui-panel.png","assets/icons/ui-panel.png");
	var value142 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-panel.png",value142);
	DefaultAssetLibrary.path.set("assets/icons/ui-progress-bar-vertical.png","assets/icons/ui-progress-bar-vertical.png");
	var value143 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-progress-bar-vertical.png",value143);
	DefaultAssetLibrary.path.set("assets/icons/ui-progress-bar.png","assets/icons/ui-progress-bar.png");
	var value144 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-progress-bar.png",value144);
	DefaultAssetLibrary.path.set("assets/icons/ui-radio-buttons.png","assets/icons/ui-radio-buttons.png");
	var value145 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-radio-buttons.png",value145);
	DefaultAssetLibrary.path.set("assets/icons/ui-scroll-bar-horizontal.png","assets/icons/ui-scroll-bar-horizontal.png");
	var value146 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-scroll-bar-horizontal.png",value146);
	DefaultAssetLibrary.path.set("assets/icons/ui-scroll-bar.png","assets/icons/ui-scroll-bar.png");
	var value147 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-scroll-bar.png",value147);
	DefaultAssetLibrary.path.set("assets/icons/ui-scroll-pane-image.png","assets/icons/ui-scroll-pane-image.png");
	var value148 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-scroll-pane-image.png",value148);
	DefaultAssetLibrary.path.set("assets/icons/ui-slider-050.png","assets/icons/ui-slider-050.png");
	var value149 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-slider-050.png",value149);
	DefaultAssetLibrary.path.set("assets/icons/ui-slider-vertical-050.png","assets/icons/ui-slider-vertical-050.png");
	var value150 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-slider-vertical-050.png",value150);
	DefaultAssetLibrary.path.set("assets/icons/ui-spacer.png","assets/icons/ui-spacer.png");
	var value151 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-spacer.png",value151);
	DefaultAssetLibrary.path.set("assets/icons/ui-split-panel-vertical.png","assets/icons/ui-split-panel-vertical.png");
	var value152 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-split-panel-vertical.png",value152);
	DefaultAssetLibrary.path.set("assets/icons/ui-split-panel.png","assets/icons/ui-split-panel.png");
	var value153 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-split-panel.png",value153);
	DefaultAssetLibrary.path.set("assets/icons/ui-tab-content.png","assets/icons/ui-tab-content.png");
	var value154 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-tab-content.png",value154);
	DefaultAssetLibrary.path.set("assets/icons/ui-tab.png","assets/icons/ui-tab.png");
	var value155 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-tab.png",value155);
	DefaultAssetLibrary.path.set("assets/icons/ui-text-field.png","assets/icons/ui-text-field.png");
	var value156 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/icons/ui-text-field.png",value156);
	DefaultAssetLibrary.path.set("assets/images/slinky.jpg","assets/images/slinky.jpg");
	var value157 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/images/slinky.jpg",value157);
	DefaultAssetLibrary.path.set("assets/resources/AbsoluteLayout/AbsoluteLayout.hx","assets/resources/AbsoluteLayout/AbsoluteLayout.hx");
	var value158 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/AbsoluteLayout/AbsoluteLayout.hx",value158);
	DefaultAssetLibrary.path.set("assets/resources/AbsoluteLayout/AbsoluteLayout.xml","assets/resources/AbsoluteLayout/AbsoluteLayout.xml");
	var value159 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/AbsoluteLayout/AbsoluteLayout.xml",value159);
	DefaultAssetLibrary.path.set("assets/resources/Accordions/Accordions.hx","assets/resources/Accordions/Accordions.hx");
	var value160 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Accordions/Accordions.hx",value160);
	DefaultAssetLibrary.path.set("assets/resources/Accordions/Accordions.xml","assets/resources/Accordions/Accordions.xml");
	var value161 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Accordions/Accordions.xml",value161);
	DefaultAssetLibrary.path.set("assets/resources/BoxLayout/BoxLayout.hx","assets/resources/BoxLayout/BoxLayout.hx");
	var value162 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/BoxLayout/BoxLayout.hx",value162);
	DefaultAssetLibrary.path.set("assets/resources/BoxLayout/BoxLayout.xml","assets/resources/BoxLayout/BoxLayout.xml");
	var value163 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/BoxLayout/BoxLayout.xml",value163);
	DefaultAssetLibrary.path.set("assets/resources/BusyPopup/BusyPopup.hx","assets/resources/BusyPopup/BusyPopup.hx");
	var value164 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/BusyPopup/BusyPopup.hx",value164);
	DefaultAssetLibrary.path.set("assets/resources/BusyPopup/BusyPopup.xml","assets/resources/BusyPopup/BusyPopup.xml");
	var value165 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/BusyPopup/BusyPopup.xml",value165);
	DefaultAssetLibrary.path.set("assets/resources/Buttons/Buttons.hx","assets/resources/Buttons/Buttons.hx");
	var value166 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Buttons/Buttons.hx",value166);
	DefaultAssetLibrary.path.set("assets/resources/Buttons/Buttons.xml","assets/resources/Buttons/Buttons.xml");
	var value167 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Buttons/Buttons.xml",value167);
	DefaultAssetLibrary.path.set("assets/resources/CalendarPopup/CalendarPopup.hx","assets/resources/CalendarPopup/CalendarPopup.hx");
	var value168 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CalendarPopup/CalendarPopup.hx",value168);
	DefaultAssetLibrary.path.set("assets/resources/CalendarPopup/CalendarPopup.xml","assets/resources/CalendarPopup/CalendarPopup.xml");
	var value169 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CalendarPopup/CalendarPopup.xml",value169);
	DefaultAssetLibrary.path.set("assets/resources/CheckBoxes/CheckBoxes.hx","assets/resources/CheckBoxes/CheckBoxes.hx");
	var value170 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CheckBoxes/CheckBoxes.hx",value170);
	DefaultAssetLibrary.path.set("assets/resources/CheckBoxes/CheckBoxes.xml","assets/resources/CheckBoxes/CheckBoxes.xml");
	var value171 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CheckBoxes/CheckBoxes.xml",value171);
	DefaultAssetLibrary.path.set("assets/resources/ContinuousLayout/HContinuousLayout.hx","assets/resources/ContinuousLayout/HContinuousLayout.hx");
	var value172 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ContinuousLayout/HContinuousLayout.hx",value172);
	DefaultAssetLibrary.path.set("assets/resources/ContinuousLayout/HContinuousLayout.xml","assets/resources/ContinuousLayout/HContinuousLayout.xml");
	var value173 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ContinuousLayout/HContinuousLayout.xml",value173);
	DefaultAssetLibrary.path.set("assets/resources/ContinuousLayout/VContinuousLayout.hx","assets/resources/ContinuousLayout/VContinuousLayout.hx");
	var value174 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ContinuousLayout/VContinuousLayout.hx",value174);
	DefaultAssetLibrary.path.set("assets/resources/ContinuousLayout/VContinuousLayout.xml","assets/resources/ContinuousLayout/VContinuousLayout.xml");
	var value175 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ContinuousLayout/VContinuousLayout.xml",value175);
	DefaultAssetLibrary.path.set("assets/resources/CustomPopup/CustomPopup.hx","assets/resources/CustomPopup/CustomPopup.hx");
	var value176 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CustomPopup/CustomPopup.hx",value176);
	DefaultAssetLibrary.path.set("assets/resources/CustomPopup/CustomPopup.xml","assets/resources/CustomPopup/CustomPopup.xml");
	var value177 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CustomPopup/CustomPopup.xml",value177);
	DefaultAssetLibrary.path.set("assets/resources/CustomPopup/CustomPopupContent.xml","assets/resources/CustomPopup/CustomPopupContent.xml");
	var value178 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/CustomPopup/CustomPopupContent.xml",value178);
	DefaultAssetLibrary.path.set("assets/resources/DateSelectors/DateSelectors.hx","assets/resources/DateSelectors/DateSelectors.hx");
	var value179 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/DateSelectors/DateSelectors.hx",value179);
	DefaultAssetLibrary.path.set("assets/resources/DateSelectors/DateSelectors.xml","assets/resources/DateSelectors/DateSelectors.xml");
	var value180 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/DateSelectors/DateSelectors.xml",value180);
	DefaultAssetLibrary.path.set("assets/resources/GridLayout/GridLayout.hx","assets/resources/GridLayout/GridLayout.hx");
	var value181 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/GridLayout/GridLayout.hx",value181);
	DefaultAssetLibrary.path.set("assets/resources/GridLayout/GridLayout.xml","assets/resources/GridLayout/GridLayout.xml");
	var value182 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/GridLayout/GridLayout.xml",value182);
	DefaultAssetLibrary.path.set("assets/resources/HorizontalLayout/HorizontalLayout.hx","assets/resources/HorizontalLayout/HorizontalLayout.hx");
	var value183 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/HorizontalLayout/HorizontalLayout.hx",value183);
	DefaultAssetLibrary.path.set("assets/resources/HorizontalLayout/HorizontalLayout.xml","assets/resources/HorizontalLayout/HorizontalLayout.xml");
	var value184 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/HorizontalLayout/HorizontalLayout.xml",value184);
	DefaultAssetLibrary.path.set("assets/resources/Images/Images.hx","assets/resources/Images/Images.hx");
	var value185 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Images/Images.hx",value185);
	DefaultAssetLibrary.path.set("assets/resources/Images/Images.xml","assets/resources/Images/Images.xml");
	var value186 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Images/Images.xml",value186);
	DefaultAssetLibrary.path.set("assets/resources/ListPopup/ListPopup.hx","assets/resources/ListPopup/ListPopup.hx");
	var value187 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListPopup/ListPopup.hx",value187);
	DefaultAssetLibrary.path.set("assets/resources/ListPopup/ListPopup.xml","assets/resources/ListPopup/ListPopup.xml");
	var value188 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListPopup/ListPopup.xml",value188);
	DefaultAssetLibrary.path.set("assets/resources/ListSelectors/ListSelectors.hx","assets/resources/ListSelectors/ListSelectors.hx");
	var value189 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListSelectors/ListSelectors.hx",value189);
	DefaultAssetLibrary.path.set("assets/resources/ListSelectors/ListSelectors.xml","assets/resources/ListSelectors/ListSelectors.xml");
	var value190 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListSelectors/ListSelectors.xml",value190);
	DefaultAssetLibrary.path.set("assets/resources/ListViews/ListViews.hx","assets/resources/ListViews/ListViews.hx");
	var value191 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListViews/ListViews.hx",value191);
	DefaultAssetLibrary.path.set("assets/resources/ListViews/ListViews.xml","assets/resources/ListViews/ListViews.xml");
	var value192 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ListViews/ListViews.xml",value192);
	DefaultAssetLibrary.path.set("assets/resources/OptionBoxes/OptionBoxes.hx","assets/resources/OptionBoxes/OptionBoxes.hx");
	var value193 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/OptionBoxes/OptionBoxes.hx",value193);
	DefaultAssetLibrary.path.set("assets/resources/OptionBoxes/OptionBoxes.xml","assets/resources/OptionBoxes/OptionBoxes.xml");
	var value194 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/OptionBoxes/OptionBoxes.xml",value194);
	DefaultAssetLibrary.path.set("assets/resources/ProgressBars/HProgressBars.hx","assets/resources/ProgressBars/HProgressBars.hx");
	var value195 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ProgressBars/HProgressBars.hx",value195);
	DefaultAssetLibrary.path.set("assets/resources/ProgressBars/HProgressBars.xml","assets/resources/ProgressBars/HProgressBars.xml");
	var value196 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ProgressBars/HProgressBars.xml",value196);
	DefaultAssetLibrary.path.set("assets/resources/ProgressBars/VProgressBars.hx","assets/resources/ProgressBars/VProgressBars.hx");
	var value197 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ProgressBars/VProgressBars.hx",value197);
	DefaultAssetLibrary.path.set("assets/resources/ProgressBars/VProgressBars.xml","assets/resources/ProgressBars/VProgressBars.xml");
	var value198 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ProgressBars/VProgressBars.xml",value198);
	DefaultAssetLibrary.path.set("assets/resources/ScrollBars/HScrollBars.hx","assets/resources/ScrollBars/HScrollBars.hx");
	var value199 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollBars/HScrollBars.hx",value199);
	DefaultAssetLibrary.path.set("assets/resources/ScrollBars/HScrollBars.xml","assets/resources/ScrollBars/HScrollBars.xml");
	var value200 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollBars/HScrollBars.xml",value200);
	DefaultAssetLibrary.path.set("assets/resources/ScrollBars/VScrollBars.hx","assets/resources/ScrollBars/VScrollBars.hx");
	var value201 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollBars/VScrollBars.hx",value201);
	DefaultAssetLibrary.path.set("assets/resources/ScrollBars/VScrollBars.xml","assets/resources/ScrollBars/VScrollBars.xml");
	var value202 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollBars/VScrollBars.xml",value202);
	DefaultAssetLibrary.path.set("assets/resources/ScrollViews/ScrollViews.hx","assets/resources/ScrollViews/ScrollViews.hx");
	var value203 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollViews/ScrollViews.hx",value203);
	DefaultAssetLibrary.path.set("assets/resources/ScrollViews/ScrollViews.xml","assets/resources/ScrollViews/ScrollViews.xml");
	var value204 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/ScrollViews/ScrollViews.xml",value204);
	DefaultAssetLibrary.path.set("assets/resources/SimplePopup/SimplePopup.hx","assets/resources/SimplePopup/SimplePopup.hx");
	var value205 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/SimplePopup/SimplePopup.hx",value205);
	DefaultAssetLibrary.path.set("assets/resources/SimplePopup/SimplePopup.xml","assets/resources/SimplePopup/SimplePopup.xml");
	var value206 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/SimplePopup/SimplePopup.xml",value206);
	DefaultAssetLibrary.path.set("assets/resources/Sliders/HSliders.hx","assets/resources/Sliders/HSliders.hx");
	var value207 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Sliders/HSliders.hx",value207);
	DefaultAssetLibrary.path.set("assets/resources/Sliders/HSliders.xml","assets/resources/Sliders/HSliders.xml");
	var value208 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Sliders/HSliders.xml",value208);
	DefaultAssetLibrary.path.set("assets/resources/Sliders/VSliders.hx","assets/resources/Sliders/VSliders.hx");
	var value209 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Sliders/VSliders.hx",value209);
	DefaultAssetLibrary.path.set("assets/resources/Sliders/VSliders.xml","assets/resources/Sliders/VSliders.xml");
	var value210 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/Sliders/VSliders.xml",value210);
	DefaultAssetLibrary.path.set("assets/resources/slinky.jpg","assets/resources/slinky.jpg");
	var value211 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/slinky.jpg",value211);
	DefaultAssetLibrary.path.set("assets/resources/slinky_large.jpg","assets/resources/slinky_large.jpg");
	var value212 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/slinky_large.jpg",value212);
	DefaultAssetLibrary.path.set("assets/resources/slinky_small.jpg","assets/resources/slinky_small.jpg");
	var value213 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/slinky_small.jpg",value213);
	DefaultAssetLibrary.path.set("assets/resources/TextFields/TextFields.hx","assets/resources/TextFields/TextFields.hx");
	var value214 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/TextFields/TextFields.hx",value214);
	DefaultAssetLibrary.path.set("assets/resources/TextFields/TextFields.xml","assets/resources/TextFields/TextFields.xml");
	var value215 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/TextFields/TextFields.xml",value215);
	DefaultAssetLibrary.path.set("assets/resources/TextInputs/TextInputs.hx","assets/resources/TextInputs/TextInputs.hx");
	var value216 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/TextInputs/TextInputs.hx",value216);
	DefaultAssetLibrary.path.set("assets/resources/TextInputs/TextInputs.xml","assets/resources/TextInputs/TextInputs.xml");
	var value217 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/TextInputs/TextInputs.xml",value217);
	DefaultAssetLibrary.path.set("assets/resources/VerticalLayout/VerticalLayout.hx","assets/resources/VerticalLayout/VerticalLayout.hx");
	var value218 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/VerticalLayout/VerticalLayout.hx",value218);
	DefaultAssetLibrary.path.set("assets/resources/VerticalLayout/VerticalLayout.xml","assets/resources/VerticalLayout/VerticalLayout.xml");
	var value219 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/VerticalLayout/VerticalLayout.xml",value219);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/example.html","assets/resources/WebViews/example.html");
	var value220 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/example.html",value220);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/img/haxe_ui.png","assets/resources/WebViews/img/haxe_ui.png");
	var value221 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/img/haxe_ui.png",value221);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/img/icone_cocktail_blanche_ombre.png","assets/resources/WebViews/img/icone_cocktail_blanche_ombre.png");
	var value222 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/img/icone_cocktail_blanche_ombre.png",value222);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/img/icone_haxe_blanche_ombre.png","assets/resources/WebViews/img/icone_haxe_blanche_ombre.png");
	var value223 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/img/icone_haxe_blanche_ombre.png",value223);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/WebViews.hx","assets/resources/WebViews/WebViews.hx");
	var value224 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/WebViews.hx",value224);
	DefaultAssetLibrary.path.set("assets/resources/WebViews/WebViews.xml","assets/resources/WebViews/WebViews.xml");
	var value225 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/resources/WebViews/WebViews.xml",value225);
	DefaultAssetLibrary.path.set("assets/ui/about.xml","assets/ui/about.xml");
	var value226 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/about.xml",value226);
	DefaultAssetLibrary.path.set("assets/ui/main.xml","assets/ui/main.xml");
	var value227 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/main.xml",value227);
	DefaultAssetLibrary.path.set("assets/ui/prefs.xml","assets/ui/prefs.xml");
	var value228 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/prefs.xml",value228);
	DefaultAssetLibrary.path.set("assets/ui/todo.xml","assets/ui/todo.xml");
	var value229 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("assets/ui/todo.xml",value229);
	DefaultAssetLibrary.path.set("ui/about.xml","ui/about.xml");
	var value230 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("ui/about.xml",value230);
	DefaultAssetLibrary.path.set("ui/main.xml","ui/main.xml");
	var value231 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("ui/main.xml",value231);
	DefaultAssetLibrary.path.set("ui/prefs.xml","ui/prefs.xml");
	var value232 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("ui/prefs.xml",value232);
	DefaultAssetLibrary.path.set("ui/todo.xml","ui/todo.xml");
	var value233 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("ui/todo.xml",value233);
	DefaultAssetLibrary.path.set("data/views.xml","data/views.xml");
	var value234 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("data/views.xml",value234);
	DefaultAssetLibrary.path.set("resources/AbsoluteLayout/AbsoluteLayout.hx","resources/AbsoluteLayout/AbsoluteLayout.hx");
	var value235 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/AbsoluteLayout/AbsoluteLayout.hx",value235);
	DefaultAssetLibrary.path.set("resources/AbsoluteLayout/AbsoluteLayout.xml","resources/AbsoluteLayout/AbsoluteLayout.xml");
	var value236 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/AbsoluteLayout/AbsoluteLayout.xml",value236);
	DefaultAssetLibrary.path.set("resources/Accordions/Accordions.hx","resources/Accordions/Accordions.hx");
	var value237 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Accordions/Accordions.hx",value237);
	DefaultAssetLibrary.path.set("resources/Accordions/Accordions.xml","resources/Accordions/Accordions.xml");
	var value238 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Accordions/Accordions.xml",value238);
	DefaultAssetLibrary.path.set("resources/BoxLayout/BoxLayout.hx","resources/BoxLayout/BoxLayout.hx");
	var value239 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/BoxLayout/BoxLayout.hx",value239);
	DefaultAssetLibrary.path.set("resources/BoxLayout/BoxLayout.xml","resources/BoxLayout/BoxLayout.xml");
	var value240 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/BoxLayout/BoxLayout.xml",value240);
	DefaultAssetLibrary.path.set("resources/BusyPopup/BusyPopup.hx","resources/BusyPopup/BusyPopup.hx");
	var value241 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/BusyPopup/BusyPopup.hx",value241);
	DefaultAssetLibrary.path.set("resources/BusyPopup/BusyPopup.xml","resources/BusyPopup/BusyPopup.xml");
	var value242 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/BusyPopup/BusyPopup.xml",value242);
	DefaultAssetLibrary.path.set("resources/Buttons/Buttons.hx","resources/Buttons/Buttons.hx");
	var value243 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Buttons/Buttons.hx",value243);
	DefaultAssetLibrary.path.set("resources/Buttons/Buttons.xml","resources/Buttons/Buttons.xml");
	var value244 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Buttons/Buttons.xml",value244);
	DefaultAssetLibrary.path.set("resources/CalendarPopup/CalendarPopup.hx","resources/CalendarPopup/CalendarPopup.hx");
	var value245 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CalendarPopup/CalendarPopup.hx",value245);
	DefaultAssetLibrary.path.set("resources/CalendarPopup/CalendarPopup.xml","resources/CalendarPopup/CalendarPopup.xml");
	var value246 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CalendarPopup/CalendarPopup.xml",value246);
	DefaultAssetLibrary.path.set("resources/CheckBoxes/CheckBoxes.hx","resources/CheckBoxes/CheckBoxes.hx");
	var value247 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CheckBoxes/CheckBoxes.hx",value247);
	DefaultAssetLibrary.path.set("resources/CheckBoxes/CheckBoxes.xml","resources/CheckBoxes/CheckBoxes.xml");
	var value248 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CheckBoxes/CheckBoxes.xml",value248);
	DefaultAssetLibrary.path.set("resources/ContinuousLayout/HContinuousLayout.hx","resources/ContinuousLayout/HContinuousLayout.hx");
	var value249 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ContinuousLayout/HContinuousLayout.hx",value249);
	DefaultAssetLibrary.path.set("resources/ContinuousLayout/HContinuousLayout.xml","resources/ContinuousLayout/HContinuousLayout.xml");
	var value250 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ContinuousLayout/HContinuousLayout.xml",value250);
	DefaultAssetLibrary.path.set("resources/ContinuousLayout/VContinuousLayout.hx","resources/ContinuousLayout/VContinuousLayout.hx");
	var value251 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ContinuousLayout/VContinuousLayout.hx",value251);
	DefaultAssetLibrary.path.set("resources/ContinuousLayout/VContinuousLayout.xml","resources/ContinuousLayout/VContinuousLayout.xml");
	var value252 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ContinuousLayout/VContinuousLayout.xml",value252);
	DefaultAssetLibrary.path.set("resources/CustomPopup/CustomPopup.hx","resources/CustomPopup/CustomPopup.hx");
	var value253 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CustomPopup/CustomPopup.hx",value253);
	DefaultAssetLibrary.path.set("resources/CustomPopup/CustomPopup.xml","resources/CustomPopup/CustomPopup.xml");
	var value254 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CustomPopup/CustomPopup.xml",value254);
	DefaultAssetLibrary.path.set("resources/CustomPopup/CustomPopupContent.xml","resources/CustomPopup/CustomPopupContent.xml");
	var value255 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/CustomPopup/CustomPopupContent.xml",value255);
	DefaultAssetLibrary.path.set("resources/DateSelectors/DateSelectors.hx","resources/DateSelectors/DateSelectors.hx");
	var value256 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/DateSelectors/DateSelectors.hx",value256);
	DefaultAssetLibrary.path.set("resources/DateSelectors/DateSelectors.xml","resources/DateSelectors/DateSelectors.xml");
	var value257 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/DateSelectors/DateSelectors.xml",value257);
	DefaultAssetLibrary.path.set("resources/GridLayout/GridLayout.hx","resources/GridLayout/GridLayout.hx");
	var value258 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/GridLayout/GridLayout.hx",value258);
	DefaultAssetLibrary.path.set("resources/GridLayout/GridLayout.xml","resources/GridLayout/GridLayout.xml");
	var value259 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/GridLayout/GridLayout.xml",value259);
	DefaultAssetLibrary.path.set("resources/HorizontalLayout/HorizontalLayout.hx","resources/HorizontalLayout/HorizontalLayout.hx");
	var value260 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/HorizontalLayout/HorizontalLayout.hx",value260);
	DefaultAssetLibrary.path.set("resources/HorizontalLayout/HorizontalLayout.xml","resources/HorizontalLayout/HorizontalLayout.xml");
	var value261 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/HorizontalLayout/HorizontalLayout.xml",value261);
	DefaultAssetLibrary.path.set("resources/Images/Images.hx","resources/Images/Images.hx");
	var value262 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Images/Images.hx",value262);
	DefaultAssetLibrary.path.set("resources/Images/Images.xml","resources/Images/Images.xml");
	var value263 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Images/Images.xml",value263);
	DefaultAssetLibrary.path.set("resources/ListPopup/ListPopup.hx","resources/ListPopup/ListPopup.hx");
	var value264 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListPopup/ListPopup.hx",value264);
	DefaultAssetLibrary.path.set("resources/ListPopup/ListPopup.xml","resources/ListPopup/ListPopup.xml");
	var value265 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListPopup/ListPopup.xml",value265);
	DefaultAssetLibrary.path.set("resources/ListSelectors/ListSelectors.hx","resources/ListSelectors/ListSelectors.hx");
	var value266 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListSelectors/ListSelectors.hx",value266);
	DefaultAssetLibrary.path.set("resources/ListSelectors/ListSelectors.xml","resources/ListSelectors/ListSelectors.xml");
	var value267 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListSelectors/ListSelectors.xml",value267);
	DefaultAssetLibrary.path.set("resources/ListViews/ListViews.hx","resources/ListViews/ListViews.hx");
	var value268 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListViews/ListViews.hx",value268);
	DefaultAssetLibrary.path.set("resources/ListViews/ListViews.xml","resources/ListViews/ListViews.xml");
	var value269 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ListViews/ListViews.xml",value269);
	DefaultAssetLibrary.path.set("resources/OptionBoxes/OptionBoxes.hx","resources/OptionBoxes/OptionBoxes.hx");
	var value270 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/OptionBoxes/OptionBoxes.hx",value270);
	DefaultAssetLibrary.path.set("resources/OptionBoxes/OptionBoxes.xml","resources/OptionBoxes/OptionBoxes.xml");
	var value271 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/OptionBoxes/OptionBoxes.xml",value271);
	DefaultAssetLibrary.path.set("resources/ProgressBars/HProgressBars.hx","resources/ProgressBars/HProgressBars.hx");
	var value272 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ProgressBars/HProgressBars.hx",value272);
	DefaultAssetLibrary.path.set("resources/ProgressBars/HProgressBars.xml","resources/ProgressBars/HProgressBars.xml");
	var value273 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ProgressBars/HProgressBars.xml",value273);
	DefaultAssetLibrary.path.set("resources/ProgressBars/VProgressBars.hx","resources/ProgressBars/VProgressBars.hx");
	var value274 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ProgressBars/VProgressBars.hx",value274);
	DefaultAssetLibrary.path.set("resources/ProgressBars/VProgressBars.xml","resources/ProgressBars/VProgressBars.xml");
	var value275 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ProgressBars/VProgressBars.xml",value275);
	DefaultAssetLibrary.path.set("resources/ScrollBars/HScrollBars.hx","resources/ScrollBars/HScrollBars.hx");
	var value276 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollBars/HScrollBars.hx",value276);
	DefaultAssetLibrary.path.set("resources/ScrollBars/HScrollBars.xml","resources/ScrollBars/HScrollBars.xml");
	var value277 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollBars/HScrollBars.xml",value277);
	DefaultAssetLibrary.path.set("resources/ScrollBars/VScrollBars.hx","resources/ScrollBars/VScrollBars.hx");
	var value278 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollBars/VScrollBars.hx",value278);
	DefaultAssetLibrary.path.set("resources/ScrollBars/VScrollBars.xml","resources/ScrollBars/VScrollBars.xml");
	var value279 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollBars/VScrollBars.xml",value279);
	DefaultAssetLibrary.path.set("resources/ScrollViews/ScrollViews.hx","resources/ScrollViews/ScrollViews.hx");
	var value280 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollViews/ScrollViews.hx",value280);
	DefaultAssetLibrary.path.set("resources/ScrollViews/ScrollViews.xml","resources/ScrollViews/ScrollViews.xml");
	var value281 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/ScrollViews/ScrollViews.xml",value281);
	DefaultAssetLibrary.path.set("resources/SimplePopup/SimplePopup.hx","resources/SimplePopup/SimplePopup.hx");
	var value282 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/SimplePopup/SimplePopup.hx",value282);
	DefaultAssetLibrary.path.set("resources/SimplePopup/SimplePopup.xml","resources/SimplePopup/SimplePopup.xml");
	var value283 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/SimplePopup/SimplePopup.xml",value283);
	DefaultAssetLibrary.path.set("resources/Sliders/HSliders.hx","resources/Sliders/HSliders.hx");
	var value284 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Sliders/HSliders.hx",value284);
	DefaultAssetLibrary.path.set("resources/Sliders/HSliders.xml","resources/Sliders/HSliders.xml");
	var value285 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Sliders/HSliders.xml",value285);
	DefaultAssetLibrary.path.set("resources/Sliders/VSliders.hx","resources/Sliders/VSliders.hx");
	var value286 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Sliders/VSliders.hx",value286);
	DefaultAssetLibrary.path.set("resources/Sliders/VSliders.xml","resources/Sliders/VSliders.xml");
	var value287 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/Sliders/VSliders.xml",value287);
	DefaultAssetLibrary.path.set("resources/slinky.jpg","resources/slinky.jpg");
	var value288 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/slinky.jpg",value288);
	DefaultAssetLibrary.path.set("resources/slinky_large.jpg","resources/slinky_large.jpg");
	var value289 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/slinky_large.jpg",value289);
	DefaultAssetLibrary.path.set("resources/slinky_small.jpg","resources/slinky_small.jpg");
	var value290 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/slinky_small.jpg",value290);
	DefaultAssetLibrary.path.set("resources/TextFields/TextFields.hx","resources/TextFields/TextFields.hx");
	var value291 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/TextFields/TextFields.hx",value291);
	DefaultAssetLibrary.path.set("resources/TextFields/TextFields.xml","resources/TextFields/TextFields.xml");
	var value292 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/TextFields/TextFields.xml",value292);
	DefaultAssetLibrary.path.set("resources/TextInputs/TextInputs.hx","resources/TextInputs/TextInputs.hx");
	var value293 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/TextInputs/TextInputs.hx",value293);
	DefaultAssetLibrary.path.set("resources/TextInputs/TextInputs.xml","resources/TextInputs/TextInputs.xml");
	var value294 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/TextInputs/TextInputs.xml",value294);
	DefaultAssetLibrary.path.set("resources/VerticalLayout/VerticalLayout.hx","resources/VerticalLayout/VerticalLayout.hx");
	var value295 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/VerticalLayout/VerticalLayout.hx",value295);
	DefaultAssetLibrary.path.set("resources/VerticalLayout/VerticalLayout.xml","resources/VerticalLayout/VerticalLayout.xml");
	var value296 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/VerticalLayout/VerticalLayout.xml",value296);
	DefaultAssetLibrary.path.set("resources/WebViews/example.html","resources/WebViews/example.html");
	var value297 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/example.html",value297);
	DefaultAssetLibrary.path.set("resources/WebViews/img/haxe_ui.png","resources/WebViews/img/haxe_ui.png");
	var value298 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/img/haxe_ui.png",value298);
	DefaultAssetLibrary.path.set("resources/WebViews/img/icone_cocktail_blanche_ombre.png","resources/WebViews/img/icone_cocktail_blanche_ombre.png");
	var value299 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/img/icone_cocktail_blanche_ombre.png",value299);
	DefaultAssetLibrary.path.set("resources/WebViews/img/icone_haxe_blanche_ombre.png","resources/WebViews/img/icone_haxe_blanche_ombre.png");
	var value300 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/img/icone_haxe_blanche_ombre.png",value300);
	DefaultAssetLibrary.path.set("resources/WebViews/WebViews.hx","resources/WebViews/WebViews.hx");
	var value301 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/WebViews.hx",value301);
	DefaultAssetLibrary.path.set("resources/WebViews/WebViews.xml","resources/WebViews/WebViews.xml");
	var value302 = Reflect.field(openfl.AssetType,"text".toUpperCase());
	DefaultAssetLibrary.type.set("resources/WebViews/WebViews.xml",value302);
	DefaultAssetLibrary.path.set("icons/application-dialog.png","icons/application-dialog.png");
	var value303 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/application-dialog.png",value303);
	DefaultAssetLibrary.path.set("icons/blue-document-css.png","icons/blue-document-css.png");
	var value304 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/blue-document-css.png",value304);
	DefaultAssetLibrary.path.set("icons/blue-document-haxe.png","icons/blue-document-haxe.png");
	var value305 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/blue-document-haxe.png",value305);
	DefaultAssetLibrary.path.set("icons/blue-document-xml.png","icons/blue-document-xml.png");
	var value306 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/blue-document-xml.png",value306);
	DefaultAssetLibrary.path.set("icons/blue-document.png","icons/blue-document.png");
	var value307 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/blue-document.png",value307);
	DefaultAssetLibrary.path.set("icons/fav_16.png","icons/fav_16.png");
	var value308 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/fav_16.png",value308);
	DefaultAssetLibrary.path.set("icons/fav_32.png","icons/fav_32.png");
	var value309 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/fav_32.png",value309);
	DefaultAssetLibrary.path.set("icons/grid.png","icons/grid.png");
	var value310 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/grid.png",value310);
	DefaultAssetLibrary.path.set("icons/images.png","icons/images.png");
	var value311 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/images.png",value311);
	DefaultAssetLibrary.path.set("icons/ui-accordion.png","icons/ui-accordion.png");
	var value312 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-accordion.png",value312);
	DefaultAssetLibrary.path.set("icons/ui-button.png","icons/ui-button.png");
	var value313 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-button.png",value313);
	DefaultAssetLibrary.path.set("icons/ui-buttons.png","icons/ui-buttons.png");
	var value314 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-buttons.png",value314);
	DefaultAssetLibrary.path.set("icons/ui-check-boxes.png","icons/ui-check-boxes.png");
	var value315 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-check-boxes.png",value315);
	DefaultAssetLibrary.path.set("icons/ui-combo-box-calendar.png","icons/ui-combo-box-calendar.png");
	var value316 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-combo-box-calendar.png",value316);
	DefaultAssetLibrary.path.set("icons/ui-flow-vertical.png","icons/ui-flow-vertical.png");
	var value317 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-flow-vertical.png",value317);
	DefaultAssetLibrary.path.set("icons/ui-flow.png","icons/ui-flow.png");
	var value318 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-flow.png",value318);
	DefaultAssetLibrary.path.set("icons/ui-labels.png","icons/ui-labels.png");
	var value319 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-labels.png",value319);
	DefaultAssetLibrary.path.set("icons/ui-layered-pane.png","icons/ui-layered-pane.png");
	var value320 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-layered-pane.png",value320);
	DefaultAssetLibrary.path.set("icons/ui-list-box-blue.png","icons/ui-list-box-blue.png");
	var value321 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-list-box-blue.png",value321);
	DefaultAssetLibrary.path.set("icons/ui-menu-blue.png","icons/ui-menu-blue.png");
	var value322 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-menu-blue.png",value322);
	DefaultAssetLibrary.path.set("icons/ui-panel.png","icons/ui-panel.png");
	var value323 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-panel.png",value323);
	DefaultAssetLibrary.path.set("icons/ui-progress-bar-vertical.png","icons/ui-progress-bar-vertical.png");
	var value324 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-progress-bar-vertical.png",value324);
	DefaultAssetLibrary.path.set("icons/ui-progress-bar.png","icons/ui-progress-bar.png");
	var value325 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-progress-bar.png",value325);
	DefaultAssetLibrary.path.set("icons/ui-radio-buttons.png","icons/ui-radio-buttons.png");
	var value326 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-radio-buttons.png",value326);
	DefaultAssetLibrary.path.set("icons/ui-scroll-bar-horizontal.png","icons/ui-scroll-bar-horizontal.png");
	var value327 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-scroll-bar-horizontal.png",value327);
	DefaultAssetLibrary.path.set("icons/ui-scroll-bar.png","icons/ui-scroll-bar.png");
	var value328 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-scroll-bar.png",value328);
	DefaultAssetLibrary.path.set("icons/ui-scroll-pane-image.png","icons/ui-scroll-pane-image.png");
	var value329 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-scroll-pane-image.png",value329);
	DefaultAssetLibrary.path.set("icons/ui-slider-050.png","icons/ui-slider-050.png");
	var value330 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-slider-050.png",value330);
	DefaultAssetLibrary.path.set("icons/ui-slider-vertical-050.png","icons/ui-slider-vertical-050.png");
	var value331 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-slider-vertical-050.png",value331);
	DefaultAssetLibrary.path.set("icons/ui-spacer.png","icons/ui-spacer.png");
	var value332 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-spacer.png",value332);
	DefaultAssetLibrary.path.set("icons/ui-split-panel-vertical.png","icons/ui-split-panel-vertical.png");
	var value333 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-split-panel-vertical.png",value333);
	DefaultAssetLibrary.path.set("icons/ui-split-panel.png","icons/ui-split-panel.png");
	var value334 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-split-panel.png",value334);
	DefaultAssetLibrary.path.set("icons/ui-tab-content.png","icons/ui-tab-content.png");
	var value335 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-tab-content.png",value335);
	DefaultAssetLibrary.path.set("icons/ui-tab.png","icons/ui-tab.png");
	var value336 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-tab.png",value336);
	DefaultAssetLibrary.path.set("icons/ui-text-field.png","icons/ui-text-field.png");
	var value337 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("icons/ui-text-field.png",value337);
	DefaultAssetLibrary.path.set("images/slinky.jpg","images/slinky.jpg");
	var value338 = Reflect.field(openfl.AssetType,"image".toUpperCase());
	DefaultAssetLibrary.type.set("images/slinky.jpg",value338);
};
$hxClasses["DefaultAssetLibrary"] = DefaultAssetLibrary;
DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"];
DefaultAssetLibrary.__super__ = openfl.AssetLibrary;
DefaultAssetLibrary.prototype = $extend(openfl.AssetLibrary.prototype,{
	exists: function(id,type) {
		var assetType = DefaultAssetLibrary.type.get(id);
		if(assetType != null) {
			if(assetType == type || (type == openfl.AssetType.SOUND || type == openfl.AssetType.MUSIC) && (assetType == openfl.AssetType.MUSIC || assetType == openfl.AssetType.SOUND)) return true;
			if(type == openfl.AssetType.BINARY || type == null) return true;
		}
		return false;
	}
	,getBitmapData: function(id) {
		try {
			return (js.Boot.__cast(((function($this) {
				var $r;
				var key = DefaultAssetLibrary.path.get(id);
				$r = ApplicationMain.loaders.get(key);
				return $r;
			}(this))).contentLoaderInfo.content , openfl.display.Bitmap)).bitmapData;
		} catch( e ) {
			haxe.Log.trace("Error: Bitmap not found - " + id + " - " + DefaultAssetLibrary.path.get(id),{ fileName : "DefaultAssetLibrary.hx", lineNumber : 1525, className : "DefaultAssetLibrary", methodName : "getBitmapData"});
			return null;
		}
	}
	,getBytes: function(id) {
		var bytes = null;
		var data = ((function($this) {
			var $r;
			var key = DefaultAssetLibrary.path.get(id);
			$r = ApplicationMain.urlLoaders.get(key);
			return $r;
		}(this))).data;
		if(typeof(data) == "string") {
			bytes = new openfl.utils.ByteArray();
			bytes.writeUTFBytes(data);
		} else if(js.Boot.__instanceof(data,openfl.utils.ByteArray)) bytes = data; else bytes = null;
		if(bytes != null) {
			bytes.position = 0;
			return bytes;
		} else return null;
	}
	,getFont: function(id) {
		return js.Boot.__cast(Type.createInstance(DefaultAssetLibrary.className.get(id),[]) , openfl.text.Font);
	}
	,getMusic: function(id) {
		return new openfl.media.Sound(new openfl.net.URLRequest(DefaultAssetLibrary.path.get(id)));
	}
	,getPath: function(id) {
		return DefaultAssetLibrary.path.get(id);
	}
	,getSound: function(id) {
		return new openfl.media.Sound(new openfl.net.URLRequest(DefaultAssetLibrary.path.get(id)));
	}
	,isLocal: function(id,type) {
		return true;
	}
	,loadBitmapData: function(id,handler) {
		if(DefaultAssetLibrary.path.exists(id)) {
			var loader = new openfl.display.Loader();
			loader.contentLoaderInfo.addEventListener(openfl.events.Event.COMPLETE,function(event) {
				handler((js.Boot.__cast(event.currentTarget.content , openfl.display.Bitmap)).bitmapData);
			});
			loader.load(new openfl.net.URLRequest(DefaultAssetLibrary.path.get(id)));
		} else handler(this.getBitmapData(id));
	}
	,loadBytes: function(id,handler) {
		if(DefaultAssetLibrary.path.exists(id)) {
			var loader = new openfl.net.URLLoader();
			loader.addEventListener(openfl.events.Event.COMPLETE,function(event) {
				var bytes = new openfl.utils.ByteArray();
				bytes.writeUTFBytes(event.currentTarget.data);
				bytes.position = 0;
				handler(bytes);
			});
			loader.load(new openfl.net.URLRequest(DefaultAssetLibrary.path.get(id)));
		} else handler(this.getBytes(id));
	}
	,loadFont: function(id,handler) {
		handler(this.getFont(id));
	}
	,loadMusic: function(id,handler) {
		handler(this.getMusic(id));
	}
	,loadSound: function(id,handler) {
		handler(this.getSound(id));
	}
	,__class__: DefaultAssetLibrary
});
openfl.text = {};
openfl.text.Font = function() {
	this.__metrics = [];
	this.__fontScale = 9.0;
	var className = Type.getClassName(Type.getClass(this));
	if(openfl.text.Font.__fontData == null) {
		openfl.text.Font.__fontData = [];
		openfl.text.Font.__fontData["Bitstream_Vera_Sans"] = haxe.Unserializer.run(openfl.text.Font.DEFAULT_FONT_DATA);
	}
	if(className == "openfl.text.Font") this.set_fontName("Bitstream_Vera_Sans"); else this.set_fontName(className.split(".").pop());
};
$hxClasses["openfl.text.Font"] = openfl.text.Font;
openfl.text.Font.__name__ = ["openfl","text","Font"];
openfl.text.Font.enumerateFonts = function(enumerateDeviceFonts) {
	if(enumerateDeviceFonts == null) enumerateDeviceFonts = false;
	return openfl.text.Font.__registeredFonts.slice();
};
openfl.text.Font.__ofResource = function(resourceName,fontName) {
	if(fontName == null) fontName = "";
	var data = haxe.Unserializer.run(haxe.Resource.getString(resourceName));
	if(data == null) {
	} else {
		if(fontName == "") {
			openfl.text.Font.__fontData[resourceName] = data.hash;
			fontName = data.fontName;
		}
		openfl.text.Font.__fontData[data.fontName] = data.hash;
	}
	return fontName;
};
openfl.text.Font.registerFont = function(font) {
	var instance;
	instance = js.Boot.__cast(Type.createInstance(font,[]) , openfl.text.Font);
	if(instance != null) {
		if(Object.prototype.hasOwnProperty.call(font,"resourceName")) instance.set_fontName(openfl.text.Font.__ofResource(Reflect.field(font,"resourceName")));
		openfl.text.Font.__registeredFonts.push(instance);
	}
};
openfl.text.Font.prototype = {
	hasGlyph: function(str) {
		var key = HxOverrides.cca(str,0);
		return this.__glyphData.exists(key);
	}
	,__getAdvance: function(inGlyph,height) {
		var m = this.__metrics[inGlyph];
		if(m == null) {
			var glyph = this.__glyphData.get(inGlyph);
			if(glyph == null) return 0;
			this.__metrics[inGlyph] = m = glyph._width * this.__fontScale | 0;
		}
		if(m == null) return 0;
		return m;
	}
	,__render: function(graphics,inChar,inX,inY,inOutline) {
		var index = 0;
		var glyph = this.__glyphData.get(inChar);
		if(glyph == null) return;
		var commands = glyph.commands;
		var data = glyph.data;
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c) {
			case 1:
				graphics.moveTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			case 2:
				graphics.lineTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			case 3:
				graphics.curveTo(inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale,inX + data[index++] * this.__fontScale,inY + data[index++] * this.__fontScale);
				break;
			}
		}
	}
	,__setScale: function(scale) {
		this.__fontScale = scale / 1024;
	}
	,set_fontName: function(name) {
		if(name == "_sans" || name == "_serif" || name == "_typewriter") name = "Bitstream_Vera_Sans";
		this.fontName = name;
		if(openfl.text.Font.__fontData[this.fontName] == null) try {
			openfl.text.Font.__ofResource(name);
		} catch( e ) {
			this.fontName = "Bitstream_Vera_Sans";
		}
		if(openfl.text.Font.__fontData[this.fontName] != null) try {
			this.__glyphData = openfl.text.Font.__fontData[this.fontName];
		} catch( e1 ) {
			this.fontName = "Bitstream_Vera_Sans";
		}
		return name;
	}
	,__class__: openfl.text.Font
	,__properties__: {set_fontName:"set_fontName"}
};
var __ASSET__fonts_oxygen_bold_ttf = function() {
	openfl.text.Font.call(this);
};
$hxClasses["__ASSET__fonts_oxygen_bold_ttf"] = __ASSET__fonts_oxygen_bold_ttf;
__ASSET__fonts_oxygen_bold_ttf.__name__ = ["__ASSET__fonts_oxygen_bold_ttf"];
__ASSET__fonts_oxygen_bold_ttf.__super__ = openfl.text.Font;
__ASSET__fonts_oxygen_bold_ttf.prototype = $extend(openfl.text.Font.prototype,{
	__class__: __ASSET__fonts_oxygen_bold_ttf
});
var __ASSET__fonts_oxygen_ttf = function() {
	openfl.text.Font.call(this);
};
$hxClasses["__ASSET__fonts_oxygen_ttf"] = __ASSET__fonts_oxygen_ttf;
__ASSET__fonts_oxygen_ttf.__name__ = ["__ASSET__fonts_oxygen_ttf"];
__ASSET__fonts_oxygen_ttf.__super__ = openfl.text.Font;
__ASSET__fonts_oxygen_ttf.prototype = $extend(openfl.text.Font.prototype,{
	__class__: __ASSET__fonts_oxygen_ttf
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) return this.r.m[n]; else throw "EReg::matched";
	}
	,matchedRight: function() {
		if(this.r.m == null) throw "No string matched";
		var sz = this.r.m.index + this.r.m[0].length;
		return this.r.s.substr(sz,this.r.s.length - sz);
	}
	,matchedPos: function() {
		if(this.r.m == null) throw "No string matched";
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) len = -1;
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0?s:HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) this.r.s = s;
			return b;
		} else {
			var b1 = this.match(len < 0?HxOverrides.substr(s,pos,null):HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf = new StringBuf();
		do {
			if(offset >= s.length) break; else if(!this.matchSub(s,offset)) {
				buf.add(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf.add(HxOverrides.substr(s,offset,p.pos - offset));
			buf.add(f(this));
			if(p.len == 0) {
				buf.add(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else offset = p.pos + p.len;
		} while(this.r.global);
		if(!this.r.global && offset > 0 && offset < s.length) buf.add(HxOverrides.substr(s,offset,null));
		return buf.b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw "Invalid date format : " + s;
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = new Array();
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var i = $it0.next();
		a.push(i);
	}
	return a;
};
Lambda.map = function(it,f) {
	var l = new List();
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		l.add(f(x));
	}
	return l;
};
Lambda.has = function(it,elt) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(x == elt) return true;
	}
	return false;
};
Lambda.iter = function(it,f) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		f(x);
	}
};
Lambda.fold = function(it,f,first) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		first = f(x,first);
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var $it0 = $iterator(it)();
		while( $it0.hasNext() ) {
			var _ = $it0.next();
			n++;
		}
	} else {
		var $it1 = $iterator(it)();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			if(pred(x)) n++;
		}
	}
	return n;
};
Lambda.indexOf = function(it,v) {
	var i = 0;
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var v2 = $it0.next();
		if(v == v2) return i;
		i++;
	}
	return -1;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
	}
	,first: function() {
		if(this.h == null) return null; else return this.h[0];
	}
	,pop: function() {
		if(this.h == null) return null;
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		return x;
	}
	,isEmpty: function() {
		return this.h == null;
	}
	,iterator: function() {
		return { h : this.h, hasNext : function() {
			return this.h != null;
		}, next : function() {
			if(this.h == null) return null;
			var x = this.h[0];
			this.h = this.h[1];
			return x;
		}};
	}
	,__class__: List
};
var IMap = function() { };
$hxClasses["IMap"] = IMap;
IMap.__name__ = ["IMap"];
IMap.prototype = {
	__class__: IMap
};
Math.__name__ = ["Math"];
openfl.events = {};
openfl.events.IEventDispatcher = function() { };
$hxClasses["openfl.events.IEventDispatcher"] = openfl.events.IEventDispatcher;
openfl.events.IEventDispatcher.__name__ = ["openfl","events","IEventDispatcher"];
openfl.events.IEventDispatcher.prototype = {
	__class__: openfl.events.IEventDispatcher
};
openfl.events.EventDispatcher = function(target) {
	if(target != null) this.__target = target; else this.__target = this;
	this.__eventMap = [];
};
$hxClasses["openfl.events.EventDispatcher"] = openfl.events.EventDispatcher;
openfl.events.EventDispatcher.__name__ = ["openfl","events","EventDispatcher"];
openfl.events.EventDispatcher.__interfaces__ = [openfl.events.IEventDispatcher];
openfl.events.EventDispatcher.compareListeners = function(l1,l2) {
	if(l1.mPriority == l2.mPriority) return 0; else if(l1.mPriority > l2.mPriority) return -1; else return 1;
};
openfl.events.EventDispatcher.prototype = {
	addEventListener: function(type,inListener,useCapture,inPriority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(inPriority == null) inPriority = 0;
		if(useCapture == null) useCapture = false;
		var stage = openfl.Lib.__getStage();
		if((type == openfl.events.Event.RENDER || type == openfl.events.Event.ENTER_FRAME || type == openfl.events.Event.STAGE_RENDERED) && null != stage && this != stage) return stage.addEventListener(type,inListener,useCapture,inPriority,useWeakReference);
		var capture;
		if(useCapture == null) capture = false; else capture = useCapture;
		var priority;
		if(inPriority == null) priority = 0; else priority = inPriority;
		var list = this.getList(type);
		if(!this.existList(type)) {
			list = [];
			this.setList(type,list);
		}
		list.push(new openfl.events.Listener(inListener,capture,priority));
		list.sort(openfl.events.EventDispatcher.compareListeners);
	}
	,dispatchEvent: function(event) {
		if(event.target == null) event.target = this.__target;
		if(event.currentTarget == null) event.currentTarget = this.__target;
		var capture = event.eventPhase == openfl.events.EventPhase.CAPTURING_PHASE;
		if(this.existList(event.type)) {
			var list = this.getList(event.type);
			var idx = 0;
			while(idx < list.length) {
				var listener = list[idx];
				if(listener.mUseCapture == capture) {
					listener.dispatchEvent(event);
					if(event.__getIsCancelledNow()) return true;
				}
				if(idx < list.length && listener != list[idx]) {
				} else idx++;
			}
			return true;
		}
		return false;
	}
	,existList: function(type) {
		return this.__eventMap != null && this.__eventMap[type] != undefined;
	}
	,getList: function(type) {
		return this.__eventMap[type];
	}
	,hasEventListener: function(type) {
		return this.existList(type);
	}
	,removeEventListener: function(type,listener,inCapture) {
		if(inCapture == null) inCapture = false;
		if(!this.existList(type)) return;
		var list = this.getList(type);
		var capture;
		if(inCapture == null) capture = false; else capture = inCapture;
		var _g1 = 0;
		var _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(list[i].Is(listener,capture)) {
				list.splice(i,1);
				return;
			}
		}
	}
	,setList: function(type,list) {
		this.__eventMap[type] = list;
	}
	,toString: function() {
		return "[ " + this.__name__ + " ]";
	}
	,willTrigger: function(type) {
		return this.hasEventListener(type);
	}
	,__class__: openfl.events.EventDispatcher
};
openfl.display = {};
openfl.display.IBitmapDrawable = function() { };
$hxClasses["openfl.display.IBitmapDrawable"] = openfl.display.IBitmapDrawable;
openfl.display.IBitmapDrawable.__name__ = ["openfl","display","IBitmapDrawable"];
openfl.display.IBitmapDrawable.prototype = {
	__class__: openfl.display.IBitmapDrawable
};
openfl.display.DisplayObject = function() {
	openfl.events.EventDispatcher.call(this,null);
	this.___id = openfl.utils.Uuid.uuid();
	this.set_parent(null);
	this.set_transform(new openfl.geom.Transform(this));
	this.__x = 0.0;
	this.__y = 0.0;
	this.__scaleX = 1.0;
	this.__scaleY = 1.0;
	this.__rotation = 0.0;
	this.__width = 0.0;
	this.__height = 0.0;
	this.set_visible(true);
	this.set_alpha(1.0);
	this.__filters = new Array();
	this.__boundsRect = new openfl.geom.Rectangle();
	this.__scrollRect = null;
	this.__mask = null;
	this.__maskingObj = null;
	this.set___combinedVisible(this.get_visible());
	var _this = openfl.Lib.get_snap();
	var e123 = [];
	var me123 = _this;
	this.snap = me123.group.apply(me123, e123);
	openfl.Lib.__setSurfaceId(this.snap,this.___id);
	openfl.Lib.get_freeSnap().append(this.snap);
};
$hxClasses["openfl.display.DisplayObject"] = openfl.display.DisplayObject;
openfl.display.DisplayObject.__name__ = ["openfl","display","DisplayObject"];
openfl.display.DisplayObject.__interfaces__ = [openfl.display.IBitmapDrawable];
openfl.display.DisplayObject.__super__ = openfl.events.EventDispatcher;
openfl.display.DisplayObject.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	dispatchEvent: function(event) {
		var result = this.__dispatchEvent(event);
		if(event.__getIsCancelled()) return true;
		if(event.bubbles && this.parent != null) this.parent.dispatchEvent(event);
		return result;
	}
	,drawToSurface: function(inSurface,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		var oldAlpha = this.alpha;
		this.set_alpha(1);
		this.__render(inSurface,clipRect);
		this.set_alpha(oldAlpha);
	}
	,getBounds: function(targetCoordinateSpace) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(this.get__boundsInvalid()) this.validateBounds();
		var m = this.transform.__getFullMatrix(null);
		if(targetCoordinateSpace != null) m.concat(targetCoordinateSpace.transform.__getFullMatrix(null).invert());
		var rect = this.__boundsRect.transform(m);
		return rect;
	}
	,getRect: function(targetCoordinateSpace) {
		return this.getBounds(targetCoordinateSpace);
	}
	,getScreenBounds: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__boundsRect.clone();
	}
	,getSurfaceTransform: function() {
		return this.transform.get_matrix();
	}
	,globalToLocal: function(inPos) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		return this.transform.__getFullMatrix(null).invert().transformPoint(inPos);
	}
	,handleGraphicsUpdated: function(gfx) {
		this.__applyFilters(this.snap);
		this.___renderFlags |= 32;
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
	}
	,hitTestObject: function(obj) {
		if(obj != null && obj.parent != null && this.parent != null) {
			var currentBounds = this.getBounds(this);
			var targetBounds = obj.getBounds(this);
			return currentBounds.intersects(targetBounds);
		}
		return false;
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		var boundingBox;
		if(shapeFlag == null) boundingBox = true; else boundingBox = !shapeFlag;
		if(!boundingBox) return this.__getObjectUnderPoint(new openfl.geom.Point(x,y)) != null; else {
			var gfx = this.__getGraphics();
			if(gfx != null) {
				var extX = gfx.__extent.x;
				var extY = gfx.__extent.y;
				var local = this.globalToLocal(new openfl.geom.Point(x,y));
				if(local.x - extX < 0 || local.y - extY < 0 || (local.x - extX) * this.get_scaleX() > this.get_width() || (local.y - extY) * this.get_scaleY() > this.get_height()) return false; else return true;
			}
			return false;
		}
	}
	,invalidateGraphics: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) {
			gfx.set___changed(true);
			gfx.__clearNextCycle = true;
		}
		this.renderNextWake();
	}
	,localToGlobal: function(point) {
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		return this.transform.__getFullMatrix(null).transformPoint(point);
	}
	,setSurfaceVisible: function(inValue) {
		if(null != this.snap) this.snap.attr({ visibility : inValue?"visible":"hidden"});
		this.renderNextWake();
	}
	,toString: function() {
		return "[DisplayObject name=" + this.name + " id=" + this.___id + "]";
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			var gfx = this.__getGraphics();
			if(gfx == null) {
				this.__boundsRect.x = this.get_x();
				this.__boundsRect.y = this.get_y();
				this.__boundsRect.width = 0;
				this.__boundsRect.height = 0;
			} else {
				this.__boundsRect = gfx.__extentWithFilters.clone();
				if(this.scale9Grid != null) {
					this.__boundsRect.width *= this.__scaleX;
					this.__boundsRect.height *= this.__scaleY;
					this.__width = this.__boundsRect.width;
					this.__height = this.__boundsRect.height;
				} else {
					this.__width = this.__boundsRect.width * this.__scaleX;
					this.__height = this.__boundsRect.height * this.__scaleY;
				}
				gfx.boundsDirty = false;
			}
			this.___renderFlags &= -65;
		}
	}
	,__setTransform: function(matrix) {
		var el = this.snap.node;
		if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1 && matrix.tx == 0 && matrix.ty == 0) {
			if(null != this.__cacheTransformString) {
				el.removeAttribute("transform");
				this.__cacheTransformString = null;
			}
		} else {
			var transformString = "matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")";
			if(this.__cacheTransformString != transformString) {
				el.setAttribute("transform",transformString);
				this.__cacheTransformString = transformString;
			}
		}
	}
	,__addToStage: function(newParent,beforeSibling) {
		if(this.__isOnStage()) return;
		var gfx = this.__getGraphics();
		if(null == gfx) return;
		if(newParent.snap != null && newParent.name != "Stage") {
			if(beforeSibling != null && beforeSibling.__getGraphics() != null) openfl.Lib.__appendSurface(this.snap,beforeSibling.snap); else openfl.Lib.__appendSurface(this.snap,null,null,newParent.snap);
			this.__setTransform(this.transform.get_matrix());
		} else if(newParent.name == "Stage") openfl.Lib.__appendSurface(this.snap);
		if(this.__isOnStage()) {
			this.get_stage().snapIdToDisplayObjects.set(this.___id,this);
			var evt = new openfl.events.Event(openfl.events.Event.ADDED_TO_STAGE,false,false);
			this.dispatchEvent(evt);
		}
		this.renderNextWake();
	}
	,__getBlendModeSvg: function() {
		return null;
	}
	,__applyFilters: function(surface) {
		var blendFilter = null;
		var filterBuf = new StringBuf();
		if(null != blendFilter) filterBuf.b += Std.string(blendFilter);
		if(this.__filters != null && this.__filters.length > 0) {
			var _g = 0;
			var _g1 = this.__filters;
			while(_g < _g1.length) {
				var filter = _g1[_g];
				++_g;
				filterBuf.add(filter.__getSvg());
			}
		}
		var filtersString = filterBuf.b;
		if(this.cacheFiltersString != filtersString) {
			if(null == filtersString || "" == filtersString) surface.attr({ filter : "none"}); else surface.attr({ filter : openfl.Lib.get_snap().filter(filtersString)});
			this.cacheFiltersString = filtersString;
		}
	}
	,__broadcast: function(event) {
		this.__dispatchEvent(event);
	}
	,__clearFlag: function(mask) {
		this.___renderFlags &= ~mask;
	}
	,__contains: function(child) {
		return false;
	}
	,__dispatchEvent: function(event) {
		if(event.target == null) event.target = this;
		event.currentTarget = this;
		return openfl.events.EventDispatcher.prototype.dispatchEvent.call(this,event);
	}
	,__fireEvent: function(event) {
		var stack = [];
		if(this.parent != null) this.parent.__getInteractiveObjectStack(stack);
		var l = stack.length;
		if(l > 0) {
			event.__setPhase(openfl.events.EventPhase.CAPTURING_PHASE);
			stack.reverse();
			var _g = 0;
			while(_g < stack.length) {
				var obj = stack[_g];
				++_g;
				event.currentTarget = obj;
				obj.__dispatchEvent(event);
				if(event.__getIsCancelled()) return;
			}
		}
		event.__setPhase(openfl.events.EventPhase.AT_TARGET);
		event.currentTarget = this;
		this.__dispatchEvent(event);
		if(event.__getIsCancelled()) return;
		if(event.bubbles) {
			event.__setPhase(openfl.events.EventPhase.BUBBLING_PHASE);
			stack.reverse();
			var _g1 = 0;
			while(_g1 < stack.length) {
				var obj1 = stack[_g1];
				++_g1;
				event.currentTarget = obj1;
				obj1.__dispatchEvent(event);
				if(event.__getIsCancelled()) return;
			}
		}
	}
	,__getFullMatrix: function(localMatrix) {
		return this.transform.__getFullMatrix(localMatrix);
	}
	,__getGraphics: function() {
		return null;
	}
	,__getInteractiveObjectStack: function(outStack) {
		var io = this;
		if(io != null) outStack.push(io);
		if(this.parent != null) this.parent.__getInteractiveObjectStack(outStack);
	}
	,__getMatrix: function() {
		return this.transform.get_matrix();
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null;
		var element = Snap.getElementByPoint(point.x,point.y);
		while(null != element) {
			var el = element.node;
			if(null != el.id && "" != el.id && this.get_stage().snapIdToDisplayObjects.exists(el.id)) {
				var obj = this.get_stage().snapIdToDisplayObjects.get(el.id);
				var p = obj;
				while(null != p) {
					if(this == p) return obj;
					p = p.parent;
				}
			}
			element = element.parent();
		}
		return null;
	}
	,__invalidateBounds: function() {
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
	}
	,__invalidateMatrix: function(local) {
		if(local == null) local = false;
		if(local) this.___renderFlags |= 4; else this.___renderFlags |= 8;
		this.renderNextWake();
	}
	,__isOnStage: function() {
		return openfl.Lib.__isOnStage(this.snap);
	}
	,__matrixOverridden: function() {
		this.__x = this.transform.get_matrix().tx;
		this.__y = this.transform.get_matrix().ty;
		this.___renderFlags |= 16;
		this.___renderFlags |= 4;
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
	}
	,__removeFromStage: function() {
		if(openfl.Lib.__isOnStage(this.snap)) {
			openfl.Lib.__removeSurface(this.snap);
			this.get_stage().snapIdToDisplayObjects.remove(this.___id);
			var evt = new openfl.events.Event(openfl.events.Event.REMOVED_FROM_STAGE,false,false);
			this.dispatchEvent(evt);
		}
		this.renderNextWake();
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		var gfx = this.__getGraphics();
		if(gfx == null) return;
		if(null != this.get_mask()) this.get_mask().__render(inMask,clipRect);
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(gfx.__render(inMask,this.__filters,1,1)) {
			this.__applyFilters(this.snap);
			this.___renderFlags |= 32;
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		var fullAlpha;
		fullAlpha = (this.parent != null?this.parent.__combinedAlpha:1) * this.alpha;
		if(inMask != null) {
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m = this.transform.get_matrix();
				this.__setTransform(m);
				this.___renderFlags &= -33;
			}
			var el = this.snap.node;
			el.setAttribute("opacity",Std.string(this.alpha));
		}
		if(null != clipRect) this.updateClipRect(clipRect);
	}
	,updateClipRect: function(inRect) {
		var rect = this.getClipRect().node;
		if(rect.getAttribute("width") != (inRect.width == null?"null":"" + inRect.width) || rect.getAttribute("height") != (inRect.height == null?"null":"" + inRect.height)) {
			rect.setAttribute("width",inRect.width == null?"null":"" + inRect.width);
			rect.setAttribute("height",inRect.height == null?"null":"" + inRect.height);
		}
	}
	,getClipRect: function() {
		if(null == this.__clipRect) {
			var url = this.snap.attr("clip-path");
			if(null == url || "" == url || "none" == url) {
				var rect = openfl.Lib.get_snap().rect(0,0,this.get_width(),this.get_height(),0,0);
				this.snap.attr("clip-path",rect);
				this.__clipRect = rect;
			} else {
				var clipPath = Snap.select("#" + tools.Helper.getAnchorIdFromUrl(url));
				this.__clipRect = clipPath.select("rect");
			}
		}
		return this.__clipRect;
	}
	,__setDimensions: function() {
		if(this.scale9Grid != null) {
			this.__boundsRect.width *= this.__scaleX;
			this.__boundsRect.height *= this.__scaleY;
			this.__width = this.__boundsRect.width;
			this.__height = this.__boundsRect.height;
		} else {
			this.__width = this.__boundsRect.width * this.__scaleX;
			this.__height = this.__boundsRect.height * this.__scaleY;
		}
	}
	,__setFlag: function(mask) {
		this.___renderFlags |= mask;
	}
	,__setFlagToValue: function(mask,value) {
		if(value) this.___renderFlags |= mask; else this.___renderFlags &= ~mask;
	}
	,__setFullMatrix: function(inValue) {
		return this.transform.__setFullMatrix(inValue);
	}
	,__setMatrix: function(inValue) {
		this.transform._matrix.copy(inValue);
		return inValue;
	}
	,__testFlag: function(mask) {
		return (this.___renderFlags & mask) != 0;
	}
	,__validateMatrix: function() {
		var parentMatrixInvalid = (this.___renderFlags & 8) != 0 && this.parent != null;
		if((this.___renderFlags & 4) != 0 || parentMatrixInvalid) {
			if(parentMatrixInvalid) this.parent.__validateMatrix();
			var m = this.transform.get_matrix();
			if((this.___renderFlags & 16) != 0) this.___renderFlags &= -5;
			if((this.___renderFlags & 4) != 0) {
				m.identity();
				m.scale(this.__scaleX,this.__scaleY);
				var rad = this.__rotation * openfl.geom.Transform.DEG_TO_RAD;
				if(rad != 0.0) m.rotate(rad);
				m.translate(this.__x,this.__y);
				this.transform._matrix.copy(m);
				m;
			}
			var cm = this.transform.__getFullMatrix(null);
			var fm;
			if(this.parent == null) fm = m; else fm = this.parent.transform.__getFullMatrix(m);
			this._fullScaleX = fm._sx;
			this._fullScaleY = fm._sy;
			if(cm.a != fm.a || cm.b != fm.b || cm.c != fm.c || cm.d != fm.d || cm.tx != fm.tx || cm.ty != fm.ty) {
				this.transform.__setFullMatrix(fm);
				this.___renderFlags |= 32;
			}
			this.___renderFlags &= -29;
		}
	}
	,get__bottommostSurface: function() {
		return this.snap;
	}
	,get_filters: function() {
		if(this.__filters == null) return [];
		var result = new Array();
		var _g = 0;
		var _g1 = this.__filters;
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			result.push(filter.clone());
		}
		return result;
	}
	,get__boundsInvalid: function() {
		var gfx = this.__getGraphics();
		if(gfx == null) return (this.___renderFlags & 64) != 0; else return (this.___renderFlags & 64) != 0 || gfx.boundsDirty;
	}
	,set_filters: function(filters) {
		var oldFilterCount;
		if(this.__filters == null) oldFilterCount = 0; else oldFilterCount = this.__filters.length;
		if(filters == null) {
			this.__filters = null;
			if(oldFilterCount > 0) this.invalidateGraphics();
		} else {
			this.__filters = new Array();
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				this.__filters.push(filter.clone());
			}
			this.invalidateGraphics();
		}
		return filters;
	}
	,get_height: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__height;
	}
	,set_height: function(inValue) {
		if(this.get__boundsInvalid()) this.validateBounds();
		var h = this.__boundsRect.height;
		if(this.__scaleY * h != inValue) {
			if(h == 0) {
				this.__scaleY = 1;
				this.__invalidateMatrix(true);
				this.___renderFlags |= 64;
				if(this.parent != null) this.parent.___renderFlags |= 64;
				this.renderNextWake();
				h = this.__boundsRect.height;
			}
			if(h <= 0) return 0;
			this.__scaleY = inValue / h;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		this.renderNextWake();
		return inValue;
	}
	,get_mask: function() {
		return this.__mask;
	}
	,set_mask: function(inValue) {
		if(this.__mask != null) {
			this.__mask.__maskingObj = null;
			openfl.Lib.get_freeSnap().append(this.__mask.snap);
			var maskId = StringTools.replace(StringTools.replace(this.snap.attr("mask"),"url(",""),")","");
			if(maskId.indexOf("#") != -1) maskId = maskId.substring(maskId.indexOf("#") + 1,maskId.length - 1);
			var maskSnap = Snap.select("#" + maskId);
			if(null != maskSnap) maskSnap.remove();
		}
		this.__mask = inValue;
		if(this.__mask != null) this.__mask.__maskingObj = this;
		var el = this.snap.node;
		var snapMask = el.getAttribute("mask");
		if(null != this.get_mask() && (null == snapMask || "none" == snapMask)) {
			if(null != this.get_mask().snap) {
				if(!this.get_mask().__isOnStage()) openfl.Lib.get_current().addChild(this.get_mask());
				this.snap.attr({ mask : this.get_mask().snap});
			}
		} else if(null == this.get_mask()) {
			if(null != snapMask && "none" != snapMask) el.setAttribute("mask","none");
		}
		return this.__mask;
	}
	,get__matrixChainInvalid: function() {
		return (this.___renderFlags & 8) != 0;
	}
	,get__matrixInvalid: function() {
		return (this.___renderFlags & 4) != 0;
	}
	,get_mouseX: function() {
		return this.globalToLocal(new openfl.geom.Point(this.get_stage().get_mouseX(),0)).x;
	}
	,get_mouseY: function() {
		return this.globalToLocal(new openfl.geom.Point(0,this.get_stage().get_mouseY())).y;
	}
	,set___combinedVisible: function(inValue) {
		if(this.__combinedVisible != inValue) {
			this.__combinedVisible = inValue;
			this.setSurfaceVisible(inValue);
			this.renderNextWake();
		}
		return this.__combinedVisible;
	}
	,set_alpha: function(inValue) {
		this.alpha = inValue;
		this.renderNextWake();
		return inValue;
	}
	,set_blendMode: function(inValue) {
		this.blendMode = inValue;
		this.renderNextWake();
		return inValue;
	}
	,set_parent: function(inValue) {
		if(inValue == this.parent) return inValue;
		this.__invalidateMatrix();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.__children,this);
			this.parent.__invalidateBounds();
		}
		if(inValue != null) {
			inValue.___renderFlags |= 64;
			if(inValue.parent != null) inValue.parent.___renderFlags |= 64;
			inValue.renderNextWake();
		}
		if(this.parent == null && inValue != null) {
			this.parent = inValue;
			var evt = new openfl.events.Event(openfl.events.Event.ADDED,true,false);
			this.dispatchEvent(evt);
		} else if(this.parent != null && inValue == null) {
			this.parent = inValue;
			var evt1 = new openfl.events.Event(openfl.events.Event.REMOVED,true,false);
			this.dispatchEvent(evt1);
		} else this.parent = inValue;
		return inValue;
	}
	,get_rotation: function() {
		return this.__rotation;
	}
	,set_rotation: function(inValue) {
		if(this.__rotation != inValue) {
			this.__rotation = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		return inValue;
	}
	,get_scaleX: function() {
		return this.__scaleX;
	}
	,set_scaleX: function(inValue) {
		if(this.__scaleX != inValue) {
			this.__scaleX = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		return inValue;
	}
	,get_scaleY: function() {
		return this.__scaleY;
	}
	,set_scaleY: function(inValue) {
		if(this.__scaleY != inValue) {
			this.__scaleY = inValue;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		return inValue;
	}
	,get_scrollRect: function() {
		if(this.__scrollRect == null) return null;
		return this.__scrollRect.clone();
	}
	,set_scrollRect: function(inValue) {
		this.__scrollRect = inValue;
		this.renderNextWake();
		return inValue;
	}
	,get_stage: function() {
		var gfx = this.__getGraphics();
		if(gfx != null) return openfl.Lib.__getStage();
		return null;
	}
	,get__topmostSurface: function() {
		return this.snap;
	}
	,get__surface: function() {
		return this.get__topmostSurface();
	}
	,set_transform: function(inValue) {
		this.transform = inValue;
		this.__x = this.transform.get_matrix().tx;
		this.__y = this.transform.get_matrix().ty;
		this.__invalidateMatrix(true);
		return inValue;
	}
	,get_visible: function() {
		return this.__visible;
	}
	,set_visible: function(inValue) {
		this.set___combinedVisible(this.parent != null?this.parent.__combinedVisible && inValue:inValue);
		if(this.__visible != inValue) {
			this.__visible = inValue;
			this.setSurfaceVisible(inValue);
		}
		this.renderNextWake();
		return this.__visible;
	}
	,get_x: function() {
		return this.__x;
	}
	,set_x: function(inValue) {
		if(this.__x != inValue) {
			this.__x = inValue;
			this.__invalidateMatrix(true);
			if(this.parent != null) this.parent.__invalidateBounds();
		}
		return inValue;
	}
	,get_y: function() {
		return this.__y;
	}
	,set_y: function(inValue) {
		if(this.__y != inValue) {
			this.__y = inValue;
			this.__invalidateMatrix(true);
			if(this.parent != null) this.parent.__invalidateBounds();
		}
		return inValue;
	}
	,get_width: function() {
		if(this.get__boundsInvalid()) this.validateBounds();
		return this.__width;
	}
	,set_width: function(inValue) {
		if(this.get__boundsInvalid()) this.validateBounds();
		var w = this.__boundsRect.width;
		if(this.__scaleX * w != inValue) {
			if(w == 0) {
				this.__scaleX = 1;
				this.__invalidateMatrix(true);
				this.___renderFlags |= 64;
				if(this.parent != null) this.parent.___renderFlags |= 64;
				this.renderNextWake();
				w = this.__boundsRect.width;
			}
			if(w <= 0) return 0;
			this.__scaleX = inValue / w;
			this.__invalidateMatrix(true);
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		this.renderNextWake();
		return inValue;
	}
	,__getSrWindow: function() {
		return this._srWindow;
	}
	,__srUpdateDivs: function() {
	}
	,renderNextWake: function() {
		if(null != this.parent) this.parent.addToRenderList(this); else if(null != this.__maskingObj) this.__maskingObj.renderNextWake();
	}
	,__class__: openfl.display.DisplayObject
	,__properties__: {get__surface:"get__surface",get__topmostSurface:"get__topmostSurface",get__matrixInvalid:"get__matrixInvalid",get__matrixChainInvalid:"get__matrixChainInvalid",get__boundsInvalid:"get__boundsInvalid",get__bottommostSurface:"get__bottommostSurface",set___combinedVisible:"set___combinedVisible",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_width:"set_width",get_width:"get_width",set_visible:"set_visible",get_visible:"get_visible",set_transform:"set_transform",get_stage:"get_stage",set_scrollRect:"set_scrollRect",get_scrollRect:"get_scrollRect",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_rotation:"set_rotation",get_rotation:"get_rotation",set_parent:"set_parent",get_mouseY:"get_mouseY",get_mouseX:"get_mouseX",set_mask:"set_mask",get_mask:"get_mask",set_height:"set_height",get_height:"get_height",set_filters:"set_filters",get_filters:"get_filters",set_blendMode:"set_blendMode",set_alpha:"set_alpha"}
});
openfl.display.InteractiveObject = function() {
	openfl.display.DisplayObject.call(this);
	this.tabEnabled = false;
	this.mouseEnabled = true;
	this.doubleClickEnabled = true;
	this.set_tabIndex(0);
};
$hxClasses["openfl.display.InteractiveObject"] = openfl.display.InteractiveObject;
openfl.display.InteractiveObject.__name__ = ["openfl","display","InteractiveObject"];
openfl.display.InteractiveObject.__super__ = openfl.display.DisplayObject;
openfl.display.InteractiveObject.prototype = $extend(openfl.display.DisplayObject.prototype,{
	toString: function() {
		return "[InteractiveObject name=" + this.name + " id=" + this.___id + "]";
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.mouseEnabled) return null; else return openfl.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,get_tabIndex: function() {
		return this.__tabIndex;
	}
	,set_tabIndex: function(inIndex) {
		return this.__tabIndex = inIndex;
	}
	,__class__: openfl.display.InteractiveObject
	,__properties__: $extend(openfl.display.DisplayObject.prototype.__properties__,{set_tabIndex:"set_tabIndex",get_tabIndex:"get_tabIndex"})
});
openfl.display.DisplayObjectContainer = function() {
	this.__children = new Array();
	this.renderList = new haxe.ds.ObjectMap();
	this.mouseChildren = true;
	this.tabChildren = true;
	openfl.display.InteractiveObject.call(this);
	this.__combinedAlpha = this.alpha;
};
$hxClasses["openfl.display.DisplayObjectContainer"] = openfl.display.DisplayObjectContainer;
openfl.display.DisplayObjectContainer.__name__ = ["openfl","display","DisplayObjectContainer"];
openfl.display.DisplayObjectContainer.__super__ = openfl.display.InteractiveObject;
openfl.display.DisplayObjectContainer.prototype = $extend(openfl.display.InteractiveObject.prototype,{
	addChild: function(object) {
		if(object == null) throw "DisplayObjectContainer asked to add null child object";
		if(object == this) throw "Adding to self";
		this.__addedChildren = true;
		if(object.parent == this) {
			this.setChildIndex(object,this.__children.length - 1);
			return object;
		}
		object.set_parent(this);
		if(this.__isOnStage()) object.__addToStage(this);
		if(this.__children == null) this.__children = new Array();
		this.__children.push(object);
		this.addToRenderList(object);
		return object;
	}
	,addChildAt: function(object,index) {
		if(index > this.__children.length || index < 0) throw "Invalid index position " + index;
		this.__addedChildren = true;
		if(object.parent == this) {
			this.setChildIndex(object,index);
			return object;
		}
		if(index == this.__children.length) return this.addChild(object); else {
			if(this.__isOnStage()) object.__addToStage(this,this.__children[index]);
			this.__children.splice(index,0,object);
			object.set_parent(this);
		}
		this.addToRenderList(object);
		return object;
	}
	,contains: function(child) {
		return this.__contains(child);
	}
	,getChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__children[index];
		throw "getChildAt : index out of bounds " + index + "/" + this.__children.length;
		return null;
	}
	,getChildByName: function(inName) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.name == inName) return child;
		}
		return null;
	}
	,getChildIndex: function(inChild) {
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == inChild) return i;
		}
		return -1;
	}
	,getObjectsUnderPoint: function(point) {
		var result = new Array();
		this.__getObjectsUnderPoint(point,result);
		return result;
	}
	,removeChild: function(inChild) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child == inChild) {
				HxOverrides.remove(this.__children,child);
				child.__removeFromStage();
				child.set_parent(null);
				return child;
			}
		}
		throw "removeChild : none found?";
	}
	,removeChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__removeChild(this.__children[index]);
		throw "removeChildAt(" + index + ") : none found?";
	}
	,removeChildren: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 2147483647;
		if(beginIndex == null) beginIndex = 0;
		if(endIndex == 2147483647) {
			endIndex = this.__children.length - 1;
			if(endIndex < 0) return;
		}
		if(beginIndex > this.__children.length - 1) return; else if(endIndex < beginIndex || beginIndex < 0 || endIndex > this.__children.length) throw new openfl.errors.RangeError("The supplied index is out of bounds.");
		var numRemovals = endIndex - beginIndex;
		while(numRemovals >= 0) {
			this.removeChildAt(beginIndex);
			numRemovals--;
		}
	}
	,setChildIndex: function(child,index) {
		if(index > this.__children.length) throw "Invalid index position " + index;
		var oldIndex = this.getChildIndex(child);
		if(oldIndex < 0) {
			var msg = "setChildIndex : object " + child.name + " not found.";
			if(child.parent == this) {
				var realindex = -1;
				var _g1 = 0;
				var _g = this.__children.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(this.__children[i] == child) {
						realindex = i;
						break;
					}
				}
				if(realindex != -1) msg += "Internal error: Real child index was " + (realindex == null?"null":"" + realindex); else msg += "Internal error: Child was not in __children array!";
			}
			throw msg;
		}
		if(index < oldIndex) {
			var i1 = oldIndex;
			while(i1 > index) {
				this.swapChildren(this.__children[i1],this.__children[i1 - 1]);
				i1--;
			}
		} else if(oldIndex < index) {
			var i2 = oldIndex;
			while(i2 < index) {
				this.swapChildren(this.__children[i2],this.__children[i2 + 1]);
				i2++;
			}
		}
	}
	,swapChildren: function(child1,child2) {
		var c1 = -1;
		var c2 = -1;
		var swap;
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == child1) c1 = i; else if(this.__children[i] == child2) c2 = i;
		}
		if(c1 != -1 && c2 != -1) {
			swap = this.__children[c1];
			this.__children[c1] = this.__children[c2];
			this.__children[c2] = swap;
			swap = null;
			this.__swapSurface(c1,c2);
		}
	}
	,swapChildrenAt: function(child1,child2) {
		var swap = this.__children[child1];
		this.__children[child1] = this.__children[child2];
		this.__children[child2] = swap;
		swap = null;
	}
	,toString: function() {
		return "[DisplayObjectContainer name=" + this.name + " id=" + this.___id + "]";
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			openfl.display.InteractiveObject.prototype.validateBounds.call(this);
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var obj = _g1[_g];
				++_g;
				if(obj.get_visible()) {
					var r = obj.getBounds(this);
					if(r.width != 0 || r.height != 0) {
						if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
					}
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,__addToStage: function(newParent,beforeSibling) {
		openfl.display.InteractiveObject.prototype.__addToStage.call(this,newParent,beforeSibling);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(null != child && (child.__getGraphics() == null || !child.__isOnStage())) child.__addToStage(this);
		}
	}
	,__broadcast: function(event) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__broadcast(event);
		}
		this.dispatchEvent(event);
	}
	,__contains: function(child) {
		if(child == null) return false;
		if(this == child) return true;
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c == child || c.__contains(child)) return true;
		}
		return false;
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null;
		var l = this.__children.length - 1;
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = null;
			if(this.mouseEnabled) result = this.__children[l - i].__getObjectUnderPoint(point);
			if(result != null) if(this.mouseChildren) return result; else return this;
		}
		return openfl.display.InteractiveObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__getObjectsUnderPoint: function(point,stack) {
		var l = this.__children.length - 1;
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = this.__children[l - i].__getObjectUnderPoint(point);
			if(result != null) stack.push(result);
		}
	}
	,__invalidateMatrix: function(local) {
		if(local == null) local = false;
		if(!((this.___renderFlags & 8) != 0) && !((this.___renderFlags & 4) != 0)) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__invalidateMatrix();
			}
		}
		openfl.display.InteractiveObject.prototype.__invalidateMatrix.call(this,local);
	}
	,__removeChild: function(child) {
		HxOverrides.remove(this.__children,child);
		child.__removeFromStage();
		child.set_parent(null);
		return child;
	}
	,__removeFromStage: function() {
		openfl.display.InteractiveObject.prototype.__removeFromStage.call(this);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__removeFromStage();
		}
	}
	,__render: function(inMask,clipRect) {
		if(!this.__visible) return;
		if(this.__scrollRect != null) clipRect = this.__scrollRect;
		openfl.display.InteractiveObject.prototype.__render.call(this,inMask,clipRect);
		if(this.parent != null) this.__combinedAlpha = this.parent.__combinedAlpha * this.alpha; else this.__combinedAlpha = this.alpha;
		var $it0 = this.renderList.keys();
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(child.__visible) {
				if(clipRect != null) {
					if((child.___renderFlags & 4) != 0 || (child.___renderFlags & 8) != 0) child.__validateMatrix();
				}
				child.__render(inMask,clipRect);
			}
		}
		this.renderList = new haxe.ds.ObjectMap();
		if(this.__addedChildren) this.__addedChildren = false;
	}
	,__swapSurface: function(c1,c2) {
		if(this.__children[c1] == null) throw "Null element at index " + c1 + " length " + this.__children.length;
		if(this.__children[c2] == null) throw "Null element at index " + c2 + " length " + this.__children.length;
		var surface1 = this.__children[c1].snap;
		var surface2 = this.__children[c2].snap;
		if(surface1 != null && surface2 != null) openfl.Lib.__swapSurface(surface1,surface2);
	}
	,set___combinedVisible: function(inVal) {
		if(inVal != this.__combinedVisible) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.set___combinedVisible(child.get_visible() && inVal);
			}
		}
		return openfl.display.InteractiveObject.prototype.set___combinedVisible.call(this,inVal);
	}
	,get_numChildren: function() {
		return this.__children.length;
	}
	,set_scrollRect: function(inValue) {
		inValue = openfl.display.InteractiveObject.prototype.set_scrollRect.call(this,inValue);
		return inValue;
	}
	,addToRenderList: function(o) {
		if(!(this.renderList.h.__keys__[o.__id__] != null)) {
			this.renderList.set(o,true);
			this.renderNextWake();
		}
	}
	,__class__: openfl.display.DisplayObjectContainer
	,__properties__: $extend(openfl.display.InteractiveObject.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
openfl.display.Sprite = function() {
	openfl.display.DisplayObjectContainer.call(this);
	var graphicsSnap = ((function($this) {
		var $r;
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		$r = me123.group.apply(me123, e123);
		return $r;
	}(this))).addClass("graphics");
	this.snap.append(graphicsSnap);
	this.__graphics = new openfl.display.Graphics(graphicsSnap);
	this.__graphics.displayObject = this;
	this.buttonMode = false;
};
$hxClasses["openfl.display.Sprite"] = openfl.display.Sprite;
openfl.display.Sprite.__name__ = ["openfl","display","Sprite"];
openfl.display.Sprite.__super__ = openfl.display.DisplayObjectContainer;
openfl.display.Sprite.prototype = $extend(openfl.display.DisplayObjectContainer.prototype,{
	startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		if(this.__isOnStage()) this.get_stage().__startDrag(this,lockCenter,bounds);
	}
	,stopDrag: function() {
		if(this.__isOnStage()) {
			this.get_stage().__stopDrag(this);
			var l = this.parent.__children.length - 1;
			var obj = this.get_stage();
			var _g1 = 0;
			var _g = this.parent.__children.length;
			while(_g1 < _g) {
				var i = _g1++;
				var result = this.parent.__children[l - i].__getObjectUnderPoint(new openfl.geom.Point(this.get_stage().get_mouseX(),this.get_stage().get_mouseY()));
				if(result != null) obj = result;
			}
			if(obj != this) this.__dropTarget = obj; else this.__dropTarget = this.get_stage();
		}
	}
	,toString: function() {
		return "[Sprite name=" + this.name + " id=" + this.___id + "]";
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,get_dropTarget: function() {
		return this.__dropTarget;
	}
	,get_graphics: function() {
		return this.__graphics;
	}
	,set_useHandCursor: function(cursor) {
		if(cursor == this.useHandCursor) return cursor;
		if(this.__cursorCallbackOver != null) this.removeEventListener(openfl.events.MouseEvent.ROLL_OVER,this.__cursorCallbackOver);
		if(this.__cursorCallbackOut != null) this.removeEventListener(openfl.events.MouseEvent.ROLL_OUT,this.__cursorCallbackOut);
		if(!cursor) openfl.Lib.__setCursor(openfl._Lib.CursorType.Default); else {
			this.__cursorCallbackOver = function(_) {
				openfl.Lib.__setCursor(openfl._Lib.CursorType.Pointer);
			};
			this.__cursorCallbackOut = function(_1) {
				openfl.Lib.__setCursor(openfl._Lib.CursorType.Default);
			};
			this.addEventListener(openfl.events.MouseEvent.ROLL_OVER,this.__cursorCallbackOver);
			this.addEventListener(openfl.events.MouseEvent.ROLL_OUT,this.__cursorCallbackOut);
		}
		this.useHandCursor = cursor;
		return cursor;
	}
	,__class__: openfl.display.Sprite
	,__properties__: $extend(openfl.display.DisplayObjectContainer.prototype.__properties__,{set_useHandCursor:"set_useHandCursor",get_graphics:"get_graphics",get_dropTarget:"get_dropTarget"})
});
var NMEPreloader = function() {
	openfl.display.Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 9;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 3;
	this.outline = new openfl.display.Sprite();
	this.outline.get_graphics().lineStyle(1,color,0.15,true);
	this.outline.get_graphics().drawRoundRect(0,0,width,height,padding * 2,padding * 2);
	this.outline.set_x(x);
	this.outline.set_y(y);
	this.addChild(this.outline);
	this.progress = new openfl.display.Sprite();
	this.progress.get_graphics().beginFill(color,0.35);
	this.progress.get_graphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.set_x(x + padding);
	this.progress.set_y(y + padding);
	this.progress.set_scaleX(0);
	this.addChild(this.progress);
};
$hxClasses["NMEPreloader"] = NMEPreloader;
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = openfl.display.Sprite;
NMEPreloader.prototype = $extend(openfl.display.Sprite.prototype,{
	getBackgroundColor: function() {
		return 16777215;
	}
	,getHeight: function() {
		var height = 0;
		if(height > 0) return height; else return openfl.Lib.get_current().get_stage().get_stageHeight();
	}
	,getWidth: function() {
		var width = 0;
		if(width > 0) return width; else return openfl.Lib.get_current().get_stage().get_stageWidth();
	}
	,onInit: function() {
	}
	,onLoaded: function() {
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.COMPLETE));
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded == 1;
		this.progress.set_scaleX(percentLoaded);
	}
	,__class__: NMEPreloader
});
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) return null; else if(o.__properties__ && (tmp = o.__properties__["get_" + field])) return o[tmp](); else return o[field];
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	if(o.__properties__ && (tmp = o.__properties__["set_" + field])) o[tmp](value); else o[field] = value;
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js.Boot.__instanceof(v,t);
};
Std.string = function(s) {
	return js.Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) return 0; else return Math.floor(Math.random() * x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		this.b += Std.string(x);
	}
	,addSub: function(s,pos,len) {
		if(len == null) this.b += HxOverrides.substr(s,pos,null); else this.b += HxOverrides.substr(s,pos,len);
	}
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) return s.split("\"").join("&quot;").split("'").join("&#039;"); else return s;
};
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	return slen >= elen && HxOverrides.substr(s,slen - elen,elen) == end;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) return s;
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	if(o == null) return null;
	if((o instanceof Array) && o.__enum__ == null) return Array; else return o.__class__;
};
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw "Too many arguments";
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw "No such constructor " + constr;
	if(Reflect.isFunction(f)) {
		if(params == null) throw "Constructor " + constr + " need parameters";
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) throw "Constructor " + constr + " does not need parameters";
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) throw index + " is not a valid enum constructor index";
	return Type.createEnum(e,c,params);
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c;
		if((v instanceof Array) && v.__enum__ == null) c = Array; else c = v.__class__;
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) return true;
	try {
		if(a[0] != b[0]) return false;
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) return false;
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) return false;
	} catch( e1 ) {
		return false;
	}
	return true;
};
var XmlType = $hxClasses["XmlType"] = { __ename__ : ["XmlType"], __constructs__ : [] };
var Xml = function() {
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe.xml.Parser.parse(str);
};
Xml.createElement = function(name) {
	var r = new Xml();
	r.nodeType = Xml.Element;
	r._children = new Array();
	r._attributes = new haxe.ds.StringMap();
	r.set_nodeName(name);
	return r;
};
Xml.createPCData = function(data) {
	var r = new Xml();
	r.nodeType = Xml.PCData;
	r.set_nodeValue(data);
	return r;
};
Xml.createCData = function(data) {
	var r = new Xml();
	r.nodeType = Xml.CData;
	r.set_nodeValue(data);
	return r;
};
Xml.createComment = function(data) {
	var r = new Xml();
	r.nodeType = Xml.Comment;
	r.set_nodeValue(data);
	return r;
};
Xml.createDocType = function(data) {
	var r = new Xml();
	r.nodeType = Xml.DocType;
	r.set_nodeValue(data);
	return r;
};
Xml.createProcessingInstruction = function(data) {
	var r = new Xml();
	r.nodeType = Xml.ProcessingInstruction;
	r.set_nodeValue(data);
	return r;
};
Xml.createDocument = function() {
	var r = new Xml();
	r.nodeType = Xml.Document;
	r._children = new Array();
	return r;
};
Xml.prototype = {
	get_nodeName: function() {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._nodeName;
	}
	,set_nodeName: function(n) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._nodeName = n;
	}
	,get_nodeValue: function() {
		if(this.nodeType == Xml.Element || this.nodeType == Xml.Document) throw "bad nodeType";
		return this._nodeValue;
	}
	,set_nodeValue: function(v) {
		if(this.nodeType == Xml.Element || this.nodeType == Xml.Document) throw "bad nodeType";
		return this._nodeValue = v;
	}
	,get_parent: function() {
		return this._parent;
	}
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._attributes.get(att);
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		this._attributes.set(att,value);
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._attributes.exists(att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		return this._attributes.keys();
	}
	,iterator: function() {
		if(this._children == null) throw "bad nodetype";
		return { cur : 0, x : this._children, hasNext : function() {
			return this.cur < this.x.length;
		}, next : function() {
			return this.x[this.cur++];
		}};
	}
	,elements: function() {
		if(this._children == null) throw "bad nodetype";
		return { cur : 0, x : this._children, hasNext : function() {
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				if(this.x[k].nodeType == Xml.Element) break;
				k += 1;
			}
			this.cur = k;
			return k < l;
		}, next : function() {
			var k1 = this.cur;
			var l1 = this.x.length;
			while(k1 < l1) {
				var n = this.x[k1];
				k1 += 1;
				if(n.nodeType == Xml.Element) {
					this.cur = k1;
					return n;
				}
			}
			return null;
		}};
	}
	,firstChild: function() {
		if(this._children == null) throw "bad nodetype";
		return this._children[0];
	}
	,firstElement: function() {
		if(this._children == null) throw "bad nodetype";
		var cur = 0;
		var l = this._children.length;
		while(cur < l) {
			var n = this._children[cur];
			if(n.nodeType == Xml.Element) return n;
			cur++;
		}
		return null;
	}
	,addChild: function(x) {
		if(this._children == null) throw "bad nodetype";
		if(x._parent != null) HxOverrides.remove(x._parent._children,x);
		x._parent = this;
		this._children.push(x);
	}
	,toString: function() {
		if(this.nodeType == Xml.PCData) return StringTools.htmlEscape(this._nodeValue);
		if(this.nodeType == Xml.CData) return "<![CDATA[" + this._nodeValue + "]]>";
		if(this.nodeType == Xml.Comment) return "<!--" + this._nodeValue + "-->";
		if(this.nodeType == Xml.DocType) return "<!DOCTYPE " + this._nodeValue + ">";
		if(this.nodeType == Xml.ProcessingInstruction) return "<?" + this._nodeValue + "?>";
		var s = new StringBuf();
		if(this.nodeType == Xml.Element) {
			s.b += "<";
			s.b += Std.string(this._nodeName);
			var $it0 = this._attributes.keys();
			while( $it0.hasNext() ) {
				var k = $it0.next();
				s.b += " ";
				if(k == null) s.b += "null"; else s.b += "" + k;
				s.b += "=\"";
				s.add(this._attributes.get(k));
				s.b += "\"";
			}
			if(this._children.length == 0) {
				s.b += "/>";
				return s.b;
			}
			s.b += ">";
		}
		var $it1 = this.iterator();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			s.add(x.toString());
		}
		if(this.nodeType == Xml.Element) {
			s.b += "</";
			s.b += Std.string(this._nodeName);
			s.b += ">";
		}
		return s.b;
	}
	,__class__: Xml
	,__properties__: {get_parent:"get_parent",set_nodeValue:"set_nodeValue",get_nodeValue:"get_nodeValue",set_nodeName:"set_nodeName",get_nodeName:"get_nodeName"}
};
var cocktail = {};
cocktail.api = {};
cocktail.api.CocktailView = function() {
};
$hxClasses["cocktail.api.CocktailView"] = cocktail.api.CocktailView;
cocktail.api.CocktailView.__name__ = ["cocktail","api","CocktailView"];
cocktail.api.CocktailView.prototype = {
	loadHTML: function(html,url) {
		if(this.document != null) this.dispose();
		this.createDocument();
		this.initDocument(this.document,html,url);
	}
	,loadURL: function(url,baseUrl) {
		var _g = this;
		if(this.document != null) this.dispose();
		if(baseUrl == null) baseUrl = url;
		this.createDocument();
		var res = haxe.Resource.getString(url);
		if(res != null) {
			this.initDocument(this.document,res,baseUrl);
			return;
		}
		var nativeHttp = new cocktail.port.base.NativeHttpBase(this.document.timer);
		var onHTMLLoaded = function(e) {
			_g.initDocument(_g.document,nativeHttp.response,baseUrl);
		};
		var onLoadError = function(e1) {
			throw "could not load " + url;
		};
		nativeHttp.addEventListener("load",onHTMLLoaded);
		nativeHttp.addEventListener("error",onLoadError);
		nativeHttp.load(url,"GET",null,null,cocktail.core.http.DataFormatValue.TEXT);
	}
	,dispose: function() {
		if(this.document != null) this.document.dispose();
		if(this.window != null) this.window.dispose();
	}
	,createDocument: function() {
		var platform = this.initPlatform();
		this.document = new cocktail.core.html.HTMLDocument();
		this.window = new cocktail.core.window.Window(this.document,platform);
		this.document.window = this.window;
		this.updateViewport(this.viewport);
	}
	,initPlatform: function() {
		var platform = new cocktail.port.base.PlatformBase();
		this.root = platform.getRootPlatformLayer();
		return platform;
	}
	,initDocument: function(htmlDocument,html,url) {
		if(url != null) htmlDocument.location.set_href(url);
		if(html != null) htmlDocument.set_innerHTML(html);
		this.setPlatformBindings(this.window.platform,this.document);
	}
	,setPlatformBindings: function(platform,htmlDocument) {
		this.setMouseBindings(platform,htmlDocument);
		this.setKeyboardBindings(platform,htmlDocument);
		this.setTouchBindings(platform,htmlDocument);
		this.setFullscreenBindings(platform,htmlDocument);
		this.setViewportBindings(platform,htmlDocument);
		this.setMouseCursorBindings(platform,htmlDocument);
		this.setNavigationBindings(platform,htmlDocument);
	}
	,updateViewport: function(viewport) {
		if(this.window == null) return;
		if(viewport == null) this.window.platform.set_viewport(null); else {
			var rect = new cocktail.core.geom.RectangleVO();
			rect.x = viewport.x;
			rect.y = viewport.y;
			rect.width = viewport.width;
			rect.height = viewport.height;
			this.window.platform.set_viewport(rect);
		}
	}
	,setMouseBindings: function(platform,htmlDocument) {
		platform.mouseListener.onMouseDown = $bind(htmlDocument,htmlDocument.onPlatformMouseEvent);
		platform.mouseListener.onMouseUp = $bind(htmlDocument,htmlDocument.onPlatformMouseEvent);
		platform.mouseListener.onMouseMove = $bind(htmlDocument,htmlDocument.onPlatformMouseMoveEvent);
		platform.mouseListener.onMouseWheel = $bind(htmlDocument,htmlDocument.onPlatformMouseWheelEvent);
		platform.mouseListener.onMouseLeave = $bind(htmlDocument,htmlDocument.onPlatformMouseLeaveEvent);
	}
	,setMouseCursorBindings: function(platform,htmlDocument) {
		this.document.onSetMouseCursor = ($_=platform.mouseListener,$bind($_,$_.setMouseCursor));
	}
	,setKeyboardBindings: function(platform,htmlDocument) {
		platform.keyboardListener.onKeyDown = $bind(this,this.onPlatformKeyDown);
		platform.keyboardListener.onKeyUp = $bind(htmlDocument,htmlDocument.onPlatformKeyUpEvent);
	}
	,setTouchBindings: function(platform,htmlDocument) {
		platform.touchListener.onTouchStart = $bind(htmlDocument,htmlDocument.onPlatformTouchEvent);
		platform.touchListener.onTouchMove = $bind(htmlDocument,htmlDocument.onPlatformTouchEvent);
		platform.touchListener.onTouchEnd = $bind(htmlDocument,htmlDocument.onPlatformTouchEvent);
	}
	,setFullscreenBindings: function(platform,htmlDocument) {
		platform.onFullScreenChange = ($_=this.document,$bind($_,$_.onPlatformFullScreenChange));
		this.document.onEnterFullscreen = $bind(platform,platform.enterFullscreen);
		this.document.onExitFullscreen = $bind(platform,platform.exitFullscreen);
	}
	,setViewportBindings: function(platform,htmlDocument) {
		platform.onResize = ($_=this.document,$bind($_,$_.onPlatformResizeEvent));
		platform.onOrientationChange = ($_=this.document,$bind($_,$_.onPlatformOrientationChangeEvent));
	}
	,setNavigationBindings: function(platform,htmlDocument) {
		this.document.onNavigateToURL = $bind(platform,platform.open);
	}
	,onPlatformKeyDown: function(keyboardEvent) {
		this.document.onPlatformKeyDownEvent(keyboardEvent);
		this.onAfterKeyDownEvent(keyboardEvent,this.document);
	}
	,onAfterKeyDownEvent: function(keyboardEvent,htmlDocument) {
		var _g = Std.parseInt(keyboardEvent.keyChar);
		switch(_g) {
		case 9:
			if(keyboardEvent.defaultPrevented == false) {
				if(keyboardEvent.shiftKey == true) htmlDocument.focusPreviousElement(); else htmlDocument.focusNextElement();
			}
			break;
		case 13:case 32:
			if(keyboardEvent.defaultPrevented == false) {
				if(htmlDocument.get_activeElement() != null) htmlDocument.get_activeElement().triggerActivationBehaviour();
			}
			break;
		}
	}
	,set_viewport: function(value) {
		this.viewport = value;
		this.updateViewport(this.viewport);
		return value;
	}
	,__class__: cocktail.api.CocktailView
	,__properties__: {set_viewport:"set_viewport"}
};
cocktail.core = {};
cocktail.core.boxmodel = {};
cocktail.core.boxmodel.BoxStylesComputer = function() {
};
$hxClasses["cocktail.core.boxmodel.BoxStylesComputer"] = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.BoxStylesComputer.__name__ = ["cocktail","core","boxmodel","BoxStylesComputer"];
cocktail.core.boxmodel.BoxStylesComputer.prototype = {
	measure: function(style,containingBlockData) {
		this.measurePaddings(style,containingBlockData);
		this.measureBordersWidth(style);
		this.measureOutline(style);
		this.measureDimensionsConstraints(style,containingBlockData);
		this.measureDimensionsAndMargins(style,containingBlockData);
		if(style.isPositioned == true) this.measurePositionOffsets(style,containingBlockData);
	}
	,measureDimensionsConstraints: function(style,containingBlockData) {
		style.usedValues.maxHeight = this.getComputedConstrainedDimension(style.getTransitionablePropertyValue(18),containingBlockData.height,containingBlockData.isHeightAuto);
		style.usedValues.minHeight = this.getComputedConstrainedDimension(style.getTransitionablePropertyValue(17),containingBlockData.height,containingBlockData.isHeightAuto,true);
		style.usedValues.maxWidth = this.getComputedConstrainedDimension(style.getTransitionablePropertyValue(20),containingBlockData.width,containingBlockData.isWidthAuto);
		style.usedValues.minWidth = this.getComputedConstrainedDimension(style.getTransitionablePropertyValue(19),containingBlockData.width,containingBlockData.isWidthAuto,true);
	}
	,measurePositionOffsets: function(style,containingBlockData) {
		style.usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
		style.usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
		style.usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
		style.usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
	}
	,measureDimensionsAndMargins: function(style,containingBlockData) {
		style.usedValues.width = this.constrainWidth(style,this.measureWidthAndHorizontalMargins(style,containingBlockData));
		style.usedValues.height = this.constrainHeight(style,this.measureHeightAndVerticalMargins(style,containingBlockData));
	}
	,measurePaddings: function(style,containingBlockData) {
		style.usedValues.paddingLeft = this.getComputedPadding(style.getTransitionablePropertyValue(11),containingBlockData.width);
		style.usedValues.paddingRight = this.getComputedPadding(style.getTransitionablePropertyValue(12),containingBlockData.width);
		style.usedValues.paddingTop = this.getComputedPadding(style.getTransitionablePropertyValue(13),containingBlockData.width);
		style.usedValues.paddingBottom = this.getComputedPadding(style.getTransitionablePropertyValue(14),containingBlockData.width);
	}
	,measureBordersWidth: function(style) {
		style.usedValues.borderLeftWidth = this.getComputedBorderWidth(style.getTransitionablePropertyValue(65));
		style.usedValues.borderTopWidth = this.getComputedBorderWidth(style.getTransitionablePropertyValue(62));
		style.usedValues.borderRightWidth = this.getComputedBorderWidth(style.getTransitionablePropertyValue(63));
		style.usedValues.borderBottomWidth = this.getComputedBorderWidth(style.getTransitionablePropertyValue(64));
	}
	,measureOutline: function(style) {
		style.usedValues.outlineWidth = this.getComputedBorderWidth(style.getComputedOrInitialProperty(82));
	}
	,measureWidthAndHorizontalMargins: function(style,containingBlockData) {
		if(style.hasAutoWidth == true) return this.measureAutoWidth(style,containingBlockData); else return this.measureWidth(style,containingBlockData);
	}
	,measureAutoWidth: function(style,containingBlockData) {
		var usedWidth = 0.0;
		style.usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		style.usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		var computedWidth = this.getComputedAutoWidth(style,containingBlockData);
		var constrainedWidth = this.constrainWidth(style,computedWidth);
		if(constrainedWidth != computedWidth) {
			if(style.hasAutoMarginLeft && style.hasAutoMarginRight) {
				var marginWidth = (containingBlockData.width - style.usedValues.paddingLeft - style.usedValues.paddingRight - style.usedValues.borderLeftWidth - style.usedValues.borderRightWidth - constrainedWidth) / 2;
				style.usedValues.marginLeft = marginWidth;
				style.usedValues.marginRight = marginWidth;
			}
		}
		return computedWidth;
	}
	,measureWidth: function(style,containingBlockData) {
		var computedWidth = this.constrainWidth(style,this.getComputedWidth(style,containingBlockData));
		style.usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,computedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		style.usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,computedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		return computedWidth;
	}
	,measureHeightAndVerticalMargins: function(style,containingBlockData) {
		if(style.hasAutoHeight == true) return this.measureAutoHeight(style,containingBlockData); else return this.measureHeight(style,containingBlockData);
	}
	,measureAutoHeight: function(style,containingBlockData) {
		var computedHeight = this.getComputedAutoHeight(style,containingBlockData);
		style.usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		style.usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		return computedHeight;
	}
	,measureHeight: function(style,containingBlockData) {
		var computedHeight = this.constrainHeight(style,this.getComputedHeight(style,containingBlockData));
		style.usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		style.usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		return computedHeight;
	}
	,getComputedWidth: function(style,containingBlockData) {
		return this.getComputedDimension(style.getTransitionablePropertyValue(15),containingBlockData.width,containingBlockData.isWidthAuto);
	}
	,getComputedAutoWidth: function(style,containingBlockData) {
		return containingBlockData.width - style.usedValues.paddingLeft - style.usedValues.paddingRight - style.usedValues.borderLeftWidth - style.usedValues.borderRightWidth - style.usedValues.marginLeft - style.usedValues.marginRight;
	}
	,getComputedHeight: function(style,containingBlockData) {
		return this.getComputedDimension(style.getTransitionablePropertyValue(16),containingBlockData.height,containingBlockData.isHeightAuto);
	}
	,getComputedAutoHeight: function(style,containingBlockData) {
		return 0;
	}
	,getComputedMarginLeft: function(style,computedWidth,containingBlockData) {
		return this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,computedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
	}
	,getComputedMarginRight: function(style,computedWidth,containingBlockData) {
		return this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,computedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
	}
	,getComputedMarginTop: function(style,computedHeight,containingBlockData) {
		return this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
	}
	,getComputedMarginBottom: function(style,computedHeight,containingBlockData) {
		return this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,computedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
	}
	,getComputedMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		var usedMargin = 0;
		switch(marginStyleValue[1]) {
		case 18:
			var value = marginStyleValue[2];
			usedMargin = value;
			break;
		case 2:
			var value1 = marginStyleValue[2];
			if(isDimensionAuto == true) usedMargin = 0.0; else usedMargin = containingHTMLElementDimension * (value1 * 0.01);
			break;
		case 4:
			var value2 = marginStyleValue[2];
			if(value2 != cocktail.core.css.CSSKeywordValue.AUTO) throw "Illegal keyword value for margin style";
			usedMargin = this.getComputedAutoMargin(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin);
			break;
		default:
			throw "Illegal value for margin style";
		}
		return usedMargin;
	}
	,getComputedAutoMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		var computedMargin = 0;
		if(isHorizontalMargin == false || isDimensionAuto == true) computedMargin = 0.0; else switch(opositeMargin[1]) {
		case 4:
			var value = opositeMargin[2];
			if(value != cocktail.core.css.CSSKeywordValue.AUTO) throw "Illegal keyword value for margin";
			computedMargin = (containingHTMLElementDimension - computedDimension - computedPaddingsAndBordersDimension) / 2;
			break;
		default:
			var opositeComputedMargin = this.getComputedMargin(opositeMargin,marginStyleValue,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin);
			computedMargin = containingHTMLElementDimension - computedDimension - computedPaddingsAndBordersDimension - opositeComputedMargin;
		}
		return computedMargin;
	}
	,getComputedConstrainedDimension: function(constrainedDimension,containingHTMLElementDimension,isContainingDimensionAuto,isMinConstraint) {
		if(isMinConstraint == null) isMinConstraint = false;
		var computedConstraintDimension = 0;
		switch(constrainedDimension[1]) {
		case 18:
			var value = constrainedDimension[2];
			computedConstraintDimension = value;
			break;
		case 2:
			var value1 = constrainedDimension[2];
			if(isContainingDimensionAuto == true) {
				if(isMinConstraint == true) computedConstraintDimension = 0; else computedConstraintDimension = 100000;
			} else computedConstraintDimension = containingHTMLElementDimension * (value1 * 0.01);
			break;
		case 4:
			var value2 = constrainedDimension[2];
			if(value2 != cocktail.core.css.CSSKeywordValue.NONE) throw "Illegal keyword value for dimension constraints style";
			if(isMinConstraint == true) computedConstraintDimension = 0.0; else computedConstraintDimension = 100000;
			break;
		default:
			throw "Illegal value for dimension constraints style";
		}
		return computedConstraintDimension;
	}
	,getComputedPositionOffset: function(positionOffsetStyleValue,containingHTMLElementDimension) {
		var computedPositionOffset = 0.0;
		switch(positionOffsetStyleValue[1]) {
		case 18:
			var value = positionOffsetStyleValue[2];
			computedPositionOffset = value;
			break;
		case 2:
			var value1 = positionOffsetStyleValue[2];
			computedPositionOffset = containingHTMLElementDimension * (value1 * 0.01);
			break;
		default:
		}
		return computedPositionOffset;
	}
	,getComputedDimension: function(dimensionStyleValue,containingHTMLElementDimension,isContainingDimensionAuto) {
		var computedDimensions;
		switch(dimensionStyleValue[1]) {
		case 18:
			var value = dimensionStyleValue[2];
			computedDimensions = value;
			break;
		case 2:
			var value1 = dimensionStyleValue[2];
			computedDimensions = containingHTMLElementDimension * (value1 * 0.01);
			break;
		case 4:
			var value2 = dimensionStyleValue[2];
			if(value2 == cocktail.core.css.CSSKeywordValue.AUTO) computedDimensions = 0; else throw "Illegal keyword value for width or height";
			break;
		default:
			throw "Illegal value for width or height";
		}
		return computedDimensions;
	}
	,getComputedPadding: function(paddingStyleValue,containingHTMLElementDimension) {
		var computedPaddingValue;
		switch(paddingStyleValue[1]) {
		case 18:
			var value = paddingStyleValue[2];
			computedPaddingValue = value;
			break;
		case 2:
			var value1 = paddingStyleValue[2];
			computedPaddingValue = containingHTMLElementDimension * (value1 * 0.01);
			break;
		default:
			throw "Illegal value for padding";
		}
		return computedPaddingValue;
	}
	,getComputedBorderWidth: function(borderWidthStyleValue) {
		var computedBorderWidthValue;
		switch(borderWidthStyleValue[1]) {
		case 18:
			var value = borderWidthStyleValue[2];
			computedBorderWidthValue = value;
			break;
		default:
			throw "illegal value for border width";
		}
		return computedBorderWidthValue;
	}
	,constrainWidth: function(style,usedWidth) {
		var usedValues = style.usedValues;
		if(style.hasMaxWidth == true) {
			if(usedWidth > usedValues.maxWidth) usedWidth = usedValues.maxWidth;
		}
		if(usedWidth < usedValues.minWidth) usedWidth = usedValues.minWidth;
		return usedWidth;
	}
	,constrainHeight: function(style,usedHeight) {
		var usedValues = style.usedValues;
		if(style.hasMaxHeight == true) {
			if(usedHeight > usedValues.maxHeight) usedHeight = usedValues.maxHeight;
		}
		if(usedHeight < usedValues.minHeight) usedHeight = usedValues.minHeight;
		return usedHeight;
	}
	,__class__: cocktail.core.boxmodel.BoxStylesComputer
};
cocktail.core.boxmodel.BlockBoxStylesComputer = function() {
	cocktail.core.boxmodel.BoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.BlockBoxStylesComputer"] = cocktail.core.boxmodel.BlockBoxStylesComputer;
cocktail.core.boxmodel.BlockBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","BlockBoxStylesComputer"];
cocktail.core.boxmodel.BlockBoxStylesComputer.__super__ = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.BlockBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.BoxStylesComputer.prototype,{
	__class__: cocktail.core.boxmodel.BlockBoxStylesComputer
});
cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer = function() {
	cocktail.core.boxmodel.BoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer"] = cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","EmbeddedBlockBoxStylesComputer"];
cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.__super__ = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.BoxStylesComputer.prototype,{
	measureDimensionsAndMargins: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedWidth = this.measureWidthAndHorizontalMargins(style,containingBlockData);
		var usedHeight = this.measureHeightAndVerticalMargins(style,containingBlockData);
		if(style.hasAutoWidth == true && style.hasAutoHeight == true) this.constrainDimensions(style,usedWidth,usedHeight); else {
			usedValues.width = this.constrainWidth(style,usedWidth);
			usedValues.height = this.constrainHeight(style,usedHeight);
		}
	}
	,constrainDimensions: function(style,usedWidth,usedHeight) {
		var usedValues = style.usedValues;
		var maxHeight = usedValues.maxHeight;
		var minHeight = usedValues.minHeight;
		var maxWidth = usedValues.maxWidth;
		var minWidth = usedValues.minWidth;
		var widthSuperiorToMaxWidth = false;
		if(style.hasMaxWidth == true) widthSuperiorToMaxWidth = usedWidth > maxWidth;
		var heightSuperiorToMaxHeight = false;
		if(style.hasMaxHeight == true) heightSuperiorToMaxHeight = usedHeight > maxHeight;
		var widthInferiorToMinWidth = usedWidth < minWidth;
		var heightInferiorToMinHeight = usedHeight < minHeight;
		if(widthSuperiorToMaxWidth == true) {
			if(heightSuperiorToMaxHeight == true) {
				if(maxWidth / usedWidth <= maxHeight / usedHeight) {
					if(minHeight > maxWidth * (usedHeight / usedWidth)) usedHeight = minHeight; else usedHeight = maxWidth * (usedHeight / usedWidth);
					usedWidth = maxWidth;
				}
			} else if(heightInferiorToMinHeight == true) {
				usedWidth = maxWidth;
				usedHeight = minHeight;
			} else {
				if(maxWidth * (usedHeight / usedWidth) > minHeight) usedHeight = maxWidth * (usedHeight / usedWidth); else usedHeight = minHeight;
				usedWidth = maxWidth;
			}
		} else if(widthInferiorToMinWidth == true) {
			if(heightInferiorToMinHeight == true) {
				if(minWidth / usedWidth <= minHeight / usedHeight) {
					if(maxWidth < minHeight * (usedWidth / usedHeight)) usedWidth = maxWidth; else usedWidth = minHeight * (usedWidth / usedHeight);
					usedHeight = minHeight;
				} else {
					if(maxHeight < minWidth * (usedHeight / usedWidth)) usedHeight = maxHeight; else usedHeight = minWidth * (usedHeight / usedWidth);
					usedWidth = minWidth;
				}
			} else if(heightSuperiorToMaxHeight == true) {
				usedWidth = minWidth;
				usedHeight = maxHeight;
			} else {
				if(minWidth * (usedHeight / usedWidth) < maxHeight) usedHeight = minWidth * (usedHeight / usedWidth); else usedHeight = maxHeight;
				usedWidth = minWidth;
			}
		} else if(heightSuperiorToMaxHeight == true) {
			if(maxHeight * (usedWidth / usedHeight) > minWidth) usedWidth = maxHeight * (usedWidth / usedHeight); else usedWidth = minWidth;
			usedHeight = maxHeight;
		} else if(heightInferiorToMinHeight == true) {
			if(minHeight * (usedWidth / usedHeight) < minHeight) usedWidth = minHeight * (usedWidth / usedHeight); else usedWidth = minHeight;
			usedHeight = minHeight;
		}
		usedValues.width = usedWidth;
		usedValues.height = usedHeight;
	}
	,measureAutoWidth: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedWidth = this.getComputedAutoWidth(style,containingBlockData);
		usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		return usedWidth;
	}
	,getComputedAutoWidth: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedWidth = 0.0;
		var embeddedHTMLElement = style.htmlElement;
		if(embeddedHTMLElement.getAttributeNode("width") != null) usedWidth = embeddedHTMLElement.get_width(); else if(style.hasAutoHeight == true) {
			if(embeddedHTMLElement.get_intrinsicWidth() != null) usedWidth = embeddedHTMLElement.get_intrinsicWidth(); else if(embeddedHTMLElement.get_intrinsicHeight() != null && embeddedHTMLElement.get_intrinsicRatio() != null) usedWidth = embeddedHTMLElement.get_intrinsicHeight() * embeddedHTMLElement.get_intrinsicRatio(); else if(embeddedHTMLElement.get_intrinsicRatio() != null) {
				if(containingBlockData.isWidthAuto == false) usedWidth = containingBlockData.width - usedValues.marginLeft - usedValues.marginRight - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth; else usedWidth = 0.0;
			}
		} else {
			var usedHeight = this.constrainHeight(style,this.getComputedDimension(style.getTransitionablePropertyValue(16),containingBlockData.height,containingBlockData.isHeightAuto));
			if(embeddedHTMLElement.get_intrinsicRatio() != null) usedWidth = usedHeight / embeddedHTMLElement.get_intrinsicRatio(); else if(embeddedHTMLElement.get_intrinsicWidth() != null) usedWidth = embeddedHTMLElement.get_intrinsicWidth(); else usedWidth = 300;
		}
		return usedWidth;
	}
	,getComputedAutoHeight: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedHeight = 0.0;
		var embeddedHTMLElement = style.htmlElement;
		if(embeddedHTMLElement.getAttributeNode("height") != null) usedHeight = embeddedHTMLElement.get_height(); else if(style.hasAutoWidth == true) {
			if(embeddedHTMLElement.get_intrinsicHeight() != null) usedHeight = embeddedHTMLElement.get_intrinsicHeight(); else if(embeddedHTMLElement.get_intrinsicWidth() != null && embeddedHTMLElement.get_intrinsicRatio() != null) usedHeight = embeddedHTMLElement.get_intrinsicWidth() * embeddedHTMLElement.get_intrinsicRatio(); else if(embeddedHTMLElement.get_intrinsicRatio() != null) {
			}
		} else if(embeddedHTMLElement.get_intrinsicRatio() != null) {
			var usedWidth = this.constrainWidth(style,this.getComputedDimension(style.getTransitionablePropertyValue(15),containingBlockData.width,containingBlockData.isWidthAuto));
			usedHeight = usedWidth * embeddedHTMLElement.get_intrinsicRatio();
		} else if(embeddedHTMLElement.get_intrinsicHeight() != null) usedHeight = embeddedHTMLElement.get_intrinsicHeight(); else usedHeight = 150;
		return usedHeight;
	}
	,getComputedAutoMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		var usedMargin;
		if(isHorizontalMargin == false) usedMargin = 0.0; else usedMargin = cocktail.core.boxmodel.BoxStylesComputer.prototype.getComputedAutoMargin.call(this,marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,false,computedPaddingsAndBordersDimension,isHorizontalMargin);
		return usedMargin;
	}
	,__class__: cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer
});
cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer = function() {
	cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer"] = cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","EmbeddedInlineBoxStylesComputer"];
cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.__super__ = cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.prototype,{
	getComputedAutoMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		return 0.0;
	}
	,__class__: cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer
});
cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer = function() {
	cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer"] = cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","EmbeddedFloatBoxStylesComputer"];
cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer.__super__ = cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.prototype,{
	__class__: cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer
});
cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer = function() {
	cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer"] = cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","EmbeddedInlineBlockBoxStylesComputer"];
cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer.__super__ = cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer.prototype,{
	__class__: cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer
});
cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer = function() {
	cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer"] = cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","EmbeddedPositionedBoxStylesComputer"];
cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer.__super__ = cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer;
cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer.prototype,{
	measurePositionOffsets: function(style,containingBlockData) {
		this.measureHorizontalPositionOffsets(style,containingBlockData);
		this.measureVerticalPositionOffsets(style,containingBlockData);
	}
	,measureHorizontalPositionOffsets: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		if(style.hasAutoLeft == true || style.hasAutoRight == true) {
			if(style.hasAutoMarginLeft == true) usedValues.marginLeft = 0;
			if(style.hasAutoMarginRight == true) usedValues.marginRight = 0;
			if(style.hasAutoLeft == true && style.hasAutoRight == true) {
				usedValues.left = this.getComputedStaticLeft(style,containingBlockData);
				usedValues.right = containingBlockData.width - usedValues.width - usedValues.marginLeft - usedValues.marginRight - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left;
			} else if(style.hasAutoLeft == true) {
				usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
				usedValues.left = containingBlockData.width - usedValues.width - usedValues.marginLeft - usedValues.marginRight - usedValues.right - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth;
			} else if(style.hasAutoRight == true) {
				usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
				usedValues.right = containingBlockData.width - usedValues.width - usedValues.marginLeft - usedValues.marginRight - usedValues.left - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth;
			}
		} else {
			usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
			usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
			if(style.hasAutoMarginLeft == true && style.hasAutoMarginRight == true) {
				var margin = (containingBlockData.width - usedValues.left - usedValues.right - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth) / 2;
				var usedMargin = (containingBlockData.width - usedValues.width - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right) / 2;
				if(usedMargin >= 0) {
					usedValues.marginLeft = usedMargin;
					usedValues.marginRight = usedMargin;
				} else {
					usedValues.marginLeft = 0;
					usedValues.marginRight = containingBlockData.width - usedValues.width - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right;
				}
				usedValues.marginLeft = 0;
			} else if(style.hasAutoMarginLeft == true) usedValues.marginLeft = containingBlockData.width - usedValues.width - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right - usedValues.marginRight; else if(style.hasAutoMarginRight == true) usedValues.marginRight = containingBlockData.width - usedValues.width - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right - usedValues.marginLeft;
		}
	}
	,measureVerticalPositionOffsets: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		if(style.hasAutoTop == true || style.hasAutoBottom == true) {
			if(style.hasAutoMarginTop == true) usedValues.marginTop = 0;
			if(style.hasAutoMarginBottom == true) usedValues.marginBottom = 0;
			if(style.hasAutoTop == true && style.hasAutoBottom == true) {
				usedValues.top = this.getComputedStaticTop(style,containingBlockData);
				usedValues.bottom = containingBlockData.height - usedValues.height - usedValues.marginTop - usedValues.marginBottom - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top;
			} else if(style.hasAutoTop == true) {
				usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
				usedValues.top = containingBlockData.height - usedValues.height - usedValues.marginTop - usedValues.marginBottom - usedValues.bottom - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth;
			} else if(style.hasAutoBottom == true) {
				usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
				usedValues.bottom = containingBlockData.height - usedValues.height - usedValues.marginTop - usedValues.marginBottom - usedValues.top - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth;
			} else {
				usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
				usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
			}
		} else {
			usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
			usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
			if(style.hasAutoMarginTop == true && style.hasAutoMarginBottom == true) {
				var margin = (containingBlockData.height - usedValues.top - usedValues.bottom - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth) / 2;
				var usedMargin = (containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom) / 2;
				if(usedMargin >= 0) {
					usedValues.marginTop = usedMargin;
					usedValues.marginBottom = usedMargin;
				} else {
					usedValues.marginTop = 0;
					usedValues.marginBottom = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom;
				}
			} else if(style.hasAutoMarginTop == true) usedValues.marginTop = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom - usedValues.marginBottom; else if(style.hasAutoMarginBottom == true) usedValues.marginBottom = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom - usedValues.marginTop;
		}
	}
	,getComputedStaticLeft: function(style,containingBlockData) {
		return style.usedValues.marginLeft;
	}
	,getComputedStaticTop: function(style,containingBlockData) {
		return style.usedValues.marginTop;
	}
	,__class__: cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer
});
cocktail.core.boxmodel.InlineBlockBoxStylesComputer = function() {
	cocktail.core.boxmodel.BoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.InlineBlockBoxStylesComputer"] = cocktail.core.boxmodel.InlineBlockBoxStylesComputer;
cocktail.core.boxmodel.InlineBlockBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","InlineBlockBoxStylesComputer"];
cocktail.core.boxmodel.InlineBlockBoxStylesComputer.__super__ = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.InlineBlockBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.BoxStylesComputer.prototype,{
	getComputedAutoMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		return 0.0;
	}
	,__class__: cocktail.core.boxmodel.InlineBlockBoxStylesComputer
});
cocktail.core.boxmodel.FloatBoxStylesComputer = function() {
	cocktail.core.boxmodel.InlineBlockBoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.FloatBoxStylesComputer"] = cocktail.core.boxmodel.FloatBoxStylesComputer;
cocktail.core.boxmodel.FloatBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","FloatBoxStylesComputer"];
cocktail.core.boxmodel.FloatBoxStylesComputer.__super__ = cocktail.core.boxmodel.InlineBlockBoxStylesComputer;
cocktail.core.boxmodel.FloatBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.InlineBlockBoxStylesComputer.prototype,{
	getComputedAutoWidth: function(style,containingBlockData) {
		return 0.0;
	}
	,__class__: cocktail.core.boxmodel.FloatBoxStylesComputer
});
cocktail.core.boxmodel.InLineBoxStylesComputer = function() {
	cocktail.core.boxmodel.BoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.InLineBoxStylesComputer"] = cocktail.core.boxmodel.InLineBoxStylesComputer;
cocktail.core.boxmodel.InLineBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","InLineBoxStylesComputer"];
cocktail.core.boxmodel.InLineBoxStylesComputer.__super__ = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.InLineBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.BoxStylesComputer.prototype,{
	measureAutoHeight: function(style,containingBlockData) {
		var computedHeight = this.getComputedAutoHeight(style,containingBlockData);
		style.usedValues.marginTop = 0.0;
		style.usedValues.marginBottom = 0.0;
		return computedHeight;
	}
	,measureHeight: function(style,containingBlockData) {
		var computedHeight = this.getComputedHeight(style,containingBlockData);
		style.usedValues.marginTop = 0.0;
		style.usedValues.marginBottom = 0.0;
		return computedHeight;
	}
	,getComputedAutoMargin: function(marginStyleValue,opositeMargin,containingHTMLElementDimension,computedDimension,isDimensionAuto,computedPaddingsAndBordersDimension,isHorizontalMargin) {
		return 0.0;
	}
	,getComputedWidth: function(style,containingBlockData) {
		return 0.0;
	}
	,getComputedHeight: function(style,containingBlockData) {
		return 0.0;
	}
	,__class__: cocktail.core.boxmodel.InLineBoxStylesComputer
});
cocktail.core.boxmodel.PositionedBoxStylesComputer = function() {
	cocktail.core.boxmodel.BoxStylesComputer.call(this);
};
$hxClasses["cocktail.core.boxmodel.PositionedBoxStylesComputer"] = cocktail.core.boxmodel.PositionedBoxStylesComputer;
cocktail.core.boxmodel.PositionedBoxStylesComputer.__name__ = ["cocktail","core","boxmodel","PositionedBoxStylesComputer"];
cocktail.core.boxmodel.PositionedBoxStylesComputer.__super__ = cocktail.core.boxmodel.BoxStylesComputer;
cocktail.core.boxmodel.PositionedBoxStylesComputer.prototype = $extend(cocktail.core.boxmodel.BoxStylesComputer.prototype,{
	measurePositionOffsets: function(style,containingBlockData) {
	}
	,measureAutoWidth: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedWidth = 0.0;
		if(style.hasAutoMarginLeft == true) usedValues.marginLeft = 0; else usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		if(style.hasAutoMarginRight == true) usedValues.marginRight = 0; else usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
		if(style.hasAutoLeft == false && style.hasAutoRight == false) {
			usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
			usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
			usedWidth = containingBlockData.width - usedValues.marginLeft - usedValues.left - usedValues.right - usedValues.marginRight - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth;
		} else {
			if(style.hasAutoLeft == true) usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width); else if(style.hasAutoRight == true) usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
			usedWidth = 0;
		}
		return usedWidth;
	}
	,measureWidth: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedWidth = this.getComputedWidth(style,containingBlockData);
		if(style.hasAutoLeft == false && style.hasAutoRight == false) {
			usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
			usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
			if(style.hasAutoMarginLeft == true && style.hasAutoMarginRight == true) {
				var usedMargin = (containingBlockData.width - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right) / 2;
				if(usedMargin >= 0) {
					usedValues.marginLeft = usedMargin;
					usedValues.marginRight = usedMargin;
				} else {
					usedValues.marginLeft = 0;
					usedValues.marginRight = containingBlockData.width - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right;
				}
			} else if(style.hasAutoMarginLeft == true) {
				usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
				usedValues.marginLeft = containingBlockData.width - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right - usedValues.marginRight;
			} else if(style.hasAutoMarginRight == true) {
				usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
				usedValues.marginRight = containingBlockData.width - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left - usedValues.right - usedValues.marginLeft;
			} else {
				usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
				usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
			}
		} else {
			if(style.hasAutoMarginLeft == true) usedValues.marginLeft = 0; else usedValues.marginLeft = this.getComputedMargin(style.getTransitionablePropertyValue(6),style.getTransitionablePropertyValue(7),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
			if(style.hasAutoMarginRight == true) usedValues.marginRight = 0; else usedValues.marginRight = this.getComputedMargin(style.getTransitionablePropertyValue(7),style.getTransitionablePropertyValue(6),containingBlockData.width,usedWidth,style.hasAutoWidth,style.usedValues.paddingRight + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth + style.usedValues.borderRightWidth,true);
			if(style.hasAutoLeft == true && style.hasAutoRight == true) {
				usedValues.left = this.getComputedStaticLeft(style,containingBlockData);
				usedValues.right = containingBlockData.width - usedValues.marginLeft - usedValues.marginRight - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left;
			} else if(style.hasAutoLeft == true) {
				usedValues.right = this.getComputedPositionOffset(style.getTransitionablePropertyValue(23),containingBlockData.width);
				usedValues.left = containingBlockData.width - usedValues.marginLeft - usedValues.marginRight - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.right;
			} else if(style.hasAutoRight == true) {
				usedValues.left = this.getComputedPositionOffset(style.getTransitionablePropertyValue(22),containingBlockData.width);
				usedValues.right = containingBlockData.width - usedValues.marginLeft - usedValues.marginRight - usedWidth - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.left;
			}
		}
		return usedWidth;
	}
	,measureAutoHeight: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedHeight = 0.0;
		if(style.hasAutoMarginTop == true) usedValues.marginTop = 0; else usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		if(style.hasAutoMarginBottom == true) usedValues.marginBottom = 0; else usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
		if(style.hasAutoTop == false && style.hasAutoBottom == false) {
			usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
			usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
			usedHeight = containingBlockData.height - usedValues.marginTop - usedValues.top - usedValues.bottom - usedValues.marginBottom - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth;
		} else if(style.hasAutoBottom == true) {
			usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
			usedValues.bottom = containingBlockData.height - usedValues.marginTop - usedValues.marginBottom - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top;
		} else if(style.hasAutoTop == true) {
			usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
			usedValues.top = containingBlockData.height - usedValues.marginTop - usedValues.marginBottom - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.bottom;
		}
		return usedHeight;
	}
	,measureHeight: function(style,containingBlockData) {
		var usedValues = style.usedValues;
		var usedHeight = this.getComputedHeight(style,containingBlockData);
		if(style.hasAutoTop == false && style.hasAutoBottom == false) {
			usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
			usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
			if(style.hasAutoMarginTop == true && style.hasAutoMarginBottom == true) {
				var usedMargin = (containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom) / 2;
				if(usedMargin >= 0) {
					usedValues.marginTop = usedMargin;
					usedValues.marginBottom = usedMargin;
				} else {
					usedValues.marginBottom = 0;
					usedValues.marginTop = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.bottom - usedValues.top;
				}
			} else if(style.hasAutoMarginTop == true) {
				usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
				usedValues.marginTop = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom - usedValues.marginBottom;
			} else if(style.hasAutoMarginBottom == true) {
				usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
				usedValues.marginBottom = containingBlockData.height - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top - usedValues.bottom - usedValues.marginTop;
			} else {
				usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
				usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
			}
		} else {
			if(style.hasAutoMarginTop == true) usedValues.marginTop = 0; else usedValues.marginTop = this.getComputedMargin(style.getTransitionablePropertyValue(8),style.getTransitionablePropertyValue(9),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
			if(style.hasAutoMarginBottom == true) usedValues.marginBottom = 0; else usedValues.marginBottom = this.getComputedMargin(style.getTransitionablePropertyValue(9),style.getTransitionablePropertyValue(8),containingBlockData.height,usedHeight,style.hasAutoHeight,style.usedValues.paddingTop + style.usedValues.paddingBottom + style.usedValues.borderTopWidth + style.usedValues.borderBottomWidth,false);
			if(style.hasAutoTop == true && style.hasAutoBottom == true) {
				usedValues.top = this.getComputedStaticTop(style,containingBlockData);
				usedValues.bottom = containingBlockData.height - usedValues.marginTop - usedValues.marginBottom - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top;
			} else if(style.hasAutoBottom == true) {
				usedValues.top = this.getComputedPositionOffset(style.getTransitionablePropertyValue(21),containingBlockData.height);
				usedValues.bottom = containingBlockData.height - usedValues.marginTop - usedValues.marginBottom - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.top;
			} else if(style.hasAutoTop == true) {
				usedValues.bottom = this.getComputedPositionOffset(style.getTransitionablePropertyValue(24),containingBlockData.height);
				usedValues.top = containingBlockData.height - usedValues.marginTop - usedValues.marginBottom - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth - usedValues.bottom;
			}
		}
		return usedHeight;
	}
	,getComputedStaticLeft: function(style,containingBlockData) {
		return style.usedValues.marginLeft;
	}
	,getComputedStaticTop: function(style,containingBlockData) {
		return style.usedValues.marginTop;
	}
	,__class__: cocktail.core.boxmodel.PositionedBoxStylesComputer
});
cocktail.core.event = {};
cocktail.core.event.EventTarget = function() {
};
$hxClasses["cocktail.core.event.EventTarget"] = cocktail.core.event.EventTarget;
cocktail.core.event.EventTarget.__name__ = ["cocktail","core","event","EventTarget"];
cocktail.core.event.EventTarget.prototype = {
	dispatchEvent: function(evt) {
		evt.currentTarget = this;
		if(evt.dispatched == false) {
			evt.target = this;
			evt.dispatched = true;
			var targetAncestors = this.getTargetAncestors();
			evt.eventPhase = 1;
			targetAncestors.reverse();
			var length = targetAncestors.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				targetAncestors[i].dispatchEvent(evt);
				if(this.shouldStopEventPropagation(evt) == true) return this.endEventDispatching(evt);
			}
			evt.eventPhase = 2;
			this.dispatchEvent(evt);
			if(this.shouldStopEventPropagation(evt) == true) return this.endEventDispatching(evt);
			if(evt.bubbles == true) {
				evt.eventPhase = 3;
				targetAncestors.reverse();
				var length1 = targetAncestors.length;
				var _g1 = 0;
				while(_g1 < length1) {
					var i1 = _g1++;
					targetAncestors[i1].dispatchEvent(evt);
					if(this.shouldStopEventPropagation(evt) == true) return this.endEventDispatching(evt);
				}
				return this.endEventDispatching(evt);
			}
		} else if(this._registeredEventListeners != null) {
			var eventRegisteredForEventType = this._registeredEventListeners.get(evt.type);
			if(eventRegisteredForEventType != null) this.doDispatchEvent(eventRegisteredForEventType,evt);
		}
		return evt.defaultPrevented;
	}
	,addEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this._registeredEventListeners == null) this._registeredEventListeners = new haxe.ds.StringMap();
		if(this._registeredEventListeners.exists(type) == false) {
			var value = new Array();
			this._registeredEventListeners.set(type,value);
		}
		var eventListener = new cocktail.core.event.EventListener(type,listener,useCapture);
		this._registeredEventListeners.get(type).push(eventListener);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this._registeredEventListeners == null) return;
		var registeredEventListenersForType = this._registeredEventListeners.get(type);
		if(registeredEventListenersForType != null) {
			var newEventListeners = new Array();
			var length = registeredEventListenersForType.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				var eventListener = registeredEventListenersForType[i];
				if(eventListener.eventType != type || eventListener.useCapture != useCapture || eventListener.listener != listener) newEventListeners.push(eventListener);
			}
			this._registeredEventListeners.set(type,newEventListeners);
		}
	}
	,doDispatchEvent: function(eventListeners,evt) {
		var length = eventListeners.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var eventListener = eventListeners[i];
			if(evt.eventPhase == 1) {
				if(eventListener.useCapture == true) eventListener.handleEvent(evt);
			} else if(evt.eventPhase == 3) {
				if(eventListener.useCapture == false) eventListener.handleEvent(evt);
			} else if(evt.eventPhase == 2) eventListener.handleEvent(evt);
			if(evt.immediatePropagationStopped == true) return;
		}
	}
	,shouldStopEventPropagation: function(evt) {
		return evt.propagationStopped == true || evt.immediatePropagationStopped == true;
	}
	,endEventDispatching: function(evt) {
		var defaultPrevented = evt.defaultPrevented;
		this.executeDefaultActionIfNeeded(defaultPrevented,evt);
		return defaultPrevented;
	}
	,getTargetAncestors: function() {
		this._targetAncestors = new Array();
		return this._targetAncestors;
	}
	,executeDefaultActionIfNeeded: function(defaultPrevented,event) {
	}
	,__class__: cocktail.core.event.EventTarget
};
cocktail.core.config = {};
cocktail.core.config.Config = function() {
	cocktail.core.event.EventTarget.call(this);
	this.touchMovePreventClickDistance = 10;
	this.useStageVideoIfAvailable = true;
	this.defaultFont = "serif";
	this.defaultFontColor = "#000000";
	this.xxSmallFontSize = 9;
	this.xSmallFontSize = 10;
	this.smallFontSize = 13;
	this.mediumFontSize = 16;
	this.largeFontSize = 18;
	this.xLargeFontSize = 24;
	this.xxLargeFontSize = 32;
	this.thinBorderWidth = 1;
	this.mediumBorderWidth = 3;
	this.thickBorderWidth = 5;
	this.enableCompositing = false;
	this.objectBelowWhenNoCompositing = true;
	this.videoBelowWhenNoCompositing = true;
};
$hxClasses["cocktail.core.config.Config"] = cocktail.core.config.Config;
cocktail.core.config.Config.__name__ = ["cocktail","core","config","Config"];
cocktail.core.config.Config.getInstance = function() {
	if(cocktail.core.config.Config._instance == null) cocktail.core.config.Config._instance = new cocktail.core.config.Config();
	return cocktail.core.config.Config._instance;
};
cocktail.core.config.Config.__super__ = cocktail.core.event.EventTarget;
cocktail.core.config.Config.prototype = $extend(cocktail.core.event.EventTarget.prototype,{
	updateConfig: function(name,value) {
		var didUpdate = false;
		switch(name) {
		case "useStageVideoIfAvailable":case "enableCompositing":case "objectBelowWhenNoCompositing":case "videoBelowWhenNoCompositing":
			this.updateBoolParam(name,value);
			didUpdate = true;
			break;
		case "touchMovePreventClickDistance":case "xxSmallFontSize":case "xSmallFontSize":case "smallFontSize":case "mediumFontSize":case "largeFontSize":case "xLargeFontSize":case "xxLargeFontSize":case "thinBorderWidth":case "mediumBorderWidth":case "thickBorderWidth":
			this.updateIntParam(name,value);
			didUpdate = true;
			break;
		case "defaultFont":case "defaultFontColor":
			this.updateStringParam(name,value);
			didUpdate = true;
			break;
		}
		if(didUpdate == true) {
			var configEvent = new cocktail.core.event.CustomEvent();
			configEvent.initCustomEvent("configchanged",false,false,name);
			this.dispatchEvent(configEvent);
		}
	}
	,updateBoolParam: function(name,value) {
		if(value == "true") this[name] = true; else if(value == "false") this[name] = false;
	}
	,updateIntParam: function(name,value) {
		var $int = Std.parseInt(value);
		if($int != null) this[name] = $int;
	}
	,updateStringParam: function(name,value) {
		this[name] = value;
	}
	,__class__: cocktail.core.config.Config
});
cocktail.core.css = {};
cocktail.core.css.CSSConstants = function() {
};
$hxClasses["cocktail.core.css.CSSConstants"] = cocktail.core.css.CSSConstants;
cocktail.core.css.CSSConstants.__name__ = ["cocktail","core","css","CSSConstants"];
cocktail.core.css.CSSConstants.getPropertyIndexFromName = function(name) {
	switch(name) {
	case "display":
		return 0;
	case "position":
		return 1;
	case "float":
		return 2;
	case "clear":
		return 3;
	case "z-index":
		return 4;
	case "margin":
		return 5;
	case "margin-left":
		return 6;
	case "margin-top":
		return 8;
	case "margin-right":
		return 7;
	case "margin-bottom":
		return 9;
	case "padding":
		return 10;
	case "padding-left":
		return 11;
	case "padding-right":
		return 12;
	case "padding-top":
		return 13;
	case "padding-bottom":
		return 14;
	case "width":
		return 15;
	case "height":
		return 16;
	case "min-height":
		return 17;
	case "max-height":
		return 18;
	case "min-width":
		return 19;
	case "max-width":
		return 20;
	case "top":
		return 21;
	case "right":
		return 23;
	case "bottom":
		return 24;
	case "left":
		return 22;
	case "background-color":
		return 25;
	case "background-image":
		return 26;
	case "background-repeat":
		return 27;
	case "background-origin":
		return 28;
	case "background-size":
		return 29;
	case "background-position":
		return 30;
	case "background-clip":
		return 31;
	case "background-attachment":
		return 32;
	case "background":
		return 33;
	case "font-size":
		return 34;
	case "font-weight":
		return 35;
	case "font-style":
		return 36;
	case "font-family":
		return 37;
	case "font-variant":
		return 38;
	case "font":
		return 39;
	case "color":
		return 40;
	case "line-height":
		return 41;
	case "text-transform":
		return 42;
	case "letter-spacing":
		return 43;
	case "word-spacing":
		return 44;
	case "white-space":
		return 45;
	case "text-align":
		return 46;
	case "text-indent":
		return 47;
	case "vertical-align":
		return 48;
	case "visibility":
		return 49;
	case "overflow":
		return 50;
	case "overflow-x":
		return 51;
	case "overflow-y":
		return 52;
	case "opacity":
		return 53;
	case "cursor":
		return 54;
	case "transition-duration":
		return 55;
	case "transition-delay":
		return 56;
	case "transition-property":
		return 57;
	case "transition-timing-function":
		return 58;
	case "transition":
		return 59;
	case "transform-origin":
		return 60;
	case "transform":
		return 61;
	case "border-top-width":
		return 62;
	case "border-right-width":
		return 63;
	case "border-bottom-width":
		return 64;
	case "border-left-width":
		return 65;
	case "border-width":
		return 66;
	case "border-top-color":
		return 67;
	case "border-right-color":
		return 68;
	case "border-bottom-color":
		return 69;
	case "border-left-color":
		return 70;
	case "border-color":
		return 71;
	case "border-top-style":
		return 72;
	case "border-right-style":
		return 73;
	case "border-bottom-style":
		return 74;
	case "border-left-style":
		return 75;
	case "border-style":
		return 76;
	case "border-top":
		return 77;
	case "border-right":
		return 78;
	case "border-bottom":
		return 79;
	case "border-left":
		return 80;
	case "border":
		return 81;
	case "outline-width":
		return 82;
	case "outline-style":
		return 83;
	case "outline-color":
		return 84;
	case "outline":
		return 85;
	case "text-decoration":
		return 86;
	default:
		return -1;
	}
};
cocktail.core.css.CSSConstants.getPropertyNameFromIndex = function(index) {
	switch(index) {
	case 0:
		return "display";
	case 1:
		return "position";
	case 2:
		return "float";
	case 3:
		return "clear";
	case 4:
		return "z-index";
	case 5:
		return "margin";
	case 6:
		return "margin-left";
	case 8:
		return "margin-top";
	case 7:
		return "margin-right";
	case 9:
		return "margin-bottom";
	case 10:
		return "padding";
	case 11:
		return "padding-left";
	case 12:
		return "padding-right";
	case 13:
		return "padding-top";
	case 14:
		return "padding-bottom";
	case 15:
		return "width";
	case 16:
		return "height";
	case 17:
		return "min-height";
	case 18:
		return "max-height";
	case 19:
		return "min-width";
	case 20:
		return "max-width";
	case 21:
		return "top";
	case 23:
		return "right";
	case 24:
		return "bottom";
	case 22:
		return "left";
	case 25:
		return "background-color";
	case 26:
		return "background-image";
	case 27:
		return "background-repeat";
	case 28:
		return "background-origin";
	case 29:
		return "background-size";
	case 30:
		return "background-position";
	case 31:
		return "background-clip";
	case 32:
		return "background-attachment";
	case 33:
		return "background";
	case 34:
		return "font-size";
	case 35:
		return "font-weight";
	case 36:
		return "font-style";
	case 37:
		return "font-family";
	case 38:
		return "font-variant";
	case 39:
		return "font";
	case 40:
		return "color";
	case 41:
		return "line-height";
	case 42:
		return "text-transform";
	case 43:
		return "letter-spacing";
	case 44:
		return "word-spacing";
	case 45:
		return "white-space";
	case 46:
		return "text-align";
	case 47:
		return "text-indent";
	case 48:
		return "vertical-align";
	case 49:
		return "visibility";
	case 50:
		return "overflow";
	case 51:
		return "overflow-x";
	case 52:
		return "overflow-y";
	case 53:
		return "opacity";
	case 54:
		return "cursor";
	case 55:
		return "transition-duration";
	case 56:
		return "transition-delay";
	case 57:
		return "transition-property";
	case 58:
		return "transition-timing-function";
	case 59:
		return "transition";
	case 60:
		return "transform-origin";
	case 61:
		return "transform";
	case 62:
		return "border-top-width";
	case 63:
		return "border-right-width";
	case 64:
		return "border-bottom-width";
	case 65:
		return "border-left-width";
	case 66:
		return "border-width";
	case 67:
		return "border-top-color";
	case 68:
		return "border-right-color";
	case 69:
		return "border-bottom-color";
	case 70:
		return "border-left-color";
	case 71:
		return "border-color";
	case 72:
		return "border-top-style";
	case 73:
		return "border-right-style";
	case 74:
		return "border-bottom-style";
	case 75:
		return "border-left-style";
	case 76:
		return "border-style";
	case 77:
		return "border-top";
	case 78:
		return "border-right";
	case 79:
		return "border-bottom";
	case 80:
		return "border-left";
	case 81:
		return "border";
	case 82:
		return "outline-width";
	case 83:
		return "outline-style";
	case 84:
		return "outline-color";
	case 85:
		return "outline";
	case 86:
		return "text-decoration";
	default:
		throw "unknown property";
	}
};
cocktail.core.css.CSSConstants.prototype = {
	__class__: cocktail.core.css.CSSConstants
};
cocktail.core.css.TypedPropertyVO = function() {
};
$hxClasses["cocktail.core.css.TypedPropertyVO"] = cocktail.core.css.TypedPropertyVO;
cocktail.core.css.TypedPropertyVO.__name__ = ["cocktail","core","css","TypedPropertyVO"];
cocktail.core.css.TypedPropertyVO.prototype = {
	__class__: cocktail.core.css.TypedPropertyVO
};
cocktail.core.css.PropertyVO = function() {
	this.important = false;
};
$hxClasses["cocktail.core.css.PropertyVO"] = cocktail.core.css.PropertyVO;
cocktail.core.css.PropertyVO.__name__ = ["cocktail","core","css","PropertyVO"];
cocktail.core.css.PropertyVO.prototype = {
	__class__: cocktail.core.css.PropertyVO
};
cocktail.core.css.StyleDeclarationVO = function() {
};
$hxClasses["cocktail.core.css.StyleDeclarationVO"] = cocktail.core.css.StyleDeclarationVO;
cocktail.core.css.StyleDeclarationVO.__name__ = ["cocktail","core","css","StyleDeclarationVO"];
cocktail.core.css.StyleDeclarationVO.prototype = {
	__class__: cocktail.core.css.StyleDeclarationVO
};
cocktail.core.css.MatchedPseudoClassesVO = function(hover,focus,active,link,enabled,disabled,checked,hasId,hasClasses,nodeId,nodeClassList,nodeType) {
	this.hover = hover;
	this.focus = focus;
	this.active = active;
	this.link = link;
	this.enabled = enabled;
	this.disabled = disabled;
	this.checked = checked;
	this.hasId = hasId;
	this.hasClasses = false;
	this.nodeId = nodeId;
	this.nodeClassList = nodeClassList;
	this.nodeType = nodeType;
};
$hxClasses["cocktail.core.css.MatchedPseudoClassesVO"] = cocktail.core.css.MatchedPseudoClassesVO;
cocktail.core.css.MatchedPseudoClassesVO.__name__ = ["cocktail","core","css","MatchedPseudoClassesVO"];
cocktail.core.css.MatchedPseudoClassesVO.prototype = {
	__class__: cocktail.core.css.MatchedPseudoClassesVO
};
cocktail.core.css.PropertyOriginValue = $hxClasses["cocktail.core.css.PropertyOriginValue"] = { __ename__ : ["cocktail","core","css","PropertyOriginValue"], __constructs__ : ["AUTHOR","USER_AGENT"] };
cocktail.core.css.PropertyOriginValue.AUTHOR = ["AUTHOR",0];
cocktail.core.css.PropertyOriginValue.AUTHOR.toString = $estr;
cocktail.core.css.PropertyOriginValue.AUTHOR.__enum__ = cocktail.core.css.PropertyOriginValue;
cocktail.core.css.PropertyOriginValue.USER_AGENT = ["USER_AGENT",1];
cocktail.core.css.PropertyOriginValue.USER_AGENT.toString = $estr;
cocktail.core.css.PropertyOriginValue.USER_AGENT.__enum__ = cocktail.core.css.PropertyOriginValue;
cocktail.core.css.UsedValuesVO = function() {
	this.minHeight = 0.0;
	this.maxHeight = 0.0;
	this.minWidth = 0.0;
	this.maxWidth = 0.0;
	this.width = 0.0;
	this.height = 0.0;
	this.marginLeft = 0.0;
	this.marginRight = 0.0;
	this.marginTop = 0.0;
	this.marginBottom = 0.0;
	this.paddingLeft = 0.0;
	this.paddingRight = 0.0;
	this.paddingTop = 0.0;
	this.paddingBottom = 0.0;
	this.left = 0.0;
	this.right = 0.0;
	this.top = 0.0;
	this.bottom = 0.0;
	this.textIndent = 0;
	this.lineHeight = 0.0;
	this.letterSpacing = 0.0;
	this.color = new cocktail.core.css.ColorVO(0,1.0);
	this.transformOrigin = new cocktail.core.geom.PointVO(0.0,0.0);
	this.transform = new cocktail.core.geom.Matrix();
	this.backgroundColor = new cocktail.core.css.ColorVO(0,0.0);
	this.borderLeftWidth = 0.0;
	this.borderRightWidth = 0.0;
	this.borderTopWidth = 0.0;
	this.borderBottomWidth = 0.0;
	this.borderLeftColor = new cocktail.core.css.ColorVO(0,1.0);
	this.borderRightColor = new cocktail.core.css.ColorVO(0,1.0);
	this.borderTopColor = new cocktail.core.css.ColorVO(0,1.0);
	this.borderBottomColor = new cocktail.core.css.ColorVO(0,1.0);
	this.outlineWidth = 0.0;
	this.outlineColor = new cocktail.core.css.ColorVO(0,1.0);
};
$hxClasses["cocktail.core.css.UsedValuesVO"] = cocktail.core.css.UsedValuesVO;
cocktail.core.css.UsedValuesVO.__name__ = ["cocktail","core","css","UsedValuesVO"];
cocktail.core.css.UsedValuesVO.prototype = {
	__class__: cocktail.core.css.UsedValuesVO
};
cocktail.core.css.ColorVO = function(color,alpha) {
	this.color = color;
	this.alpha = alpha;
};
$hxClasses["cocktail.core.css.ColorVO"] = cocktail.core.css.ColorVO;
cocktail.core.css.ColorVO.__name__ = ["cocktail","core","css","ColorVO"];
cocktail.core.css.ColorVO.prototype = {
	__class__: cocktail.core.css.ColorVO
};
cocktail.core.css.SelectorSpecificityVO = function() {
	this.idSelectorsNumber = 0;
	this.classAttributesAndPseudoClassesNumber = 0;
	this.typeAndPseudoElementsNumber = 0;
};
$hxClasses["cocktail.core.css.SelectorSpecificityVO"] = cocktail.core.css.SelectorSpecificityVO;
cocktail.core.css.SelectorSpecificityVO.__name__ = ["cocktail","core","css","SelectorSpecificityVO"];
cocktail.core.css.SelectorSpecificityVO.prototype = {
	__class__: cocktail.core.css.SelectorSpecificityVO
};
cocktail.core.css.SelectorVO = function(components,pseudoElement,beginsWithClass,firstClass,beginsWithId,firstId,beginsWithType,firstType,isSimpleClassSelector,isSimpleIdSelector,isSimpleTypeSelector) {
	this.components = components;
	this.pseudoElement = pseudoElement;
	this.beginsWithClass = beginsWithClass;
	this.firstClass = firstClass;
	this.beginsWithId = beginsWithId;
	this.firstId = firstId;
	this.beginsWithType = beginsWithType;
	this.firstType = firstType;
	this.isSimpleClassSelector = isSimpleClassSelector;
	this.isSimpleIdSelector = isSimpleIdSelector;
	this.isSimpleTypeSelector = isSimpleTypeSelector;
};
$hxClasses["cocktail.core.css.SelectorVO"] = cocktail.core.css.SelectorVO;
cocktail.core.css.SelectorVO.__name__ = ["cocktail","core","css","SelectorVO"];
cocktail.core.css.SelectorVO.prototype = {
	__class__: cocktail.core.css.SelectorVO
};
cocktail.core.css.SimpleSelectorSequenceVO = function(startValue,simpleSelectors) {
	this.startValue = startValue;
	this.simpleSelectors = simpleSelectors;
};
$hxClasses["cocktail.core.css.SimpleSelectorSequenceVO"] = cocktail.core.css.SimpleSelectorSequenceVO;
cocktail.core.css.SimpleSelectorSequenceVO.__name__ = ["cocktail","core","css","SimpleSelectorSequenceVO"];
cocktail.core.css.SimpleSelectorSequenceVO.prototype = {
	__class__: cocktail.core.css.SimpleSelectorSequenceVO
};
cocktail.core.css.SelectorComponentValue = $hxClasses["cocktail.core.css.SelectorComponentValue"] = { __ename__ : ["cocktail","core","css","SelectorComponentValue"], __constructs__ : ["SIMPLE_SELECTOR_SEQUENCE","COMBINATOR"] };
cocktail.core.css.SelectorComponentValue.SIMPLE_SELECTOR_SEQUENCE = function(value) { var $x = ["SIMPLE_SELECTOR_SEQUENCE",0,value]; $x.__enum__ = cocktail.core.css.SelectorComponentValue; $x.toString = $estr; return $x; };
cocktail.core.css.SelectorComponentValue.COMBINATOR = function(value) { var $x = ["COMBINATOR",1,value]; $x.__enum__ = cocktail.core.css.SelectorComponentValue; $x.toString = $estr; return $x; };
cocktail.core.css.SimpleSelectorSequenceItemValue = $hxClasses["cocktail.core.css.SimpleSelectorSequenceItemValue"] = { __ename__ : ["cocktail","core","css","SimpleSelectorSequenceItemValue"], __constructs__ : ["ATTRIBUTE","PSEUDO_CLASS","CSS_CLASS","ID"] };
cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE = function(value) { var $x = ["ATTRIBUTE",0,value]; $x.__enum__ = cocktail.core.css.SimpleSelectorSequenceItemValue; $x.toString = $estr; return $x; };
cocktail.core.css.SimpleSelectorSequenceItemValue.PSEUDO_CLASS = function(value) { var $x = ["PSEUDO_CLASS",1,value]; $x.__enum__ = cocktail.core.css.SimpleSelectorSequenceItemValue; $x.toString = $estr; return $x; };
cocktail.core.css.SimpleSelectorSequenceItemValue.CSS_CLASS = function(value) { var $x = ["CSS_CLASS",2,value]; $x.__enum__ = cocktail.core.css.SimpleSelectorSequenceItemValue; $x.toString = $estr; return $x; };
cocktail.core.css.SimpleSelectorSequenceItemValue.ID = function(value) { var $x = ["ID",3,value]; $x.__enum__ = cocktail.core.css.SimpleSelectorSequenceItemValue; $x.toString = $estr; return $x; };
cocktail.core.css.SimpleSelectorSequenceStartValue = $hxClasses["cocktail.core.css.SimpleSelectorSequenceStartValue"] = { __ename__ : ["cocktail","core","css","SimpleSelectorSequenceStartValue"], __constructs__ : ["UNIVERSAL","TYPE"] };
cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL = ["UNIVERSAL",0];
cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL.toString = $estr;
cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL.__enum__ = cocktail.core.css.SimpleSelectorSequenceStartValue;
cocktail.core.css.SimpleSelectorSequenceStartValue.TYPE = function(value) { var $x = ["TYPE",1,value]; $x.__enum__ = cocktail.core.css.SimpleSelectorSequenceStartValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue = $hxClasses["cocktail.core.css.AttributeSelectorValue"] = { __ename__ : ["cocktail","core","css","AttributeSelectorValue"], __constructs__ : ["ATTRIBUTE","ATTRIBUTE_VALUE","ATTRIBUTE_LIST","ATTRIBUTE_VALUE_BEGINS","ATTRIBUTE_VALUE_ENDS","ATTRIBUTE_VALUE_CONTAINS","ATTRIBUTE_VALUE_BEGINS_HYPHEN_LIST"] };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE = function(value) { var $x = ["ATTRIBUTE",0,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE = function(name,value) { var $x = ["ATTRIBUTE_VALUE",1,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_LIST = function(name,value) { var $x = ["ATTRIBUTE_LIST",2,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_BEGINS = function(name,value) { var $x = ["ATTRIBUTE_VALUE_BEGINS",3,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_ENDS = function(name,value) { var $x = ["ATTRIBUTE_VALUE_ENDS",4,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_CONTAINS = function(name,value) { var $x = ["ATTRIBUTE_VALUE_CONTAINS",5,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_BEGINS_HYPHEN_LIST = function(name,value) { var $x = ["ATTRIBUTE_VALUE_BEGINS_HYPHEN_LIST",6,name,value]; $x.__enum__ = cocktail.core.css.AttributeSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue = $hxClasses["cocktail.core.css.PseudoClassSelectorValue"] = { __ename__ : ["cocktail","core","css","PseudoClassSelectorValue"], __constructs__ : ["STRUCTURAL","LINK","TARGET","LANG","USER_ACTION","UI_ELEMENT_STATES","NOT"] };
cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL = function(value) { var $x = ["STRUCTURAL",0,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue.LINK = function(value) { var $x = ["LINK",1,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue.TARGET = ["TARGET",2];
cocktail.core.css.PseudoClassSelectorValue.TARGET.toString = $estr;
cocktail.core.css.PseudoClassSelectorValue.TARGET.__enum__ = cocktail.core.css.PseudoClassSelectorValue;
cocktail.core.css.PseudoClassSelectorValue.LANG = function(value) { var $x = ["LANG",3,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue.USER_ACTION = function(value) { var $x = ["USER_ACTION",4,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue.UI_ELEMENT_STATES = function(value) { var $x = ["UI_ELEMENT_STATES",5,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.PseudoClassSelectorValue.NOT = function(value) { var $x = ["NOT",6,value]; $x.__enum__ = cocktail.core.css.PseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.StructuralPseudoClassSelectorValue = $hxClasses["cocktail.core.css.StructuralPseudoClassSelectorValue"] = { __ename__ : ["cocktail","core","css","StructuralPseudoClassSelectorValue"], __constructs__ : ["ROOT","FIRST_CHILD","LAST_CHILD","FIRST_OF_TYPE","LAST_OF_TYPE","ONLY_CHILD","ONLY_OF_TYPE","EMPTY","NTH_CHILD","NTH_LAST_CHILD","NTH_OF_TYPE","NTH_LAST_OF_TYPE"] };
cocktail.core.css.StructuralPseudoClassSelectorValue.ROOT = ["ROOT",0];
cocktail.core.css.StructuralPseudoClassSelectorValue.ROOT.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.ROOT.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_CHILD = ["FIRST_CHILD",1];
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_CHILD.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_CHILD.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_CHILD = ["LAST_CHILD",2];
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_CHILD.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_CHILD.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_OF_TYPE = ["FIRST_OF_TYPE",3];
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_OF_TYPE.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_OF_TYPE.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_OF_TYPE = ["LAST_OF_TYPE",4];
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_OF_TYPE.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_OF_TYPE.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_CHILD = ["ONLY_CHILD",5];
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_CHILD.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_CHILD.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_OF_TYPE = ["ONLY_OF_TYPE",6];
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_OF_TYPE.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_OF_TYPE.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.EMPTY = ["EMPTY",7];
cocktail.core.css.StructuralPseudoClassSelectorValue.EMPTY.toString = $estr;
cocktail.core.css.StructuralPseudoClassSelectorValue.EMPTY.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue;
cocktail.core.css.StructuralPseudoClassSelectorValue.NTH_CHILD = function(value) { var $x = ["NTH_CHILD",8,value]; $x.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.StructuralPseudoClassSelectorValue.NTH_LAST_CHILD = function(value) { var $x = ["NTH_LAST_CHILD",9,value]; $x.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.StructuralPseudoClassSelectorValue.NTH_OF_TYPE = function(value) { var $x = ["NTH_OF_TYPE",10,value]; $x.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.StructuralPseudoClassSelectorValue.NTH_LAST_OF_TYPE = function(value) { var $x = ["NTH_LAST_OF_TYPE",11,value]; $x.__enum__ = cocktail.core.css.StructuralPseudoClassSelectorValue; $x.toString = $estr; return $x; };
cocktail.core.css.StructuralPseudoClassArgumentValue = $hxClasses["cocktail.core.css.StructuralPseudoClassArgumentValue"] = { __ename__ : ["cocktail","core","css","StructuralPseudoClassArgumentValue"], __constructs__ : ["ODD","EVEN"] };
cocktail.core.css.StructuralPseudoClassArgumentValue.ODD = ["ODD",0];
cocktail.core.css.StructuralPseudoClassArgumentValue.ODD.toString = $estr;
cocktail.core.css.StructuralPseudoClassArgumentValue.ODD.__enum__ = cocktail.core.css.StructuralPseudoClassArgumentValue;
cocktail.core.css.StructuralPseudoClassArgumentValue.EVEN = ["EVEN",1];
cocktail.core.css.StructuralPseudoClassArgumentValue.EVEN.toString = $estr;
cocktail.core.css.StructuralPseudoClassArgumentValue.EVEN.__enum__ = cocktail.core.css.StructuralPseudoClassArgumentValue;
cocktail.core.css.LinkPseudoClassValue = $hxClasses["cocktail.core.css.LinkPseudoClassValue"] = { __ename__ : ["cocktail","core","css","LinkPseudoClassValue"], __constructs__ : ["LINK","VISITED"] };
cocktail.core.css.LinkPseudoClassValue.LINK = ["LINK",0];
cocktail.core.css.LinkPseudoClassValue.LINK.toString = $estr;
cocktail.core.css.LinkPseudoClassValue.LINK.__enum__ = cocktail.core.css.LinkPseudoClassValue;
cocktail.core.css.LinkPseudoClassValue.VISITED = ["VISITED",1];
cocktail.core.css.LinkPseudoClassValue.VISITED.toString = $estr;
cocktail.core.css.LinkPseudoClassValue.VISITED.__enum__ = cocktail.core.css.LinkPseudoClassValue;
cocktail.core.css.UserActionPseudoClassValue = $hxClasses["cocktail.core.css.UserActionPseudoClassValue"] = { __ename__ : ["cocktail","core","css","UserActionPseudoClassValue"], __constructs__ : ["ACTIVE","HOVER","FOCUS"] };
cocktail.core.css.UserActionPseudoClassValue.ACTIVE = ["ACTIVE",0];
cocktail.core.css.UserActionPseudoClassValue.ACTIVE.toString = $estr;
cocktail.core.css.UserActionPseudoClassValue.ACTIVE.__enum__ = cocktail.core.css.UserActionPseudoClassValue;
cocktail.core.css.UserActionPseudoClassValue.HOVER = ["HOVER",1];
cocktail.core.css.UserActionPseudoClassValue.HOVER.toString = $estr;
cocktail.core.css.UserActionPseudoClassValue.HOVER.__enum__ = cocktail.core.css.UserActionPseudoClassValue;
cocktail.core.css.UserActionPseudoClassValue.FOCUS = ["FOCUS",2];
cocktail.core.css.UserActionPseudoClassValue.FOCUS.toString = $estr;
cocktail.core.css.UserActionPseudoClassValue.FOCUS.__enum__ = cocktail.core.css.UserActionPseudoClassValue;
cocktail.core.css.UIElementStatesValue = $hxClasses["cocktail.core.css.UIElementStatesValue"] = { __ename__ : ["cocktail","core","css","UIElementStatesValue"], __constructs__ : ["ENABLED","DISABLED","CHECKED"] };
cocktail.core.css.UIElementStatesValue.ENABLED = ["ENABLED",0];
cocktail.core.css.UIElementStatesValue.ENABLED.toString = $estr;
cocktail.core.css.UIElementStatesValue.ENABLED.__enum__ = cocktail.core.css.UIElementStatesValue;
cocktail.core.css.UIElementStatesValue.DISABLED = ["DISABLED",1];
cocktail.core.css.UIElementStatesValue.DISABLED.toString = $estr;
cocktail.core.css.UIElementStatesValue.DISABLED.__enum__ = cocktail.core.css.UIElementStatesValue;
cocktail.core.css.UIElementStatesValue.CHECKED = ["CHECKED",2];
cocktail.core.css.UIElementStatesValue.CHECKED.toString = $estr;
cocktail.core.css.UIElementStatesValue.CHECKED.__enum__ = cocktail.core.css.UIElementStatesValue;
cocktail.core.css.PseudoElementSelectorValue = $hxClasses["cocktail.core.css.PseudoElementSelectorValue"] = { __ename__ : ["cocktail","core","css","PseudoElementSelectorValue"], __constructs__ : ["NONE","FIRST_LINE","FIRST_LETTER","BEFORE","AFTER"] };
cocktail.core.css.PseudoElementSelectorValue.NONE = ["NONE",0];
cocktail.core.css.PseudoElementSelectorValue.NONE.toString = $estr;
cocktail.core.css.PseudoElementSelectorValue.NONE.__enum__ = cocktail.core.css.PseudoElementSelectorValue;
cocktail.core.css.PseudoElementSelectorValue.FIRST_LINE = ["FIRST_LINE",1];
cocktail.core.css.PseudoElementSelectorValue.FIRST_LINE.toString = $estr;
cocktail.core.css.PseudoElementSelectorValue.FIRST_LINE.__enum__ = cocktail.core.css.PseudoElementSelectorValue;
cocktail.core.css.PseudoElementSelectorValue.FIRST_LETTER = ["FIRST_LETTER",2];
cocktail.core.css.PseudoElementSelectorValue.FIRST_LETTER.toString = $estr;
cocktail.core.css.PseudoElementSelectorValue.FIRST_LETTER.__enum__ = cocktail.core.css.PseudoElementSelectorValue;
cocktail.core.css.PseudoElementSelectorValue.BEFORE = ["BEFORE",3];
cocktail.core.css.PseudoElementSelectorValue.BEFORE.toString = $estr;
cocktail.core.css.PseudoElementSelectorValue.BEFORE.__enum__ = cocktail.core.css.PseudoElementSelectorValue;
cocktail.core.css.PseudoElementSelectorValue.AFTER = ["AFTER",4];
cocktail.core.css.PseudoElementSelectorValue.AFTER.toString = $estr;
cocktail.core.css.PseudoElementSelectorValue.AFTER.__enum__ = cocktail.core.css.PseudoElementSelectorValue;
cocktail.core.css.CombinatorValue = $hxClasses["cocktail.core.css.CombinatorValue"] = { __ename__ : ["cocktail","core","css","CombinatorValue"], __constructs__ : ["DESCENDANT","CHILD","ADJACENT_SIBLING","GENERAL_SIBLING"] };
cocktail.core.css.CombinatorValue.DESCENDANT = ["DESCENDANT",0];
cocktail.core.css.CombinatorValue.DESCENDANT.toString = $estr;
cocktail.core.css.CombinatorValue.DESCENDANT.__enum__ = cocktail.core.css.CombinatorValue;
cocktail.core.css.CombinatorValue.CHILD = ["CHILD",1];
cocktail.core.css.CombinatorValue.CHILD.toString = $estr;
cocktail.core.css.CombinatorValue.CHILD.__enum__ = cocktail.core.css.CombinatorValue;
cocktail.core.css.CombinatorValue.ADJACENT_SIBLING = ["ADJACENT_SIBLING",2];
cocktail.core.css.CombinatorValue.ADJACENT_SIBLING.toString = $estr;
cocktail.core.css.CombinatorValue.ADJACENT_SIBLING.__enum__ = cocktail.core.css.CombinatorValue;
cocktail.core.css.CombinatorValue.GENERAL_SIBLING = ["GENERAL_SIBLING",3];
cocktail.core.css.CombinatorValue.GENERAL_SIBLING.toString = $estr;
cocktail.core.css.CombinatorValue.GENERAL_SIBLING.__enum__ = cocktail.core.css.CombinatorValue;
cocktail.core.css.CSSPropertyValue = $hxClasses["cocktail.core.css.CSSPropertyValue"] = { __ename__ : ["cocktail","core","css","CSSPropertyValue"], __constructs__ : ["INTEGER","NUMBER","PERCENTAGE","IDENTIFIER","KEYWORD","URL","STRING","LENGTH","ANGLE","TIME","FREQUENCY","RESOLUTION","COLOR","GROUP","FONT_SIZE_LINE_HEIGHT_GROUP","CSS_LIST","INHERIT","INITIAL","ABSOLUTE_LENGTH","STEPS","CUBIC_BEZIER","TRANSFORM_FUNCTION"] };
cocktail.core.css.CSSPropertyValue.INTEGER = function(value) { var $x = ["INTEGER",0,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.NUMBER = function(value) { var $x = ["NUMBER",1,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.PERCENTAGE = function(value) { var $x = ["PERCENTAGE",2,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.IDENTIFIER = function(value) { var $x = ["IDENTIFIER",3,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.KEYWORD = function(value) { var $x = ["KEYWORD",4,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.URL = function(value) { var $x = ["URL",5,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.STRING = function(value) { var $x = ["STRING",6,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.LENGTH = function(value) { var $x = ["LENGTH",7,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.ANGLE = function(value) { var $x = ["ANGLE",8,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.TIME = function(value) { var $x = ["TIME",9,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.FREQUENCY = function(value) { var $x = ["FREQUENCY",10,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.RESOLUTION = function(value) { var $x = ["RESOLUTION",11,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.COLOR = function(value) { var $x = ["COLOR",12,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.GROUP = function(value) { var $x = ["GROUP",13,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.FONT_SIZE_LINE_HEIGHT_GROUP = function(fontSize,lineHeight) { var $x = ["FONT_SIZE_LINE_HEIGHT_GROUP",14,fontSize,lineHeight]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.CSS_LIST = function(value) { var $x = ["CSS_LIST",15,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.INHERIT = ["INHERIT",16];
cocktail.core.css.CSSPropertyValue.INHERIT.toString = $estr;
cocktail.core.css.CSSPropertyValue.INHERIT.__enum__ = cocktail.core.css.CSSPropertyValue;
cocktail.core.css.CSSPropertyValue.INITIAL = ["INITIAL",17];
cocktail.core.css.CSSPropertyValue.INITIAL.toString = $estr;
cocktail.core.css.CSSPropertyValue.INITIAL.__enum__ = cocktail.core.css.CSSPropertyValue;
cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH = function(value) { var $x = ["ABSOLUTE_LENGTH",18,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.STEPS = function(intervalNumbers,intervalChange) { var $x = ["STEPS",19,intervalNumbers,intervalChange]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.CUBIC_BEZIER = function(x1,y1,x2,y2) { var $x = ["CUBIC_BEZIER",20,x1,y1,x2,y2]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION = function(value) { var $x = ["TRANSFORM_FUNCTION",21,value]; $x.__enum__ = cocktail.core.css.CSSPropertyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue = $hxClasses["cocktail.core.css.CSSColorValue"] = { __ename__ : ["cocktail","core","css","CSSColorValue"], __constructs__ : ["RGB","RGB_PERCENTAGE","RGBA","RGBA_PERCENTAGE","HEX","HSL","HSLA","KEYWORD","TRANSPARENT","CURRENT_COLOR"] };
cocktail.core.css.CSSColorValue.RGB = function(red,green,blue) { var $x = ["RGB",0,red,green,blue]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.RGB_PERCENTAGE = function(red,green,blue) { var $x = ["RGB_PERCENTAGE",1,red,green,blue]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.RGBA = function(red,green,blue,alpha) { var $x = ["RGBA",2,red,green,blue,alpha]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.RGBA_PERCENTAGE = function(red,green,blue,alpha) { var $x = ["RGBA_PERCENTAGE",3,red,green,blue,alpha]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.HEX = function(value) { var $x = ["HEX",4,value]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.HSL = function(hue,saturation,lightness) { var $x = ["HSL",5,hue,saturation,lightness]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.HSLA = function(hue,saturation,lightness,alpha) { var $x = ["HSLA",6,hue,saturation,lightness,alpha]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.KEYWORD = function(value) { var $x = ["KEYWORD",7,value]; $x.__enum__ = cocktail.core.css.CSSColorValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSColorValue.TRANSPARENT = ["TRANSPARENT",8];
cocktail.core.css.CSSColorValue.TRANSPARENT.toString = $estr;
cocktail.core.css.CSSColorValue.TRANSPARENT.__enum__ = cocktail.core.css.CSSColorValue;
cocktail.core.css.CSSColorValue.CURRENT_COLOR = ["CURRENT_COLOR",9];
cocktail.core.css.CSSColorValue.CURRENT_COLOR.toString = $estr;
cocktail.core.css.CSSColorValue.CURRENT_COLOR.__enum__ = cocktail.core.css.CSSColorValue;
cocktail.core.css.CSSColorKeyword = $hxClasses["cocktail.core.css.CSSColorKeyword"] = { __ename__ : ["cocktail","core","css","CSSColorKeyword"], __constructs__ : ["ALICE_BLUE","ANTIQUE_WHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHE_DALMOND","BLUE","BLUE_VIOLET","BROWN","BURLY_WOOD","CADET_BLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWER_BLUE","CORNSILK","CRIMSON","CYAN","DARK_BLUE","DARK_CYAN","DARK_GOLDEN_ROD","DARK_GRAY","DARK_GREEN","DARK_GREY","DARK_KHAKI","DARK_MAGENTA","DARK_OLIVE_GREEN","DARK_ORANGE","DARK_ORCHID","DARK_RED","DARK_SALMON","DARK_SEA_GREEN","DARK_SLATE_BLUE","DARK_SLATE_GRAY","DARK_SLATE_GREY","DARK_TURQUOISE","DARK_VIOLET","DEEP_PINK","DEEP_SKY_BLUE","DIM_GRAY","DIM_GREY","DODGER_BLUE","FIRE_BRICK","FLORAL_WHITE","FOREST_GREEN","FUCHSIA","GAINSBORO","GHOST_WHITE","GOLD","GOLDEN_ROD","GRAY","GREEN","GREEN_YELLOW","GREY","HONEY_DEW","HOT_PINK","INDIAN_RED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDER_BLUSH","LAWN_GREEN","LEMON_CHIFFON","LIGHT_BLUE","LIGHT_CORAL","LIGHT_CYAN","LIGHT_GOLDENROD_YELLOW","LIGHT_GRAY","LIGHT_GREEN","LIGHT_GREY","LIGHT_PINK","LIGHT_SALMON","LIGHT_SEA_GREEN","LIGHT_SKY_BLUE","LIGHT_SLATE_GRAY","LIGHT_SLATE_GREY","LIGHT_STEEL_BLUE","LIGHT_YELLOW","LIME","LIME_GREEN","LINEN","MAGENTA","MAROON","MEDIUM_AQUAMARINE","MEDIUM_BLUE","MEDIUM_ORCHID","MEDIUM_PURPLE","MEDIUM_SEA_GREEN","MEDIUM_SLATE_BLUE","MEDIUM_SPRING_GREEN","MEDIUM_TURQUOISE","MEDIUM_VIOLET_RED","MIDNIGHT_BLUE","MINT_CREAM","MISTY_ROSE","MOCCASIN","NAVAJO_WHITE","NAVY","OLD_LACE","OLIVE","OLIVE_DRAB","ORANGE","ORANGE_RED","ORCHID","PALE_GOLDEN_ROD","PALE_GREEN","PALE_TURQUOISE","PALE_VIOLET_RED","PAPAYA_WHIP","PEACH_PUFF","PERU","PINK","PLUM","POWDER_BLUE","PURPLE","RED","ROSY_BROWN","ROYAL_BLUE","SADDLE_BROWN","SALMON","SANDY_BROWN","SEA_GREEN","SEA_SHELL","SIENNA","SILVER","SKY_BLUE","SLATE_BLUE","SLATE_GRAY","SLATE_GREY","SNOW","SPRING_GREEN","STEEL_BLUE","TAN","TEAL","THISLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITE","WHITE_SMOKE","YELLOW","YELLOW_GREEN"] };
cocktail.core.css.CSSColorKeyword.ALICE_BLUE = ["ALICE_BLUE",0];
cocktail.core.css.CSSColorKeyword.ALICE_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.ALICE_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ANTIQUE_WHITE = ["ANTIQUE_WHITE",1];
cocktail.core.css.CSSColorKeyword.ANTIQUE_WHITE.toString = $estr;
cocktail.core.css.CSSColorKeyword.ANTIQUE_WHITE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.AQUA = ["AQUA",2];
cocktail.core.css.CSSColorKeyword.AQUA.toString = $estr;
cocktail.core.css.CSSColorKeyword.AQUA.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.AQUAMARINE = ["AQUAMARINE",3];
cocktail.core.css.CSSColorKeyword.AQUAMARINE.toString = $estr;
cocktail.core.css.CSSColorKeyword.AQUAMARINE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.AZURE = ["AZURE",4];
cocktail.core.css.CSSColorKeyword.AZURE.toString = $estr;
cocktail.core.css.CSSColorKeyword.AZURE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BEIGE = ["BEIGE",5];
cocktail.core.css.CSSColorKeyword.BEIGE.toString = $estr;
cocktail.core.css.CSSColorKeyword.BEIGE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BISQUE = ["BISQUE",6];
cocktail.core.css.CSSColorKeyword.BISQUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.BISQUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BLACK = ["BLACK",7];
cocktail.core.css.CSSColorKeyword.BLACK.toString = $estr;
cocktail.core.css.CSSColorKeyword.BLACK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BLANCHE_DALMOND = ["BLANCHE_DALMOND",8];
cocktail.core.css.CSSColorKeyword.BLANCHE_DALMOND.toString = $estr;
cocktail.core.css.CSSColorKeyword.BLANCHE_DALMOND.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BLUE = ["BLUE",9];
cocktail.core.css.CSSColorKeyword.BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BLUE_VIOLET = ["BLUE_VIOLET",10];
cocktail.core.css.CSSColorKeyword.BLUE_VIOLET.toString = $estr;
cocktail.core.css.CSSColorKeyword.BLUE_VIOLET.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BROWN = ["BROWN",11];
cocktail.core.css.CSSColorKeyword.BROWN.toString = $estr;
cocktail.core.css.CSSColorKeyword.BROWN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.BURLY_WOOD = ["BURLY_WOOD",12];
cocktail.core.css.CSSColorKeyword.BURLY_WOOD.toString = $estr;
cocktail.core.css.CSSColorKeyword.BURLY_WOOD.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CADET_BLUE = ["CADET_BLUE",13];
cocktail.core.css.CSSColorKeyword.CADET_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.CADET_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CHARTREUSE = ["CHARTREUSE",14];
cocktail.core.css.CSSColorKeyword.CHARTREUSE.toString = $estr;
cocktail.core.css.CSSColorKeyword.CHARTREUSE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CHOCOLATE = ["CHOCOLATE",15];
cocktail.core.css.CSSColorKeyword.CHOCOLATE.toString = $estr;
cocktail.core.css.CSSColorKeyword.CHOCOLATE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CORAL = ["CORAL",16];
cocktail.core.css.CSSColorKeyword.CORAL.toString = $estr;
cocktail.core.css.CSSColorKeyword.CORAL.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CORNFLOWER_BLUE = ["CORNFLOWER_BLUE",17];
cocktail.core.css.CSSColorKeyword.CORNFLOWER_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.CORNFLOWER_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CORNSILK = ["CORNSILK",18];
cocktail.core.css.CSSColorKeyword.CORNSILK.toString = $estr;
cocktail.core.css.CSSColorKeyword.CORNSILK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CRIMSON = ["CRIMSON",19];
cocktail.core.css.CSSColorKeyword.CRIMSON.toString = $estr;
cocktail.core.css.CSSColorKeyword.CRIMSON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.CYAN = ["CYAN",20];
cocktail.core.css.CSSColorKeyword.CYAN.toString = $estr;
cocktail.core.css.CSSColorKeyword.CYAN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_BLUE = ["DARK_BLUE",21];
cocktail.core.css.CSSColorKeyword.DARK_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_CYAN = ["DARK_CYAN",22];
cocktail.core.css.CSSColorKeyword.DARK_CYAN.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_CYAN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_GOLDEN_ROD = ["DARK_GOLDEN_ROD",23];
cocktail.core.css.CSSColorKeyword.DARK_GOLDEN_ROD.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_GOLDEN_ROD.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_GRAY = ["DARK_GRAY",24];
cocktail.core.css.CSSColorKeyword.DARK_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_GREEN = ["DARK_GREEN",25];
cocktail.core.css.CSSColorKeyword.DARK_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_GREY = ["DARK_GREY",26];
cocktail.core.css.CSSColorKeyword.DARK_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_KHAKI = ["DARK_KHAKI",27];
cocktail.core.css.CSSColorKeyword.DARK_KHAKI.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_KHAKI.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_MAGENTA = ["DARK_MAGENTA",28];
cocktail.core.css.CSSColorKeyword.DARK_MAGENTA.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_MAGENTA.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_OLIVE_GREEN = ["DARK_OLIVE_GREEN",29];
cocktail.core.css.CSSColorKeyword.DARK_OLIVE_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_OLIVE_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_ORANGE = ["DARK_ORANGE",30];
cocktail.core.css.CSSColorKeyword.DARK_ORANGE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_ORANGE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_ORCHID = ["DARK_ORCHID",31];
cocktail.core.css.CSSColorKeyword.DARK_ORCHID.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_ORCHID.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_RED = ["DARK_RED",32];
cocktail.core.css.CSSColorKeyword.DARK_RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_SALMON = ["DARK_SALMON",33];
cocktail.core.css.CSSColorKeyword.DARK_SALMON.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_SALMON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_SEA_GREEN = ["DARK_SEA_GREEN",34];
cocktail.core.css.CSSColorKeyword.DARK_SEA_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_SEA_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_BLUE = ["DARK_SLATE_BLUE",35];
cocktail.core.css.CSSColorKeyword.DARK_SLATE_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GRAY = ["DARK_SLATE_GRAY",36];
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GREY = ["DARK_SLATE_GREY",37];
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_SLATE_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_TURQUOISE = ["DARK_TURQUOISE",38];
cocktail.core.css.CSSColorKeyword.DARK_TURQUOISE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_TURQUOISE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DARK_VIOLET = ["DARK_VIOLET",39];
cocktail.core.css.CSSColorKeyword.DARK_VIOLET.toString = $estr;
cocktail.core.css.CSSColorKeyword.DARK_VIOLET.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DEEP_PINK = ["DEEP_PINK",40];
cocktail.core.css.CSSColorKeyword.DEEP_PINK.toString = $estr;
cocktail.core.css.CSSColorKeyword.DEEP_PINK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DEEP_SKY_BLUE = ["DEEP_SKY_BLUE",41];
cocktail.core.css.CSSColorKeyword.DEEP_SKY_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DEEP_SKY_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DIM_GRAY = ["DIM_GRAY",42];
cocktail.core.css.CSSColorKeyword.DIM_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DIM_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DIM_GREY = ["DIM_GREY",43];
cocktail.core.css.CSSColorKeyword.DIM_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.DIM_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.DODGER_BLUE = ["DODGER_BLUE",44];
cocktail.core.css.CSSColorKeyword.DODGER_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.DODGER_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.FIRE_BRICK = ["FIRE_BRICK",45];
cocktail.core.css.CSSColorKeyword.FIRE_BRICK.toString = $estr;
cocktail.core.css.CSSColorKeyword.FIRE_BRICK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.FLORAL_WHITE = ["FLORAL_WHITE",46];
cocktail.core.css.CSSColorKeyword.FLORAL_WHITE.toString = $estr;
cocktail.core.css.CSSColorKeyword.FLORAL_WHITE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.FOREST_GREEN = ["FOREST_GREEN",47];
cocktail.core.css.CSSColorKeyword.FOREST_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.FOREST_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.FUCHSIA = ["FUCHSIA",48];
cocktail.core.css.CSSColorKeyword.FUCHSIA.toString = $estr;
cocktail.core.css.CSSColorKeyword.FUCHSIA.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GAINSBORO = ["GAINSBORO",49];
cocktail.core.css.CSSColorKeyword.GAINSBORO.toString = $estr;
cocktail.core.css.CSSColorKeyword.GAINSBORO.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GHOST_WHITE = ["GHOST_WHITE",50];
cocktail.core.css.CSSColorKeyword.GHOST_WHITE.toString = $estr;
cocktail.core.css.CSSColorKeyword.GHOST_WHITE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GOLD = ["GOLD",51];
cocktail.core.css.CSSColorKeyword.GOLD.toString = $estr;
cocktail.core.css.CSSColorKeyword.GOLD.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GOLDEN_ROD = ["GOLDEN_ROD",52];
cocktail.core.css.CSSColorKeyword.GOLDEN_ROD.toString = $estr;
cocktail.core.css.CSSColorKeyword.GOLDEN_ROD.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GRAY = ["GRAY",53];
cocktail.core.css.CSSColorKeyword.GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GREEN = ["GREEN",54];
cocktail.core.css.CSSColorKeyword.GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GREEN_YELLOW = ["GREEN_YELLOW",55];
cocktail.core.css.CSSColorKeyword.GREEN_YELLOW.toString = $estr;
cocktail.core.css.CSSColorKeyword.GREEN_YELLOW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.GREY = ["GREY",56];
cocktail.core.css.CSSColorKeyword.GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.HONEY_DEW = ["HONEY_DEW",57];
cocktail.core.css.CSSColorKeyword.HONEY_DEW.toString = $estr;
cocktail.core.css.CSSColorKeyword.HONEY_DEW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.HOT_PINK = ["HOT_PINK",58];
cocktail.core.css.CSSColorKeyword.HOT_PINK.toString = $estr;
cocktail.core.css.CSSColorKeyword.HOT_PINK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.INDIAN_RED = ["INDIAN_RED",59];
cocktail.core.css.CSSColorKeyword.INDIAN_RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.INDIAN_RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.INDIGO = ["INDIGO",60];
cocktail.core.css.CSSColorKeyword.INDIGO.toString = $estr;
cocktail.core.css.CSSColorKeyword.INDIGO.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.IVORY = ["IVORY",61];
cocktail.core.css.CSSColorKeyword.IVORY.toString = $estr;
cocktail.core.css.CSSColorKeyword.IVORY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.KHAKI = ["KHAKI",62];
cocktail.core.css.CSSColorKeyword.KHAKI.toString = $estr;
cocktail.core.css.CSSColorKeyword.KHAKI.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LAVENDER = ["LAVENDER",63];
cocktail.core.css.CSSColorKeyword.LAVENDER.toString = $estr;
cocktail.core.css.CSSColorKeyword.LAVENDER.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LAVENDER_BLUSH = ["LAVENDER_BLUSH",64];
cocktail.core.css.CSSColorKeyword.LAVENDER_BLUSH.toString = $estr;
cocktail.core.css.CSSColorKeyword.LAVENDER_BLUSH.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LAWN_GREEN = ["LAWN_GREEN",65];
cocktail.core.css.CSSColorKeyword.LAWN_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LAWN_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LEMON_CHIFFON = ["LEMON_CHIFFON",66];
cocktail.core.css.CSSColorKeyword.LEMON_CHIFFON.toString = $estr;
cocktail.core.css.CSSColorKeyword.LEMON_CHIFFON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_BLUE = ["LIGHT_BLUE",67];
cocktail.core.css.CSSColorKeyword.LIGHT_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_CORAL = ["LIGHT_CORAL",68];
cocktail.core.css.CSSColorKeyword.LIGHT_CORAL.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_CORAL.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_CYAN = ["LIGHT_CYAN",69];
cocktail.core.css.CSSColorKeyword.LIGHT_CYAN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_CYAN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_GOLDENROD_YELLOW = ["LIGHT_GOLDENROD_YELLOW",70];
cocktail.core.css.CSSColorKeyword.LIGHT_GOLDENROD_YELLOW.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_GOLDENROD_YELLOW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_GRAY = ["LIGHT_GRAY",71];
cocktail.core.css.CSSColorKeyword.LIGHT_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_GREEN = ["LIGHT_GREEN",72];
cocktail.core.css.CSSColorKeyword.LIGHT_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_GREY = ["LIGHT_GREY",73];
cocktail.core.css.CSSColorKeyword.LIGHT_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_PINK = ["LIGHT_PINK",74];
cocktail.core.css.CSSColorKeyword.LIGHT_PINK.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_PINK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_SALMON = ["LIGHT_SALMON",75];
cocktail.core.css.CSSColorKeyword.LIGHT_SALMON.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_SALMON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_SEA_GREEN = ["LIGHT_SEA_GREEN",76];
cocktail.core.css.CSSColorKeyword.LIGHT_SEA_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_SEA_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_SKY_BLUE = ["LIGHT_SKY_BLUE",77];
cocktail.core.css.CSSColorKeyword.LIGHT_SKY_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_SKY_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GRAY = ["LIGHT_SLATE_GRAY",78];
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GREY = ["LIGHT_SLATE_GREY",79];
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_STEEL_BLUE = ["LIGHT_STEEL_BLUE",80];
cocktail.core.css.CSSColorKeyword.LIGHT_STEEL_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_STEEL_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIGHT_YELLOW = ["LIGHT_YELLOW",81];
cocktail.core.css.CSSColorKeyword.LIGHT_YELLOW.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIGHT_YELLOW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIME = ["LIME",82];
cocktail.core.css.CSSColorKeyword.LIME.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIME.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LIME_GREEN = ["LIME_GREEN",83];
cocktail.core.css.CSSColorKeyword.LIME_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LIME_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.LINEN = ["LINEN",84];
cocktail.core.css.CSSColorKeyword.LINEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.LINEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MAGENTA = ["MAGENTA",85];
cocktail.core.css.CSSColorKeyword.MAGENTA.toString = $estr;
cocktail.core.css.CSSColorKeyword.MAGENTA.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MAROON = ["MAROON",86];
cocktail.core.css.CSSColorKeyword.MAROON.toString = $estr;
cocktail.core.css.CSSColorKeyword.MAROON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_AQUAMARINE = ["MEDIUM_AQUAMARINE",87];
cocktail.core.css.CSSColorKeyword.MEDIUM_AQUAMARINE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_AQUAMARINE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_BLUE = ["MEDIUM_BLUE",88];
cocktail.core.css.CSSColorKeyword.MEDIUM_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_ORCHID = ["MEDIUM_ORCHID",89];
cocktail.core.css.CSSColorKeyword.MEDIUM_ORCHID.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_ORCHID.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_PURPLE = ["MEDIUM_PURPLE",90];
cocktail.core.css.CSSColorKeyword.MEDIUM_PURPLE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_PURPLE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_SEA_GREEN = ["MEDIUM_SEA_GREEN",91];
cocktail.core.css.CSSColorKeyword.MEDIUM_SEA_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_SEA_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_SLATE_BLUE = ["MEDIUM_SLATE_BLUE",92];
cocktail.core.css.CSSColorKeyword.MEDIUM_SLATE_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_SLATE_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_SPRING_GREEN = ["MEDIUM_SPRING_GREEN",93];
cocktail.core.css.CSSColorKeyword.MEDIUM_SPRING_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_SPRING_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_TURQUOISE = ["MEDIUM_TURQUOISE",94];
cocktail.core.css.CSSColorKeyword.MEDIUM_TURQUOISE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_TURQUOISE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MEDIUM_VIOLET_RED = ["MEDIUM_VIOLET_RED",95];
cocktail.core.css.CSSColorKeyword.MEDIUM_VIOLET_RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.MEDIUM_VIOLET_RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MIDNIGHT_BLUE = ["MIDNIGHT_BLUE",96];
cocktail.core.css.CSSColorKeyword.MIDNIGHT_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MIDNIGHT_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MINT_CREAM = ["MINT_CREAM",97];
cocktail.core.css.CSSColorKeyword.MINT_CREAM.toString = $estr;
cocktail.core.css.CSSColorKeyword.MINT_CREAM.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MISTY_ROSE = ["MISTY_ROSE",98];
cocktail.core.css.CSSColorKeyword.MISTY_ROSE.toString = $estr;
cocktail.core.css.CSSColorKeyword.MISTY_ROSE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.MOCCASIN = ["MOCCASIN",99];
cocktail.core.css.CSSColorKeyword.MOCCASIN.toString = $estr;
cocktail.core.css.CSSColorKeyword.MOCCASIN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.NAVAJO_WHITE = ["NAVAJO_WHITE",100];
cocktail.core.css.CSSColorKeyword.NAVAJO_WHITE.toString = $estr;
cocktail.core.css.CSSColorKeyword.NAVAJO_WHITE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.NAVY = ["NAVY",101];
cocktail.core.css.CSSColorKeyword.NAVY.toString = $estr;
cocktail.core.css.CSSColorKeyword.NAVY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.OLD_LACE = ["OLD_LACE",102];
cocktail.core.css.CSSColorKeyword.OLD_LACE.toString = $estr;
cocktail.core.css.CSSColorKeyword.OLD_LACE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.OLIVE = ["OLIVE",103];
cocktail.core.css.CSSColorKeyword.OLIVE.toString = $estr;
cocktail.core.css.CSSColorKeyword.OLIVE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.OLIVE_DRAB = ["OLIVE_DRAB",104];
cocktail.core.css.CSSColorKeyword.OLIVE_DRAB.toString = $estr;
cocktail.core.css.CSSColorKeyword.OLIVE_DRAB.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ORANGE = ["ORANGE",105];
cocktail.core.css.CSSColorKeyword.ORANGE.toString = $estr;
cocktail.core.css.CSSColorKeyword.ORANGE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ORANGE_RED = ["ORANGE_RED",106];
cocktail.core.css.CSSColorKeyword.ORANGE_RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.ORANGE_RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ORCHID = ["ORCHID",107];
cocktail.core.css.CSSColorKeyword.ORCHID.toString = $estr;
cocktail.core.css.CSSColorKeyword.ORCHID.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PALE_GOLDEN_ROD = ["PALE_GOLDEN_ROD",108];
cocktail.core.css.CSSColorKeyword.PALE_GOLDEN_ROD.toString = $estr;
cocktail.core.css.CSSColorKeyword.PALE_GOLDEN_ROD.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PALE_GREEN = ["PALE_GREEN",109];
cocktail.core.css.CSSColorKeyword.PALE_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.PALE_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PALE_TURQUOISE = ["PALE_TURQUOISE",110];
cocktail.core.css.CSSColorKeyword.PALE_TURQUOISE.toString = $estr;
cocktail.core.css.CSSColorKeyword.PALE_TURQUOISE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PALE_VIOLET_RED = ["PALE_VIOLET_RED",111];
cocktail.core.css.CSSColorKeyword.PALE_VIOLET_RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.PALE_VIOLET_RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PAPAYA_WHIP = ["PAPAYA_WHIP",112];
cocktail.core.css.CSSColorKeyword.PAPAYA_WHIP.toString = $estr;
cocktail.core.css.CSSColorKeyword.PAPAYA_WHIP.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PEACH_PUFF = ["PEACH_PUFF",113];
cocktail.core.css.CSSColorKeyword.PEACH_PUFF.toString = $estr;
cocktail.core.css.CSSColorKeyword.PEACH_PUFF.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PERU = ["PERU",114];
cocktail.core.css.CSSColorKeyword.PERU.toString = $estr;
cocktail.core.css.CSSColorKeyword.PERU.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PINK = ["PINK",115];
cocktail.core.css.CSSColorKeyword.PINK.toString = $estr;
cocktail.core.css.CSSColorKeyword.PINK.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PLUM = ["PLUM",116];
cocktail.core.css.CSSColorKeyword.PLUM.toString = $estr;
cocktail.core.css.CSSColorKeyword.PLUM.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.POWDER_BLUE = ["POWDER_BLUE",117];
cocktail.core.css.CSSColorKeyword.POWDER_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.POWDER_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.PURPLE = ["PURPLE",118];
cocktail.core.css.CSSColorKeyword.PURPLE.toString = $estr;
cocktail.core.css.CSSColorKeyword.PURPLE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.RED = ["RED",119];
cocktail.core.css.CSSColorKeyword.RED.toString = $estr;
cocktail.core.css.CSSColorKeyword.RED.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ROSY_BROWN = ["ROSY_BROWN",120];
cocktail.core.css.CSSColorKeyword.ROSY_BROWN.toString = $estr;
cocktail.core.css.CSSColorKeyword.ROSY_BROWN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.ROYAL_BLUE = ["ROYAL_BLUE",121];
cocktail.core.css.CSSColorKeyword.ROYAL_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.ROYAL_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SADDLE_BROWN = ["SADDLE_BROWN",122];
cocktail.core.css.CSSColorKeyword.SADDLE_BROWN.toString = $estr;
cocktail.core.css.CSSColorKeyword.SADDLE_BROWN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SALMON = ["SALMON",123];
cocktail.core.css.CSSColorKeyword.SALMON.toString = $estr;
cocktail.core.css.CSSColorKeyword.SALMON.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SANDY_BROWN = ["SANDY_BROWN",124];
cocktail.core.css.CSSColorKeyword.SANDY_BROWN.toString = $estr;
cocktail.core.css.CSSColorKeyword.SANDY_BROWN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SEA_GREEN = ["SEA_GREEN",125];
cocktail.core.css.CSSColorKeyword.SEA_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.SEA_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SEA_SHELL = ["SEA_SHELL",126];
cocktail.core.css.CSSColorKeyword.SEA_SHELL.toString = $estr;
cocktail.core.css.CSSColorKeyword.SEA_SHELL.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SIENNA = ["SIENNA",127];
cocktail.core.css.CSSColorKeyword.SIENNA.toString = $estr;
cocktail.core.css.CSSColorKeyword.SIENNA.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SILVER = ["SILVER",128];
cocktail.core.css.CSSColorKeyword.SILVER.toString = $estr;
cocktail.core.css.CSSColorKeyword.SILVER.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SKY_BLUE = ["SKY_BLUE",129];
cocktail.core.css.CSSColorKeyword.SKY_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.SKY_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SLATE_BLUE = ["SLATE_BLUE",130];
cocktail.core.css.CSSColorKeyword.SLATE_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.SLATE_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SLATE_GRAY = ["SLATE_GRAY",131];
cocktail.core.css.CSSColorKeyword.SLATE_GRAY.toString = $estr;
cocktail.core.css.CSSColorKeyword.SLATE_GRAY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SLATE_GREY = ["SLATE_GREY",132];
cocktail.core.css.CSSColorKeyword.SLATE_GREY.toString = $estr;
cocktail.core.css.CSSColorKeyword.SLATE_GREY.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SNOW = ["SNOW",133];
cocktail.core.css.CSSColorKeyword.SNOW.toString = $estr;
cocktail.core.css.CSSColorKeyword.SNOW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.SPRING_GREEN = ["SPRING_GREEN",134];
cocktail.core.css.CSSColorKeyword.SPRING_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.SPRING_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.STEEL_BLUE = ["STEEL_BLUE",135];
cocktail.core.css.CSSColorKeyword.STEEL_BLUE.toString = $estr;
cocktail.core.css.CSSColorKeyword.STEEL_BLUE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.TAN = ["TAN",136];
cocktail.core.css.CSSColorKeyword.TAN.toString = $estr;
cocktail.core.css.CSSColorKeyword.TAN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.TEAL = ["TEAL",137];
cocktail.core.css.CSSColorKeyword.TEAL.toString = $estr;
cocktail.core.css.CSSColorKeyword.TEAL.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.THISLE = ["THISLE",138];
cocktail.core.css.CSSColorKeyword.THISLE.toString = $estr;
cocktail.core.css.CSSColorKeyword.THISLE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.TOMATO = ["TOMATO",139];
cocktail.core.css.CSSColorKeyword.TOMATO.toString = $estr;
cocktail.core.css.CSSColorKeyword.TOMATO.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.TURQUOISE = ["TURQUOISE",140];
cocktail.core.css.CSSColorKeyword.TURQUOISE.toString = $estr;
cocktail.core.css.CSSColorKeyword.TURQUOISE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.VIOLET = ["VIOLET",141];
cocktail.core.css.CSSColorKeyword.VIOLET.toString = $estr;
cocktail.core.css.CSSColorKeyword.VIOLET.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.WHEAT = ["WHEAT",142];
cocktail.core.css.CSSColorKeyword.WHEAT.toString = $estr;
cocktail.core.css.CSSColorKeyword.WHEAT.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.WHITE = ["WHITE",143];
cocktail.core.css.CSSColorKeyword.WHITE.toString = $estr;
cocktail.core.css.CSSColorKeyword.WHITE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.WHITE_SMOKE = ["WHITE_SMOKE",144];
cocktail.core.css.CSSColorKeyword.WHITE_SMOKE.toString = $estr;
cocktail.core.css.CSSColorKeyword.WHITE_SMOKE.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.YELLOW = ["YELLOW",145];
cocktail.core.css.CSSColorKeyword.YELLOW.toString = $estr;
cocktail.core.css.CSSColorKeyword.YELLOW.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSColorKeyword.YELLOW_GREEN = ["YELLOW_GREEN",146];
cocktail.core.css.CSSColorKeyword.YELLOW_GREEN.toString = $estr;
cocktail.core.css.CSSColorKeyword.YELLOW_GREEN.__enum__ = cocktail.core.css.CSSColorKeyword;
cocktail.core.css.CSSTransformFunctionValue = $hxClasses["cocktail.core.css.CSSTransformFunctionValue"] = { __ename__ : ["cocktail","core","css","CSSTransformFunctionValue"], __constructs__ : ["MATRIX","TRANSLATE","TRANSLATE_X","TRANSLATE_Y","SCALE","SCALE_X","SCALE_Y","ROTATE","SKEW_X","SKEW_Y","SKEW"] };
cocktail.core.css.CSSTransformFunctionValue.MATRIX = function(a,b,c,d,e,f) { var $x = ["MATRIX",0,a,b,c,d,e,f]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.TRANSLATE = function(tx,ty) { var $x = ["TRANSLATE",1,tx,ty]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_X = function(tx) { var $x = ["TRANSLATE_X",2,tx]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_Y = function(ty) { var $x = ["TRANSLATE_Y",3,ty]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SCALE = function(sx,sy) { var $x = ["SCALE",4,sx,sy]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SCALE_X = function(sx) { var $x = ["SCALE_X",5,sx]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SCALE_Y = function(sy) { var $x = ["SCALE_Y",6,sy]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.ROTATE = function(angle) { var $x = ["ROTATE",7,angle]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SKEW_X = function(angle) { var $x = ["SKEW_X",8,angle]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SKEW_Y = function(angle) { var $x = ["SKEW_Y",9,angle]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTransformFunctionValue.SKEW = function(angleX,angleY) { var $x = ["SKEW",10,angleX,angleY]; $x.__enum__ = cocktail.core.css.CSSTransformFunctionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTranslationValue = $hxClasses["cocktail.core.css.CSSTranslationValue"] = { __ename__ : ["cocktail","core","css","CSSTranslationValue"], __constructs__ : ["ABSOLUTE_LENGTH","LENGTH","PERCENTAGE"] };
cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH = function(value) { var $x = ["ABSOLUTE_LENGTH",0,value]; $x.__enum__ = cocktail.core.css.CSSTranslationValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTranslationValue.LENGTH = function(value) { var $x = ["LENGTH",1,value]; $x.__enum__ = cocktail.core.css.CSSTranslationValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTranslationValue.PERCENTAGE = function(value) { var $x = ["PERCENTAGE",2,value]; $x.__enum__ = cocktail.core.css.CSSTranslationValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSFrequencyValue = $hxClasses["cocktail.core.css.CSSFrequencyValue"] = { __ename__ : ["cocktail","core","css","CSSFrequencyValue"], __constructs__ : ["HERTZ","KILO_HERTZ"] };
cocktail.core.css.CSSFrequencyValue.HERTZ = function(value) { var $x = ["HERTZ",0,value]; $x.__enum__ = cocktail.core.css.CSSFrequencyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSFrequencyValue.KILO_HERTZ = function(value) { var $x = ["KILO_HERTZ",1,value]; $x.__enum__ = cocktail.core.css.CSSFrequencyValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSResolutionValue = $hxClasses["cocktail.core.css.CSSResolutionValue"] = { __ename__ : ["cocktail","core","css","CSSResolutionValue"], __constructs__ : ["DPI","DPCM","DPPX"] };
cocktail.core.css.CSSResolutionValue.DPI = function(value) { var $x = ["DPI",0,value]; $x.__enum__ = cocktail.core.css.CSSResolutionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSResolutionValue.DPCM = function(value) { var $x = ["DPCM",1,value]; $x.__enum__ = cocktail.core.css.CSSResolutionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSResolutionValue.DPPX = function(value) { var $x = ["DPPX",2,value]; $x.__enum__ = cocktail.core.css.CSSResolutionValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSAngleValue = $hxClasses["cocktail.core.css.CSSAngleValue"] = { __ename__ : ["cocktail","core","css","CSSAngleValue"], __constructs__ : ["DEG","GRAD","RAD","TURN"] };
cocktail.core.css.CSSAngleValue.DEG = function(value) { var $x = ["DEG",0,value]; $x.__enum__ = cocktail.core.css.CSSAngleValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSAngleValue.GRAD = function(value) { var $x = ["GRAD",1,value]; $x.__enum__ = cocktail.core.css.CSSAngleValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSAngleValue.RAD = function(value) { var $x = ["RAD",2,value]; $x.__enum__ = cocktail.core.css.CSSAngleValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSAngleValue.TURN = function(value) { var $x = ["TURN",3,value]; $x.__enum__ = cocktail.core.css.CSSAngleValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue = $hxClasses["cocktail.core.css.CSSLengthValue"] = { __ename__ : ["cocktail","core","css","CSSLengthValue"], __constructs__ : ["PX","CM","MM","PT","PC","IN","EM","EX"] };
cocktail.core.css.CSSLengthValue.PX = function(value) { var $x = ["PX",0,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.CM = function(value) { var $x = ["CM",1,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.MM = function(value) { var $x = ["MM",2,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.PT = function(value) { var $x = ["PT",3,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.PC = function(value) { var $x = ["PC",4,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.IN = function(value) { var $x = ["IN",5,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.EM = function(value) { var $x = ["EM",6,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSLengthValue.EX = function(value) { var $x = ["EX",7,value]; $x.__enum__ = cocktail.core.css.CSSLengthValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTimeValue = $hxClasses["cocktail.core.css.CSSTimeValue"] = { __ename__ : ["cocktail","core","css","CSSTimeValue"], __constructs__ : ["SECONDS","MILLISECONDS"] };
cocktail.core.css.CSSTimeValue.SECONDS = function(value) { var $x = ["SECONDS",0,value]; $x.__enum__ = cocktail.core.css.CSSTimeValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSTimeValue.MILLISECONDS = function(value) { var $x = ["MILLISECONDS",1,value]; $x.__enum__ = cocktail.core.css.CSSTimeValue; $x.toString = $estr; return $x; };
cocktail.core.css.CSSKeywordValue = $hxClasses["cocktail.core.css.CSSKeywordValue"] = { __ename__ : ["cocktail","core","css","CSSKeywordValue"], __constructs__ : ["NORMAL","BOLD","BOLDER","LIGHTER","ITALIC","OBLIQUE","SMALL_CAPS","PRE","NO_WRAP","PRE_WRAP","PRE_LINE","LEFT","RIGHT","CENTER","JUSTIFY","CAPITALIZE","UPPERCASE","LOWERCASE","NONE","BASELINE","SUB","SUPER","TOP","TEXT_TOP","MIDDLE","BOTTOM","TEXT_BOTTOM","AUTO","BLOCK","INLINE_BLOCK","INLINE","BOTH","STATIC","RELATIVE","ABSOLUTE","FIXED","VISIBLE","HIDDEN","SCROLL","BORDER_BOX","PADDING_BOX","CONTENT_BOX","CONTAIN","COVER","CROSSHAIR","DEFAULT","POINTER","TEXT","ALL","EASE","LINEAR","EASE_IN","EASE_OUT","EASE_IN_OUT","STEP_START","STEP_END","START","END","XX_SMALL","X_SMALL","SMALL","MEDIUM","LARGE","X_LARGE","XX_LARGE","LARGER","SMALLER","REPEAT","REPEAT_X","REPEAT_Y","SPACE","ROUND","NO_REPEAT","THIN","THICK","DOTTED","DASHED","SOLID","DOUBLE","GROOVE","RIDGE","INSET","OUTSET","INVERT","UNDERLINE","OVERLINE","LINE_THROUGH","BLINK"] };
cocktail.core.css.CSSKeywordValue.NORMAL = ["NORMAL",0];
cocktail.core.css.CSSKeywordValue.NORMAL.toString = $estr;
cocktail.core.css.CSSKeywordValue.NORMAL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BOLD = ["BOLD",1];
cocktail.core.css.CSSKeywordValue.BOLD.toString = $estr;
cocktail.core.css.CSSKeywordValue.BOLD.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BOLDER = ["BOLDER",2];
cocktail.core.css.CSSKeywordValue.BOLDER.toString = $estr;
cocktail.core.css.CSSKeywordValue.BOLDER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LIGHTER = ["LIGHTER",3];
cocktail.core.css.CSSKeywordValue.LIGHTER.toString = $estr;
cocktail.core.css.CSSKeywordValue.LIGHTER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.ITALIC = ["ITALIC",4];
cocktail.core.css.CSSKeywordValue.ITALIC.toString = $estr;
cocktail.core.css.CSSKeywordValue.ITALIC.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.OBLIQUE = ["OBLIQUE",5];
cocktail.core.css.CSSKeywordValue.OBLIQUE.toString = $estr;
cocktail.core.css.CSSKeywordValue.OBLIQUE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SMALL_CAPS = ["SMALL_CAPS",6];
cocktail.core.css.CSSKeywordValue.SMALL_CAPS.toString = $estr;
cocktail.core.css.CSSKeywordValue.SMALL_CAPS.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.PRE = ["PRE",7];
cocktail.core.css.CSSKeywordValue.PRE.toString = $estr;
cocktail.core.css.CSSKeywordValue.PRE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.NO_WRAP = ["NO_WRAP",8];
cocktail.core.css.CSSKeywordValue.NO_WRAP.toString = $estr;
cocktail.core.css.CSSKeywordValue.NO_WRAP.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.PRE_WRAP = ["PRE_WRAP",9];
cocktail.core.css.CSSKeywordValue.PRE_WRAP.toString = $estr;
cocktail.core.css.CSSKeywordValue.PRE_WRAP.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.PRE_LINE = ["PRE_LINE",10];
cocktail.core.css.CSSKeywordValue.PRE_LINE.toString = $estr;
cocktail.core.css.CSSKeywordValue.PRE_LINE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LEFT = ["LEFT",11];
cocktail.core.css.CSSKeywordValue.LEFT.toString = $estr;
cocktail.core.css.CSSKeywordValue.LEFT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.RIGHT = ["RIGHT",12];
cocktail.core.css.CSSKeywordValue.RIGHT.toString = $estr;
cocktail.core.css.CSSKeywordValue.RIGHT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.CENTER = ["CENTER",13];
cocktail.core.css.CSSKeywordValue.CENTER.toString = $estr;
cocktail.core.css.CSSKeywordValue.CENTER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.JUSTIFY = ["JUSTIFY",14];
cocktail.core.css.CSSKeywordValue.JUSTIFY.toString = $estr;
cocktail.core.css.CSSKeywordValue.JUSTIFY.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.CAPITALIZE = ["CAPITALIZE",15];
cocktail.core.css.CSSKeywordValue.CAPITALIZE.toString = $estr;
cocktail.core.css.CSSKeywordValue.CAPITALIZE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.UPPERCASE = ["UPPERCASE",16];
cocktail.core.css.CSSKeywordValue.UPPERCASE.toString = $estr;
cocktail.core.css.CSSKeywordValue.UPPERCASE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LOWERCASE = ["LOWERCASE",17];
cocktail.core.css.CSSKeywordValue.LOWERCASE.toString = $estr;
cocktail.core.css.CSSKeywordValue.LOWERCASE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.NONE = ["NONE",18];
cocktail.core.css.CSSKeywordValue.NONE.toString = $estr;
cocktail.core.css.CSSKeywordValue.NONE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BASELINE = ["BASELINE",19];
cocktail.core.css.CSSKeywordValue.BASELINE.toString = $estr;
cocktail.core.css.CSSKeywordValue.BASELINE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SUB = ["SUB",20];
cocktail.core.css.CSSKeywordValue.SUB.toString = $estr;
cocktail.core.css.CSSKeywordValue.SUB.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SUPER = ["SUPER",21];
cocktail.core.css.CSSKeywordValue.SUPER.toString = $estr;
cocktail.core.css.CSSKeywordValue.SUPER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.TOP = ["TOP",22];
cocktail.core.css.CSSKeywordValue.TOP.toString = $estr;
cocktail.core.css.CSSKeywordValue.TOP.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.TEXT_TOP = ["TEXT_TOP",23];
cocktail.core.css.CSSKeywordValue.TEXT_TOP.toString = $estr;
cocktail.core.css.CSSKeywordValue.TEXT_TOP.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.MIDDLE = ["MIDDLE",24];
cocktail.core.css.CSSKeywordValue.MIDDLE.toString = $estr;
cocktail.core.css.CSSKeywordValue.MIDDLE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BOTTOM = ["BOTTOM",25];
cocktail.core.css.CSSKeywordValue.BOTTOM.toString = $estr;
cocktail.core.css.CSSKeywordValue.BOTTOM.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.TEXT_BOTTOM = ["TEXT_BOTTOM",26];
cocktail.core.css.CSSKeywordValue.TEXT_BOTTOM.toString = $estr;
cocktail.core.css.CSSKeywordValue.TEXT_BOTTOM.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.AUTO = ["AUTO",27];
cocktail.core.css.CSSKeywordValue.AUTO.toString = $estr;
cocktail.core.css.CSSKeywordValue.AUTO.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BLOCK = ["BLOCK",28];
cocktail.core.css.CSSKeywordValue.BLOCK.toString = $estr;
cocktail.core.css.CSSKeywordValue.BLOCK.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.INLINE_BLOCK = ["INLINE_BLOCK",29];
cocktail.core.css.CSSKeywordValue.INLINE_BLOCK.toString = $estr;
cocktail.core.css.CSSKeywordValue.INLINE_BLOCK.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.INLINE = ["INLINE",30];
cocktail.core.css.CSSKeywordValue.INLINE.toString = $estr;
cocktail.core.css.CSSKeywordValue.INLINE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BOTH = ["BOTH",31];
cocktail.core.css.CSSKeywordValue.BOTH.toString = $estr;
cocktail.core.css.CSSKeywordValue.BOTH.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.STATIC = ["STATIC",32];
cocktail.core.css.CSSKeywordValue.STATIC.toString = $estr;
cocktail.core.css.CSSKeywordValue.STATIC.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.RELATIVE = ["RELATIVE",33];
cocktail.core.css.CSSKeywordValue.RELATIVE.toString = $estr;
cocktail.core.css.CSSKeywordValue.RELATIVE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.ABSOLUTE = ["ABSOLUTE",34];
cocktail.core.css.CSSKeywordValue.ABSOLUTE.toString = $estr;
cocktail.core.css.CSSKeywordValue.ABSOLUTE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.FIXED = ["FIXED",35];
cocktail.core.css.CSSKeywordValue.FIXED.toString = $estr;
cocktail.core.css.CSSKeywordValue.FIXED.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.VISIBLE = ["VISIBLE",36];
cocktail.core.css.CSSKeywordValue.VISIBLE.toString = $estr;
cocktail.core.css.CSSKeywordValue.VISIBLE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.HIDDEN = ["HIDDEN",37];
cocktail.core.css.CSSKeywordValue.HIDDEN.toString = $estr;
cocktail.core.css.CSSKeywordValue.HIDDEN.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SCROLL = ["SCROLL",38];
cocktail.core.css.CSSKeywordValue.SCROLL.toString = $estr;
cocktail.core.css.CSSKeywordValue.SCROLL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BORDER_BOX = ["BORDER_BOX",39];
cocktail.core.css.CSSKeywordValue.BORDER_BOX.toString = $estr;
cocktail.core.css.CSSKeywordValue.BORDER_BOX.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.PADDING_BOX = ["PADDING_BOX",40];
cocktail.core.css.CSSKeywordValue.PADDING_BOX.toString = $estr;
cocktail.core.css.CSSKeywordValue.PADDING_BOX.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.CONTENT_BOX = ["CONTENT_BOX",41];
cocktail.core.css.CSSKeywordValue.CONTENT_BOX.toString = $estr;
cocktail.core.css.CSSKeywordValue.CONTENT_BOX.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.CONTAIN = ["CONTAIN",42];
cocktail.core.css.CSSKeywordValue.CONTAIN.toString = $estr;
cocktail.core.css.CSSKeywordValue.CONTAIN.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.COVER = ["COVER",43];
cocktail.core.css.CSSKeywordValue.COVER.toString = $estr;
cocktail.core.css.CSSKeywordValue.COVER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.CROSSHAIR = ["CROSSHAIR",44];
cocktail.core.css.CSSKeywordValue.CROSSHAIR.toString = $estr;
cocktail.core.css.CSSKeywordValue.CROSSHAIR.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.DEFAULT = ["DEFAULT",45];
cocktail.core.css.CSSKeywordValue.DEFAULT.toString = $estr;
cocktail.core.css.CSSKeywordValue.DEFAULT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.POINTER = ["POINTER",46];
cocktail.core.css.CSSKeywordValue.POINTER.toString = $estr;
cocktail.core.css.CSSKeywordValue.POINTER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.TEXT = ["TEXT",47];
cocktail.core.css.CSSKeywordValue.TEXT.toString = $estr;
cocktail.core.css.CSSKeywordValue.TEXT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.ALL = ["ALL",48];
cocktail.core.css.CSSKeywordValue.ALL.toString = $estr;
cocktail.core.css.CSSKeywordValue.ALL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.EASE = ["EASE",49];
cocktail.core.css.CSSKeywordValue.EASE.toString = $estr;
cocktail.core.css.CSSKeywordValue.EASE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LINEAR = ["LINEAR",50];
cocktail.core.css.CSSKeywordValue.LINEAR.toString = $estr;
cocktail.core.css.CSSKeywordValue.LINEAR.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.EASE_IN = ["EASE_IN",51];
cocktail.core.css.CSSKeywordValue.EASE_IN.toString = $estr;
cocktail.core.css.CSSKeywordValue.EASE_IN.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.EASE_OUT = ["EASE_OUT",52];
cocktail.core.css.CSSKeywordValue.EASE_OUT.toString = $estr;
cocktail.core.css.CSSKeywordValue.EASE_OUT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.EASE_IN_OUT = ["EASE_IN_OUT",53];
cocktail.core.css.CSSKeywordValue.EASE_IN_OUT.toString = $estr;
cocktail.core.css.CSSKeywordValue.EASE_IN_OUT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.STEP_START = ["STEP_START",54];
cocktail.core.css.CSSKeywordValue.STEP_START.toString = $estr;
cocktail.core.css.CSSKeywordValue.STEP_START.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.STEP_END = ["STEP_END",55];
cocktail.core.css.CSSKeywordValue.STEP_END.toString = $estr;
cocktail.core.css.CSSKeywordValue.STEP_END.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.START = ["START",56];
cocktail.core.css.CSSKeywordValue.START.toString = $estr;
cocktail.core.css.CSSKeywordValue.START.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.END = ["END",57];
cocktail.core.css.CSSKeywordValue.END.toString = $estr;
cocktail.core.css.CSSKeywordValue.END.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.XX_SMALL = ["XX_SMALL",58];
cocktail.core.css.CSSKeywordValue.XX_SMALL.toString = $estr;
cocktail.core.css.CSSKeywordValue.XX_SMALL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.X_SMALL = ["X_SMALL",59];
cocktail.core.css.CSSKeywordValue.X_SMALL.toString = $estr;
cocktail.core.css.CSSKeywordValue.X_SMALL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SMALL = ["SMALL",60];
cocktail.core.css.CSSKeywordValue.SMALL.toString = $estr;
cocktail.core.css.CSSKeywordValue.SMALL.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.MEDIUM = ["MEDIUM",61];
cocktail.core.css.CSSKeywordValue.MEDIUM.toString = $estr;
cocktail.core.css.CSSKeywordValue.MEDIUM.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LARGE = ["LARGE",62];
cocktail.core.css.CSSKeywordValue.LARGE.toString = $estr;
cocktail.core.css.CSSKeywordValue.LARGE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.X_LARGE = ["X_LARGE",63];
cocktail.core.css.CSSKeywordValue.X_LARGE.toString = $estr;
cocktail.core.css.CSSKeywordValue.X_LARGE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.XX_LARGE = ["XX_LARGE",64];
cocktail.core.css.CSSKeywordValue.XX_LARGE.toString = $estr;
cocktail.core.css.CSSKeywordValue.XX_LARGE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LARGER = ["LARGER",65];
cocktail.core.css.CSSKeywordValue.LARGER.toString = $estr;
cocktail.core.css.CSSKeywordValue.LARGER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SMALLER = ["SMALLER",66];
cocktail.core.css.CSSKeywordValue.SMALLER.toString = $estr;
cocktail.core.css.CSSKeywordValue.SMALLER.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.REPEAT = ["REPEAT",67];
cocktail.core.css.CSSKeywordValue.REPEAT.toString = $estr;
cocktail.core.css.CSSKeywordValue.REPEAT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.REPEAT_X = ["REPEAT_X",68];
cocktail.core.css.CSSKeywordValue.REPEAT_X.toString = $estr;
cocktail.core.css.CSSKeywordValue.REPEAT_X.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.REPEAT_Y = ["REPEAT_Y",69];
cocktail.core.css.CSSKeywordValue.REPEAT_Y.toString = $estr;
cocktail.core.css.CSSKeywordValue.REPEAT_Y.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SPACE = ["SPACE",70];
cocktail.core.css.CSSKeywordValue.SPACE.toString = $estr;
cocktail.core.css.CSSKeywordValue.SPACE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.ROUND = ["ROUND",71];
cocktail.core.css.CSSKeywordValue.ROUND.toString = $estr;
cocktail.core.css.CSSKeywordValue.ROUND.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.NO_REPEAT = ["NO_REPEAT",72];
cocktail.core.css.CSSKeywordValue.NO_REPEAT.toString = $estr;
cocktail.core.css.CSSKeywordValue.NO_REPEAT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.THIN = ["THIN",73];
cocktail.core.css.CSSKeywordValue.THIN.toString = $estr;
cocktail.core.css.CSSKeywordValue.THIN.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.THICK = ["THICK",74];
cocktail.core.css.CSSKeywordValue.THICK.toString = $estr;
cocktail.core.css.CSSKeywordValue.THICK.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.DOTTED = ["DOTTED",75];
cocktail.core.css.CSSKeywordValue.DOTTED.toString = $estr;
cocktail.core.css.CSSKeywordValue.DOTTED.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.DASHED = ["DASHED",76];
cocktail.core.css.CSSKeywordValue.DASHED.toString = $estr;
cocktail.core.css.CSSKeywordValue.DASHED.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.SOLID = ["SOLID",77];
cocktail.core.css.CSSKeywordValue.SOLID.toString = $estr;
cocktail.core.css.CSSKeywordValue.SOLID.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.DOUBLE = ["DOUBLE",78];
cocktail.core.css.CSSKeywordValue.DOUBLE.toString = $estr;
cocktail.core.css.CSSKeywordValue.DOUBLE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.GROOVE = ["GROOVE",79];
cocktail.core.css.CSSKeywordValue.GROOVE.toString = $estr;
cocktail.core.css.CSSKeywordValue.GROOVE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.RIDGE = ["RIDGE",80];
cocktail.core.css.CSSKeywordValue.RIDGE.toString = $estr;
cocktail.core.css.CSSKeywordValue.RIDGE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.INSET = ["INSET",81];
cocktail.core.css.CSSKeywordValue.INSET.toString = $estr;
cocktail.core.css.CSSKeywordValue.INSET.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.OUTSET = ["OUTSET",82];
cocktail.core.css.CSSKeywordValue.OUTSET.toString = $estr;
cocktail.core.css.CSSKeywordValue.OUTSET.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.INVERT = ["INVERT",83];
cocktail.core.css.CSSKeywordValue.INVERT.toString = $estr;
cocktail.core.css.CSSKeywordValue.INVERT.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.UNDERLINE = ["UNDERLINE",84];
cocktail.core.css.CSSKeywordValue.UNDERLINE.toString = $estr;
cocktail.core.css.CSSKeywordValue.UNDERLINE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.OVERLINE = ["OVERLINE",85];
cocktail.core.css.CSSKeywordValue.OVERLINE.toString = $estr;
cocktail.core.css.CSSKeywordValue.OVERLINE.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.LINE_THROUGH = ["LINE_THROUGH",86];
cocktail.core.css.CSSKeywordValue.LINE_THROUGH.toString = $estr;
cocktail.core.css.CSSKeywordValue.LINE_THROUGH.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSKeywordValue.BLINK = ["BLINK",87];
cocktail.core.css.CSSKeywordValue.BLINK.toString = $estr;
cocktail.core.css.CSSKeywordValue.BLINK.__enum__ = cocktail.core.css.CSSKeywordValue;
cocktail.core.css.CSSRule = function(parentStyleSheet,parentRule) {
	this.parentStyleSheet = parentStyleSheet;
	this.parentRule = parentRule;
};
$hxClasses["cocktail.core.css.CSSRule"] = cocktail.core.css.CSSRule;
cocktail.core.css.CSSRule.__name__ = ["cocktail","core","css","CSSRule"];
cocktail.core.css.CSSRule.prototype = {
	dispose: function() {
		if(this.parentRule != null) {
			this.parentRule.dispose();
			this.parentRule = null;
		}
		if(this.parentStyleSheet != null) this.parentStyleSheet.dispose();
	}
	,get_cssText: function() {
		return this.cssText;
	}
	,set_cssText: function(value) {
		return this.cssText = value;
	}
	,__class__: cocktail.core.css.CSSRule
	,__properties__: {set_cssText:"set_cssText",get_cssText:"get_cssText"}
};
cocktail.core.css.CSSMediaRule = function(parentStyleSheet,parentRule) {
	cocktail.core.css.CSSRule.call(this,parentStyleSheet,parentRule);
};
$hxClasses["cocktail.core.css.CSSMediaRule"] = cocktail.core.css.CSSMediaRule;
cocktail.core.css.CSSMediaRule.__name__ = ["cocktail","core","css","CSSMediaRule"];
cocktail.core.css.CSSMediaRule.__super__ = cocktail.core.css.CSSRule;
cocktail.core.css.CSSMediaRule.prototype = $extend(cocktail.core.css.CSSRule.prototype,{
	insertRule: function(rule,index) {
		return -1;
	}
	,deleteRule: function(index) {
	}
	,__class__: cocktail.core.css.CSSMediaRule
});
cocktail.core.css.CSSStyleDeclaration = function(parentRule,onStyleChange) {
	this._onStyleChange = onStyleChange;
	this.parentRule = parentRule;
	this.length = 0;
};
$hxClasses["cocktail.core.css.CSSStyleDeclaration"] = cocktail.core.css.CSSStyleDeclaration;
cocktail.core.css.CSSStyleDeclaration.__name__ = ["cocktail","core","css","CSSStyleDeclaration"];
cocktail.core.css.CSSStyleDeclaration.prototype = {
	dispose: function() {
		this._indexedProperties = null;
		this._propertiesPositions = null;
		this._onStyleChange = null;
		if(this.parentRule != null) {
			this.parentRule.dispose();
			this.parentRule = null;
		}
	}
	,reset: function() {
		this._onStyleChange = null;
		this.parentRule = null;
		this.length = 0;
		this.resetIndexedProperties();
		this.resetPropertiesPositions();
	}
	,resetIndexedProperties: function() {
		if(this._indexedProperties == null) this._indexedProperties = new Array();
		var _g = 0;
		while(_g < 87) {
			var i = _g++;
			this._indexedProperties[i] = null;
		}
	}
	,resetPropertiesPositions: function() {
		if(this._propertiesPositions == null) this._propertiesPositions = new Array();
		var _g = 0;
		while(_g < 87) {
			var i = _g++;
			this._propertiesPositions[i] = -1;
		}
	}
	,decrementPropertiesPositions: function(removedPropertyIndex) {
		var foundProperty = false;
		var _g1 = 0;
		var _g = this.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(foundProperty == true) this._propertiesPositions[i] = this._propertiesPositions[i - 1];
			if(this._propertiesPositions[i] == removedPropertyIndex) foundProperty = true;
		}
	}
	,item: function(index) {
		if(index > this.length - 1) return -1;
		return this._propertiesPositions[index];
	}
	,getPropertyValue: function(propertyIndex) {
		var typedProperty;
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		typedProperty = this._indexedProperties[propertyIndex];
		if(typedProperty != null) return cocktail.core.css.parsers.CSSStyleSerializer.serialize(typedProperty.typedValue);
		return null;
	}
	,setProperty: function(index,value,priority) {
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		if(value == null) this.removeProperty(index); else {
			var typedProperty = cocktail.core.css.parsers.CSSStyleParser.parseStyleValue(cocktail.core.css.CSSConstants.getPropertyNameFromIndex(index),value,0,null);
			if(typedProperty != null) this.applyProperty(typedProperty.index,typedProperty.typedValue,typedProperty.important);
		}
	}
	,removeProperty: function(index) {
		var typedProperty;
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		typedProperty = this._indexedProperties[index];
		if(typedProperty != null) {
			this.decrementPropertiesPositions(index);
			this._propertiesPositions[this.length] = -1;
			this.length--;
			this._indexedProperties[index] = null;
			if(this._onStyleChange != null) this._onStyleChange(index);
			return index;
		}
		return -1;
	}
	,getPropertyPriority: function(propertyIndex) {
		var typedProperty;
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		typedProperty = this._indexedProperties[propertyIndex];
		if(typedProperty != null) {
			if(typedProperty.important == true) return "important"; else return "";
		}
		return null;
	}
	,getTypedProperty: function(propertyIndex) {
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		return this._indexedProperties[propertyIndex];
	}
	,setTypedProperty: function(propertyIndex,typedValue,important) {
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		var currentProperty;
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		currentProperty = this._indexedProperties[propertyIndex];
		if(currentProperty == null) {
			var newProperty = new cocktail.core.css.TypedPropertyVO();
			newProperty.important = important;
			newProperty.typedValue = typedValue;
			newProperty.index = propertyIndex;
			this._propertiesPositions[this.length] = propertyIndex;
			this.length++;
			this._indexedProperties[propertyIndex] = newProperty;
			if(this._onStyleChange != null) this._onStyleChange(propertyIndex);
		} else if(currentProperty.typedValue != typedValue || currentProperty.important != important) {
			currentProperty.typedValue = typedValue;
			currentProperty.important = important;
			if(this._onStyleChange != null) this._onStyleChange(propertyIndex);
		}
	}
	,setTypedPropertyInitial: function(propertyIndex,typedValue,important) {
		var newProperty = new cocktail.core.css.TypedPropertyVO();
		newProperty.important = important;
		newProperty.typedValue = typedValue;
		newProperty.index = propertyIndex;
		if(this._indexedProperties == null) {
			this.resetIndexedProperties();
			this.resetPropertiesPositions();
		}
		this._propertiesPositions[this.length] = propertyIndex;
		this.length++;
		this._indexedProperties[propertyIndex] = newProperty;
		if(this._onStyleChange != null) this._onStyleChange(propertyIndex);
	}
	,applyProperty: function(propertyIndex,styleValue,important) {
		if(this.isShorthand(propertyIndex) == true) {
			if(this.isValidShorthand(propertyIndex,styleValue) == true) this.setShorthand(propertyIndex,styleValue,important);
		} else if(this.isValidProperty(propertyIndex,styleValue) == true) this.setTypedProperty(propertyIndex,styleValue,important);
	}
	,isValidProperty: function(propertyIndex,styleValue) {
		switch(propertyIndex) {
		case 15:case 16:
			switch(styleValue[1]) {
			case 7:
				var value = styleValue[2];
				if(this.isPositiveLength(value) == true) return true;
				break;
			case 0:
				var value1 = styleValue[2];
				if(value1 == 0) return true;
				break;
			case 2:
				var value2 = styleValue[2];
				if(value2 >= 0) return true;
				break;
			case 4:
				var value3 = styleValue[2];
				if(value3 == cocktail.core.css.CSSKeywordValue.AUTO) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 0:
			switch(styleValue[1]) {
			case 4:
				var value4 = styleValue[2];
				switch(value4[1]) {
				case 30:case 29:case 18:case 28:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 49:
			switch(styleValue[1]) {
			case 4:
				var value5 = styleValue[2];
				switch(value5[1]) {
				case 36:case 37:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 1:
			switch(styleValue[1]) {
			case 4:
				var value6 = styleValue[2];
				switch(value6[1]) {
				case 32:case 35:case 34:case 33:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 34:
			switch(styleValue[1]) {
			case 7:
				var value7 = styleValue[2];
				if(this.isPositiveLength(value7) == true) return true;
				break;
			case 2:
				var value8 = styleValue[2];
				if(value8 >= 0) return true;
				break;
			case 4:
				var value9 = styleValue[2];
				switch(value9[1]) {
				case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 8:case 6:case 9:case 7:
			return this.isValidMarginProperty(styleValue);
		case 13:case 14:case 11:case 12:
			return this.isValidPaddingProperty(styleValue);
		case 20:case 18:
			switch(styleValue[1]) {
			case 4:
				var value10 = styleValue[2];
				switch(value10[1]) {
				case 18:
					return true;
				default:
				}
				break;
			case 7:
				var value11 = styleValue[2];
				if(this.isPositiveLength(value11) == true) return true;
				break;
			case 2:
				var value12 = styleValue[2];
				if(value12 >= 0) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 53:
			switch(styleValue[1]) {
			case 1:
				var value13 = styleValue[2];
				return true;
			case 0:
				var value14 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 19:case 17:
			switch(styleValue[1]) {
			case 7:
				var value15 = styleValue[2];
				if(this.isPositiveLength(value15) == true) return true;
				break;
			case 2:
				var value16 = styleValue[2];
				if(value16 >= 0) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 22:case 23:case 21:case 24:
			switch(styleValue[1]) {
			case 7:
				var value17 = styleValue[2];
				return true;
			case 2:
				var value18 = styleValue[2];
				return true;
			case 0:
				var value19 = styleValue[2];
				if(value19 == 0) return true;
				break;
			case 4:
				var value20 = styleValue[2];
				if(value20 == cocktail.core.css.CSSKeywordValue.AUTO) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 36:
			switch(styleValue[1]) {
			case 4:
				var value21 = styleValue[2];
				switch(value21[1]) {
				case 4:case 5:case 0:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 61:
			switch(styleValue[1]) {
			case 4:
				var value22 = styleValue[2];
				switch(value22[1]) {
				case 18:
					return true;
				default:
				}
				break;
			case 21:
				var value23 = styleValue[2];
				return true;
			case 15:
				var value24 = styleValue[2];
				var _g1 = 0;
				var _g = value24.length;
				while(_g1 < _g) {
					var i = _g1++;
					{
						var _g2 = value24[i];
						switch(_g2[1]) {
						case 21:
							var value25 = _g2[2];
							break;
						default:
							return false;
						}
					}
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 60:
			switch(styleValue[1]) {
			case 13:
				var value26 = styleValue[2];
				if(value26.length != 2) return false;
				var horizontalValueIsValid = this.isValidTransformOrigin(value26[0],true,false);
				if(horizontalValueIsValid == false) return false;
				return this.isValidTransformOrigin(value26[1],false,true);
			case 16:case 17:
				return true;
			default:
				return this.isValidTransformOrigin(styleValue,true,true);
			}
			break;
		case 51:case 52:
			switch(styleValue[1]) {
			case 4:
				var value27 = styleValue[2];
				switch(value27[1]) {
				case 36:case 38:case 37:case 27:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 37:
			switch(styleValue[1]) {
			case 15:
				var values = styleValue[2];
				var length = values.length;
				var _g3 = 0;
				while(_g3 < length) {
					var i1 = _g3++;
					{
						var _g11 = values[i1];
						switch(_g11[1]) {
						case 3:
							var value28 = _g11[2];
							break;
						case 6:
							var value29 = _g11[2];
							break;
						default:
							return false;
						}
					}
				}
				return true;
			case 3:
				var value30 = styleValue[2];
				return true;
			case 6:
				var value31 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 2:case 3:
			switch(styleValue[1]) {
			case 4:
				var value32 = styleValue[2];
				switch(value32[1]) {
				case 11:case 12:case 31:case 18:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 45:
			switch(styleValue[1]) {
			case 4:
				var value33 = styleValue[2];
				switch(value33[1]) {
				case 0:case 8:case 10:case 7:case 9:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 42:
			switch(styleValue[1]) {
			case 4:
				var value34 = styleValue[2];
				switch(value34[1]) {
				case 18:case 16:case 17:case 15:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 35:
			switch(styleValue[1]) {
			case 4:
				var value35 = styleValue[2];
				switch(value35[1]) {
				case 0:case 1:case 2:case 3:
					return true;
				default:
				}
				break;
			case 0:
				var value36 = styleValue[2];
				switch(value36) {
				case 100:case 200:case 300:case 400:case 500:case 600:case 700:case 800:case 900:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 38:
			switch(styleValue[1]) {
			case 4:
				var value37 = styleValue[2];
				switch(value37[1]) {
				case 0:case 6:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 46:
			switch(styleValue[1]) {
			case 4:
				var value38 = styleValue[2];
				switch(value38[1]) {
				case 11:case 12:case 13:case 14:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 48:
			switch(styleValue[1]) {
			case 4:
				var value39 = styleValue[2];
				switch(value39[1]) {
				case 19:case 20:case 21:case 26:case 23:case 24:case 22:case 25:
					return true;
				default:
				}
				break;
			case 2:
				var value40 = styleValue[2];
				return true;
			case 7:
				var value41 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 54:
			switch(styleValue[1]) {
			case 4:
				var value42 = styleValue[2];
				switch(value42[1]) {
				case 27:case 44:case 45:case 46:case 47:
					return true;
				default:
				}
				break;
			case 5:
				var value43 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 4:
			switch(styleValue[1]) {
			case 4:
				var value44 = styleValue[2];
				if(value44 == cocktail.core.css.CSSKeywordValue.AUTO) return true;
				break;
			case 0:
				var value45 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 41:
			switch(styleValue[1]) {
			case 4:
				var value46 = styleValue[2];
				if(value46 == cocktail.core.css.CSSKeywordValue.NORMAL) return true;
				break;
			case 7:
				var value47 = styleValue[2];
				if(this.isPositiveLength(value47) == true) return true;
				break;
			case 1:
				var value48 = styleValue[2];
				if(value48 >= 0) return true;
				break;
			case 0:
				var value49 = styleValue[2];
				if(value49 >= 0) return true;
				break;
			case 2:
				var value50 = styleValue[2];
				if(value50 >= 0) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 47:
			switch(styleValue[1]) {
			case 0:
				var value51 = styleValue[2];
				if(value51 == 0) return true;
				break;
			case 7:
				var value52 = styleValue[2];
				return true;
			case 2:
				var value53 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 43:case 44:
			switch(styleValue[1]) {
			case 4:
				var value54 = styleValue[2];
				if(value54 == cocktail.core.css.CSSKeywordValue.NORMAL) return true;
				break;
			case 7:
				var value55 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 40:case 25:
			switch(styleValue[1]) {
			case 12:
				var value56 = styleValue[2];
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 26:
			switch(styleValue[1]) {
			case 4:
				var value57 = styleValue[2];
				if(value57 == cocktail.core.css.CSSKeywordValue.NONE) return true;
				break;
			case 5:
				var value58 = styleValue[2];
				return true;
			case 15:
				var value59 = styleValue[2];
				var isImageList = true;
				var _g12 = 0;
				var _g4 = value59.length;
				while(_g12 < _g4) {
					var i2 = _g12++;
					{
						var _g21 = value59[i2];
						switch(_g21[1]) {
						case 5:
							var value60 = _g21[2];
							break;
						case 4:
							var value61 = _g21[2];
							if(value61 != cocktail.core.css.CSSKeywordValue.NONE) isImageList = false;
							break;
						default:
							isImageList = false;
						}
					}
				}
				if(isImageList == true) return true;
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 32:
			switch(styleValue[1]) {
			case 4:
				var value62 = styleValue[2];
				switch(value62[1]) {
				case 38:case 35:
					return true;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 30:
			switch(styleValue[1]) {
			case 13:
				var value63 = styleValue[2];
				var _g5 = value63.length;
				switch(_g5) {
				case 2:
					var isValidHorizontalPosition = this.isValidBackgroundPosition(value63[0]);
					if(isValidHorizontalPosition == false) return false;
					return this.isValidBackgroundPosition(value63[1]);
				}
				break;
			default:
				return this.isValidBackgroundPosition(styleValue);
			}
			break;
		case 27:
			switch(styleValue[1]) {
			case 4:
				var value64 = styleValue[2];
				switch(value64[1]) {
				case 67:case 68:case 69:case 72:case 71:case 70:
					return true;
				default:
				}
				break;
			case 13:
				var value65 = styleValue[2];
				if(value65.length == 2) {
					var isFirstValueValid = false;
					{
						var _g6 = value65[0];
						switch(_g6[1]) {
						case 4:
							var value66 = _g6[2];
							switch(value66[1]) {
							case 67:case 70:case 71:case 72:
								isFirstValueValid = true;
								break;
							default:
							}
							break;
						default:
						}
					}
					var isSecondValueValid = false;
					{
						var _g7 = value65[1];
						switch(_g7[1]) {
						case 4:
							var value67 = _g7[2];
							switch(value67[1]) {
							case 67:case 70:case 71:case 72:
								isSecondValueValid = true;
								break;
							default:
							}
							break;
						default:
						}
					}
					if(isFirstValueValid == true && isSecondValueValid == true) return true;
				}
				break;
			case 15:
				var value68 = styleValue[2];
				var _g13 = 0;
				var _g8 = value68.length;
				while(_g13 < _g8) {
					var i3 = _g13++;
					if(this.isValidProperty(27,value68[i3]) == false) return false;
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 29:
			switch(styleValue[1]) {
			case 4:
				var value69 = styleValue[2];
				switch(value69[1]) {
				case 43:case 42:case 27:
					return true;
				default:
				}
				break;
			case 13:
				var value70 = styleValue[2];
				if(value70.length == 2) {
					var isFirstValueValid1 = this.isValidBackgroundSize(value70[0]);
					if(isFirstValueValid1 == false) return false;
					return this.isValidBackgroundSize(value70[1]);
				}
				break;
			case 15:
				var value71 = styleValue[2];
				var _g14 = 0;
				var _g9 = value71.length;
				while(_g14 < _g9) {
					var i4 = _g14++;
					if(this.isValidProperty(29,value71[i4]) == false) return false;
				}
				return true;
			default:
				return this.isValidBackgroundSize(styleValue);
			}
			break;
		case 31:case 28:
			switch(styleValue[1]) {
			case 4:
				var value72 = styleValue[2];
				switch(value72[1]) {
				case 39:case 40:case 41:
					return true;
				default:
				}
				break;
			case 15:
				var value73 = styleValue[2];
				var _g15 = 0;
				var _g10 = value73.length;
				while(_g15 < _g10) {
					var i5 = _g15++;
					if(this.isValidProperty(propertyIndex,value73[i5]) == false) return false;
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 57:
			switch(styleValue[1]) {
			case 15:
				var value74 = styleValue[2];
				var length1 = value74.length;
				var _g16 = 0;
				while(_g16 < length1) {
					var i6 = _g16++;
					var isValid = this.isValidTransitionProperty(value74[i6]);
					if(isValid == false) return false;
				}
				return true;
			default:
				return this.isValidTransitionProperty(styleValue);
			}
			break;
		case 55:case 56:
			switch(styleValue[1]) {
			case 15:
				var value75 = styleValue[2];
				var length2 = value75.length;
				var _g17 = 0;
				while(_g17 < length2) {
					var i7 = _g17++;
					var isValid1 = this.isValidTransitionDelayOrDuration(value75[i7]);
					if(isValid1 == false) return false;
				}
				return true;
			default:
				return this.isValidTransitionDelayOrDuration(styleValue);
			}
			break;
		case 58:
			switch(styleValue[1]) {
			case 15:
				var value76 = styleValue[2];
				var length3 = value76.length;
				var _g18 = 0;
				while(_g18 < length3) {
					var i8 = _g18++;
					var isValid2 = this.isValidTransitionTimingFunction(value76[i8]);
					if(isValid2 == false) return false;
				}
				break;
			default:
				return this.isValidTransitionTimingFunction(styleValue);
			}
			break;
		case 62:case 63:case 64:case 65:case 82:
			switch(styleValue[1]) {
			case 16:case 17:
				return true;
			default:
				return this.isValidBorderWidthValue(styleValue);
			}
			break;
		case 67:case 68:case 69:case 70:
			switch(styleValue[1]) {
			case 16:case 17:
				return true;
			default:
				return this.isValidBorderColorValue(styleValue);
			}
			break;
		case 72:case 73:case 74:case 75:
			switch(styleValue[1]) {
			case 16:case 17:
				return true;
			default:
				return this.isValidBorderStyleValue(styleValue);
			}
			break;
		case 83:
			switch(styleValue[1]) {
			case 16:case 17:
				return true;
			default:
				return this.isValidOutlineStyleValue(styleValue);
			}
			break;
		case 84:
			switch(styleValue[1]) {
			case 16:case 17:
				return true;
			default:
				return this.isValidOutlineColorValue(styleValue);
			}
			break;
		case 86:
			switch(styleValue[1]) {
			case 4:
				var value77 = styleValue[2];
				switch(value77[1]) {
				case 18:case 84:case 85:case 86:case 87:
					return true;
				default:
				}
				break;
			case 13:
				var value78 = styleValue[2];
				if(value78.length != 2 && value78.length != 3 && value78.length != 4) return false;
				var foundUnderline = false;
				var foundOverline = false;
				var foundLineThrough = false;
				var foundBlink = false;
				var _g19 = 0;
				var _g20 = value78.length;
				while(_g19 < _g20) {
					var i9 = _g19++;
					{
						var _g22 = value78[i9];
						switch(_g22[1]) {
						case 4:
							var value79 = _g22[2];
							switch(value79[1]) {
							case 84:
								if(foundUnderline == true) return false;
								foundUnderline = true;
								break;
							case 85:
								if(foundOverline == true) return false;
								foundOverline = true;
								break;
							case 86:
								if(foundLineThrough == true) return false;
								foundLineThrough = true;
								break;
							case 87:
								if(foundBlink == true) return false;
								foundBlink = true;
								break;
							default:
								false;
							}
							break;
						default:
							false;
						}
					}
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		}
		return false;
	}
	,isValidTransitionTimingFunction: function(property) {
		switch(property[1]) {
		case 4:
			var value = property[2];
			switch(value[1]) {
			case 49:case 51:case 50:case 52:case 53:case 54:case 55:
				return true;
			default:
			}
			break;
		case 19:
			var intervalChange = property[3];
			var intervalNumbers = property[2];
			return true;
		case 20:
			var y2 = property[5];
			var x2 = property[4];
			var y1 = property[3];
			var x1 = property[2];
			return true;
		default:
		}
		return false;
	}
	,isValidTransitionProperty: function(property) {
		switch(property[1]) {
		case 4:
			var value = property[2];
			switch(value[1]) {
			case 18:case 48:case 11:case 12:case 22:case 25:
				return true;
			default:
			}
			break;
		case 3:
			var value1 = property[2];
			return true;
		case 16:case 17:
			return true;
		default:
		}
		return false;
	}
	,isValidTransitionDelayOrDuration: function(property) {
		switch(property[1]) {
		case 0:
			var value = property[2];
			if(value == 0) return true;
			break;
		case 9:
			var value1 = property[2];
			return true;
		case 16:case 17:
			return true;
		default:
		}
		return false;
	}
	,isValidBackgroundPosition: function(property) {
		switch(property[1]) {
		case 7:
			var value = property[2];
			return true;
		case 0:
			var value1 = property[2];
			return value1 == 0;
		case 2:
			var value2 = property[2];
			return true;
		case 4:
			var value3 = property[2];
			switch(value3[1]) {
			case 11:case 13:case 12:case 25:case 22:
				return true;
			default:
			}
			break;
		case 16:case 17:
			return true;
		default:
		}
		return false;
	}
	,isValidBackgroundSize: function(property) {
		switch(property[1]) {
		case 4:
			var value = property[2];
			return value == cocktail.core.css.CSSKeywordValue.AUTO;
		case 7:
			var value1 = property[2];
			if(this.isPositiveLength(value1)) return true;
			break;
		case 0:
			var value2 = property[2];
			return value2 == 0;
		case 2:
			var value3 = property[2];
			return true;
		case 16:case 17:
			return true;
		default:
		}
		return false;
	}
	,isShorthand: function(propertyIndex) {
		switch(propertyIndex) {
		case 5:case 10:case 50:case 59:case 33:case 39:case 77:case 80:case 78:case 79:case 66:case 71:case 76:case 81:case 85:
			return true;
		default:
			return false;
		}
	}
	,setShorthand: function(propertyIndex,styleValue,important) {
		switch(propertyIndex) {
		case 5:
			switch(styleValue[1]) {
			case 7:
				var value = styleValue[2];
				this.setTypedProperty(6,styleValue,important);
				this.setTypedProperty(7,styleValue,important);
				this.setTypedProperty(8,styleValue,important);
				this.setTypedProperty(9,styleValue,important);
				break;
			case 2:
				var value1 = styleValue[2];
				this.setTypedProperty(6,styleValue,important);
				this.setTypedProperty(7,styleValue,important);
				this.setTypedProperty(8,styleValue,important);
				this.setTypedProperty(9,styleValue,important);
				break;
			case 0:
				var value2 = styleValue[2];
				this.setTypedProperty(6,styleValue,important);
				this.setTypedProperty(7,styleValue,important);
				this.setTypedProperty(8,styleValue,important);
				this.setTypedProperty(9,styleValue,important);
				break;
			case 16:case 17:
				this.setTypedProperty(6,styleValue,important);
				this.setTypedProperty(7,styleValue,important);
				this.setTypedProperty(8,styleValue,important);
				this.setTypedProperty(9,styleValue,important);
				break;
			case 4:
				var value3 = styleValue[2];
				if(value3 == cocktail.core.css.CSSKeywordValue.AUTO) {
					this.setTypedProperty(6,styleValue,important);
					this.setTypedProperty(7,styleValue,important);
					this.setTypedProperty(8,styleValue,important);
					this.setTypedProperty(9,styleValue,important);
				}
				break;
			case 13:
				var value4 = styleValue[2];
				var _g = value4.length;
				switch(_g) {
				case 2:
					this.setTypedProperty(6,value4[1],important);
					this.setTypedProperty(7,value4[1],important);
					this.setTypedProperty(8,value4[0],important);
					this.setTypedProperty(9,value4[0],important);
					break;
				case 3:
					this.setTypedProperty(6,value4[1],important);
					this.setTypedProperty(7,value4[1],important);
					this.setTypedProperty(8,value4[0],important);
					this.setTypedProperty(9,value4[2],important);
					break;
				case 4:
					this.setTypedProperty(6,value4[3],important);
					this.setTypedProperty(7,value4[1],important);
					this.setTypedProperty(8,value4[0],important);
					this.setTypedProperty(9,value4[2],important);
					break;
				}
				break;
			default:
			}
			break;
		case 10:
			switch(styleValue[1]) {
			case 7:
				var value5 = styleValue[2];
				this.setTypedProperty(11,styleValue,important);
				this.setTypedProperty(12,styleValue,important);
				this.setTypedProperty(13,styleValue,important);
				this.setTypedProperty(14,styleValue,important);
				break;
			case 2:
				var value6 = styleValue[2];
				this.setTypedProperty(11,styleValue,important);
				this.setTypedProperty(12,styleValue,important);
				this.setTypedProperty(13,styleValue,important);
				this.setTypedProperty(14,styleValue,important);
				break;
			case 0:
				var value7 = styleValue[2];
				this.setTypedProperty(11,styleValue,important);
				this.setTypedProperty(12,styleValue,important);
				this.setTypedProperty(13,styleValue,important);
				this.setTypedProperty(14,styleValue,important);
				break;
			case 16:case 17:
				this.setTypedProperty(11,styleValue,important);
				this.setTypedProperty(12,styleValue,important);
				this.setTypedProperty(13,styleValue,important);
				this.setTypedProperty(14,styleValue,important);
				break;
			case 13:
				var value8 = styleValue[2];
				var _g1 = value8.length;
				switch(_g1) {
				case 2:
					this.setTypedProperty(11,value8[1],important);
					this.setTypedProperty(12,value8[1],important);
					this.setTypedProperty(13,value8[0],important);
					this.setTypedProperty(14,value8[0],important);
					break;
				case 3:
					this.setTypedProperty(11,value8[1],important);
					this.setTypedProperty(12,value8[1],important);
					this.setTypedProperty(13,value8[0],important);
					this.setTypedProperty(14,value8[2],important);
					break;
				case 4:
					this.setTypedProperty(11,value8[3],important);
					this.setTypedProperty(12,value8[1],important);
					this.setTypedProperty(13,value8[0],important);
					this.setTypedProperty(14,value8[2],important);
					break;
				}
				break;
			default:
			}
			break;
		case 50:
			switch(styleValue[1]) {
			case 4:
				var value9 = styleValue[2];
				this.setTypedProperty(51,styleValue,important);
				this.setTypedProperty(52,styleValue,important);
				break;
			case 13:
				var value10 = styleValue[2];
				this.setTypedProperty(51,value10[0],important);
				this.setTypedProperty(52,value10[1],important);
				break;
			default:
			}
			break;
		case 33:
			switch(styleValue[1]) {
			case 5:
				var value11 = styleValue[2];
				this.setTypedProperty(26,styleValue,important);
				break;
			case 12:
				var value12 = styleValue[2];
				this.setTypedProperty(25,styleValue,important);
				break;
			case 4:
				var value13 = styleValue[2];
				if(this.isValidBackgroundRepeat(styleValue) == true) this.setTypedProperty(27,styleValue,important); else if(this.isValidBackgroundPosition(styleValue) == true) this.setTypedProperty(30,styleValue,important); else if(this.isValidBackgroundAttachment(styleValue) == true) this.setTypedProperty(32,styleValue,important); else switch(value13[1]) {
				case 18:
					var initialStyleDeclaration = cocktail.core.css.InitialStyleDeclaration.getInstance();
					this.setTypedProperty(32,((function($this) {
						var $r;
						if(initialStyleDeclaration._indexedProperties == null) {
							initialStyleDeclaration.resetIndexedProperties();
							initialStyleDeclaration.resetPropertiesPositions();
						}
						$r = initialStyleDeclaration._indexedProperties[32];
						return $r;
					}(this))).typedValue,important);
					this.setTypedProperty(30,((function($this) {
						var $r;
						if(initialStyleDeclaration._indexedProperties == null) {
							initialStyleDeclaration.resetIndexedProperties();
							initialStyleDeclaration.resetPropertiesPositions();
						}
						$r = initialStyleDeclaration._indexedProperties[30];
						return $r;
					}(this))).typedValue,important);
					this.setTypedProperty(25,((function($this) {
						var $r;
						if(initialStyleDeclaration._indexedProperties == null) {
							initialStyleDeclaration.resetIndexedProperties();
							initialStyleDeclaration.resetPropertiesPositions();
						}
						$r = initialStyleDeclaration._indexedProperties[25];
						return $r;
					}(this))).typedValue,important);
					this.setTypedProperty(27,((function($this) {
						var $r;
						if(initialStyleDeclaration._indexedProperties == null) {
							initialStyleDeclaration.resetIndexedProperties();
							initialStyleDeclaration.resetPropertiesPositions();
						}
						$r = initialStyleDeclaration._indexedProperties[27];
						return $r;
					}(this))).typedValue,important);
					this.setTypedProperty(26,((function($this) {
						var $r;
						if(initialStyleDeclaration._indexedProperties == null) {
							initialStyleDeclaration.resetIndexedProperties();
							initialStyleDeclaration.resetPropertiesPositions();
						}
						$r = initialStyleDeclaration._indexedProperties[26];
						return $r;
					}(this))).typedValue,important);
					break;
				default:
				}
				break;
			case 13:
				var value14 = styleValue[2];
				var length = value14.length;
				var firstBackgroundPosition = null;
				var _g2 = 0;
				while(_g2 < length) {
					var i = _g2++;
					{
						var _g11 = value14[i];
						switch(_g11[1]) {
						case 12:
							var color = _g11[2];
							this.setTypedProperty(25,value14[i],important);
							break;
						case 5:
							var url = _g11[2];
							this.setTypedProperty(26,value14[i],important);
							break;
						default:
							if(this.isValidBackgroundRepeat(value14[i]) == true) this.setTypedProperty(27,value14[i],important); else if(this.isValidBackgroundAttachment(value14[i]) == true) this.setTypedProperty(32,value14[i],important); else if(this.isValidBackgroundPosition(value14[i]) == true) {
								if(firstBackgroundPosition == null) {
									this.setTypedProperty(30,value14[i],important);
									firstBackgroundPosition = value14[i];
								} else this.setTypedProperty(30,cocktail.core.css.CSSPropertyValue.GROUP([firstBackgroundPosition,value14[i]]),important);
							}
						}
					}
				}
				break;
			default:
			}
			break;
		case 39:
			switch(styleValue[1]) {
			case 13:
				var values = styleValue[2];
				this.setFontShorthandGoup(values,important);
				this.setTypedProperty(37,values[values.length - 1],important);
				break;
			case 15:
				var values1 = styleValue[2];
				{
					var _g3 = values1[0];
					switch(_g3[1]) {
					case 13:
						var groupValues = _g3[2];
						this.setFontShorthandGoup(groupValues,important);
						var fontNames = [];
						fontNames.push(groupValues[groupValues.length - 1]);
						var length1 = values1.length;
						var i1 = 1;
						while(i1 < length1) {
							fontNames.push(values1[i1]);
							i1++;
						}
						this.setTypedProperty(37,cocktail.core.css.CSSPropertyValue.CSS_LIST(fontNames),important);
						break;
					default:
					}
				}
				break;
			default:
			}
			break;
		case 59:
			var transitionPropertyValues = new Array();
			var transitionDurationValues = new Array();
			var transitionDelayValues = new Array();
			var transitionTimingFunctionValues = new Array();
			switch(styleValue[1]) {
			case 15:
				var value15 = styleValue[2];
				var _g12 = 0;
				var _g4 = value15.length;
				while(_g12 < _g4) {
					var i2 = _g12++;
					{
						var _g21 = value15[i2];
						switch(_g21[1]) {
						case 13:
							var value16 = _g21[2];
							this.setTransitionGroupShorthand(value16,transitionPropertyValues,transitionDurationValues,transitionDelayValues,transitionTimingFunctionValues);
							break;
						default:
							this.setTransitionShorthand(value15[i2],false,transitionPropertyValues,transitionDurationValues,transitionDelayValues,transitionTimingFunctionValues);
						}
					}
				}
				break;
			case 13:
				var value17 = styleValue[2];
				this.setTransitionGroupShorthand(value17,transitionPropertyValues,transitionDurationValues,transitionDelayValues,transitionTimingFunctionValues);
				break;
			default:
				this.setTransitionShorthand(styleValue,false,transitionPropertyValues,transitionDurationValues,transitionDelayValues,transitionTimingFunctionValues);
			}
			if(transitionPropertyValues.length > 0) {
				if(transitionPropertyValues.length == 1) this.setTypedProperty(57,transitionPropertyValues[0],important); else this.setTypedProperty(57,cocktail.core.css.CSSPropertyValue.CSS_LIST(transitionPropertyValues),important);
			}
			if(transitionDelayValues.length > 0) {
				if(transitionDelayValues.length == 1) this.setTypedProperty(56,transitionDelayValues[0],important); else this.setTypedProperty(56,cocktail.core.css.CSSPropertyValue.CSS_LIST(transitionDelayValues),important);
			}
			if(transitionDurationValues.length > 0) {
				if(transitionDurationValues.length == 1) this.setTypedProperty(55,transitionDurationValues[0],important); else this.setTypedProperty(55,cocktail.core.css.CSSPropertyValue.CSS_LIST(transitionDurationValues),important);
			}
			if(transitionTimingFunctionValues.length > 0) {
				if(transitionTimingFunctionValues.length == 1) this.setTypedProperty(58,transitionTimingFunctionValues[0],important); else this.setTypedProperty(58,cocktail.core.css.CSSPropertyValue.CSS_LIST(transitionTimingFunctionValues),important);
			}
			break;
		case 66:
			switch(styleValue[1]) {
			case 4:
				var value18 = styleValue[2];
				this.setTypedProperty(62,styleValue,important);
				this.setTypedProperty(63,styleValue,important);
				this.setTypedProperty(64,styleValue,important);
				this.setTypedProperty(65,styleValue,important);
				break;
			case 7:
				var value19 = styleValue[2];
				this.setTypedProperty(62,styleValue,important);
				this.setTypedProperty(63,styleValue,important);
				this.setTypedProperty(64,styleValue,important);
				this.setTypedProperty(65,styleValue,important);
				break;
			case 0:
				var value20 = styleValue[2];
				this.setTypedProperty(62,styleValue,important);
				this.setTypedProperty(63,styleValue,important);
				this.setTypedProperty(64,styleValue,important);
				this.setTypedProperty(65,styleValue,important);
				break;
			case 13:
				var value21 = styleValue[2];
				var _g5 = value21.length;
				switch(_g5) {
				case 2:
					this.setTypedProperty(62,value21[0],important);
					this.setTypedProperty(63,value21[1],important);
					this.setTypedProperty(64,value21[0],important);
					this.setTypedProperty(65,value21[1],important);
					break;
				case 3:
					this.setTypedProperty(62,value21[0],important);
					this.setTypedProperty(63,value21[1],important);
					this.setTypedProperty(64,value21[3],important);
					this.setTypedProperty(65,value21[1],important);
					break;
				case 4:
					this.setTypedProperty(62,value21[0],important);
					this.setTypedProperty(63,value21[1],important);
					this.setTypedProperty(64,value21[2],important);
					this.setTypedProperty(65,value21[3],important);
					break;
				default:
				}
				break;
			case 16:case 17:
				this.setTypedProperty(62,styleValue,important);
				this.setTypedProperty(63,styleValue,important);
				this.setTypedProperty(64,styleValue,important);
				this.setTypedProperty(65,styleValue,important);
				break;
			default:
			}
			break;
		case 71:
			switch(styleValue[1]) {
			case 12:
				var value22 = styleValue[2];
				this.setTypedProperty(67,styleValue,important);
				this.setTypedProperty(68,styleValue,important);
				this.setTypedProperty(69,styleValue,important);
				this.setTypedProperty(70,styleValue,important);
				break;
			case 13:
				var value23 = styleValue[2];
				var _g6 = value23.length;
				switch(_g6) {
				case 2:
					this.setTypedProperty(67,value23[0],important);
					this.setTypedProperty(68,value23[1],important);
					this.setTypedProperty(69,value23[0],important);
					this.setTypedProperty(70,value23[1],important);
					break;
				case 3:
					this.setTypedProperty(67,value23[0],important);
					this.setTypedProperty(68,value23[1],important);
					this.setTypedProperty(69,value23[3],important);
					this.setTypedProperty(70,value23[1],important);
					break;
				case 4:
					this.setTypedProperty(67,value23[0],important);
					this.setTypedProperty(68,value23[1],important);
					this.setTypedProperty(69,value23[2],important);
					this.setTypedProperty(70,value23[3],important);
					break;
				default:
				}
				break;
			case 16:case 17:
				this.setTypedProperty(62,styleValue,important);
				this.setTypedProperty(63,styleValue,important);
				this.setTypedProperty(64,styleValue,important);
				this.setTypedProperty(65,styleValue,important);
				break;
			default:
			}
			break;
		case 76:
			switch(styleValue[1]) {
			case 4:
				var value24 = styleValue[2];
				this.setTypedProperty(72,styleValue,important);
				this.setTypedProperty(73,styleValue,important);
				this.setTypedProperty(74,styleValue,important);
				this.setTypedProperty(75,styleValue,important);
				break;
			case 13:
				var value25 = styleValue[2];
				var _g7 = value25.length;
				switch(_g7) {
				case 2:
					this.setTypedProperty(72,value25[0],important);
					this.setTypedProperty(73,value25[1],important);
					this.setTypedProperty(74,value25[0],important);
					this.setTypedProperty(75,value25[1],important);
					break;
				case 3:
					this.setTypedProperty(72,value25[0],important);
					this.setTypedProperty(73,value25[1],important);
					this.setTypedProperty(74,value25[3],important);
					this.setTypedProperty(75,value25[1],important);
					break;
				case 4:
					this.setTypedProperty(72,value25[0],important);
					this.setTypedProperty(73,value25[1],important);
					this.setTypedProperty(74,value25[2],important);
					this.setTypedProperty(75,value25[3],important);
					break;
				default:
				}
				break;
			case 16:case 17:
				this.setTypedProperty(72,styleValue,important);
				this.setTypedProperty(73,styleValue,important);
				this.setTypedProperty(74,styleValue,important);
				this.setTypedProperty(75,styleValue,important);
				break;
			default:
			}
			break;
		case 77:case 79:case 80:case 78:case 81:
			switch(styleValue[1]) {
			case 13:
				var value26 = styleValue[2];
				var borderColor = null;
				var borderWidth = null;
				var borderStyle = null;
				var _g13 = 0;
				var _g8 = value26.length;
				while(_g13 < _g8) {
					var i3 = _g13++;
					if(this.isValidBorderColorValue(value26[i3]) == true) borderColor = value26[i3]; else if(this.isValidBorderWidthValue(value26[i3]) == true) borderWidth = value26[i3]; else if(this.isValidBorderStyleValue(value26[i3]) == true) borderStyle = value26[i3];
				}
				this.setTypedBordersProperties(propertyIndex,borderWidth,borderColor,borderStyle,important);
				break;
			default:
				this.setBorderShorthand(propertyIndex,styleValue,important);
			}
			break;
		case 85:
			switch(styleValue[1]) {
			case 13:
				var value27 = styleValue[2];
				var outlineColor = null;
				var outlineWidth = null;
				var outlineStyle = null;
				var _g14 = 0;
				var _g9 = value27.length;
				while(_g14 < _g9) {
					var i4 = _g14++;
					if(this.isValidOutlineColorValue(value27[i4]) == true) outlineColor = value27[i4]; else if(this.isValidBorderWidthValue(value27[i4]) == true) outlineWidth = value27[i4]; else if(this.isValidOutlineStyleValue(value27[i4]) == true) outlineStyle = value27[i4];
				}
				this.setTypedOutlineProperties(outlineWidth,outlineColor,outlineStyle,important);
				break;
			default:
				if(this.isValidOutlineColorValue(styleValue) == true) this.setTypedOutlineProperties(null,styleValue,null,important); else if(this.isValidOutlineStyleValue(styleValue) == true) this.setTypedOutlineProperties(null,null,styleValue,important); else if(this.isValidBorderWidthValue(styleValue) == true) this.setTypedOutlineProperties(styleValue,null,null,important);
			}
			break;
		default:
		}
	}
	,setBorderShorthand: function(propertyIndex,styleValue,important) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			if(this.isValidBorderWidthValue(styleValue) == true) this.setTypedBordersProperties(propertyIndex,styleValue,null,null,important); else if(this.isValidBorderStyleValue(styleValue) == true) this.setTypedBordersProperties(propertyIndex,null,null,styleValue,important);
			break;
		case 0:
			var value1 = styleValue[2];
			this.setTypedBordersProperties(propertyIndex,styleValue,null,null,important);
			break;
		case 7:
			var value2 = styleValue[2];
			this.setTypedBordersProperties(propertyIndex,styleValue,null,null,important);
			break;
		case 12:
			var value3 = styleValue[2];
			this.setTypedBordersProperties(propertyIndex,null,styleValue,null,important);
			break;
		case 16:case 17:
			this.setTypedBordersProperties(propertyIndex,styleValue,styleValue,styleValue,important);
			break;
		default:
		}
	}
	,setTypedBordersProperties: function(propertyIndex,borderWidth,borderColor,borderStyle,important) {
		switch(propertyIndex) {
		case 77:
			this.setTypedBorderProperties(62,borderWidth,67,borderColor,72,borderStyle,important);
			break;
		case 78:
			this.setTypedBorderProperties(63,borderWidth,68,borderColor,73,borderStyle,important);
			break;
		case 79:
			this.setTypedBorderProperties(64,borderWidth,69,borderColor,74,borderStyle,important);
			break;
		case 80:
			this.setTypedBorderProperties(65,borderWidth,70,borderColor,75,borderStyle,important);
			break;
		case 81:
			this.setTypedBorderProperties(62,borderWidth,67,borderColor,72,borderStyle,important);
			this.setTypedBorderProperties(63,borderWidth,68,borderColor,73,borderStyle,important);
			this.setTypedBorderProperties(64,borderWidth,69,borderColor,74,borderStyle,important);
			this.setTypedBorderProperties(65,borderWidth,70,borderColor,75,borderStyle,important);
			break;
		default:
		}
	}
	,setTypedBorderProperties: function(borderWidthPropertyIndex,borderWidth,borderColorPropertyIndex,borderColor,borderStylePropertyIndex,borderStyle,important) {
		if(borderWidth == null) borderWidth = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(62).typedValue;
		this.setTypedProperty(borderWidthPropertyIndex,borderWidth,important);
		if(borderColor == null) borderColor = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(67).typedValue;
		this.setTypedProperty(borderColorPropertyIndex,borderColor,important);
		if(borderStyle == null) borderStyle = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(72).typedValue;
		this.setTypedProperty(borderStylePropertyIndex,borderStyle,important);
	}
	,setTypedOutlineProperties: function(outlineWidth,outlineColor,outlineStyle,important) {
		if(outlineWidth == null) outlineWidth = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(82).typedValue;
		this.setTypedProperty(82,outlineWidth,important);
		if(outlineColor == null) outlineColor = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(84).typedValue;
		this.setTypedProperty(84,outlineColor,important);
		if(outlineStyle == null) outlineStyle = cocktail.core.css.InitialStyleDeclaration.getInstance().getTypedProperty(83).typedValue;
		this.setTypedProperty(83,outlineStyle,important);
	}
	,setTransitionGroupShorthand: function(styleValues,transitionProperty,transitionDuration,transitionDelay,transitionTimingFunction) {
		var hasTransitionDuration = false;
		var _g1 = 0;
		var _g = styleValues.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.setTransitionShorthand(styleValues[i],hasTransitionDuration,transitionProperty,transitionDuration,transitionDelay,transitionTimingFunction);
			if(this.isValidTransitionDelayOrDuration(styleValues[i]) == true) hasTransitionDuration = true;
		}
	}
	,setTransitionShorthand: function(styleValue,useDelayForTime,transitionProperty,transitionDuration,transitionDelay,transitionTimingFunction) {
		switch(styleValue[1]) {
		case 3:
			var value = styleValue[2];
			transitionProperty.push(styleValue);
			break;
		case 9:
			var value1 = styleValue[2];
			if(useDelayForTime == false) transitionDuration.push(styleValue); else transitionDelay.push(styleValue);
			break;
		case 4:
			var value2 = styleValue[2];
			if(this.isValidTransitionProperty(styleValue) == true) transitionProperty.push(styleValue); else if(this.isValidTransitionTimingFunction(styleValue) == true) transitionTimingFunction.push(styleValue);
			break;
		default:
			transitionTimingFunction.push(styleValue);
		}
	}
	,isValidShorthand: function(propertyIndex,styleValue) {
		switch(propertyIndex) {
		case 5:
			switch(styleValue[1]) {
			case 7:
				var value = styleValue[2];
				return this.isValidMarginProperty(styleValue);
			case 2:
				var value1 = styleValue[2];
				return this.isValidMarginProperty(styleValue);
			case 0:
				var value2 = styleValue[2];
				return this.isValidMarginProperty(styleValue);
			case 4:
				var value3 = styleValue[2];
				return this.isValidMarginProperty(styleValue);
			case 16:case 17:
				return true;
			case 13:
				var value4 = styleValue[2];
				var _g = value4.length;
				switch(_g) {
				case 2:
					var isValid = this.isValidMarginProperty(value4[0]);
					if(isValid == false) return false;
					return this.isValidMarginProperty(value4[1]);
				case 3:
					var isValid1 = this.isValidMarginProperty(value4[0]);
					if(isValid1 == false) return false;
					isValid1 = this.isValidMarginProperty(value4[1]);
					if(isValid1 == false) return false;
					return this.isValidMarginProperty(value4[2]);
				case 4:
					var isValid2 = this.isValidMarginProperty(value4[0]);
					if(isValid2 == false) return false;
					isValid2 = this.isValidMarginProperty(value4[1]);
					if(isValid2 == false) return false;
					isValid2 = this.isValidMarginProperty(value4[2]);
					if(isValid2 == false) return false;
					return this.isValidMarginProperty(value4[3]);
				}
				break;
			default:
			}
			break;
		case 10:
			switch(styleValue[1]) {
			case 7:
				var value5 = styleValue[2];
				return this.isValidPaddingProperty(styleValue);
			case 2:
				var value6 = styleValue[2];
				return this.isValidPaddingProperty(styleValue);
			case 0:
				var value7 = styleValue[2];
				return this.isValidPaddingProperty(styleValue);
			case 16:case 17:
				return true;
			case 13:
				var value8 = styleValue[2];
				var _g1 = value8.length;
				switch(_g1) {
				case 2:
					var isValid3 = this.isValidPaddingProperty(value8[0]);
					if(isValid3 == false) return false;
					return this.isValidPaddingProperty(value8[1]);
				case 3:
					var isValid4 = this.isValidPaddingProperty(value8[0]);
					if(isValid4 == false) return false;
					isValid4 = this.isValidPaddingProperty(value8[1]);
					if(isValid4 == false) return false;
					return this.isValidPaddingProperty(value8[2]);
				case 4:
					var isValid5 = this.isValidPaddingProperty(value8[0]);
					if(isValid5 == false) return false;
					isValid5 = this.isValidPaddingProperty(value8[1]);
					if(isValid5 == false) return false;
					isValid5 = this.isValidPaddingProperty(value8[2]);
					if(isValid5 == false) return false;
					return this.isValidPaddingProperty(value8[3]);
				}
				break;
			default:
			}
			break;
		case 33:
			return this.isValidBackgroundShorthand(styleValue);
		case 50:
			switch(styleValue[1]) {
			case 4:
				var value9 = styleValue[2];
				return this.isValidOverflowValue(styleValue);
			case 16:case 17:
				return true;
			case 13:
				var value10 = styleValue[2];
				var isValid6 = this.isValidOverflowValue(value10[0]);
				if(isValid6 == false) return false;
				return this.isValidOverflowValue(value10[1]);
			default:
			}
			break;
		case 39:
			return this.isValidFontShorthand(styleValue);
		case 59:
			switch(styleValue[1]) {
			case 15:
				var value11 = styleValue[2];
				var length = value11.length;
				var _g2 = 0;
				while(_g2 < length) {
					var i = _g2++;
					if(this.isValidTransitionShorthand(value11[i]) == false) return false;
				}
				return true;
			default:
				return this.isValidTransitionShorthand(styleValue);
			}
			break;
		case 66:
			switch(styleValue[1]) {
			case 4:
				var value12 = styleValue[2];
				return this.isValidBorderWidthValue(styleValue);
			case 7:
				var value13 = styleValue[2];
				return this.isValidBorderWidthValue(styleValue);
			case 0:
				var value14 = styleValue[2];
				return this.isValidBorderWidthValue(styleValue);
			case 13:
				var value15 = styleValue[2];
				var _g3 = value15.length;
				switch(_g3) {
				case 2:
					if(this.isValidBorderWidthValue(value15[0]) == true && this.isValidBorderWidthValue(value15[1]) == true) return true;
					break;
				case 3:
					if(this.isValidBorderWidthValue(value15[0]) == true && this.isValidBorderWidthValue(value15[1]) == true && this.isValidBorderWidthValue(value15[2])) return true;
					break;
				case 4:
					if(this.isValidBorderWidthValue(value15[0]) == true && this.isValidBorderWidthValue(value15[1]) == true && this.isValidBorderWidthValue(value15[2]) && this.isValidBorderWidthValue(value15[3])) return true;
					break;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 71:
			switch(styleValue[1]) {
			case 12:
				var value16 = styleValue[2];
				return this.isValidBorderColorValue(styleValue);
			case 13:
				var value17 = styleValue[2];
				var _g4 = value17.length;
				switch(_g4) {
				case 2:
					if(this.isValidBorderColorValue(value17[0]) == true && this.isValidBorderColorValue(value17[1]) == true) return true;
					break;
				case 3:
					if(this.isValidBorderColorValue(value17[0]) == true && this.isValidBorderColorValue(value17[1]) == true && this.isValidBorderColorValue(value17[2])) return true;
					break;
				case 4:
					if(this.isValidBorderColorValue(value17[0]) == true && this.isValidBorderColorValue(value17[1]) == true && this.isValidBorderColorValue(value17[2]) && this.isValidBorderColorValue(value17[3])) return true;
					break;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 76:
			switch(styleValue[1]) {
			case 4:
				var value18 = styleValue[2];
				return this.isValidBorderStyleValue(styleValue);
			case 13:
				var value19 = styleValue[2];
				var _g5 = value19.length;
				switch(_g5) {
				case 2:
					if(this.isValidBorderStyleValue(value19[0]) == true && this.isValidBorderStyleValue(value19[1]) == true) return true;
					break;
				case 3:
					if(this.isValidBorderStyleValue(value19[0]) == true && this.isValidBorderStyleValue(value19[1]) == true && this.isValidBorderStyleValue(value19[2])) return true;
					break;
				case 4:
					if(this.isValidBorderStyleValue(value19[0]) == true && this.isValidBorderStyleValue(value19[1]) == true && this.isValidBorderStyleValue(value19[2]) && this.isValidBorderStyleValue(value19[3])) return true;
					break;
				default:
				}
				break;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 77:case 78:case 79:case 80:case 81:
			switch(styleValue[1]) {
			case 4:
				var value20 = styleValue[2];
				if(this.isValidBorderWidthValue(styleValue) == true || this.isValidBorderStyleValue(styleValue) == true) return true;
				break;
			case 12:
				var value21 = styleValue[2];
				return true;
			case 0:
				var value22 = styleValue[2];
				if(value22 == 0) return true;
				break;
			case 7:
				var value23 = styleValue[2];
				if(this.isPositiveLength(value23) == true) return true;
				break;
			case 13:
				var value24 = styleValue[2];
				if(value24.length != 2 && value24.length != 3) return false;
				var foundBorderWidth = false;
				var foundBorderStyle = false;
				var foundBorderColor = false;
				var _g11 = 0;
				var _g6 = value24.length;
				while(_g11 < _g6) {
					var i1 = _g11++;
					if(this.isValidBorderWidthValue(value24[i1]) == true) {
						if(foundBorderWidth == true) return false;
						foundBorderWidth = true;
					} else if(this.isValidBorderColorValue(value24[i1]) == true) {
						if(foundBorderColor == true) return false;
						foundBorderColor = true;
					} else if(this.isValidBorderStyleValue(value24[i1]) == true) {
						if(foundBorderStyle == true) return false;
						foundBorderStyle = true;
					} else return false;
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		case 85:
			switch(styleValue[1]) {
			case 4:
				var value25 = styleValue[2];
				if(this.isValidBorderWidthValue(styleValue) == true || this.isValidOutlineStyleValue(styleValue) == true || this.isValidOutlineColorValue(styleValue) == true) return true;
				break;
			case 12:
				var value26 = styleValue[2];
				return true;
			case 0:
				var value27 = styleValue[2];
				if(value27 == 0) return true;
				break;
			case 7:
				var value28 = styleValue[2];
				if(this.isPositiveLength(value28) == true) return true;
				break;
			case 13:
				var value29 = styleValue[2];
				if(value29.length != 2 && value29.length != 3) return false;
				var foundOutlineWidth = false;
				var foundOutlineStyle = false;
				var foundOutlineColor = false;
				var _g12 = 0;
				var _g7 = value29.length;
				while(_g12 < _g7) {
					var i2 = _g12++;
					if(this.isValidBorderWidthValue(value29[i2]) == true) {
						if(foundOutlineWidth == true) return false;
						foundOutlineWidth = true;
					} else if(this.isValidOutlineColorValue(value29[i2]) == true) {
						if(foundOutlineColor == true) return false;
						foundOutlineColor = true;
					} else if(this.isValidOutlineStyleValue(value29[i2]) == true) {
						if(foundOutlineStyle == true) return false;
						foundOutlineStyle = true;
					} else return false;
				}
				return true;
			case 16:case 17:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isValidBackgroundShorthand: function(styleValue) {
		switch(styleValue[1]) {
		case 5:
			var value = styleValue[2];
			return true;
		case 12:
			var value1 = styleValue[2];
			return true;
		case 4:
			var value2 = styleValue[2];
			switch(value2[1]) {
			case 67:case 68:case 69:case 72:case 35:case 38:case 11:case 13:case 12:case 22:case 25:case 18:
				return true;
			default:
			}
			break;
		case 13:
			var value3 = styleValue[2];
			var length = value3.length;
			var foundBackgroundColor = false;
			var foundBackgroundImage = false;
			var foundBackgroundRepeat = false;
			var foundBackgroundAttachment = false;
			var foundFirstBackgroundPosition = false;
			var foundSecondBackgroundPosition = false;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				{
					var _g1 = value3[i];
					switch(_g1[1]) {
					case 12:
						var value4 = _g1[2];
						if(foundBackgroundColor == true) return false;
						foundBackgroundColor = true;
						break;
					case 5:
						var value5 = _g1[2];
						if(foundBackgroundImage == true) return false;
						foundBackgroundImage = true;
						foundBackgroundColor = true;
						break;
					default:
						if(this.isValidBackgroundRepeat(value3[i]) == true) {
							if(foundBackgroundRepeat == true) return false;
							foundBackgroundRepeat = true;
							foundBackgroundImage = true;
							foundBackgroundColor = true;
						} else if(this.isValidBackgroundAttachment(value3[i]) == true) {
							if(foundBackgroundAttachment == true) return false;
							foundBackgroundAttachment = true;
							foundBackgroundColor = true;
							foundBackgroundRepeat = true;
							foundBackgroundImage = true;
						} else if(this.isValidBackgroundPosition(value3[i]) == true) {
							if(foundSecondBackgroundPosition == true) return false;
							if(foundFirstBackgroundPosition == true) foundSecondBackgroundPosition = true; else foundFirstBackgroundPosition = true;
							foundBackgroundAttachment = true;
							foundBackgroundColor = true;
							foundBackgroundRepeat = true;
							foundBackgroundImage = true;
						}
					}
				}
			}
			return true;
		case 16:case 17:
			return true;
		default:
		}
		return false;
	}
	,isValidBackgroundRepeat: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 67:case 68:case 69:case 72:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isValidBackgroundAttachment: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 35:case 38:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isValidTransitionShorthand: function(styleValue) {
		switch(styleValue[1]) {
		case 9:
			var value = styleValue[2];
			return this.isValidTransitionDelayOrDuration(styleValue);
		case 3:
			var value1 = styleValue[2];
			return true;
		case 4:
			var keyword = styleValue[2];
			var isValid = this.isValidTransitionProperty(styleValue);
			if(isValid == true) return true;
			return this.isValidTransitionTimingFunction(styleValue);
		case 13:
			var value2 = styleValue[2];
			return this.isValidTransitionGroup(value2);
		case 16:case 17:
			return true;
		default:
			return this.isValidTransitionTimingFunction(styleValue);
		}
	}
	,setFontShorthandGoup: function(styleValues,important) {
		var foundFontStyle = false;
		var foundFontVariant = false;
		var foundFontWeight = false;
		var length = styleValues.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			{
				var _g1 = styleValues[i];
				switch(_g1[1]) {
				case 4:
					var value = _g1[2];
					switch(value[1]) {
					case 4:case 5:
						this.setTypedProperty(36,styleValues[i],important);
						foundFontStyle = true;
						break;
					case 6:
						this.setTypedProperty(38,styleValues[i],important);
						foundFontVariant = true;
						break;
					case 1:case 2:case 3:
						this.setTypedProperty(35,styleValues[i],important);
						foundFontWeight = true;
						break;
					case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:
						this.setTypedProperty(34,styleValues[i],important);
						break;
					case 0:
						if(foundFontStyle == true) {
							if(foundFontVariant == true) this.setTypedProperty(35,styleValues[i],important); else this.setTypedProperty(38,styleValues[i],important);
						} else this.setTypedProperty(36,styleValues[i],important);
						break;
					default:
					}
					break;
				case 0:
					var value1 = _g1[2];
					switch(value1) {
					case 100:case 200:case 300:case 400:case 500:case 600:case 700:case 800:case 900:
						this.setTypedProperty(35,styleValues[i],important);
						foundFontWeight = true;
						break;
					default:
					}
					break;
				case 7:
					var value2 = _g1[2];
					this.setTypedProperty(34,styleValues[i],important);
					break;
				case 2:
					var value3 = _g1[2];
					this.setTypedProperty(34,styleValues[i],important);
					break;
				case 14:
					var lineHeight = _g1[3];
					var fontSize = _g1[2];
					this.setTypedProperty(34,fontSize,important);
					this.setTypedProperty(41,lineHeight,important);
					break;
				default:
				}
			}
		}
	}
	,isValidFontShorthand: function(styleValue) {
		switch(styleValue[1]) {
		case 13:
			var values = styleValue[2];
			return this.isValidFontGroup(values);
		case 15:
			var values1 = styleValue[2];
			{
				var _g = values1[0];
				switch(_g[1]) {
				case 13:
					var groupValues = _g[2];
					var isValidFontGroup = this.isValidFontGroup(groupValues);
					if(isValidFontGroup == true) {
						var length = values1.length;
						var i = 1;
						while(i < length) {
							{
								var _g1 = values1[i];
								switch(_g1[1]) {
								case 6:
									var value = _g1[2];
									break;
								case 3:
									var value1 = _g1[2];
									break;
								default:
									return false;
								}
							}
							i++;
						}
					} else return false;
					break;
				default:
					return false;
				}
			}
			break;
		case 16:case 17:
			return true;
		default:
			return false;
		}
		return false;
	}
	,isValidFontGroup: function(styleValues) {
		var foundFontStyle = false;
		var foundFontVariant = false;
		var foundFontWeight = false;
		var foundFontSize = false;
		var foundFontNotation = false;
		var foundFontFamily = false;
		var length = styleValues.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			{
				var _g1 = styleValues[i];
				switch(_g1[1]) {
				case 4:
					var value = _g1[2];
					switch(value[1]) {
					case 4:case 5:
						if(foundFontStyle == true) return false;
						foundFontStyle = true;
						break;
					case 6:
						if(foundFontVariant == true) return false;
						foundFontVariant = true;
						break;
					case 1:case 2:case 3:
						if(foundFontWeight == true) return false;
						foundFontWeight = true;
						break;
					case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 65:case 66:
						if(foundFontSize == true) return false;
						foundFontSize = true;
						foundFontStyle = true;
						foundFontVariant = true;
						break;
					case 0:
						if(foundFontStyle == true) {
							if(foundFontVariant == true) {
								if(foundFontWeight == true) return false; else foundFontWeight = true;
							} else foundFontVariant = true;
						} else foundFontStyle = true;
						break;
					default:
						return false;
					}
					break;
				case 0:
					var value1 = _g1[2];
					switch(value1) {
					case 100:case 200:case 300:case 400:case 500:case 600:case 700:case 800:case 900:
						if(foundFontWeight == true) return false;
						foundFontWeight = true;
						break;
					default:
						return false;
					}
					break;
				case 6:
					var value2 = _g1[2];
					if(foundFontSize == false) return false;
					foundFontFamily = true;
					foundFontNotation = true;
					foundFontSize = true;
					foundFontStyle = true;
					foundFontVariant = true;
					foundFontWeight = true;
					break;
				case 3:
					var value3 = _g1[2];
					if(foundFontSize == false) return false;
					foundFontFamily = true;
					foundFontNotation = true;
					foundFontSize = true;
					foundFontStyle = true;
					foundFontVariant = true;
					foundFontWeight = true;
					break;
				case 7:
					var value4 = _g1[2];
					if(foundFontSize == true) return false;
					foundFontNotation = true;
					foundFontSize = true;
					foundFontStyle = true;
					foundFontVariant = true;
					foundFontWeight = true;
					break;
				case 2:
					var value5 = _g1[2];
					if(foundFontSize == true) return false;
					foundFontNotation = true;
					foundFontSize = true;
					foundFontStyle = true;
					foundFontVariant = true;
					foundFontWeight = true;
					break;
				case 14:
					var lineHeight = _g1[3];
					var fontSize = _g1[2];
					if(foundFontNotation == true) return false;
					foundFontNotation = true;
					foundFontSize = true;
					foundFontStyle = true;
					foundFontVariant = true;
					foundFontWeight = true;
					break;
				default:
					return false;
				}
			}
		}
		if(foundFontFamily == false || foundFontSize == false) return false;
		return true;
	}
	,isValidTransitionGroup: function(styleValues) {
		var hasTransitionProperty = false;
		var hasTransitionTimingFunction = false;
		var hasTransitionDelay = false;
		var hasTransitionDuration = false;
		if(styleValues.length == 2 || styleValues.length == 3 || styleValues.length == 4) {
			if(this.isValidTransitionProperty(styleValues[0])) hasTransitionProperty = true; else if(this.isValidTransitionDelayOrDuration(styleValues[0])) hasTransitionDuration = true; else if(this.isValidTransitionTimingFunction(styleValues[0])) hasTransitionTimingFunction = true; else return false;
			if(this.isValidTransitionProperty(styleValues[1])) {
				if(hasTransitionProperty == true) return false;
			} else if(this.isValidTransitionDelayOrDuration(styleValues[1])) {
				if(hasTransitionDuration == true) hasTransitionDelay = true; else hasTransitionDuration = true;
			} else if(this.isValidTransitionTimingFunction(styleValues[1])) {
				if(hasTransitionTimingFunction == true) return false;
			} else return false;
			if(styleValues.length == 2) return true;
			if(this.isValidTransitionProperty(styleValues[2])) {
				if(hasTransitionProperty == true) return false;
			} else if(this.isValidTransitionDelayOrDuration(styleValues[2])) {
				if(hasTransitionDuration == true) {
					if(hasTransitionDelay == true) return false; else hasTransitionDelay = true;
				} else hasTransitionDuration = true;
			} else if(this.isValidTransitionTimingFunction(styleValues[2])) {
				if(hasTransitionTimingFunction == true) return false;
			} else return false;
			if(styleValues.length == 3) return true;
			if(this.isValidTransitionProperty(styleValues[3])) {
				if(hasTransitionProperty == true) return false;
			} else if(this.isValidTransitionDelayOrDuration(styleValues[3])) {
				if(hasTransitionDuration == true) {
					if(hasTransitionDelay == true) return false; else hasTransitionDelay = true;
				} else hasTransitionDuration = true;
			} else if(this.isValidTransitionTimingFunction(styleValues[3])) {
				if(hasTransitionTimingFunction == true) return false;
			} else return false;
			return true;
		}
		return false;
	}
	,isValidBorderWidthValue: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 73:case 61:case 74:
				return true;
			default:
			}
			break;
		case 7:
			var value1 = styleValue[2];
			if(this.isPositiveLength(value1) == true) return true;
			break;
		case 0:
			var value2 = styleValue[2];
			if(value2 == 0) return true;
			break;
		default:
		}
		return false;
	}
	,isValidBorderColorValue: function(styleValue) {
		switch(styleValue[1]) {
		case 12:
			var value = styleValue[2];
			return true;
		default:
		}
		return false;
	}
	,isValidBorderStyleValue: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 18:case 37:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isValidOutlineColorValue: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 83:
				return true;
			default:
				return this.isValidBorderColorValue(styleValue);
			}
			break;
		default:
			return this.isValidBorderColorValue(styleValue);
		}
	}
	,isValidOutlineStyleValue: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 37:
				return false;
			default:
				return this.isValidBorderStyleValue(styleValue);
			}
			break;
		default:
			return this.isValidBorderStyleValue(styleValue);
		}
	}
	,isValidOverflowValue: function(styleValue) {
		switch(styleValue[1]) {
		case 4:
			var value = styleValue[2];
			switch(value[1]) {
			case 36:case 38:case 37:case 27:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isValidMarginProperty: function(styleValue) {
		switch(styleValue[1]) {
		case 7:
			var value = styleValue[2];
			return true;
		case 0:
			var value1 = styleValue[2];
			if(value1 == 0) return true;
			break;
		case 2:
			var value2 = styleValue[2];
			return true;
		case 4:
			var value3 = styleValue[2];
			switch(value3[1]) {
			case 27:
				return true;
			default:
			}
			break;
		case 16:
			return true;
		default:
		}
		return false;
	}
	,isValidPaddingProperty: function(styleValue) {
		switch(styleValue[1]) {
		case 7:
			var value = styleValue[2];
			if(this.isPositiveLength(value) == true) return true;
			break;
		case 0:
			var value1 = styleValue[2];
			if(value1 == 0) return true;
			break;
		case 2:
			var value2 = styleValue[2];
			if(value2 >= 0) return true;
			break;
		case 16:
			return true;
		default:
		}
		return false;
	}
	,isValidTransformOrigin: function(styleValue,areHorizontalKeywordValueAllowed,areVerticalKeywordAllowed) {
		switch(styleValue[1]) {
		case 7:
			var value = styleValue[2];
			return true;
		case 0:
			var value1 = styleValue[2];
			if(value1 == 0) return true;
			break;
		case 2:
			var value2 = styleValue[2];
			return true;
		case 4:
			var value3 = styleValue[2];
			switch(value3[1]) {
			case 13:
				return true;
			case 11:case 12:
				if(areHorizontalKeywordValueAllowed == true) return true;
				break;
			case 22:case 25:
				if(areVerticalKeywordAllowed == true) return true;
				break;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,isPositiveLength: function(length) {
		switch(length[1]) {
		case 0:
			var value = length[2];
			return value >= 0;
		case 6:
			var value1 = length[2];
			return value1 >= 0;
		case 5:
			var value2 = length[2];
			return value2 >= 0;
		case 4:
			var value3 = length[2];
			return value3 >= 0;
		case 7:
			var value4 = length[2];
			return value4 >= 0;
		case 3:
			var value5 = length[2];
			return value5 >= 0;
		case 2:
			var value6 = length[2];
			return value6 >= 0;
		case 1:
			var value7 = length[2];
			return value7 >= 0;
		}
	}
	,serializeStyleDeclaration: function() {
		var serializedStyleDeclaration = "";
		var _g1 = 0;
		var _g = this.length;
		while(_g1 < _g) {
			var i = _g1++;
			var property = this._indexedProperties[this._propertiesPositions[i]];
			serializedStyleDeclaration += cocktail.core.css.CSSConstants.getPropertyNameFromIndex(property.index) + ":" + cocktail.core.css.parsers.CSSStyleSerializer.serialize(property.typedValue);
			if(property.important == true) serializedStyleDeclaration += " !important";
			serializedStyleDeclaration += ";";
		}
		return serializedStyleDeclaration;
	}
	,get_cssText: function() {
		return this.serializeStyleDeclaration();
	}
	,set_cssText: function(value) {
		this.resetIndexedProperties();
		this.resetPropertiesPositions();
		this.length = 0;
		var baseUrl = null;
		if(this.parentRule != null) {
			if(this.parentRule.parentStyleSheet != null) baseUrl = this.parentRule.parentStyleSheet.href;
		}
		var typedProperties = cocktail.core.css.parsers.CSSStyleParser.parseStyle(value,baseUrl);
		var length = typedProperties.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var typedProperty = typedProperties[i];
			this.applyProperty(typedProperty.index,typedProperty.typedValue,typedProperty.important);
		}
		return value;
	}
	,get_opacity: function() {
		return this.getPropertyValue(53);
	}
	,set_opacity: function(value) {
		this.setProperty(53,value);
		return value;
	}
	,get_visibility: function() {
		return this.getPropertyValue(49);
	}
	,set_visibility: function(value) {
		this.setProperty(49,value);
		return value;
	}
	,get_margin: function() {
		return this.getPropertyValue(5);
	}
	,set_margin: function(value) {
		this.setProperty(5,value);
		return value;
	}
	,get_marginLeft: function() {
		return this.getPropertyValue(6);
	}
	,set_marginLeft: function(value) {
		this.setProperty(6,value);
		return value;
	}
	,get_marginRight: function() {
		return this.getPropertyValue(7);
	}
	,set_marginRight: function(value) {
		this.setProperty(7,value);
		return value;
	}
	,get_marginTop: function() {
		return this.getPropertyValue(8);
	}
	,set_marginTop: function(value) {
		this.setProperty(8,value);
		return value;
	}
	,get_marginBottom: function() {
		return this.getPropertyValue(9);
	}
	,set_marginBottom: function(value) {
		this.setProperty(9,value);
		return value;
	}
	,get_padding: function() {
		return this.getPropertyValue(10);
	}
	,set_padding: function(value) {
		this.setProperty(10,value);
		return value;
	}
	,get_paddingLeft: function() {
		return this.getPropertyValue(11);
	}
	,set_paddingLeft: function(value) {
		this.setProperty(11,value);
		return value;
	}
	,get_paddingRight: function() {
		return this.getPropertyValue(12);
	}
	,set_paddingRight: function(value) {
		this.setProperty(12,value);
		return value;
	}
	,get_paddingTop: function() {
		return this.getPropertyValue(13);
	}
	,set_paddingTop: function(value) {
		this.setProperty(13,value);
		return value;
	}
	,get_paddingBottom: function() {
		return this.getPropertyValue(14);
	}
	,set_paddingBottom: function(value) {
		this.setProperty(14,value);
		return value;
	}
	,get_display: function() {
		return this.getPropertyValue(0);
	}
	,set_display: function(value) {
		this.setProperty(0,value);
		return value;
	}
	,get_position: function() {
		return this.getPropertyValue(1);
	}
	,set_position: function(value) {
		this.setProperty(1,value);
		return value;
	}
	,get_zIndex: function() {
		return this.getPropertyValue(4);
	}
	,set_zIndex: function(value) {
		this.setProperty(4,value);
		return value;
	}
	,get_width: function() {
		return this.getPropertyValue(15);
	}
	,set_width: function(value) {
		this.setProperty(15,value);
		return value;
	}
	,get_height: function() {
		return this.getPropertyValue(16);
	}
	,set_height: function(value) {
		this.setProperty(16,value);
		return value;
	}
	,get_minHeight: function() {
		return this.getPropertyValue(17);
	}
	,set_minHeight: function(value) {
		this.setProperty(17,value);
		return value;
	}
	,get_maxHeight: function() {
		return this.getPropertyValue(18);
	}
	,set_maxHeight: function(value) {
		this.setProperty(18,value);
		return value;
	}
	,get_minWidth: function() {
		return this.getPropertyValue(19);
	}
	,set_minWidth: function(value) {
		this.setProperty(19,value);
		return value;
	}
	,get_maxWidth: function() {
		return this.getPropertyValue(20);
	}
	,set_maxWidth: function(value) {
		this.setProperty(20,value);
		return value;
	}
	,get_top: function() {
		return this.getPropertyValue(21);
	}
	,set_top: function(value) {
		this.setProperty(21,value);
		return value;
	}
	,get_left: function() {
		return this.getPropertyValue(22);
	}
	,set_left: function(value) {
		this.setProperty(22,value);
		return value;
	}
	,get_bottom: function() {
		return this.getPropertyValue(24);
	}
	,set_bottom: function(value) {
		this.setProperty(24,value);
		return value;
	}
	,get_right: function() {
		return this.getPropertyValue(23);
	}
	,set_right: function(value) {
		this.setProperty(23,value);
		return value;
	}
	,get_cssFloat: function() {
		return this.getPropertyValue(2);
	}
	,set_cssFloat: function(value) {
		this.setProperty(2,value);
		return value;
	}
	,get_clear: function() {
		return this.getPropertyValue(3);
	}
	,set_clear: function(value) {
		this.setProperty(3,value);
		return value;
	}
	,set_font: function(value) {
		this.setProperty(39,value);
		return value;
	}
	,get_font: function() {
		return this.getPropertyValue(39);
	}
	,get_fontSize: function() {
		return this.getPropertyValue(34);
	}
	,set_fontSize: function(value) {
		this.setProperty(34,value);
		return value;
	}
	,get_fontWeight: function() {
		return this.getPropertyValue(35);
	}
	,set_fontWeight: function(value) {
		this.setProperty(35,value);
		return value;
	}
	,get_fontStyle: function() {
		return this.getPropertyValue(36);
	}
	,set_fontStyle: function(value) {
		this.setProperty(36,value);
		return value;
	}
	,get_fontFamily: function() {
		return this.getPropertyValue(37);
	}
	,set_fontFamily: function(value) {
		this.setProperty(37,value);
		return value;
	}
	,get_fontVariant: function() {
		return this.getPropertyValue(38);
	}
	,set_fontVariant: function(value) {
		this.setProperty(38,value);
		return value;
	}
	,get_textTransform: function() {
		return this.getPropertyValue(42);
	}
	,set_textTransform: function(value) {
		this.setProperty(42,value);
		return value;
	}
	,get_letterSpacing: function() {
		return this.getPropertyValue(43);
	}
	,set_letterSpacing: function(value) {
		this.setProperty(43,value);
		return value;
	}
	,get_color: function() {
		return this.getPropertyValue(40);
	}
	,set_color: function(value) {
		this.setProperty(40,value);
		return value;
	}
	,get_wordSpacing: function() {
		return this.getPropertyValue(44);
	}
	,set_wordSpacing: function(value) {
		this.setProperty(44,value);
		return value;
	}
	,get_lineHeight: function() {
		return this.getPropertyValue(41);
	}
	,set_lineHeight: function(value) {
		this.setProperty(41,value);
		return value;
	}
	,get_verticalAlign: function() {
		return this.getPropertyValue(48);
	}
	,set_verticalAlign: function(value) {
		this.setProperty(48,value);
		return value;
	}
	,get_textIndent: function() {
		return this.getPropertyValue(47);
	}
	,set_textIndent: function(value) {
		this.setProperty(47,value);
		return value;
	}
	,get_whiteSpace: function() {
		return this.getPropertyValue(45);
	}
	,set_whiteSpace: function(value) {
		this.setProperty(45,value);
		return value;
	}
	,get_textAlign: function() {
		return this.getPropertyValue(46);
	}
	,set_textAlign: function(value) {
		this.setProperty(46,value);
		return value;
	}
	,set_background: function(value) {
		this.setProperty(33,value);
		return value;
	}
	,get_background: function() {
		return this.getPropertyValue(33);
	}
	,set_backgroundColor: function(value) {
		this.setProperty(25,value);
		return value;
	}
	,get_backgroundColor: function() {
		return this.getPropertyValue(25);
	}
	,set_backgroundImage: function(value) {
		this.setProperty(26,value);
		return value;
	}
	,get_backgroundImage: function() {
		return this.getPropertyValue(26);
	}
	,set_backgroundRepeat: function(value) {
		this.setProperty(27,value);
		return value;
	}
	,get_backgroundRepeat: function() {
		return this.getPropertyValue(27);
	}
	,set_backgroundSize: function(value) {
		this.setProperty(29,value);
		return value;
	}
	,get_backgroundSize: function() {
		return this.getPropertyValue(29);
	}
	,set_backgroundClip: function(value) {
		this.setProperty(31,value);
		return value;
	}
	,get_backgroundClip: function() {
		return this.getPropertyValue(31);
	}
	,set_backgroundAttachment: function(value) {
		this.setProperty(32,value);
		return value;
	}
	,get_backgroundAttachment: function() {
		return this.getPropertyValue(32);
	}
	,set_backgroundPosition: function(value) {
		this.setProperty(30,value);
		return value;
	}
	,get_backgroundPosition: function() {
		return this.getPropertyValue(30);
	}
	,set_backgroundOrigin: function(value) {
		this.setProperty(28,value);
		return value;
	}
	,get_backgroundOrigin: function() {
		return this.getPropertyValue(28);
	}
	,get_overflow: function() {
		return this.getPropertyValue(50);
	}
	,set_overflow: function(value) {
		this.setProperty(50,value);
		return value;
	}
	,get_overflowX: function() {
		return this.getPropertyValue(51);
	}
	,set_overflowX: function(value) {
		this.setProperty(51,value);
		return value;
	}
	,get_overflowY: function() {
		return this.getPropertyValue(52);
	}
	,set_overflowY: function(value) {
		this.setProperty(52,value);
		return value;
	}
	,set_cursor: function(value) {
		this.setProperty(54,value);
		return value;
	}
	,get_cursor: function() {
		return this.getPropertyValue(54);
	}
	,get_transitionProperty: function() {
		return this.getPropertyValue(57);
	}
	,set_transitionProperty: function(value) {
		this.setProperty(57,value);
		return value;
	}
	,get_transitionDuration: function() {
		return this.getPropertyValue(55);
	}
	,set_transitionDuration: function(value) {
		this.setProperty(55,value);
		return value;
	}
	,get_transitionDelay: function() {
		return this.getPropertyValue(56);
	}
	,set_transitionDelay: function(value) {
		this.setProperty(56,value);
		return value;
	}
	,get_transitionTimingFunction: function() {
		return this.getPropertyValue(58);
	}
	,set_transitionTimingFunction: function(value) {
		this.setProperty(58,value);
		return value;
	}
	,get_transform: function() {
		return this.getPropertyValue(61);
	}
	,set_transform: function(value) {
		this.setProperty(61,value);
		return value;
	}
	,get_transformOrigin: function() {
		return this.getPropertyValue(60);
	}
	,set_transformOrigin: function(value) {
		this.setProperty(60,value);
		return value;
	}
	,get_borderTopWidth: function() {
		return this.getPropertyValue(62);
	}
	,set_borderTopWidth: function(value) {
		this.setProperty(62,value);
		return value;
	}
	,get_borderRightWidth: function() {
		return this.getPropertyValue(63);
	}
	,set_borderRightWidth: function(value) {
		this.setProperty(63,value);
		return value;
	}
	,get_borderBottomWidth: function() {
		return this.getPropertyValue(64);
	}
	,set_borderBottomWidth: function(value) {
		this.setProperty(64,value);
		return value;
	}
	,get_borderLeftWidth: function() {
		return this.getPropertyValue(65);
	}
	,set_borderLeftWidth: function(value) {
		this.setProperty(65,value);
		return value;
	}
	,get_borderWidth: function() {
		return this.getPropertyValue(66);
	}
	,set_borderWidth: function(value) {
		this.setProperty(66,value);
		return value;
	}
	,get_borderTopColor: function() {
		return this.getPropertyValue(67);
	}
	,set_borderTopColor: function(value) {
		this.setProperty(67,value);
		return value;
	}
	,get_borderRightColor: function() {
		return this.getPropertyValue(68);
	}
	,set_borderRightColor: function(value) {
		this.setProperty(68,value);
		return value;
	}
	,get_borderBottomColor: function() {
		return this.getPropertyValue(69);
	}
	,set_borderBottomColor: function(value) {
		this.setProperty(69,value);
		return value;
	}
	,get_borderLeftColor: function() {
		return this.getPropertyValue(70);
	}
	,set_borderLeftColor: function(value) {
		this.setProperty(70,value);
		return value;
	}
	,get_borderColor: function() {
		return this.getPropertyValue(71);
	}
	,set_borderColor: function(value) {
		this.setProperty(71,value);
		return value;
	}
	,get_borderTopStyle: function() {
		return this.getPropertyValue(72);
	}
	,set_borderTopStyle: function(value) {
		this.setProperty(72,value);
		return value;
	}
	,get_borderRightStyle: function() {
		return this.getPropertyValue(73);
	}
	,set_borderRightStyle: function(value) {
		this.setProperty(73,value);
		return value;
	}
	,get_borderBottomStyle: function() {
		return this.getPropertyValue(74);
	}
	,set_borderBottomStyle: function(value) {
		this.setProperty(74,value);
		return value;
	}
	,get_borderLeftStyle: function() {
		return this.getPropertyValue(75);
	}
	,set_borderLeftStyle: function(value) {
		this.setProperty(75,value);
		return value;
	}
	,get_borderStyle: function() {
		return this.getPropertyValue(76);
	}
	,set_borderStyle: function(value) {
		this.setProperty(76,value);
		return value;
	}
	,get_borderTop: function() {
		return this.getPropertyValue(77);
	}
	,set_borderTop: function(value) {
		this.setProperty(77,value);
		return value;
	}
	,get_borderRight: function() {
		return this.getPropertyValue(78);
	}
	,set_borderRight: function(value) {
		this.setProperty(78,value);
		return value;
	}
	,get_borderBottom: function() {
		return this.getPropertyValue(79);
	}
	,set_borderBottom: function(value) {
		this.setProperty(79,value);
		return value;
	}
	,get_borderLeft: function() {
		return this.getPropertyValue(80);
	}
	,set_borderLeft: function(value) {
		this.setProperty(80,value);
		return value;
	}
	,get_border: function() {
		return this.getPropertyValue(81);
	}
	,set_border: function(value) {
		this.setProperty(81,value);
		return value;
	}
	,get_outline: function() {
		return this.getPropertyValue(85);
	}
	,set_outline: function(value) {
		this.setProperty(85,value);
		return value;
	}
	,get_outlineWidth: function() {
		return this.getPropertyValue(82);
	}
	,set_outlineWidth: function(value) {
		this.setProperty(82,value);
		return value;
	}
	,get_outlineColor: function() {
		return this.getPropertyValue(84);
	}
	,set_outlineColor: function(value) {
		this.setProperty(84,value);
		return value;
	}
	,get_outlineStyle: function() {
		return this.getPropertyValue(83);
	}
	,set_outlineStyle: function(value) {
		this.setProperty(83,value);
		return value;
	}
	,get_textDecoration: function() {
		return this.getPropertyValue(86);
	}
	,set_textDecoration: function(value) {
		this.setProperty(86,value);
		return value;
	}
	,__class__: cocktail.core.css.CSSStyleDeclaration
	,__properties__: {set_cssText:"set_cssText",get_cssText:"get_cssText",set_outlineStyle:"set_outlineStyle",get_outlineStyle:"get_outlineStyle",set_outlineColor:"set_outlineColor",get_outlineColor:"get_outlineColor",set_outlineWidth:"set_outlineWidth",get_outlineWidth:"get_outlineWidth",set_outline:"set_outline",get_outline:"get_outline",set_cursor:"set_cursor",get_cursor:"get_cursor",set_transformOrigin:"set_transformOrigin",get_transformOrigin:"get_transformOrigin",set_transform:"set_transform",get_transform:"get_transform",set_transitionDelay:"set_transitionDelay",get_transitionDelay:"get_transitionDelay",set_transitionTimingFunction:"set_transitionTimingFunction",get_transitionTimingFunction:"get_transitionTimingFunction",set_transitionDuration:"set_transitionDuration",get_transitionDuration:"get_transitionDuration",set_transitionProperty:"set_transitionProperty",get_transitionProperty:"get_transitionProperty",set_overflowY:"set_overflowY",get_overflowY:"get_overflowY",set_overflowX:"set_overflowX",get_overflowX:"get_overflowX",set_overflow:"set_overflow",get_overflow:"get_overflow",set_visibility:"set_visibility",get_visibility:"get_visibility",set_opacity:"set_opacity",get_opacity:"get_opacity",set_textDecoration:"set_textDecoration",get_textDecoration:"get_textDecoration",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_textIndent:"set_textIndent",get_textIndent:"get_textIndent",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_whiteSpace:"set_whiteSpace",get_whiteSpace:"get_whiteSpace",set_wordSpacing:"set_wordSpacing",get_wordSpacing:"get_wordSpacing",set_letterSpacing:"set_letterSpacing",get_letterSpacing:"get_letterSpacing",set_textTransform:"set_textTransform",get_textTransform:"get_textTransform",set_lineHeight:"set_lineHeight",get_lineHeight:"get_lineHeight",set_color:"set_color",get_color:"get_color",set_fontVariant:"set_fontVariant",get_fontVariant:"get_fontVariant",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_fontStyle:"set_fontStyle",get_fontStyle:"get_fontStyle",set_fontWeight:"set_fontWeight",get_fontWeight:"get_fontWeight",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_border:"set_border",get_border:"get_border",set_borderLeft:"set_borderLeft",get_borderLeft:"get_borderLeft",set_borderBottom:"set_borderBottom",get_borderBottom:"get_borderBottom",set_borderRight:"set_borderRight",get_borderRight:"get_borderRight",set_borderTop:"set_borderTop",get_borderTop:"get_borderTop",set_borderStyle:"set_borderStyle",get_borderStyle:"get_borderStyle",set_borderLeftStyle:"set_borderLeftStyle",get_borderLeftStyle:"get_borderLeftStyle",set_borderBottomStyle:"set_borderBottomStyle",get_borderBottomStyle:"get_borderBottomStyle",set_borderRightStyle:"set_borderRightStyle",get_borderRightStyle:"get_borderRightStyle",set_borderTopStyle:"set_borderTopStyle",get_borderTopStyle:"get_borderTopStyle",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_borderLeftColor:"set_borderLeftColor",get_borderLeftColor:"get_borderLeftColor",set_borderBottomColor:"set_borderBottomColor",get_borderBottomColor:"get_borderBottomColor",set_borderRightColor:"set_borderRightColor",get_borderRightColor:"get_borderRightColor",set_borderTopColor:"set_borderTopColor",get_borderTopColor:"get_borderTopColor",set_borderWidth:"set_borderWidth",get_borderWidth:"get_borderWidth",set_borderLeftWidth:"set_borderLeftWidth",get_borderLeftWidth:"get_borderLeftWidth",set_borderBottomWidth:"set_borderBottomWidth",get_borderBottomWidth:"get_borderBottomWidth",set_borderRightWidth:"set_borderRightWidth",get_borderRightWidth:"get_borderRightWidth",set_borderTopWidth:"set_borderTopWidth",get_borderTopWidth:"get_borderTopWidth",set_backgroundAttachment:"set_backgroundAttachment",get_backgroundAttachment:"get_backgroundAttachment",set_backgroundClip:"set_backgroundClip",get_backgroundClip:"get_backgroundClip",set_backgroundPosition:"set_backgroundPosition",get_backgroundPosition:"get_backgroundPosition",set_backgroundSize:"set_backgroundSize",get_backgroundSize:"get_backgroundSize",set_backgroundOrigin:"set_backgroundOrigin",get_backgroundOrigin:"get_backgroundOrigin",set_backgroundRepeat:"set_backgroundRepeat",get_backgroundRepeat:"get_backgroundRepeat",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_background:"set_background",get_background:"get_background",set_right:"set_right",get_right:"get_right",set_bottom:"set_bottom",get_bottom:"get_bottom",set_left:"set_left",get_left:"get_left",set_top:"set_top",get_top:"get_top",set_maxWidth:"set_maxWidth",get_maxWidth:"get_maxWidth",set_minWidth:"set_minWidth",get_minWidth:"get_minWidth",set_maxHeight:"set_maxHeight",get_maxHeight:"get_maxHeight",set_minHeight:"set_minHeight",get_minHeight:"get_minHeight",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",get_padding:"get_padding",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_margin:"set_margin",get_margin:"get_margin",set_zIndex:"set_zIndex",get_zIndex:"get_zIndex",set_clear:"set_clear",get_clear:"get_clear",set_cssFloat:"set_cssFloat",get_cssFloat:"get_cssFloat",set_position:"set_position",get_position:"get_position",set_display:"set_display",get_display:"get_display"}
};
cocktail.core.css.CSSStyleRule = function(parentStyleSheet,parentRule) {
	cocktail.core.css.CSSRule.call(this,parentStyleSheet,parentRule);
	this.style = new cocktail.core.css.CSSStyleDeclaration(this);
	this._selectorParser = new cocktail.core.css.parsers.CSSSelectorParser();
	this.selectors = new Array();
	this.type = 1;
};
$hxClasses["cocktail.core.css.CSSStyleRule"] = cocktail.core.css.CSSStyleRule;
cocktail.core.css.CSSStyleRule.__name__ = ["cocktail","core","css","CSSStyleRule"];
cocktail.core.css.CSSStyleRule.isSelectorChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 42;
};
cocktail.core.css.CSSStyleRule.isStyleChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 40 || c == 41;
};
cocktail.core.css.CSSStyleRule.isAsciiChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57;
};
cocktail.core.css.CSSStyleRule.__super__ = cocktail.core.css.CSSRule;
cocktail.core.css.CSSStyleRule.prototype = $extend(cocktail.core.css.CSSRule.prototype,{
	parse: function(css) {
		this.selectors = new Array();
		var state = cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES;
		var next = cocktail.core.css.parsers.StyleRuleParserState.BEGIN_SELECTOR;
		var start = 0;
		var position = 0;
		var c = css.charCodeAt(position);
		while(!(c != c)) {
			switch(state[1]) {
			case 0:
				switch(c) {
				case 10:case 13:case 9:case 32:
					break;
				default:
					state = next;
					continue;
				}
				break;
			case 1:
				state = cocktail.core.css.parsers.StyleRuleParserState.SELECTOR;
				next = cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR;
				start = position;
				continue;
				break;
			case 3:
				if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 42)) switch(c) {
				case 123:
					state = cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR;
					next = cocktail.core.css.parsers.StyleRuleParserState.BEGIN_STYLES;
					continue;
					break;
				case 44:
					state = cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR;
					next = cocktail.core.css.parsers.StyleRuleParserState.BEGIN_SELECTOR;
					continue;
					break;
				}
				break;
			case 2:
				var selector = HxOverrides.substr(css,start,position - start);
				var isValid = this._selectorParser.parseSelector(selector,this.selectors);
				if(isValid == false) {
					this.selectors = new Array();
					return;
				}
				state = next;
				break;
			case 4:
				state = cocktail.core.css.parsers.StyleRuleParserState.STYLES;
				next = cocktail.core.css.parsers.StyleRuleParserState.END_STYLES;
				start = position;
				continue;
				break;
			case 5:
				if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 40 || c == 41)) switch(c) {
				case 125:
					state = next;
					continue;
					break;
				}
				break;
			case 6:
				var styleDeclaration = HxOverrides.substr(css,start,position - start);
				this.style.set_cssText(styleDeclaration);
				state = cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES;
				break;
			}
			c = StringTools.fastCodeAt(css,++position);
		}
	}
	,serializeStyleRule: function() {
		var serializedStyleRule = this.serializeSelectors(this.selectors);
		serializedStyleRule += "{" + this.style.get_cssText() + "}";
		return serializedStyleRule;
	}
	,serializeSelectors: function(selectors) {
		var serializedSelectors = "";
		var _g1 = 0;
		var _g = selectors.length;
		while(_g1 < _g) {
			var i = _g1++;
			var selector = selectors[i];
			serializedSelectors += cocktail.core.css.parsers.SelectorSerializer.serialize(selector);
			if(i < selectors.length - 1) serializedSelectors += ", ";
		}
		return serializedSelectors;
	}
	,set_cssText: function(value) {
		this.parse(value);
		return value;
	}
	,get_cssText: function() {
		return this.serializeStyleRule();
	}
	,get_selectorText: function() {
		return this.serializeSelectors(this.selectors);
	}
	,set_selectorText: function(value) {
		this.selectors = new Array();
		this._selectorParser.parseSelector(value,this.selectors);
		return value;
	}
	,__class__: cocktail.core.css.CSSStyleRule
	,__properties__: $extend(cocktail.core.css.CSSRule.prototype.__properties__,{set_selectorText:"set_selectorText",get_selectorText:"get_selectorText"})
});
cocktail.core.css.StyleSheet = function(stylesheet,ownerNode,href,parentStyleSheet) {
	this.ownerNode = ownerNode;
	this.href = href;
	this.parentStyleSheet = parentStyleSheet;
};
$hxClasses["cocktail.core.css.StyleSheet"] = cocktail.core.css.StyleSheet;
cocktail.core.css.StyleSheet.__name__ = ["cocktail","core","css","StyleSheet"];
cocktail.core.css.StyleSheet.prototype = {
	dispose: function() {
	}
	,__class__: cocktail.core.css.StyleSheet
};
cocktail.core.css.CSSStyleSheet = function(stylesheet,origin,ownerNode,href,parentStyleSheet,ownerRule) {
	cocktail.core.css.StyleSheet.call(this,stylesheet,ownerNode,href,parentStyleSheet);
	this.cssRules = new Array();
	this.ownerRule = ownerRule;
	this.origin = origin;
	this._cssRulesParser = new cocktail.core.css.parsers.CSSRulesParser();
	var rules = this._cssRulesParser.parseRules(stylesheet);
	var _g1 = 0;
	var _g = rules.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.insertRule(rules[i],this.cssRules.length);
	}
};
$hxClasses["cocktail.core.css.CSSStyleSheet"] = cocktail.core.css.CSSStyleSheet;
cocktail.core.css.CSSStyleSheet.__name__ = ["cocktail","core","css","CSSStyleSheet"];
cocktail.core.css.CSSStyleSheet.__super__ = cocktail.core.css.StyleSheet;
cocktail.core.css.CSSStyleSheet.prototype = $extend(cocktail.core.css.StyleSheet.prototype,{
	insertRule: function(rule,index) {
		var cssRule = this._cssRulesParser.parseRule(rule,this);
		this.cssRules.splice(index,0,cssRule);
		return index;
	}
	,deleteRule: function(index) {
		HxOverrides.remove(this.cssRules,this.cssRules[index]);
	}
	,__class__: cocktail.core.css.CSSStyleSheet
});
cocktail.core.css.CSSValueConverter = function() {
};
$hxClasses["cocktail.core.css.CSSValueConverter"] = cocktail.core.css.CSSValueConverter;
cocktail.core.css.CSSValueConverter.__name__ = ["cocktail","core","css","CSSValueConverter"];
cocktail.core.css.CSSValueConverter.getPixelFromLength = function(length,emReference,exReference) {
	var lengthValue;
	switch(length[1]) {
	case 0:
		var value = length[2];
		lengthValue = value;
		break;
	case 2:
		var value1 = length[2];
		lengthValue = value1 * 37.7952755905511779 / 10;
		break;
	case 1:
		var value2 = length[2];
		lengthValue = value2 * 37.7952755905511779;
		break;
	case 3:
		var value3 = length[2];
		lengthValue = value3 / 0.75;
		break;
	case 5:
		var value4 = length[2];
		lengthValue = value4 * 96.;
		break;
	case 4:
		var value5 = length[2];
		lengthValue = value5 * 16.;
		break;
	case 6:
		var value6 = length[2];
		lengthValue = emReference * value6;
		break;
	case 7:
		var value7 = length[2];
		lengthValue = exReference * value7;
		break;
	}
	return lengthValue;
};
cocktail.core.css.CSSValueConverter.getBorderWidthFromBorderWidthKeyword = function(value) {
	switch(value[1]) {
	case 73:
		return cocktail.core.config.Config.getInstance().thinBorderWidth;
	case 61:
		return cocktail.core.config.Config.getInstance().mediumBorderWidth;
	case 74:
		return cocktail.core.config.Config.getInstance().thickBorderWidth;
	default:
		throw "not a valid border width keyword";
	}
};
cocktail.core.css.CSSValueConverter.getFontFamilyAsStringArray = function(value) {
	var fontNames = new Array();
	switch(value[1]) {
	case 15:
		var value1 = value[2];
		var _g1 = 0;
		var _g = value1.length;
		while(_g1 < _g) {
			var i = _g1++;
			{
				var _g2 = value1[i];
				switch(_g2[1]) {
				case 6:
					var value2 = _g2[2];
					fontNames.push(value2);
					break;
				case 3:
					var value3 = _g2[2];
					fontNames.push(value3);
					break;
				default:
					throw "Illegal value for font family style";
				}
			}
		}
		break;
	case 3:
		var value4 = value[2];
		fontNames = [value4];
		break;
	case 6:
		var value5 = value[2];
		fontNames = [value5];
		break;
	default:
		throw "Illegal value for font family style";
	}
	return fontNames;
};
cocktail.core.css.CSSValueConverter.getFontSizeFromAbsoluteSizeValue = function(absoluteSize) {
	var fontSize = 0.0;
	switch(absoluteSize[1]) {
	case 58:
		fontSize = cocktail.core.config.Config.getInstance().xxSmallFontSize;
		break;
	case 59:
		fontSize = cocktail.core.config.Config.getInstance().xSmallFontSize;
		break;
	case 60:
		fontSize = cocktail.core.config.Config.getInstance().smallFontSize;
		break;
	case 61:
		fontSize = cocktail.core.config.Config.getInstance().mediumFontSize;
		break;
	case 62:
		fontSize = cocktail.core.config.Config.getInstance().largeFontSize;
		break;
	case 63:
		fontSize = cocktail.core.config.Config.getInstance().xLargeFontSize;
		break;
	case 64:
		fontSize = cocktail.core.config.Config.getInstance().xxLargeFontSize;
		break;
	default:
		throw "Illegal keyword value for font size";
	}
	return fontSize;
};
cocktail.core.css.CSSValueConverter.getFontSizeFromRelativeSizeValue = function(relativeSize,parentFontSize) {
	var fontSize = 0.0;
	switch(relativeSize[1]) {
	case 65:
		fontSize = cocktail.core.css.CSSValueConverter.getLargerFontSize(parentFontSize);
		break;
	case 66:
		fontSize = cocktail.core.css.CSSValueConverter.getSmallerFontSize(parentFontSize);
		break;
	default:
		throw "Illegal keyword value for font size";
	}
	return fontSize;
};
cocktail.core.css.CSSValueConverter.getPixelFromPercent = function(percent,reference) {
	return reference * (percent * 0.01);
};
cocktail.core.css.CSSValueConverter.getPercentFromPixel = function(pixel,reference) {
	return reference / pixel * 100;
};
cocktail.core.css.CSSValueConverter.getComputedCSSColorFromCSSColor = function(colorProperty,currentColor) {
	switch(colorProperty[1]) {
	case 7:
		var value = colorProperty[2];
		return cocktail.core.css.CSSValueConverter.getRGBAColorFromColorKeyword(value);
	case 8:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,0,0.0);
	case 0:
		var blue = colorProperty[4];
		var green = colorProperty[3];
		var red = colorProperty[2];
		red = cocktail.core.css.CSSValueConverter.clampInteger(red,255,0);
		green = cocktail.core.css.CSSValueConverter.clampInteger(green,255,0);
		blue = cocktail.core.css.CSSValueConverter.clampInteger(blue,255,0);
		return cocktail.core.css.CSSColorValue.RGBA(red,green,blue,1.0);
	case 1:
		var blue1 = colorProperty[4];
		var green1 = colorProperty[3];
		var red1 = colorProperty[2];
		red1 = cocktail.core.css.CSSValueConverter.clampNumber(red1,100,0);
		green1 = cocktail.core.css.CSSValueConverter.clampNumber(green1,100,0);
		blue1 = cocktail.core.css.CSSValueConverter.clampNumber(blue1,100,0);
		return cocktail.core.css.CSSColorValue.RGBA(Math.round(255 * (red1 * 0.01)),Math.round(255 * (green1 * 0.01)),Math.round(255 * (blue1 * 0.01)),1.0);
	case 2:
		var alpha = colorProperty[5];
		var blue2 = colorProperty[4];
		var green2 = colorProperty[3];
		var red2 = colorProperty[2];
		red2 = cocktail.core.css.CSSValueConverter.clampInteger(red2,255,0);
		green2 = cocktail.core.css.CSSValueConverter.clampInteger(green2,255,0);
		blue2 = cocktail.core.css.CSSValueConverter.clampInteger(blue2,255,0);
		alpha = cocktail.core.css.CSSValueConverter.clampNumber(alpha,1.0,0.0);
		return cocktail.core.css.CSSColorValue.RGBA(red2,green2,blue2,alpha);
	case 3:
		var alpha1 = colorProperty[5];
		var blue3 = colorProperty[4];
		var green3 = colorProperty[3];
		var red3 = colorProperty[2];
		red3 = cocktail.core.css.CSSValueConverter.clampNumber(red3,100,0);
		green3 = cocktail.core.css.CSSValueConverter.clampNumber(green3,100,0);
		blue3 = cocktail.core.css.CSSValueConverter.clampNumber(blue3,100,0);
		alpha1 = cocktail.core.css.CSSValueConverter.clampNumber(alpha1,1.0,0.0);
		return cocktail.core.css.CSSColorValue.RGBA(Math.round(255 * (red3 * 0.01)),Math.round(255 * (green3 * 0.01)),Math.round(255 * (blue3 * 0.01)),alpha1);
	case 5:
		var lightness = colorProperty[4];
		var saturation = colorProperty[3];
		var hue = colorProperty[2];
		hue = 360 / hue;
		saturation = 100 / saturation;
		lightness = 100 / lightness;
		return cocktail.core.css.CSSValueConverter.HSLAToRGBA(hue,saturation,lightness,1.0);
	case 6:
		var alpha2 = colorProperty[5];
		var lightness1 = colorProperty[4];
		var saturation1 = colorProperty[3];
		var hue1 = colorProperty[2];
		hue1 = 360 / hue1;
		saturation1 = 100 / saturation1;
		lightness1 = 100 / lightness1;
		return cocktail.core.css.CSSValueConverter.HSLAToRGBA(hue1,saturation1,lightness1,alpha2);
	case 4:
		var value1 = colorProperty[2];
		var paddedHex = "";
		if(value1.length == 3) {
			paddedHex += value1.charAt(0);
			paddedHex += value1.charAt(0);
			paddedHex += value1.charAt(1);
			paddedHex += value1.charAt(1);
			paddedHex += value1.charAt(2);
			paddedHex += value1.charAt(2);
		} else paddedHex = value1;
		return cocktail.core.css.CSSValueConverter.hexToRGBA(paddedHex);
	case 9:
		return currentColor;
	}
};
cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor = function(value,colorVO) {
	var colorValue = 0;
	var alphaValue = 0;
	switch(value[1]) {
	case 2:
		var alpha = value[5];
		var blue = value[4];
		var green = value[3];
		var red = value[2];
		colorValue = red;
		colorValue = (colorValue << 8) + green;
		colorValue = (colorValue << 8) + blue;
		alphaValue = alpha;
		break;
	default:
	}
	colorVO.color = colorValue;
	colorVO.alpha = alphaValue;
};
cocktail.core.css.CSSValueConverter.HSLAToRGBA = function(hue,saturation,lightness,alpha) {
	var m2 = 0;
	if(lightness < 0.5) m2 = lightness * (saturation + 1); else m2 = lightness + saturation - lightness * saturation;
	var m1 = lightness * 2 - m2;
	var r = Math.round(cocktail.core.css.CSSValueConverter.hueToRGB(m1,m2,hue + 0.333333333333333315));
	var g = Math.round(cocktail.core.css.CSSValueConverter.hueToRGB(m1,m2,hue));
	var b = Math.round(cocktail.core.css.CSSValueConverter.hueToRGB(m1,m2,hue - 0.333333333333333315));
	return cocktail.core.css.CSSColorValue.RGBA(r,g,b,alpha);
};
cocktail.core.css.CSSValueConverter.hueToRGB = function(m1,m2,h) {
	if(h < 0) h = h + 1;
	if(h > 1) h = h - 1;
	if(h * 6 < 1) return m1 + (m2 - m1) * h * 6;
	if(h * 2 < 1) return m2;
	if(h * 3 < 2) return m1 + (m2 - m1) * (0.66666666666666663 - h) * 6;
	return m1;
};
cocktail.core.css.CSSValueConverter.clampNumber = function(number,max,min) {
	if(number > max) return max;
	if(number < min) return min;
	return number;
};
cocktail.core.css.CSSValueConverter.clampInteger = function(integer,max,min) {
	if(integer > max) return max;
	if(integer < min) return min;
	return integer;
};
cocktail.core.css.CSSValueConverter.hexToRGBA = function(hex) {
	var red = cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(0)) * 16 + cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(1));
	var green = cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(2)) * 16 + cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(3));
	var blue = cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(4)) * 16 + cocktail.core.css.CSSValueConverter.hexToInt(hex.charAt(5));
	return cocktail.core.css.CSSColorValue.RGBA(red,green,blue,1.0);
};
cocktail.core.css.CSSValueConverter.hexToInt = function($char) {
	var _g = $char.toUpperCase();
	switch(_g) {
	case "0":
		return 0;
	case "1":
		return 1;
	case "2":
		return 2;
	case "3":
		return 3;
	case "4":
		return 4;
	case "5":
		return 5;
	case "6":
		return 6;
	case "7":
		return 7;
	case "8":
		return 8;
	case "9":
		return 9;
	case "A":
		return 10;
	case "B":
		return 11;
	case "C":
		return 12;
	case "D":
		return 13;
	case "E":
		return 14;
	case "F":
		return 15;
	}
	return 0;
};
cocktail.core.css.CSSValueConverter.getRGBAColorFromColorKeyword = function(value) {
	switch(value[1]) {
	case 0:
		return cocktail.core.css.CSSColorValue.RGBA(240,248,255,1.0);
	case 1:
		return cocktail.core.css.CSSColorValue.RGBA(250,235,215,1.0);
	case 2:
		return cocktail.core.css.CSSColorValue.RGBA(0,255,255,1.0);
	case 3:
		return cocktail.core.css.CSSColorValue.RGBA(127,255,212,1.0);
	case 4:
		return cocktail.core.css.CSSColorValue.RGBA(240,255,255,1.0);
	case 5:
		return cocktail.core.css.CSSColorValue.RGBA(245,245,220,1.0);
	case 6:
		return cocktail.core.css.CSSColorValue.RGBA(255,228,196,1.0);
	case 7:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,0,1.0);
	case 8:
		return cocktail.core.css.CSSColorValue.RGBA(255,235,205,1.0);
	case 9:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,255,1.0);
	case 10:
		return cocktail.core.css.CSSColorValue.RGBA(138,43,226,1.0);
	case 11:
		return cocktail.core.css.CSSColorValue.RGBA(165,42,42,1.0);
	case 12:
		return cocktail.core.css.CSSColorValue.RGBA(222,184,135,1.0);
	case 13:
		return cocktail.core.css.CSSColorValue.RGBA(95,158,160,1.0);
	case 14:
		return cocktail.core.css.CSSColorValue.RGBA(127,255,0,1.0);
	case 15:
		return cocktail.core.css.CSSColorValue.RGBA(210,105,30,1.0);
	case 16:
		return cocktail.core.css.CSSColorValue.RGBA(255,127,80,1.0);
	case 17:
		return cocktail.core.css.CSSColorValue.RGBA(100,149,237,1.0);
	case 18:
		return cocktail.core.css.CSSColorValue.RGBA(255,248,220,1.0);
	case 19:
		return cocktail.core.css.CSSColorValue.RGBA(220,20,60,1.0);
	case 20:
		return cocktail.core.css.CSSColorValue.RGBA(0,255,255,1.0);
	case 21:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,139,1.0);
	case 22:
		return cocktail.core.css.CSSColorValue.RGBA(0,139,139,1.0);
	case 23:
		return cocktail.core.css.CSSColorValue.RGBA(184,134,11,1.0);
	case 24:
		return cocktail.core.css.CSSColorValue.RGBA(169,169,169,1.0);
	case 25:
		return cocktail.core.css.CSSColorValue.RGBA(0,100,0,1.0);
	case 26:
		return cocktail.core.css.CSSColorValue.RGBA(169,169,169,1.0);
	case 27:
		return cocktail.core.css.CSSColorValue.RGBA(189,183,107,1.0);
	case 28:
		return cocktail.core.css.CSSColorValue.RGBA(139,0,139,1.0);
	case 29:
		return cocktail.core.css.CSSColorValue.RGBA(85,107,47,1.0);
	case 30:
		return cocktail.core.css.CSSColorValue.RGBA(255,140,0,1.0);
	case 31:
		return cocktail.core.css.CSSColorValue.RGBA(153,50,204,1.0);
	case 32:
		return cocktail.core.css.CSSColorValue.RGBA(139,0,0,1.0);
	case 33:
		return cocktail.core.css.CSSColorValue.RGBA(233,150,122,1.0);
	case 34:
		return cocktail.core.css.CSSColorValue.RGBA(143,188,143,1.0);
	case 35:
		return cocktail.core.css.CSSColorValue.RGBA(72,61,139,1.0);
	case 36:
		return cocktail.core.css.CSSColorValue.RGBA(47,79,79,1.0);
	case 37:
		return cocktail.core.css.CSSColorValue.RGBA(47,79,79,1.0);
	case 38:
		return cocktail.core.css.CSSColorValue.RGBA(0,206,209,1.0);
	case 39:
		return cocktail.core.css.CSSColorValue.RGBA(148,0,211,1.0);
	case 40:
		return cocktail.core.css.CSSColorValue.RGBA(255,20,147,1.0);
	case 41:
		return cocktail.core.css.CSSColorValue.RGBA(0,191,255,1.0);
	case 42:
		return cocktail.core.css.CSSColorValue.RGBA(105,105,105,1.0);
	case 43:
		return cocktail.core.css.CSSColorValue.RGBA(105,105,105,1.0);
	case 44:
		return cocktail.core.css.CSSColorValue.RGBA(30,144,255,1.0);
	case 45:
		return cocktail.core.css.CSSColorValue.RGBA(178,34,34,1.0);
	case 46:
		return cocktail.core.css.CSSColorValue.RGBA(255,250,240,1.0);
	case 47:
		return cocktail.core.css.CSSColorValue.RGBA(34,139,34,1.0);
	case 48:
		return cocktail.core.css.CSSColorValue.RGBA(255,0,255,1.0);
	case 49:
		return cocktail.core.css.CSSColorValue.RGBA(220,220,220,1.0);
	case 50:
		return cocktail.core.css.CSSColorValue.RGBA(248,248,255,1.0);
	case 51:
		return cocktail.core.css.CSSColorValue.RGBA(255,215,0,1.0);
	case 52:
		return cocktail.core.css.CSSColorValue.RGBA(218,165,32,1.0);
	case 53:
		return cocktail.core.css.CSSColorValue.RGBA(128,128,128,1.0);
	case 54:
		return cocktail.core.css.CSSColorValue.RGBA(0,128,0,1.0);
	case 55:
		return cocktail.core.css.CSSColorValue.RGBA(173,255,47,1.0);
	case 56:
		return cocktail.core.css.CSSColorValue.RGBA(128,128,128,1.0);
	case 57:
		return cocktail.core.css.CSSColorValue.RGBA(240,255,240,1.0);
	case 58:
		return cocktail.core.css.CSSColorValue.RGBA(255,105,180,1.0);
	case 59:
		return cocktail.core.css.CSSColorValue.RGBA(205,92,92,1.0);
	case 60:
		return cocktail.core.css.CSSColorValue.RGBA(75,0,130,1.0);
	case 61:
		return cocktail.core.css.CSSColorValue.RGBA(255,255,240,1.0);
	case 62:
		return cocktail.core.css.CSSColorValue.RGBA(240,230,140,1.0);
	case 63:
		return cocktail.core.css.CSSColorValue.RGBA(230,230,250,1.0);
	case 64:
		return cocktail.core.css.CSSColorValue.RGBA(255,240,245,1.0);
	case 65:
		return cocktail.core.css.CSSColorValue.RGBA(124,252,0,1.0);
	case 66:
		return cocktail.core.css.CSSColorValue.RGBA(255,250,205,1.0);
	case 67:
		return cocktail.core.css.CSSColorValue.RGBA(173,216,130,1.0);
	case 68:
		return cocktail.core.css.CSSColorValue.RGBA(240,128,128,1.0);
	case 69:
		return cocktail.core.css.CSSColorValue.RGBA(224,255,255,1.0);
	case 70:
		return cocktail.core.css.CSSColorValue.RGBA(250,250,210,1.0);
	case 71:
		return cocktail.core.css.CSSColorValue.RGBA(211,211,211,1.0);
	case 72:
		return cocktail.core.css.CSSColorValue.RGBA(144,238,144,1.0);
	case 73:
		return cocktail.core.css.CSSColorValue.RGBA(211,211,211,1.0);
	case 74:
		return cocktail.core.css.CSSColorValue.RGBA(255,182,193,1.0);
	case 75:
		return cocktail.core.css.CSSColorValue.RGBA(255,160,122,1.0);
	case 76:
		return cocktail.core.css.CSSColorValue.RGBA(32,178,170,1.0);
	case 77:
		return cocktail.core.css.CSSColorValue.RGBA(135,206,250,1.0);
	case 78:
		return cocktail.core.css.CSSColorValue.RGBA(119,136,153,1.0);
	case 79:
		return cocktail.core.css.CSSColorValue.RGBA(119,136,153,1.0);
	case 80:
		return cocktail.core.css.CSSColorValue.RGBA(176,196,222,1.0);
	case 81:
		return cocktail.core.css.CSSColorValue.RGBA(255,255,224,1.0);
	case 82:
		return cocktail.core.css.CSSColorValue.RGBA(0,255,0,1.0);
	case 83:
		return cocktail.core.css.CSSColorValue.RGBA(50,205,50,1.0);
	case 84:
		return cocktail.core.css.CSSColorValue.RGBA(250,240,230,1.0);
	case 85:
		return cocktail.core.css.CSSColorValue.RGBA(255,0,255,1.0);
	case 86:
		return cocktail.core.css.CSSColorValue.RGBA(128,0,0,1.0);
	case 87:
		return cocktail.core.css.CSSColorValue.RGBA(102,205,170,1.0);
	case 88:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,205,1.0);
	case 89:
		return cocktail.core.css.CSSColorValue.RGBA(186,85,211,1.0);
	case 90:
		return cocktail.core.css.CSSColorValue.RGBA(147,112,219,1.0);
	case 91:
		return cocktail.core.css.CSSColorValue.RGBA(60,179,113,1.0);
	case 92:
		return cocktail.core.css.CSSColorValue.RGBA(123,104,238,1.0);
	case 93:
		return cocktail.core.css.CSSColorValue.RGBA(0,250,154,1.0);
	case 94:
		return cocktail.core.css.CSSColorValue.RGBA(72,209,204,1.0);
	case 95:
		return cocktail.core.css.CSSColorValue.RGBA(199,21,133,1.0);
	case 96:
		return cocktail.core.css.CSSColorValue.RGBA(25,25,112,1.0);
	case 97:
		return cocktail.core.css.CSSColorValue.RGBA(245,255,250,1.0);
	case 98:
		return cocktail.core.css.CSSColorValue.RGBA(255,228,225,1.0);
	case 99:
		return cocktail.core.css.CSSColorValue.RGBA(255,228,181,1.0);
	case 100:
		return cocktail.core.css.CSSColorValue.RGBA(255,222,173,1.0);
	case 101:
		return cocktail.core.css.CSSColorValue.RGBA(0,0,128,1.0);
	case 102:
		return cocktail.core.css.CSSColorValue.RGBA(253,245,230,1.0);
	case 103:
		return cocktail.core.css.CSSColorValue.RGBA(128,128,0,1.0);
	case 104:
		return cocktail.core.css.CSSColorValue.RGBA(107,142,35,1.0);
	case 105:
		return cocktail.core.css.CSSColorValue.RGBA(255,165,0,1.0);
	case 106:
		return cocktail.core.css.CSSColorValue.RGBA(255,69,0,1.0);
	case 107:
		return cocktail.core.css.CSSColorValue.RGBA(218,112,214,1.0);
	case 108:
		return cocktail.core.css.CSSColorValue.RGBA(238,232,170,1.0);
	case 109:
		return cocktail.core.css.CSSColorValue.RGBA(152,251,152,1.0);
	case 110:
		return cocktail.core.css.CSSColorValue.RGBA(175,238,238,1.0);
	case 111:
		return cocktail.core.css.CSSColorValue.RGBA(219,112,147,1.0);
	case 112:
		return cocktail.core.css.CSSColorValue.RGBA(255,239,213,1.0);
	case 113:
		return cocktail.core.css.CSSColorValue.RGBA(255,218,185,1.0);
	case 114:
		return cocktail.core.css.CSSColorValue.RGBA(205,133,63,1.0);
	case 115:
		return cocktail.core.css.CSSColorValue.RGBA(255,192,203,1.0);
	case 116:
		return cocktail.core.css.CSSColorValue.RGBA(221,160,221,1.0);
	case 117:
		return cocktail.core.css.CSSColorValue.RGBA(176,224,230,1.0);
	case 118:
		return cocktail.core.css.CSSColorValue.RGBA(128,0,128,1.0);
	case 119:
		return cocktail.core.css.CSSColorValue.RGBA(255,0,0,1.0);
	case 120:
		return cocktail.core.css.CSSColorValue.RGBA(188,143,143,1.0);
	case 121:
		return cocktail.core.css.CSSColorValue.RGBA(65,105,225,1.0);
	case 122:
		return cocktail.core.css.CSSColorValue.RGBA(139,69,19,1.0);
	case 123:
		return cocktail.core.css.CSSColorValue.RGBA(250,128,114,1.0);
	case 124:
		return cocktail.core.css.CSSColorValue.RGBA(244,164,96,1.0);
	case 125:
		return cocktail.core.css.CSSColorValue.RGBA(46,139,87,1.0);
	case 126:
		return cocktail.core.css.CSSColorValue.RGBA(255,245,238,1.0);
	case 127:
		return cocktail.core.css.CSSColorValue.RGBA(160,82,45,1.0);
	case 128:
		return cocktail.core.css.CSSColorValue.RGBA(192,192,192,1.0);
	case 129:
		return cocktail.core.css.CSSColorValue.RGBA(135,206,235,1.0);
	case 130:
		return cocktail.core.css.CSSColorValue.RGBA(106,90,205,1.0);
	case 131:
		return cocktail.core.css.CSSColorValue.RGBA(112,128,144,1.0);
	case 132:
		return cocktail.core.css.CSSColorValue.RGBA(112,128,144,1.0);
	case 133:
		return cocktail.core.css.CSSColorValue.RGBA(255,250,250,1.0);
	case 134:
		return cocktail.core.css.CSSColorValue.RGBA(0,255,127,1.0);
	case 135:
		return cocktail.core.css.CSSColorValue.RGBA(70,130,180,1.0);
	case 136:
		return cocktail.core.css.CSSColorValue.RGBA(210,180,140,1.0);
	case 137:
		return cocktail.core.css.CSSColorValue.RGBA(0,128,128,1.0);
	case 138:
		return cocktail.core.css.CSSColorValue.RGBA(216,191,216,1.0);
	case 139:
		return cocktail.core.css.CSSColorValue.RGBA(255,99,71,1.0);
	case 140:
		return cocktail.core.css.CSSColorValue.RGBA(64,224,208,1.0);
	case 141:
		return cocktail.core.css.CSSColorValue.RGBA(238,130,238,1.0);
	case 142:
		return cocktail.core.css.CSSColorValue.RGBA(245,222,179,1.0);
	case 143:
		return cocktail.core.css.CSSColorValue.RGBA(255,255,255,1.0);
	case 144:
		return cocktail.core.css.CSSColorValue.RGBA(245,245,245,1.0);
	case 145:
		return cocktail.core.css.CSSColorValue.RGBA(255,255,0,1.0);
	case 146:
		return cocktail.core.css.CSSColorValue.RGBA(154,205,50,1.0);
	}
};
cocktail.core.css.CSSValueConverter.getLargerFontSize = function(parentFontSize) {
	var fontSizeTable = [cocktail.core.config.Config.getInstance().xxSmallFontSize,cocktail.core.config.Config.getInstance().xSmallFontSize,cocktail.core.config.Config.getInstance().smallFontSize,cocktail.core.config.Config.getInstance().mediumFontSize,cocktail.core.config.Config.getInstance().largeFontSize,cocktail.core.config.Config.getInstance().xLargeFontSize,cocktail.core.config.Config.getInstance().xxLargeFontSize];
	var fontSize = fontSizeTable[fontSizeTable.length - 1];
	var _g1 = 0;
	var _g = fontSizeTable.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(fontSizeTable[i] > parentFontSize) {
			fontSize = fontSizeTable[i];
			break;
		}
	}
	return fontSize;
};
cocktail.core.css.CSSValueConverter.getSmallerFontSize = function(parentFontSize) {
	var fontSizeTable = [cocktail.core.config.Config.getInstance().xxSmallFontSize,cocktail.core.config.Config.getInstance().xSmallFontSize,cocktail.core.config.Config.getInstance().smallFontSize,cocktail.core.config.Config.getInstance().mediumFontSize,cocktail.core.config.Config.getInstance().largeFontSize,cocktail.core.config.Config.getInstance().xLargeFontSize,cocktail.core.config.Config.getInstance().xxLargeFontSize];
	var fontSize = fontSizeTable[0];
	var i = fontSizeTable.length - 1;
	while(i > 0) {
		if(fontSizeTable[i] < parentFontSize) {
			fontSize = fontSizeTable[i];
			break;
		}
		i--;
	}
	return fontSize;
};
cocktail.core.css.CSSValueConverter.prototype = {
	__class__: cocktail.core.css.CSSValueConverter
};
cocktail.core.css.CascadeManager = function() {
	this.propertiesToCascade = new Array();
	this.reset();
};
$hxClasses["cocktail.core.css.CascadeManager"] = cocktail.core.css.CascadeManager;
cocktail.core.css.CascadeManager.__name__ = ["cocktail","core","css","CascadeManager"];
cocktail.core.css.CascadeManager.prototype = {
	dispose: function() {
		this.propertiesToCascade = null;
	}
	,reset: function() {
		if(this.hasPropertiesToCascade == true) {
			var _g = 0;
			while(_g < 87) {
				var i = _g++;
				this.propertiesToCascade[i] = false;
			}
		}
		this.hasFontSize = false;
		this.hasFontFamily = false;
		this.hasBackgroundColor = false;
		this.hasColor = false;
		this.hasDisplay = false;
		this.hasFloat = false;
		this.hasOverflowX = false;
		this.hasOverflowY = false;
		this.hasLetterSpacing = false;
		this.hasLineHeight = false;
		this.hasTransform = false;
		this.hasZIndex = false;
		this.hasPosition = false;
		this.hasVisible = false;
		this.hasOpacity = false;
		this.hasBackgroundImage = false;
		this.hasVerticalAlign = false;
		this.hasClear = false;
		this.hasWhiteSpace = false;
		this.hasWidth = false;
		this.hasHeight = false;
		this.hasMaxHeight = false;
		this.hasMaxWidth = false;
		this.hasTextAlign = false;
		this.hasTop = false;
		this.hasBottom = false;
		this.hasLeft = false;
		this.hasRight = false;
		this.hasMarginTop = false;
		this.hasMarginBottom = false;
		this.hasMarginLeft = false;
		this.hasMarginRight = false;
		this.hasTransitionProperty = false;
		this.hasLeftBorderStyle = false;
		this.hasTopBorderStyle = false;
		this.hasRightBorderStyle = false;
		this.hasBottomBorderStyle = false;
		this.hasBottomBorderColor = false;
		this.hasTopBorderColor = false;
		this.hasLeftBorderColor = false;
		this.hasRightBorderColor = false;
		this.hasOutlineStyle = false;
		this.hasOutlineColor = false;
		this.hasPropertiesToCascade = false;
		this.cascadeAll = false;
	}
	,addPropertyToCascade: function(index) {
		if(this.cascadeAll == true) return;
		this.propertiesToCascade[index] = true;
		this.flagProperty(index);
		this.hasPropertiesToCascade = true;
	}
	,removePropertyToCascade: function(index) {
		this.unFlagProperty(index);
		this.propertiesToCascade[index] = false;
	}
	,shouldCascadeAll: function() {
		this.cascadeAll = true;
		this.hasPropertiesToCascade = true;
	}
	,flagProperty: function(index) {
		switch(index) {
		case 34:
			this.hasFontSize = true;
			break;
		case 8:
			this.hasMarginTop = true;
			break;
		case 9:
			this.hasMarginBottom = true;
			break;
		case 6:
			this.hasMarginLeft = true;
			break;
		case 7:
			this.hasMarginRight = true;
			break;
		case 57:
			this.hasTransitionProperty = true;
			break;
		case 21:
			this.hasTop = true;
			break;
		case 24:
			this.hasBottom = true;
			break;
		case 22:
			this.hasLeft = true;
			break;
		case 23:
			this.hasRight = true;
			break;
		case 46:
			this.hasTextAlign = true;
			break;
		case 18:
			this.hasMaxHeight = true;
			break;
		case 20:
			this.hasMaxWidth = true;
			break;
		case 15:
			this.hasWidth = true;
			break;
		case 16:
			this.hasHeight = true;
			break;
		case 3:
			this.hasClear = true;
			break;
		case 45:
			this.hasWhiteSpace = true;
			break;
		case 26:
			this.hasBackgroundImage = true;
			break;
		case 48:
			this.hasVerticalAlign = true;
			break;
		case 41:
			this.hasLineHeight = true;
			break;
		case 43:
			this.hasLetterSpacing = true;
			break;
		case 53:
			this.hasOpacity = true;
			break;
		case 37:
			this.hasFontFamily = true;
			break;
		case 49:
			this.hasVisible = true;
			break;
		case 25:
			this.hasBackgroundColor = true;
			break;
		case 40:
			this.hasColor = true;
			break;
		case 0:
			this.hasDisplay = true;
			break;
		case 2:
			this.hasFloat = true;
			break;
		case 51:
			this.hasOverflowX = true;
			break;
		case 52:
			this.hasOverflowY = true;
			break;
		case 61:
			this.hasTransform = true;
			break;
		case 4:
			this.hasZIndex = true;
			break;
		case 1:
			this.hasPosition = true;
			break;
		case 75:
			this.hasLeftBorderStyle = true;
			break;
		case 72:
			this.hasTopBorderStyle = true;
			break;
		case 73:
			this.hasRightBorderStyle = true;
			break;
		case 74:
			this.hasBottomBorderStyle = true;
			break;
		case 67:
			this.hasTopBorderColor = true;
			break;
		case 69:
			this.hasBottomBorderColor = true;
			break;
		case 68:
			this.hasRightBorderColor = true;
			break;
		case 70:
			this.hasLeftBorderColor = true;
			break;
		case 83:
			this.hasOutlineStyle = true;
			break;
		case 84:
			this.hasOutlineColor = true;
			break;
		}
	}
	,unFlagProperty: function(index) {
		switch(index) {
		case 40:
			this.hasColor = false;
			break;
		case 34:
			this.hasFontSize = false;
			break;
		case 37:
			this.hasFontFamily = false;
			break;
		case 57:
			this.hasTransitionProperty = false;
			break;
		case 72:
			this.hasTopBorderStyle = false;
			break;
		case 73:
			this.hasRightBorderStyle = false;
			break;
		case 75:
			this.hasLeftBorderStyle = false;
			break;
		case 74:
			this.hasBottomBorderStyle = false;
			break;
		case 83:
			this.hasOutlineStyle = false;
			break;
		default:
		}
	}
	,__class__: cocktail.core.css.CascadeManager
};
cocktail.core.css.CoreStyle = function(htmlElement) {
	this.htmlElement = htmlElement;
	this._isFirstCascade = true;
	this.hasTransitionnableProperties = false;
	this.isFloat = false;
	this.isInlineLevel = false;
	this.isInlineBlock = false;
	this.isBlock = false;
	this.isVisible = false;
	this.isPositioned = false;
	this.isRelativePositioned = false;
	this.isFixedPositioned = false;
	this.canAlwaysOverflow = false;
	this.isTransformed = false;
	this.isTransparent = false;
	this.hasBackgroundImage = false;
	this.isTopAligned = false;
	this.isBottomAligned = false;
	this.isBaselineAligned = false;
	this.canHaveClearance = false;
	this.hasPreWhiteSpace = false;
	this.hasNoWrapWhiteSpace = false;
	this.hasNormalWhiteSpace = false;
	this.hasPreLineWhiteSpace = false;
	this.hasPreWrapWhiteSpace = false;
	this.hasAutoHeight = false;
	this.hasAutoWidth = false;
	this.hasMaxHeight = false;
	this.hasMaxWidth = false;
	this.isInline = false;
	this.isLeftAligned = false;
	this.hasAutoTop = false;
	this.hasAutoBottom = false;
	this.hasAutoLeft = false;
	this.hasAutoRight = false;
	this.hasAutoMarginTop = false;
	this.hasAutoMarginBottom = false;
	this.hasAutoMarginLeft = false;
	this.hasAutoMarginRight = false;
	this.isAbsolutelyPositioned = false;
	this.hasBackgroundColor = false;
	this.hasCSSTransform = false;
	this.hasHiddenOrScrollOverflowX = false;
	this.hasHiddenOrScrollOverflowY = false;
	this._initialStyleDeclaration = cocktail.core.css.InitialStyleDeclaration.getInstance();
	this._initialComputedStyleDeclaration = this._initialStyleDeclaration.initialComputedStyleDeclaration;
	this.init();
};
$hxClasses["cocktail.core.css.CoreStyle"] = cocktail.core.css.CoreStyle;
cocktail.core.css.CoreStyle.__name__ = ["cocktail","core","css","CoreStyle"];
cocktail.core.css.CoreStyle.prototype = {
	dispose: function() {
		this.specifiedValues.dispose();
		this.computedValues.dispose();
		this._changedProperties = null;
		this._fontManager = null;
		this._transitionManager = null;
		this.usedValues = null;
		this.fontMetrics = null;
	}
	,init: function() {
		this.computedValues = new cocktail.core.css.CSSStyleDeclaration();
		this.specifiedValues = new cocktail.core.css.CSSStyleDeclaration();
		this._changedProperties = new Array();
		var htmlDocument = this.htmlElement.ownerDocument;
		this._fontManager = htmlDocument.fontManager;
		this._transitionManager = htmlDocument.transitionManager;
		this.fontMetrics = this._fontManager.getFontMetrics(cocktail.core.config.Config.getInstance().defaultFont,cocktail.core.config.Config.getInstance().mediumFontSize);
		this.usedValues = new cocktail.core.css.UsedValuesVO();
	}
	,initPendingComputedValues: function() {
		this._pendingComputedValues = new Array();
		var _g = 0;
		while(_g < 87) {
			var i = _g++;
			this._pendingComputedValues[i] = null;
		}
	}
	,initTransitioner: function() {
		this._transitioner = new cocktail.core.transition.Transitioner(this._transitionManager);
		this._transitioner.onTransitionCompleteCallback = $bind(this,this.onTransitionComplete);
		this._transitioner.onTransitionUpdateCallback = $bind(this,this.onTransitionUpdate);
	}
	,cascade: function(cascadeManager,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentFontSize,parentXHeight,programmaticChange) {
		if(cascadeManager.hasPropertiesToCascade == false) return;
		this._changedProperties = [];
		var hasInlineStyle = inlineStyleDeclaration.length > 0;
		var hasStyleSheetStyle = styleSheetDeclaration.length > 0;
		var parentColor = this.getColor(((function($this) {
			var $r;
			if(parentStyleDeclaration._indexedProperties == null) {
				parentStyleDeclaration.resetIndexedProperties();
				parentStyleDeclaration.resetPropertiesPositions();
			}
			$r = parentStyleDeclaration._indexedProperties[40];
			return $r;
		}(this))).typedValue);
		if(cascadeManager.hasTransitionProperty == true || cascadeManager.cascadeAll == true) {
			this.cascadeProperty(57,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			this.hasTransitionnableProperties = this.isNone(this.getComputedOrInitialProperty(57)) == false;
			cascadeManager.removePropertyToCascade(57);
		}
		if(cascadeManager.hasLeftBorderStyle == true || cascadeManager.cascadeAll == true) {
			var leftBorderStyleDidChange = this.cascadeProperty(75,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(leftBorderStyleDidChange == true) {
				this._changedProperties.push(65);
				cascadeManager.addPropertyToCascade(65);
			}
			cascadeManager.removePropertyToCascade(75);
		}
		if(cascadeManager.hasRightBorderStyle == true || cascadeManager.cascadeAll == true) {
			var rightBorderStyleDidChange = this.cascadeProperty(73,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(rightBorderStyleDidChange == true) {
				this._changedProperties.push(63);
				cascadeManager.addPropertyToCascade(63);
			}
			cascadeManager.removePropertyToCascade(73);
		}
		if(cascadeManager.hasTopBorderStyle == true || cascadeManager.cascadeAll == true) {
			var topBorderStyleDidChange = this.cascadeProperty(72,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(topBorderStyleDidChange == true) {
				this._changedProperties.push(62);
				cascadeManager.addPropertyToCascade(62);
			}
			cascadeManager.removePropertyToCascade(72);
		}
		if(cascadeManager.hasBottomBorderStyle == true || cascadeManager.cascadeAll == true) {
			var bottomBorderStyleDidChange = this.cascadeProperty(74,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(bottomBorderStyleDidChange == true) {
				this._changedProperties.push(64);
				cascadeManager.addPropertyToCascade(64);
			}
			cascadeManager.removePropertyToCascade(74);
		}
		if(cascadeManager.hasOutlineStyle == true || cascadeManager.cascadeAll == true) {
			var outlineStyleDidChange = this.cascadeProperty(83,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(outlineStyleDidChange == true) {
				this._changedProperties.push(82);
				cascadeManager.addPropertyToCascade(82);
			}
			cascadeManager.removePropertyToCascade(83);
		}
		if(cascadeManager.hasFontSize == true || cascadeManager.hasFontFamily == true || cascadeManager.cascadeAll == true) {
			var fontSizeDidChange = this.cascadeProperty(34,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			var fontFamilyDidChange = this.cascadeProperty(37,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(fontSizeDidChange == true || fontFamilyDidChange == true) {
				var lengthCSSProperties = initialStyleDeclaration.lengthCSSProperties;
				var length = lengthCSSProperties.length;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					cascadeManager.addPropertyToCascade(lengthCSSProperties[i]);
				}
				if(this.computedValues.get_fontFamily() != null) this.fontMetrics = this._fontManager.getFontMetrics(this.computedValues.get_fontFamily(),this.getAbsoluteLength(this.getTransitionablePropertyValue(34))); else this.fontMetrics = this._fontManager.getFontMetrics(initialStyleDeclaration.initialComputedStyleDeclaration.get_fontFamily(),this.getAbsoluteLength(this.getTransitionablePropertyValue(34)));
			}
			cascadeManager.removePropertyToCascade(34);
			cascadeManager.removePropertyToCascade(37);
		}
		if(cascadeManager.hasColor == true) {
			var colorDidChange = this.cascadeProperty(40,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,0,0,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(colorDidChange == true) {
				this._changedProperties.push(40);
				var colorCSSProperties = initialStyleDeclaration.colorCSSProperties;
				var length1 = colorCSSProperties.length;
				var _g1 = 0;
				while(_g1 < length1) {
					var i1 = _g1++;
					cascadeManager.addPropertyToCascade(colorCSSProperties[i1]);
				}
			}
			cascadeManager.removePropertyToCascade(40);
		}
		var fontSize = this.fontMetrics.fontSize;
		var xHeight = this.fontMetrics.xHeight;
		var propertiesToCascade = null;
		if(cascadeManager.cascadeAll == true) propertiesToCascade = initialStyleDeclaration.supportedCSSProperties; else {
			propertiesToCascade = new Array();
			var flaggedProperties = cascadeManager.propertiesToCascade;
			var flaggedPropertiesLength = flaggedProperties.length;
			var _g2 = 0;
			while(_g2 < flaggedPropertiesLength) {
				var i2 = _g2++;
				if(flaggedProperties[i2] == true) propertiesToCascade.push(i2);
			}
		}
		var length2 = propertiesToCascade.length;
		var _g3 = 0;
		while(_g3 < length2) {
			var i3 = _g3++;
			var didChangeSpecifiedValue = this.cascadeProperty(propertiesToCascade[i3],initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,hasInlineStyle,hasStyleSheetStyle);
			if(didChangeSpecifiedValue == true) this._changedProperties.push(propertiesToCascade[i3]);
		}
		cascadeManager.reset();
		var length3 = this._changedProperties.length;
		var _g4 = 0;
		while(_g4 < length3) {
			var i4 = _g4++;
			cascadeManager.addPropertyToCascade(this._changedProperties[i4]);
		}
		this.applyPositionFloatAndDisplayRelationship();
		this.applyHiddenBordersWidth();
		this.applyNoneOutlineWidth();
		if(cascadeManager.hasBackgroundColor == true) {
			cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getComputedOrInitialProperty(25)),this.usedValues.backgroundColor);
			this.hasBackgroundColor = this.usedValues.backgroundColor.alpha != 0.0;
		}
		if(cascadeManager.hasColor == true) cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getComputedOrInitialProperty(40)),this.usedValues.color);
		if(cascadeManager.hasLeftBorderColor == true) cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getTransitionablePropertyValue(70)),this.usedValues.borderLeftColor);
		if(cascadeManager.hasTopBorderColor == true) cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getTransitionablePropertyValue(67)),this.usedValues.borderTopColor);
		if(cascadeManager.hasRightBorderColor == true) cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getTransitionablePropertyValue(68)),this.usedValues.borderRightColor);
		if(cascadeManager.hasBottomBorderColor == true) cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(this.getColor(this.getTransitionablePropertyValue(69)),this.usedValues.borderBottomColor);
		if(cascadeManager.hasOutlineColor == true) {
			var _g5 = this.getComputedOrInitialProperty(84);
			switch(_g5[1]) {
			case 12:
				var value = _g5[2];
				cocktail.core.css.CSSValueConverter.getColorVOFromCSSColor(value,this.usedValues.outlineColor);
				break;
			default:
			}
		}
		this.setUsedLineHeight();
		if(cascadeManager.hasLetterSpacing == true) {
			var _g6 = this.getTransitionablePropertyValue(43);
			switch(_g6[1]) {
			case 18:
				var value1 = _g6[2];
				this.usedValues.letterSpacing = value1;
				break;
			case 4:
				var value2 = _g6[2];
				this.usedValues.letterSpacing = 0.0;
				break;
			default:
			}
		}
		this.updateCoreStyleAttribute(cascadeManager,this._isFirstCascade);
		if(this._isFirstCascade == true) this._isFirstCascade = false;
	}
	,updateCoreStyleAttribute: function(cascadeManager,isFirstCascade) {
		if(cascadeManager.hasFloat == true || isFirstCascade == true) this.isFloat = this.isNone(this.getComputedOrInitialProperty(2)) == false;
		if(cascadeManager.hasDisplay == true || cascadeManager.hasPosition == true || cascadeManager.hasFloat == true || isFirstCascade == true) {
			this.isInlineLevel = false;
			this.isInlineBlock = false;
			this.isBlock = false;
			this.isInline = false;
			var _g = this.getKeyword(this.getComputedOrInitialProperty(0));
			switch(_g[1]) {
			case 30:
				this.isInlineLevel = true;
				this.isInline = true;
				break;
			case 29:
				this.isInlineLevel = true;
				this.isInlineBlock = true;
				break;
			case 28:
				this.isBlock = true;
				break;
			default:
			}
		}
		if(cascadeManager.hasVisible == true || isFirstCascade == true) this.isVisible = this.getKeyword(this.getComputedOrInitialProperty(49)) != cocktail.core.css.CSSKeywordValue.HIDDEN;
		if(cascadeManager.hasPosition == true || isFirstCascade == true) {
			this.isPositioned = false;
			this.isRelativePositioned = false;
			this.isFixedPositioned = false;
			this.isAbsolutelyPositioned = false;
			var _g1 = this.getKeyword(this.getComputedOrInitialProperty(1));
			switch(_g1[1]) {
			case 32:
				break;
			case 34:
				this.isPositioned = true;
				this.isAbsolutelyPositioned = true;
				break;
			case 35:
				this.isPositioned = true;
				this.isFixedPositioned = true;
				this.isAbsolutelyPositioned = true;
				break;
			case 33:
				this.isPositioned = true;
				this.isRelativePositioned = true;
				break;
			default:
			}
		}
		if(cascadeManager.hasOverflowX || cascadeManager.hasOverflowY || isFirstCascade == true) {
			this.canAlwaysOverflow = true;
			this.hasHiddenOrScrollOverflowX = false;
			var _g2 = this.getKeyword(this.getComputedOrInitialProperty(51));
			switch(_g2[1]) {
			case 36:
				break;
			case 37:case 38:
				this.hasHiddenOrScrollOverflowX = true;
				this.canAlwaysOverflow = false;
				break;
			default:
				this.canAlwaysOverflow = false;
			}
			var _g3 = this.getKeyword(this.getComputedOrInitialProperty(52));
			switch(_g3[1]) {
			case 36:
				break;
			case 37:case 38:
				this.hasHiddenOrScrollOverflowY = true;
				this.canAlwaysOverflow = false;
				break;
			default:
				this.canAlwaysOverflow = false;
			}
		}
		if(cascadeManager.hasTransform || cascadeManager.hasPosition || isFirstCascade == true) {
			this.isTransformed = false;
			this.hasCSSTransform = false;
			if(this.isRelativePositioned == true) this.isTransformed = true; else if(this.isNone(this.getComputedOrInitialProperty(61)) == false) {
				this.isTransformed = true;
				this.hasCSSTransform = true;
			}
		}
		if(cascadeManager.hasOpacity == true || isFirstCascade == true) {
			this.isTransparent = false;
			{
				var _g4 = this.getTransitionablePropertyValue(53);
				switch(_g4[1]) {
				case 1:
					var value = _g4[2];
					this.isTransparent = value != 1.0;
					break;
				case 18:
					var value1 = _g4[2];
					this.isTransparent = value1 != 1.0;
					break;
				default:
				}
			}
		}
		if(cascadeManager.hasMarginTop == true || isFirstCascade == true) this.hasAutoMarginTop = this.isAuto(this.getTransitionablePropertyValue(8));
		if(cascadeManager.hasMarginBottom == true || isFirstCascade == true) this.hasAutoMarginBottom = this.isAuto(this.getTransitionablePropertyValue(9));
		if(cascadeManager.hasMarginLeft == true || isFirstCascade == true) this.hasAutoMarginLeft = this.isAuto(this.getTransitionablePropertyValue(6));
		if(cascadeManager.hasMarginRight == true || isFirstCascade == true) this.hasAutoMarginRight = this.isAuto(this.getTransitionablePropertyValue(7));
		if(cascadeManager.hasBackgroundImage == true || isFirstCascade == true) {
			this.hasBackgroundImage = false;
			if(this.isNone(this.getComputedOrInitialProperty(26)) == false) {
				this.hasBackgroundImage = true;
				{
					var _g5 = this.getComputedOrInitialProperty(26);
					switch(_g5[1]) {
					case 5:
						var value2 = _g5[2];
						var htmlDocument = this.htmlElement.ownerDocument;
						htmlDocument.resourceManager.getImageResource(value2);
						break;
					default:
					}
				}
			}
		}
		if(cascadeManager.hasVerticalAlign == true || isFirstCascade == true) {
			this.isTopAligned = false;
			this.isBottomAligned = false;
			this.isBaselineAligned = false;
			{
				var _g6 = this.getComputedOrInitialProperty(48);
				switch(_g6[1]) {
				case 4:
					var value3 = _g6[2];
					switch(value3[1]) {
					case 22:
						this.isTopAligned = true;
						break;
					case 25:
						this.isBottomAligned = true;
						break;
					case 19:
						this.isBaselineAligned = true;
						break;
					default:
					}
					break;
				default:
				}
			}
		}
		if(cascadeManager.hasClear == true || isFirstCascade == true) this.canHaveClearance = this.isNone(this.getComputedOrInitialProperty(3)) == false;
		if(cascadeManager.hasWhiteSpace == true || isFirstCascade == true) {
			this.hasPreLineWhiteSpace = false;
			this.hasPreWhiteSpace = false;
			this.hasNoWrapWhiteSpace = false;
			this.hasNormalWhiteSpace = false;
			this.hasPreWrapWhiteSpace = false;
			var _g7 = this.getKeyword(this.getComputedOrInitialProperty(45));
			switch(_g7[1]) {
			case 7:
				this.hasPreWhiteSpace = true;
				break;
			case 10:
				this.hasPreLineWhiteSpace = true;
				break;
			case 9:
				this.hasPreWrapWhiteSpace = true;
				break;
			case 8:
				this.hasNoWrapWhiteSpace = true;
				break;
			case 0:
				this.hasNormalWhiteSpace = true;
				break;
			default:
			}
		}
		if(cascadeManager.hasWidth == true || isFirstCascade == true) this.hasAutoWidth = this.isAuto(this.getTransitionablePropertyValue(15));
		if(cascadeManager.hasHeight == true || isFirstCascade == true) this.hasAutoHeight = this.isAuto(this.getTransitionablePropertyValue(16));
		if(cascadeManager.hasMaxHeight == true || isFirstCascade == true) this.hasMaxHeight = this.isNone(this.getTransitionablePropertyValue(18)) == false;
		if(cascadeManager.hasMaxWidth == true || isFirstCascade == true) this.hasMaxWidth = this.isNone(this.getTransitionablePropertyValue(20)) == false;
		if(cascadeManager.hasTextAlign == true || isFirstCascade == true) {
			this.isLeftAligned = false;
			var _g8 = this.getKeyword(this.getComputedOrInitialProperty(46));
			switch(_g8[1]) {
			case 11:
				this.isLeftAligned = true;
				break;
			default:
			}
		}
		if(cascadeManager.hasTop == true || isFirstCascade == true) this.hasAutoTop = this.isAuto(this.getTransitionablePropertyValue(21));
		if(cascadeManager.hasBottom == true || isFirstCascade == true) this.hasAutoBottom = this.isAuto(this.getTransitionablePropertyValue(24));
		if(cascadeManager.hasLeft == true || isFirstCascade == true) this.hasAutoLeft = this.isAuto(this.getTransitionablePropertyValue(22));
		if(cascadeManager.hasRight == true || isFirstCascade == true) this.hasAutoRight = this.isAuto(this.getTransitionablePropertyValue(23));
	}
	,setUsedLineHeight: function() {
		{
			var _g = this.getTransitionablePropertyValue(41);
			switch(_g[1]) {
			case 18:
				var value = _g[2];
				this.usedValues.lineHeight = value;
				break;
			case 4:
				var value1 = _g[2];
				this.usedValues.lineHeight = this.fontMetrics.fontSize * 1.2;
				break;
			case 1:
				var value2 = _g[2];
				this.usedValues.lineHeight = this.fontMetrics.fontSize * value2;
				break;
			default:
			}
		}
	}
	,cascadeProperty: function(propertyIndex,initialStyleDeclaration,styleSheetDeclaration,inlineStyleDeclaration,parentStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,hasInlineStyle,hasStyleSheetStyle) {
		if(hasStyleSheetStyle == true) {
			var typedProperty;
			if(styleSheetDeclaration._indexedProperties == null) {
				styleSheetDeclaration.resetIndexedProperties();
				styleSheetDeclaration.resetPropertiesPositions();
			}
			typedProperty = styleSheetDeclaration._indexedProperties[propertyIndex];
			if(typedProperty != null) {
				if(typedProperty.important == true) return this.setProperty(propertyIndex,typedProperty,parentStyleDeclaration,initialStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,false,false);
			}
		}
		if(hasInlineStyle == true) {
			var typedProperty1;
			if(inlineStyleDeclaration._indexedProperties == null) {
				inlineStyleDeclaration.resetIndexedProperties();
				inlineStyleDeclaration.resetPropertiesPositions();
			}
			typedProperty1 = inlineStyleDeclaration._indexedProperties[propertyIndex];
			if(typedProperty1 != null) return this.setProperty(propertyIndex,typedProperty1,parentStyleDeclaration,initialStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,false,false);
		}
		if(hasStyleSheetStyle == true) {
			var typedProperty2;
			if(styleSheetDeclaration._indexedProperties == null) {
				styleSheetDeclaration.resetIndexedProperties();
				styleSheetDeclaration.resetPropertiesPositions();
			}
			typedProperty2 = styleSheetDeclaration._indexedProperties[propertyIndex];
			if(typedProperty2 != null) return this.setProperty(propertyIndex,typedProperty2,parentStyleDeclaration,initialStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,false,false);
		}
		if((function($this) {
			var $r;
			switch(propertyIndex) {
			case 40:case 54:case 37:case 34:case 36:case 38:case 35:case 43:case 41:case 46:case 47:case 42:case 49:case 45:case 44:
				$r = true;
				break;
			default:
				$r = false;
			}
			return $r;
		}(this)) == true) {
			if((function($this) {
				var $r;
				if(parentStyleDeclaration._indexedProperties == null) {
					parentStyleDeclaration.resetIndexedProperties();
					parentStyleDeclaration.resetPropertiesPositions();
				}
				$r = parentStyleDeclaration._indexedProperties[propertyIndex];
				return $r;
			}(this)) != null) return this.setProperty(propertyIndex,(function($this) {
				var $r;
				if(parentStyleDeclaration._indexedProperties == null) {
					parentStyleDeclaration.resetIndexedProperties();
					parentStyleDeclaration.resetPropertiesPositions();
				}
				$r = parentStyleDeclaration._indexedProperties[propertyIndex];
				return $r;
			}(this)),parentStyleDeclaration,initialStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,true,false); else return this.setInitialProperty(propertyIndex);
		}
		return this.setInitialProperty(propertyIndex);
	}
	,setInitialProperty: function(propertyIndex) {
		if(this.specifiedValues.getTypedProperty(propertyIndex) != null) {
			this.specifiedValues.removeProperty(propertyIndex);
			this.computedValues.removeProperty(propertyIndex);
			this.htmlElement.invalidateStyle(propertyIndex);
			return true;
		} else if(this.computedValues.getTypedProperty(propertyIndex) != null) this.computedValues.removeProperty(propertyIndex);
		return false;
	}
	,setProperty: function(propertyIndex,cascadedProperty,parentStyleDeclaration,initialStyleDeclaration,parentColor,parentFontSize,parentXHeight,fontSize,xHeight,programmaticChange,isInherited,isInitial) {
		var property = cascadedProperty.typedValue;
		var specifiedProperty = this.specifiedValues.getTypedProperty(propertyIndex);
		if(specifiedProperty != null) {
			if(property == specifiedProperty.typedValue) return false;
		}
		if(specifiedProperty != null) this.specifiedValues.setTypedProperty(propertyIndex,property,cascadedProperty.important); else this.specifiedValues.setTypedPropertyInitial(propertyIndex,property,cascadedProperty.important);
		var computedProperty = null;
		if(isInitial == false) switch(property[1]) {
		case 16:
			computedProperty = ((function($this) {
				var $r;
				if(parentStyleDeclaration._indexedProperties == null) {
					parentStyleDeclaration.resetIndexedProperties();
					parentStyleDeclaration.resetPropertiesPositions();
				}
				$r = parentStyleDeclaration._indexedProperties[propertyIndex];
				return $r;
			}(this))).typedValue;
			isInherited = true;
			break;
		case 17:
			computedProperty = ((function($this) {
				var $r;
				if(initialStyleDeclaration._indexedProperties == null) {
					initialStyleDeclaration.resetIndexedProperties();
					initialStyleDeclaration.resetPropertiesPositions();
				}
				$r = initialStyleDeclaration._indexedProperties[propertyIndex];
				return $r;
			}(this))).typedValue;
			break;
		default:
			computedProperty = this.getComputedProperty(propertyIndex,property,parentFontSize,parentXHeight,fontSize,xHeight,parentColor);
		} else computedProperty = this.getComputedProperty(propertyIndex,property,parentFontSize,parentXHeight,fontSize,xHeight,parentColor);
		var registerPengingComputedProperty = false;
		if(this.hasTransitionnableProperties == true) {
			if(programmaticChange == true && isInherited == false) {
				if(this.isTransitionnable(propertyIndex)) {
					if(this._transitioner == null) this.initTransitioner();
					var transition = this._transitionManager.getTransition(propertyIndex,this);
					if(transition != null) {
						registerPengingComputedProperty = true;
						switch(computedProperty[1]) {
						case 18:
							var value = computedProperty[2];
							var didRevert = this._transitioner.revertTransitionIfNeeded(transition,value,this);
							if(didRevert == true) registerPengingComputedProperty = false;
							break;
						default:
						}
					} else {
						this._transitioner.registerPendingTransition(propertyIndex,this.getTransitionablePropertyCurrentValue(propertyIndex));
						var htmlDocument = this.htmlElement.ownerDocument;
						htmlDocument.invalidationManager.invalidatePendingTransitions();
					}
				}
			}
		}
		if(specifiedProperty != null) {
			if(registerPengingComputedProperty == false) this.computedValues.setTypedProperty(propertyIndex,computedProperty,cascadedProperty.important); else {
				if(this._pendingComputedValues == null) this.initPendingComputedValues();
				var typedComputedProperty = new cocktail.core.css.TypedPropertyVO();
				typedComputedProperty.important = cascadedProperty.important;
				typedComputedProperty.index = propertyIndex;
				typedComputedProperty.typedValue = computedProperty;
				this._pendingComputedValues[propertyIndex] = typedComputedProperty;
			}
		} else if(registerPengingComputedProperty == false) this.computedValues.setTypedPropertyInitial(propertyIndex,computedProperty,cascadedProperty.important);
		this.htmlElement.invalidateStyle(propertyIndex);
		return true;
	}
	,getComputedProperty: function(propertyIndex,property,parentFontSize,parentXHeight,fontSize,xHeight,parentColor) {
		switch(propertyIndex) {
		case 19:case 17:case 18:case 20:case 22:case 23:case 21:case 24:case 11:case 12:case 13:case 14:case 8:case 6:case 9:case 7:case 15:case 16:
			switch(property[1]) {
			case 7:
				var value = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value,fontSize,xHeight));
			case 0:
				var value1 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value1);
			default:
			}
			break;
		case 62:case 63:case 64:case 65:case 82:
			switch(property[1]) {
			case 7:
				var value2 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value2,fontSize,xHeight));
			case 0:
				var value3 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value3);
			case 4:
				var value4 = property[2];
				switch(value4[1]) {
				case 73:case 61:case 74:
					return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getBorderWidthFromBorderWidthKeyword(value4));
				default:
				}
				break;
			default:
			}
			break;
		case 57:
			switch(property[1]) {
			case 4:
				var value5 = property[2];
				switch(value5[1]) {
				case 11:
					return cocktail.core.css.CSSPropertyValue.IDENTIFIER("left");
				case 12:
					return cocktail.core.css.CSSPropertyValue.IDENTIFIER("right");
				case 22:
					return cocktail.core.css.CSSPropertyValue.IDENTIFIER("top");
				case 25:
					return cocktail.core.css.CSSPropertyValue.IDENTIFIER("bottom");
				default:
				}
				break;
			case 15:
				var value6 = property[2];
				var length = value6.length;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					{
						var _g1 = value6[i];
						switch(_g1[1]) {
						case 4:
							var keyword = _g1[2];
							switch(keyword[1]) {
							case 11:
								value6[i] = cocktail.core.css.CSSPropertyValue.IDENTIFIER("left");
								break;
							case 12:
								value6[i] = cocktail.core.css.CSSPropertyValue.IDENTIFIER("right");
								break;
							case 22:
								value6[i] = cocktail.core.css.CSSPropertyValue.IDENTIFIER("top");
								break;
							case 25:
								value6[i] = cocktail.core.css.CSSPropertyValue.IDENTIFIER("bottom");
								break;
							default:
							}
							break;
						default:
						}
					}
				}
				break;
			default:
			}
			break;
		case 53:
			switch(property[1]) {
			case 1:
				var value7 = property[2];
				if(value7 > 1) return cocktail.core.css.CSSPropertyValue.NUMBER(1);
				if(value7 < 0) return cocktail.core.css.CSSPropertyValue.NUMBER(0);
				break;
			case 0:
				var value8 = property[2];
				if(value8 < 0) return cocktail.core.css.CSSPropertyValue.NUMBER(0);
				if(value8 > 1) return cocktail.core.css.CSSPropertyValue.NUMBER(1);
				return cocktail.core.css.CSSPropertyValue.NUMBER(value8);
			default:
			}
			break;
		case 34:
			switch(property[1]) {
			case 7:
				var value9 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value9,parentFontSize,parentXHeight));
			case 2:
				var value10 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(parentFontSize * (value10 * 0.01));
			case 4:
				var value11 = property[2];
				switch(value11[1]) {
				case 58:case 59:case 60:case 61:case 62:case 63:case 64:
					return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getFontSizeFromAbsoluteSizeValue(value11));
				case 65:case 66:
					return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getFontSizeFromRelativeSizeValue(value11,parentFontSize));
				default:
				}
				break;
			default:
			}
			break;
		case 61:
			switch(property[1]) {
			case 4:
				var value12 = property[2];
				break;
			default:
			}
			break;
		case 35:
			switch(property[1]) {
			case 4:
				var value13 = property[2];
				break;
			default:
			}
			break;
		case 48:
			switch(property[1]) {
			case 0:
				var value14 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0);
			case 7:
				var value15 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value15,fontSize,xHeight));
			default:
			}
			break;
		case 54:
			switch(property[1]) {
			case 5:
				var value16 = property[2];
				break;
			default:
			}
			break;
		case 41:
			switch(property[1]) {
			case 1:
				var value17 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value17 * fontSize);
			case 0:
				var value18 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value18 * fontSize);
			case 7:
				var value19 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value19,fontSize,xHeight));
			case 2:
				var value20 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(fontSize * (value20 * 0.01));
			default:
			}
			break;
		case 47:
			switch(property[1]) {
			case 7:
				var value21 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value21,fontSize,xHeight));
			case 0:
				var value22 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value22);
			default:
			}
			break;
		case 43:
			switch(property[1]) {
			case 7:
				var value23 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value23,fontSize,xHeight));
			default:
			}
			break;
		case 44:
			switch(property[1]) {
			case 7:
				var value24 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value24,fontSize,xHeight));
			case 4:
				var value25 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0);
			default:
			}
			break;
		case 40:
			switch(property[1]) {
			case 12:
				var value26 = property[2];
				return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSValueConverter.getComputedCSSColorFromCSSColor(value26,parentColor));
			default:
			}
			break;
		case 25:case 67:case 68:case 69:case 70:case 84:
			switch(property[1]) {
			case 12:
				var value27 = property[2];
				return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSValueConverter.getComputedCSSColorFromCSSColor(value27,this.getColor(this.getComputedOrInitialProperty(40))));
			default:
			}
			break;
		case 26:
			switch(property[1]) {
			case 4:
				var value28 = property[2];
				break;
			case 5:
				var value29 = property[2];
				break;
			default:
			}
			break;
		case 30:
			switch(property[1]) {
			case 4:
				var value30 = property[2];
				switch(value30[1]) {
				case 11:case 12:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(value30),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER)]);
				case 22:case 25:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER),cocktail.core.css.CSSPropertyValue.KEYWORD(value30)]);
				default:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(value30),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER)]);
				}
				break;
			case 0:
				var value31 = property[2];
				return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0)]);
			case 7:
				var value32 = property[2];
				return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value32,fontSize,xHeight)),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER)]);
			case 2:
				var value33 = property[2];
				return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.PERCENTAGE(value33),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER)]);
			case 13:
				var value34 = property[2];
				var backgroundPositionX = null;
				var backgroundPositionY = null;
				var firstValueIsBackgroundPositionY = false;
				{
					var _g2 = value34[0];
					switch(_g2[1]) {
					case 7:
						var value35 = _g2[2];
						backgroundPositionX = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value35,fontSize,xHeight));
						break;
					case 4:
						var keywordValue = _g2[2];
						switch(keywordValue[1]) {
						case 25:case 22:
							backgroundPositionY = value34[0];
							firstValueIsBackgroundPositionY = true;
							break;
						default:
							backgroundPositionX = value34[0];
						}
						break;
					default:
						backgroundPositionX = value34[0];
					}
				}
				{
					var _g3 = value34[1];
					switch(_g3[1]) {
					case 7:
						var value36 = _g3[2];
						if(firstValueIsBackgroundPositionY == false) backgroundPositionY = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value36,fontSize,xHeight)); else backgroundPositionX = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value36,fontSize,xHeight));
						break;
					default:
						if(firstValueIsBackgroundPositionY == false) backgroundPositionY = value34[1]; else backgroundPositionX = value34[1];
					}
				}
				return cocktail.core.css.CSSPropertyValue.GROUP([backgroundPositionX,backgroundPositionY]);
			default:
			}
			break;
		case 27:
			switch(property[1]) {
			case 4:
				var value37 = property[2];
				switch(value37[1]) {
				case 67:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT)]);
				case 72:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_REPEAT),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_REPEAT)]);
				case 71:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ROUND),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ROUND)]);
				case 70:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SPACE),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SPACE)]);
				case 68:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_REPEAT)]);
				case 69:
					return cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_REPEAT),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT)]);
				default:
				}
				break;
			case 13:
				var value38 = property[2];
				break;
			default:
			}
			break;
		case 29:
			switch(property[1]) {
			case 7:
				var value39 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value39,fontSize,xHeight));
			case 13:
				var value40 = property[2];
				var backgroundSizeX = null;
				var backgroundSizeY = null;
				{
					var _g4 = value40[0];
					switch(_g4[1]) {
					case 7:
						var value41 = _g4[2];
						backgroundSizeX = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value41,fontSize,xHeight));
						break;
					default:
						backgroundSizeX = value40[0];
					}
				}
				{
					var _g5 = value40[1];
					switch(_g5[1]) {
					case 7:
						var value42 = _g5[2];
						backgroundSizeY = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value42,fontSize,xHeight));
						break;
					default:
						backgroundSizeY = value40[1];
					}
				}
				return cocktail.core.css.CSSPropertyValue.GROUP([backgroundSizeX,backgroundSizeY]);
			default:
			}
			break;
		case 60:
			switch(property[1]) {
			case 7:
				var value43 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value43,fontSize,xHeight));
			case 0:
				var value44 = property[2];
				return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value44);
			case 13:
				var value45 = property[2];
				var transformOriginX = value45[0];
				var transformOriginY = value45[1];
				{
					var _g6 = value45[0];
					switch(_g6[1]) {
					case 7:
						var value46 = _g6[2];
						transformOriginX = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value46,fontSize,xHeight));
						break;
					case 0:
						var value47 = _g6[2];
						transformOriginX = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value47);
						break;
					default:
					}
				}
				{
					var _g7 = value45[1];
					switch(_g7[1]) {
					case 7:
						var value48 = _g7[2];
						transformOriginY = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.css.CSSValueConverter.getPixelFromLength(value48,fontSize,xHeight));
						break;
					case 0:
						var value49 = _g7[2];
						transformOriginY = cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(value49);
						break;
					default:
					}
				}
				return cocktail.core.css.CSSPropertyValue.GROUP([transformOriginX,transformOriginY]);
			default:
			}
			break;
		}
		return property;
	}
	,applyPositionFloatAndDisplayRelationship: function() {
		var _g = this.getKeyword(this.getComputedOrInitialProperty(1));
		switch(_g[1]) {
		case 34:case 35:
			var _g1 = this.getKeyword(this.getComputedOrInitialProperty(0));
			switch(_g1[1]) {
			case 30:case 29:
				this.computedValues.setTypedProperty(0,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BLOCK),false);
				break;
			default:
			}
			var _g11 = this.getKeyword(this.getComputedOrInitialProperty(2));
			switch(_g11[1]) {
			case 11:case 12:
				this.computedValues.setTypedProperty(2,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE),false);
				break;
			default:
			}
			break;
		default:
			var _g12 = this.getKeyword(this.getComputedOrInitialProperty(2));
			switch(_g12[1]) {
			case 11:case 12:
				var _g2 = this.getKeyword(this.getComputedOrInitialProperty(0));
				switch(_g2[1]) {
				case 30:case 29:
					this.computedValues.setTypedProperty(0,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BLOCK),false);
					break;
				default:
				}
				break;
			default:
			}
		}
	}
	,applyHiddenBordersWidth: function() {
		if(this.hasNoneOrHiddenBorderStyle(62) == true) this.computedValues.setTypedProperty(62,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),false);
		if(this.hasNoneOrHiddenBorderStyle(63) == true) this.computedValues.setTypedProperty(63,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),false);
		if(this.hasNoneOrHiddenBorderStyle(64) == true) this.computedValues.setTypedProperty(64,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),false);
		if(this.hasNoneOrHiddenBorderStyle(65) == true) this.computedValues.setTypedProperty(65,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),false);
	}
	,applyNoneOutlineWidth: function() {
		{
			var _g = this.getComputedOrInitialProperty(83);
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				switch(value[1]) {
				case 18:
					this.computedValues.setTypedProperty(82,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0),false);
					break;
				default:
				}
				break;
			default:
			}
		}
	}
	,startPendingTransitions: function() {
		if(this._transitioner == null) return false;
		return this._transitioner.startPendingTransitions(this);
	}
	,endPendingTransitions: function() {
		if(this._pendingTransitionEndEvents == null) return;
		var length = this._pendingTransitionEndEvents.length;
		if(length == 0) return;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(this._pendingTransitionEndEvents[i] != null) {
				if(this._pendingTransitionEndEvents[i].dispatched == false) this.htmlElement.dispatchEvent(this._pendingTransitionEndEvents[i]);
			}
		}
		this._pendingTransitionEndEvents = [];
	}
	,onTransitionComplete: function(transition) {
		this.htmlElement.invalidateStyle(transition.propertyIndex);
		var htmlDocument = this.htmlElement.ownerDocument;
		htmlDocument.invalidationManager.invalidatePendingTransitions();
		var transitionEvent = new cocktail.core.event.TransitionEvent();
		transitionEvent.initTransitionEvent("transitionend",true,true,cocktail.core.css.CSSConstants.getPropertyNameFromIndex(transition.propertyIndex),transition.transitionDuration,"");
		if(this._pendingTransitionEndEvents == null) this._pendingTransitionEndEvents = new Array();
		this._pendingTransitionEndEvents.push(transitionEvent);
		if(this._pendingComputedValues != null) {
			if(this._pendingComputedValues[transition.propertyIndex] != null) {
				this._transitioner.registerPendingTransition(transition.propertyIndex,this.getTransitionablePropertyCurrentValue(transition.propertyIndex));
				htmlDocument.invalidationManager.invalidatePendingTransitions();
				var pendingComputedProperty = this._pendingComputedValues[transition.propertyIndex];
				this.computedValues.setTypedProperty(pendingComputedProperty.index,pendingComputedProperty.typedValue,pendingComputedProperty.important);
				this._pendingComputedValues[transition.propertyIndex] = null;
			}
		}
	}
	,onTransitionUpdate: function(transition) {
		this.htmlElement.invalidateStyle(transition.propertyIndex);
	}
	,getTransitionablePropertyValue: function(properyIndex) {
		if(this.hasTransitionnableProperties == false) return this.getComputedOrInitialProperty(properyIndex); else if(this._transitionManager.hasTransitionsInProgress == false) return this.getComputedOrInitialProperty(properyIndex); else {
			var transition = this._transitionManager.getTransition(properyIndex,this);
			if(transition != null) return cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(transition.get_currentValue()); else return this.getComputedOrInitialProperty(properyIndex);
		}
	}
	,getComputedOrInitialProperty: function(propertyIndex) {
		var typedProperty = this.computedValues.getTypedProperty(propertyIndex);
		if(typedProperty == null) return this._initialComputedStyleDeclaration.getTypedProperty(propertyIndex).typedValue; else return typedProperty.typedValue;
	}
	,getIDLName: function(propertyIndex) {
		switch(propertyIndex) {
		case 17:
			return "height";
		case 18:
			return "maxHeight";
		case 19:
			return "minWidth";
		case 20:
			return "maxWidth";
		default:
			return cocktail.core.css.CSSConstants.getPropertyNameFromIndex(propertyIndex);
		}
	}
	,isTransitionnable: function(propertyIndex) {
		switch(propertyIndex) {
		case 15:case 16:case 21:case 24:case 22:case 23:case 53:
			return true;
		default:
			return false;
		}
	}
	,getTransitionablePropertyCurrentValue: function(propertyIndex) {
		switch(propertyIndex) {
		case 53:
			{
				var _g = this.getTransitionablePropertyValue(53);
				switch(_g[1]) {
				case 1:
					var value = _g[2];
					return value;
				case 18:
					var value1 = _g[2];
					return value1;
				default:
					return 0;
				}
			}
			break;
		default:
			return Reflect.field(this.usedValues,this.getIDLName(propertyIndex));
		}
	}
	,isInherited: function(propertyIndex) {
		switch(propertyIndex) {
		case 40:case 54:case 37:case 34:case 36:case 38:case 35:case 43:case 41:case 46:case 47:case 42:case 49:case 45:case 44:
			return true;
		default:
			return false;
		}
	}
	,hasNoneOrHiddenBorderStyle: function(propertyIndex) {
		var borderStyle = null;
		if(propertyIndex == 62) borderStyle = this.getComputedOrInitialProperty(72); else if(propertyIndex == 63) borderStyle = this.getComputedOrInitialProperty(73); else if(propertyIndex == 64) borderStyle = this.getComputedOrInitialProperty(74); else if(propertyIndex == 65) borderStyle = this.getComputedOrInitialProperty(75); else throw "not a border width style";
		switch(borderStyle[1]) {
		case 4:
			var value = borderStyle[2];
			switch(value[1]) {
			case 18:case 37:
				return true;
			default:
			}
			break;
		default:
		}
		return false;
	}
	,getKeyword: function(value) {
		switch(value[1]) {
		case 4:
			var value1 = value[2];
			return value1;
		default:
			throw "not a keyword value";
		}
	}
	,getNumber: function(value) {
		switch(value[1]) {
		case 1:
			var value1 = value[2];
			return value1;
		default:
			throw "not a number value";
		}
	}
	,getList: function(value) {
		switch(value[1]) {
		case 15:
			var value1 = value[2];
			return value1;
		default:
			throw "not a list value";
		}
	}
	,getAbsoluteLength: function(value) {
		switch(value[1]) {
		case 18:
			var value1 = value[2];
			return value1;
		default:
			throw "not an absolute length value";
		}
	}
	,getColor: function(value) {
		switch(value[1]) {
		case 12:
			var value1 = value[2];
			return value1;
		default:
			throw "not a color value";
		}
	}
	,isAuto: function(property) {
		switch(property[1]) {
		case 4:
			var value = property[2];
			switch(value[1]) {
			case 27:
				return true;
			default:
				return false;
			}
			break;
		default:
			return false;
		}
	}
	,isNone: function(property) {
		switch(property[1]) {
		case 4:
			var value = property[2];
			switch(value[1]) {
			case 18:
				return true;
			default:
				return false;
			}
			break;
		default:
			return false;
		}
	}
	,get_opacity: function() {
		return this.getTransitionablePropertyValue(53);
	}
	,get_marginLeft: function() {
		return this.getTransitionablePropertyValue(6);
	}
	,get_marginRight: function() {
		return this.getTransitionablePropertyValue(7);
	}
	,get_marginTop: function() {
		return this.getTransitionablePropertyValue(8);
	}
	,get_marginBottom: function() {
		return this.getTransitionablePropertyValue(9);
	}
	,get_paddingLeft: function() {
		return this.getTransitionablePropertyValue(11);
	}
	,get_paddingRight: function() {
		return this.getTransitionablePropertyValue(12);
	}
	,get_paddingTop: function() {
		return this.getTransitionablePropertyValue(13);
	}
	,get_paddingBottom: function() {
		return this.getTransitionablePropertyValue(14);
	}
	,get_width: function() {
		return this.getTransitionablePropertyValue(15);
	}
	,get_height: function() {
		return this.getTransitionablePropertyValue(16);
	}
	,get_minHeight: function() {
		return this.getTransitionablePropertyValue(17);
	}
	,get_maxHeight: function() {
		return this.getTransitionablePropertyValue(18);
	}
	,get_minWidth: function() {
		return this.getTransitionablePropertyValue(19);
	}
	,get_maxWidth: function() {
		return this.getTransitionablePropertyValue(20);
	}
	,get_top: function() {
		return this.getTransitionablePropertyValue(21);
	}
	,get_left: function() {
		return this.getTransitionablePropertyValue(22);
	}
	,get_bottom: function() {
		return this.getTransitionablePropertyValue(24);
	}
	,get_right: function() {
		return this.getTransitionablePropertyValue(23);
	}
	,get_fontSize: function() {
		return this.getTransitionablePropertyValue(34);
	}
	,get_display: function() {
		return this.getComputedOrInitialProperty(0);
	}
	,get_position: function() {
		return this.getComputedOrInitialProperty(1);
	}
	,get_cssFloat: function() {
		return this.getComputedOrInitialProperty(2);
	}
	,get_clear: function() {
		return this.getComputedOrInitialProperty(3);
	}
	,get_zIndex: function() {
		return this.getComputedOrInitialProperty(4);
	}
	,get_backgroundColor: function() {
		return this.getComputedOrInitialProperty(25);
	}
	,get_backgroundImage: function() {
		return this.getComputedOrInitialProperty(26);
	}
	,get_backgroundOrigin: function() {
		return this.getComputedOrInitialProperty(28);
	}
	,get_backgroundClip: function() {
		return this.getComputedOrInitialProperty(31);
	}
	,get_backgroundAttachment: function() {
		return this.getComputedOrInitialProperty(32);
	}
	,get_backgroundRepeat: function() {
		return this.getComputedOrInitialProperty(27);
	}
	,get_backgroundSize: function() {
		return this.getComputedOrInitialProperty(29);
	}
	,get_backgroundPosition: function() {
		return this.getComputedOrInitialProperty(30);
	}
	,get_fontWeight: function() {
		return this.getComputedOrInitialProperty(35);
	}
	,get_fontStyle: function() {
		return this.getComputedOrInitialProperty(36);
	}
	,get_fontFamily: function() {
		return this.getComputedOrInitialProperty(37);
	}
	,get_fontVariant: function() {
		return this.getComputedOrInitialProperty(38);
	}
	,get_color: function() {
		return this.getComputedOrInitialProperty(40);
	}
	,get_lineHeight: function() {
		return this.getTransitionablePropertyValue(41);
	}
	,get_textTransform: function() {
		return this.getComputedOrInitialProperty(42);
	}
	,get_letterSpacing: function() {
		return this.getTransitionablePropertyValue(43);
	}
	,get_wordSpacing: function() {
		return this.getTransitionablePropertyValue(44);
	}
	,get_whiteSpace: function() {
		return this.getComputedOrInitialProperty(45);
	}
	,get_textAlign: function() {
		return this.getComputedOrInitialProperty(46);
	}
	,get_textIndent: function() {
		return this.getTransitionablePropertyValue(47);
	}
	,get_verticalAlign: function() {
		return this.getComputedOrInitialProperty(48);
	}
	,get_visibility: function() {
		return this.getComputedOrInitialProperty(49);
	}
	,get_overflowX: function() {
		return this.getComputedOrInitialProperty(51);
	}
	,get_overflowY: function() {
		return this.getComputedOrInitialProperty(52);
	}
	,get_transformOrigin: function() {
		return this.getComputedOrInitialProperty(60);
	}
	,get_transform: function() {
		return this.getComputedOrInitialProperty(61);
	}
	,get_cursor: function() {
		return this.getComputedOrInitialProperty(54);
	}
	,get_transitionProperty: function() {
		return this.getComputedOrInitialProperty(57);
	}
	,get_transitionDuration: function() {
		return this.getComputedOrInitialProperty(55);
	}
	,get_transitionTimingFunction: function() {
		return this.getComputedOrInitialProperty(58);
	}
	,get_transitionDelay: function() {
		return this.getComputedOrInitialProperty(56);
	}
	,get_borderTopWidth: function() {
		return this.getTransitionablePropertyValue(62);
	}
	,get_borderRightWidth: function() {
		return this.getTransitionablePropertyValue(63);
	}
	,get_borderBottomWidth: function() {
		return this.getTransitionablePropertyValue(64);
	}
	,get_borderLeftWidth: function() {
		return this.getTransitionablePropertyValue(65);
	}
	,get_borderTopColor: function() {
		return this.getTransitionablePropertyValue(67);
	}
	,get_borderRightColor: function() {
		return this.getTransitionablePropertyValue(68);
	}
	,get_borderBottomColor: function() {
		return this.getTransitionablePropertyValue(69);
	}
	,get_borderLeftColor: function() {
		return this.getTransitionablePropertyValue(70);
	}
	,get_borderTopStyle: function() {
		return this.getComputedOrInitialProperty(72);
	}
	,get_borderRightStyle: function() {
		return this.getComputedOrInitialProperty(73);
	}
	,get_borderBottomStyle: function() {
		return this.getComputedOrInitialProperty(74);
	}
	,get_borderLeftStyle: function() {
		return this.getComputedOrInitialProperty(75);
	}
	,get_outlineWidth: function() {
		return this.getComputedOrInitialProperty(82);
	}
	,get_outlineStyle: function() {
		return this.getComputedOrInitialProperty(83);
	}
	,get_outlineColor: function() {
		return this.getComputedOrInitialProperty(84);
	}
	,get_textDecoration: function() {
		return this.getComputedOrInitialProperty(86);
	}
	,__class__: cocktail.core.css.CoreStyle
	,__properties__: {get_transitionTimingFunction:"get_transitionTimingFunction",get_transitionDelay:"get_transitionDelay",get_transitionDuration:"get_transitionDuration",get_transitionProperty:"get_transitionProperty",get_outlineStyle:"get_outlineStyle",get_outlineColor:"get_outlineColor",get_outlineWidth:"get_outlineWidth",get_cursor:"get_cursor",get_transform:"get_transform",get_transformOrigin:"get_transformOrigin",get_overflowY:"get_overflowY",get_overflowX:"get_overflowX",get_visibility:"get_visibility",get_opacity:"get_opacity",get_textDecoration:"get_textDecoration",get_verticalAlign:"get_verticalAlign",get_textIndent:"get_textIndent",get_textAlign:"get_textAlign",get_whiteSpace:"get_whiteSpace",get_wordSpacing:"get_wordSpacing",get_letterSpacing:"get_letterSpacing",get_textTransform:"get_textTransform",get_lineHeight:"get_lineHeight",get_color:"get_color",get_fontVariant:"get_fontVariant",get_fontFamily:"get_fontFamily",get_fontStyle:"get_fontStyle",get_fontWeight:"get_fontWeight",get_fontSize:"get_fontSize",get_borderLeftStyle:"get_borderLeftStyle",get_borderBottomStyle:"get_borderBottomStyle",get_borderRightStyle:"get_borderRightStyle",get_borderTopStyle:"get_borderTopStyle",get_borderLeftColor:"get_borderLeftColor",get_borderBottomColor:"get_borderBottomColor",get_borderRightColor:"get_borderRightColor",get_borderTopColor:"get_borderTopColor",get_borderLeftWidth:"get_borderLeftWidth",get_borderBottomWidth:"get_borderBottomWidth",get_borderRightWidth:"get_borderRightWidth",get_borderTopWidth:"get_borderTopWidth",get_backgroundAttachment:"get_backgroundAttachment",get_backgroundClip:"get_backgroundClip",get_backgroundPosition:"get_backgroundPosition",get_backgroundSize:"get_backgroundSize",get_backgroundOrigin:"get_backgroundOrigin",get_backgroundRepeat:"get_backgroundRepeat",get_backgroundImage:"get_backgroundImage",get_backgroundColor:"get_backgroundColor",get_right:"get_right",get_bottom:"get_bottom",get_left:"get_left",get_top:"get_top",get_maxWidth:"get_maxWidth",get_minWidth:"get_minWidth",get_maxHeight:"get_maxHeight",get_minHeight:"get_minHeight",get_height:"get_height",get_width:"get_width",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingRight:"get_paddingRight",get_paddingLeft:"get_paddingLeft",get_marginBottom:"get_marginBottom",get_marginTop:"get_marginTop",get_marginRight:"get_marginRight",get_marginLeft:"get_marginLeft",get_zIndex:"get_zIndex",get_clear:"get_clear",get_cssFloat:"get_cssFloat",get_position:"get_position",get_display:"get_display"}
};
cocktail.core.css.DefaultCSSStyleSheet = function() {
	cocktail.core.css.CSSStyleSheet.call(this,this.getDefaultStyleSheet(),cocktail.core.css.PropertyOriginValue.USER_AGENT);
};
$hxClasses["cocktail.core.css.DefaultCSSStyleSheet"] = cocktail.core.css.DefaultCSSStyleSheet;
cocktail.core.css.DefaultCSSStyleSheet.__name__ = ["cocktail","core","css","DefaultCSSStyleSheet"];
cocktail.core.css.DefaultCSSStyleSheet.__super__ = cocktail.core.css.CSSStyleSheet;
cocktail.core.css.DefaultCSSStyleSheet.prototype = $extend(cocktail.core.css.CSSStyleSheet.prototype,{
	getDefaultStyleSheet: function() {
		return "\r\n\t\t\t\thtml, address,\r\n\t\t\t\tblockquote,\r\n\t\t\t\tbody, dd, div,\r\n\t\t\t\tdl, dt, fieldset, form,\r\n\t\t\t\tframe, frameset,\r\n\t\t\t\th1, h2, h3, h4,\r\n\t\t\t\th5, h6, noframes,\r\n\t\t\t\tol, p, ul, center,\r\n\t\t\t\tdir, hr, menu, pre, nav   { display: block; unicode-bidi: embed }\r\n\t\t\t\tli              { display: block }\r\n\t\t\t\thead            { display: none }\r\n\t\t\t\ttable           { display: table }\r\n\t\t\t\ttr              { display: table-row }\r\n\t\t\t\tthead           { display: table-header-group }\r\n\t\t\t\ttbody           { display: table-row-group }\r\n\t\t\t\ttfoot           { display: table-footer-group }\r\n\t\t\t\tcol             { display: table-column }\r\n\t\t\t\tcolgroup        { display: table-column-group }\r\n\t\t\t\ttd, th          { display: table-cell }\r\n\t\t\t\tcaption         { display: table-caption }\r\n\t\t\t\tth              { font-weight: bolder; text-align: center }\r\n\t\t\t\tcaption         { text-align: center }\r\n\t\t\t\tbody            { margin: 8px }\r\n\t\t\t\th1              { font-size: 2em; margin: .67em 0 }\r\n\t\t\t\th2              { font-size: 1.5em; margin: .75em 0 }\r\n\t\t\t\th3              { font-size: 1.17em; margin: .83em 0 }\r\n\t\t\t\th4, p,\r\n\t\t\t\tblockquote, ul,\r\n\t\t\t\tfieldset, form,\r\n\t\t\t\tol, dl, dir,\r\n\t\t\t\tmenu            { margin: 1em 0 }\r\n\t\t\t\th5              { font-size: .83em; margin: 1.5em 0 }\r\n\t\t\t\th6              { font-size: .75em; margin: 1.67em 0 }\r\n\t\t\t\th1, h2, h3, h4,\r\n\t\t\t\th5, h6, b,\r\n\t\t\t\tstrong          { font-weight: bolder }\r\n\t\t\t\tblockquote      { margin-left: 40px; margin-right: 40px }\r\n\t\t\t\ti, cite, em,\r\n\t\t\t\tvar, address    { font-style: italic }\r\n\t\t\t\tpre, tt, code,\r\n\t\t\t\tkbd, samp       { font-family: monospace }\r\n\t\t\t\tpre             { white-space: pre }\r\n\t\t\t\tbutton, textarea,\r\n\t\t\t\tinput, select   { display: inline-block }\r\n\t\t\t\tbig             { font-size: 1.17em }\r\n\t\t\t\tsmall, sub, sup { font-size: .83em }\r\n\t\t\t\tsub             { vertical-align: sub }\r\n\t\t\t\tsup             { vertical-align: super }\r\n\t\t\t\ttable           { border-spacing: 2px; }\r\n\t\t\t\tthead, tbody,\r\n\t\t\t\ttfoot           { vertical-align: middle }\r\n\t\t\t\ttd, th, tr      { vertical-align: inherit }\r\n\t\t\t\ts, strike, del  { text-decoration: line-through }\r\n\t\t\t\thr              { border: 1px inset }\r\n\t\t\t\tol, ul, dir,\r\n\t\t\t\tmenu, dd        { padding-left: 40px }\r\n\t\t\t\tol              { list-style-type: decimal }\r\n\t\t\t\tol ul, ul ol,\r\n\t\t\t\tul ul, ol ol    { margin-top: 0; margin-bottom: 0 }\r\n\t\t\t\tu, ins          { text-decoration: underline }\r\n\t\t\t\t\r\n\t\t\t\tcenter          { text-align: center }\r\n\t\t\t\t:link, :visited { text-decoration: underline; cursor:pointer; }\r\n\t\t\t\t:focus          { outline: thin dotted invert }\r\n\t\t\t\t\r\n\t\t\t\ta:link          { color: rgb(0, 0, 238) }\r\n\t\t\t\ta:active        { color: red }\r\n\t\t";
	}
	,__class__: cocktail.core.css.DefaultCSSStyleSheet
});
cocktail.core.css.InitialStyleDeclaration = function() {
	cocktail.core.css.CSSStyleDeclaration.call(this);
	this.initSupportedCSSProperties();
	this.initLengthCSSProperties();
	this.initColorCSSProperties();
	this.initProperties();
	this.initComputedProperties();
};
$hxClasses["cocktail.core.css.InitialStyleDeclaration"] = cocktail.core.css.InitialStyleDeclaration;
cocktail.core.css.InitialStyleDeclaration.__name__ = ["cocktail","core","css","InitialStyleDeclaration"];
cocktail.core.css.InitialStyleDeclaration.getInstance = function() {
	if(cocktail.core.css.InitialStyleDeclaration._instance == null) cocktail.core.css.InitialStyleDeclaration._instance = new cocktail.core.css.InitialStyleDeclaration();
	return cocktail.core.css.InitialStyleDeclaration._instance;
};
cocktail.core.css.InitialStyleDeclaration.__super__ = cocktail.core.css.CSSStyleDeclaration;
cocktail.core.css.InitialStyleDeclaration.prototype = $extend(cocktail.core.css.CSSStyleDeclaration.prototype,{
	initLengthCSSProperties: function() {
		this.lengthCSSProperties = [15,16,21,22,24,23,17,18,19,20,48,41,6,7,8,9,11,12,13,14,22,23,21,24,43,44,47,61,60,30,29,62,63,64,65,82];
	}
	,initColorCSSProperties: function() {
		this.colorCSSProperties = [25,40,67,69,68,70,84];
	}
	,initSupportedCSSProperties: function() {
		this.supportedCSSProperties = [0,1,2,3,4,51,52,49,53,48,41,15,16,19,17,20,18,6,8,7,9,11,13,12,14,22,23,21,24,37,34,36,38,35,43,44,47,46,45,42,40,57,55,56,58,61,60,25,26,30,29,27,32,28,31,54,62,63,64,65,67,68,69,70,72,73,74,75,82,83,84,86];
	}
	,initProperties: function() {
		this.pushProperty(15,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(16,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(0,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INLINE));
		this.pushProperty(1,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.STATIC));
		this.pushProperty(2,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(3,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(4,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(51,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushProperty(52,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushProperty(49,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushProperty(53,cocktail.core.css.CSSPropertyValue.NUMBER(1.0));
		this.pushProperty(48,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BASELINE));
		this.pushProperty(41,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(20,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(18,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(19,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(17,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(6,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(8,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(7,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(9,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(11,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(13,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(12,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(14,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(62,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(63,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(64,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(65,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(67,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushProperty(68,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushProperty(69,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushProperty(70,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushProperty(72,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(73,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(74,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(75,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(82,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(83,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(84,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INVERT));
		this.pushProperty(22,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(23,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(21,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(24,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(36,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(38,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(35,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(34,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushProperty(43,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(44,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(47,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushProperty(46,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LEFT));
		this.pushProperty(45,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushProperty(42,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(86,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(57,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ALL));
		this.pushProperty(55,cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.SECONDS(0)));
		this.pushProperty(56,cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.SECONDS(0)));
		this.pushProperty(58,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE));
		this.pushProperty(61,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(60,cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.PERCENTAGE(50),cocktail.core.css.CSSPropertyValue.PERCENTAGE(50)]));
		this.pushProperty(25,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.TRANSPARENT));
		this.pushProperty(26,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushProperty(30,cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.PERCENTAGE(0.0),cocktail.core.css.CSSPropertyValue.PERCENTAGE(0.0)]));
		this.pushProperty(29,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(27,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT));
		this.pushProperty(31,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BORDER_BOX));
		this.pushProperty(28,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PADDING_BOX));
		this.pushProperty(32,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SCROLL));
		this.pushProperty(54,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(37,cocktail.core.css.CSSPropertyValue.CSS_LIST([cocktail.core.css.CSSPropertyValue.STRING(cocktail.core.config.Config.getInstance().defaultFont)]));
		this.pushProperty(40,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
	}
	,pushProperty: function(index,typedValue) {
		this.setTypedPropertyInitial(index,typedValue,false);
	}
	,initComputedProperties: function() {
		this.initialComputedStyleDeclaration = new cocktail.core.css.CSSStyleDeclaration();
		this.pushComputedProperty(15,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(16,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(0,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INLINE));
		this.pushComputedProperty(1,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.STATIC));
		this.pushComputedProperty(2,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(3,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(4,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(51,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushComputedProperty(52,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushComputedProperty(49,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE));
		this.pushComputedProperty(53,cocktail.core.css.CSSPropertyValue.NUMBER(1.0));
		this.pushComputedProperty(48,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BASELINE));
		this.pushComputedProperty(41,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(20,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(18,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(19,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(17,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(6,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(8,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(7,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(9,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(11,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(13,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(12,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(14,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(0));
		this.pushComputedProperty(62,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.config.Config.getInstance().mediumBorderWidth));
		this.pushComputedProperty(63,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.config.Config.getInstance().mediumBorderWidth));
		this.pushComputedProperty(64,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.config.Config.getInstance().mediumBorderWidth));
		this.pushComputedProperty(65,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.config.Config.getInstance().mediumBorderWidth));
		this.pushComputedProperty(67,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushComputedProperty(68,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushComputedProperty(69,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushComputedProperty(70,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
		this.pushComputedProperty(72,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(73,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(74,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(75,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(82,cocktail.core.css.CSSPropertyValue.ABSOLUTE_LENGTH(cocktail.core.config.Config.getInstance().mediumBorderWidth));
		this.pushComputedProperty(83,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(84,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INVERT));
		this.pushComputedProperty(22,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(23,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(21,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(24,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(36,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(38,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(35,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(34,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM));
		this.pushComputedProperty(43,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(44,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(47,cocktail.core.css.CSSPropertyValue.INTEGER(0));
		this.pushComputedProperty(46,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LEFT));
		this.pushComputedProperty(45,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL));
		this.pushComputedProperty(42,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(86,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(57,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ALL));
		this.pushComputedProperty(55,cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.SECONDS(0)));
		this.pushComputedProperty(56,cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.SECONDS(0)));
		this.pushComputedProperty(58,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE));
		this.pushComputedProperty(61,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(60,cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.PERCENTAGE(50),cocktail.core.css.CSSPropertyValue.PERCENTAGE(50)]));
		this.pushComputedProperty(25,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.TRANSPARENT));
		this.pushComputedProperty(26,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE));
		this.pushComputedProperty(30,cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.PERCENTAGE(0.0),cocktail.core.css.CSSPropertyValue.PERCENTAGE(0.0)]));
		this.pushComputedProperty(29,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushComputedProperty(27,cocktail.core.css.CSSPropertyValue.GROUP([cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT)]));
		this.pushComputedProperty(31,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BORDER_BOX));
		this.pushComputedProperty(28,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PADDING_BOX));
		this.pushComputedProperty(32,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SCROLL));
		this.pushComputedProperty(54,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		this.pushProperty(37,cocktail.core.css.CSSPropertyValue.CSS_LIST([cocktail.core.css.CSSPropertyValue.STRING(cocktail.core.config.Config.getInstance().defaultFont)]));
		this.pushProperty(40,cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(cocktail.core.config.Config.getInstance().defaultFontColor)));
	}
	,pushComputedProperty: function(index,typedValue) {
		this.initialComputedStyleDeclaration.setTypedProperty(index,typedValue,false);
	}
	,__class__: cocktail.core.css.InitialStyleDeclaration
});
cocktail.core.css.MediaList = function() {
};
$hxClasses["cocktail.core.css.MediaList"] = cocktail.core.css.MediaList;
cocktail.core.css.MediaList.__name__ = ["cocktail","core","css","MediaList"];
cocktail.core.css.MediaList.prototype = {
	item: function(index) {
		return null;
	}
	,appendMedium: function(medium) {
	}
	,deleteMedium: function(medium) {
	}
	,__class__: cocktail.core.css.MediaList
};
cocktail.core.css.SelectorManager = function() {
	this._selectorSpecificityVO = new cocktail.core.css.SelectorSpecificityVO();
};
$hxClasses["cocktail.core.css.SelectorManager"] = cocktail.core.css.SelectorManager;
cocktail.core.css.SelectorManager.__name__ = ["cocktail","core","css","SelectorManager"];
cocktail.core.css.SelectorManager.prototype = {
	matchSelector: function(node,selector,matchedPseudoClasses) {
		var components = selector.components;
		var lastWasCombinator = false;
		var length = components.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var component = components[i];
			var matched = false;
			switch(component[1]) {
			case 1:
				var value = component[2];
				matched = this.matchCombinator(node,value,components[i + 1],matchedPseudoClasses);
				lastWasCombinator = true;
				if(value == cocktail.core.css.CombinatorValue.CHILD) node = node.parentNode;
				break;
			case 0:
				var value1 = component[2];
				if(lastWasCombinator == true) {
					matched = true;
					lastWasCombinator = false;
				} else matched = this.matchSimpleSelectorSequence(node,value1,matchedPseudoClasses);
				break;
			}
			if(matched == false) return false;
		}
		return true;
	}
	,matchCombinator: function(node,combinator,nextSelectorComponent,matchedPseudoClasses) {
		if(node.parentNode == null) return false;
		var nextSelectorSequence = null;
		switch(nextSelectorComponent[1]) {
		case 0:
			var value = nextSelectorComponent[2];
			nextSelectorSequence = value;
			break;
		case 1:
			var value1 = nextSelectorComponent[2];
			return false;
		}
		switch(combinator[1]) {
		case 2:
			return this.matchAdjacentSiblingCombinator(node,nextSelectorSequence,matchedPseudoClasses);
		case 3:
			return this.matchGeneralSiblingCombinator(node,nextSelectorSequence,matchedPseudoClasses);
		case 1:
			return this.matchChildCombinator(node,nextSelectorSequence,matchedPseudoClasses);
		case 0:
			return this.matchDescendantCombinator(node,nextSelectorSequence,matchedPseudoClasses);
		}
	}
	,matchGeneralSiblingCombinator: function(node,nextSelectorSequence,matchedPseudoClasses) {
		var previousElementSibling = node.get_previousElementSibling();
		while(previousElementSibling != null) {
			if(this.matchSimpleSelectorSequence(previousElementSibling,nextSelectorSequence,matchedPseudoClasses) == true) return true;
			previousElementSibling = previousElementSibling.get_previousElementSibling();
		}
		return false;
	}
	,matchAdjacentSiblingCombinator: function(node,nextSelectorSequence,matchedPseudoClasses) {
		var previousElementSibling = node.get_previousElementSibling();
		if(previousElementSibling == null) return false;
		return this.matchSimpleSelectorSequence(previousElementSibling,nextSelectorSequence,matchedPseudoClasses);
	}
	,matchDescendantCombinator: function(node,nextSelectorSequence,matchedPseudoClasses) {
		var parentNode = node.parentNode;
		while(parentNode != null) {
			if(this.matchSimpleSelectorSequence(parentNode,nextSelectorSequence,matchedPseudoClasses) == true) return true;
			parentNode = parentNode.parentNode;
		}
		return false;
	}
	,matchChildCombinator: function(node,nextSelectorSequence,matchedPseudoClasses) {
		return this.matchSimpleSelectorSequence(node.parentNode,nextSelectorSequence,matchedPseudoClasses);
	}
	,matchSimpleSelectorSequenceStart: function(node,simpleSelectorSequenceStart) {
		switch(simpleSelectorSequenceStart[1]) {
		case 1:
			var value = simpleSelectorSequenceStart[2];
			return node.tagName == value;
		case 0:
			return true;
		}
	}
	,matchSimpleSelectorSequenceItem: function(node,simpleSelectorSequenceItem,matchedPseudoClasses) {
		switch(simpleSelectorSequenceItem[1]) {
		case 2:
			var value = simpleSelectorSequenceItem[2];
			var classList = node.classList;
			if(classList == null) return false;
			var length = classList.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(value == classList[i]) return true;
			}
			return false;
		case 3:
			var value1 = simpleSelectorSequenceItem[2];
			return node.get_id() == value1;
		case 1:
			var value2 = simpleSelectorSequenceItem[2];
			return this.matchPseudoClassSelector(node,value2,matchedPseudoClasses);
		case 0:
			var value3 = simpleSelectorSequenceItem[2];
			return this.matchAttributeSelector(node,value3);
		}
	}
	,matchSimpleSelectorSequence: function(node,simpleSelectorSequence,matchedPseudoClasses) {
		if(this.matchSimpleSelectorSequenceStart(node,simpleSelectorSequence.startValue) == false) return false;
		var simpleSelectors = simpleSelectorSequence.simpleSelectors;
		var length = simpleSelectors.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var simpleSelectorSequence1 = simpleSelectors[i];
			if(this.matchSimpleSelectorSequenceItem(node,simpleSelectorSequence1,matchedPseudoClasses) == false) return false;
		}
		return true;
	}
	,matchAttributeSelector: function(node,attributeSelector) {
		switch(attributeSelector[1]) {
		case 0:
			var value = attributeSelector[2];
			return node.getAttribute(value) != null;
		case 1:
			var value1 = attributeSelector[3];
			var name = attributeSelector[2];
			return node.getAttribute(name) == value1;
		case 2:
			var value2 = attributeSelector[3];
			var name1 = attributeSelector[2];
			return this.matchAttributeList(node,name1,value2);
		case 3:
			var value3 = attributeSelector[3];
			var name2 = attributeSelector[2];
			return this.matchAttributeBeginValue(node,name2,value3);
		case 5:
			var value4 = attributeSelector[3];
			var name3 = attributeSelector[2];
			return this.matchAttributeContainsValue(node,name3,value4);
		case 4:
			var value5 = attributeSelector[3];
			var name4 = attributeSelector[2];
			return this.matchAttributeEndValue(node,name4,value5);
		case 6:
			var value6 = attributeSelector[3];
			var name5 = attributeSelector[2];
			return this.matchAttributeBeginsHyphenList(node,name5,value6);
		}
		return true;
	}
	,matchAttributeBeginsHyphenList: function(node,name,value) {
		var attributeValue = node.getAttribute(name);
		if(attributeValue == null) return false;
		if(attributeValue == value) return true;
		var hyphenValue = value + "-";
		return HxOverrides.substr(attributeValue,0,hyphenValue.length) == hyphenValue;
	}
	,matchAttributeEndValue: function(node,name,value) {
		var attributeValue = node.getAttribute(name);
		if(attributeValue == null) return false;
		return attributeValue.lastIndexOf(value) == attributeValue.length - value.length;
	}
	,matchAttributeContainsValue: function(node,name,value) {
		var attributeValue = node.getAttribute(name);
		if(attributeValue == null) return false;
		return attributeValue.indexOf(value) != -1;
	}
	,matchAttributeBeginValue: function(node,name,value) {
		var attributeValue = node.getAttribute(name);
		if(attributeValue == null) return false;
		return attributeValue.indexOf(value) == 0;
	}
	,matchAttributeList: function(node,name,value) {
		var attributeValue = node.getAttribute(name);
		if(attributeValue == null) return false;
		var attributeValueAsList = attributeValue.split(" ");
		var _g1 = 0;
		var _g = attributeValueAsList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(attributeValueAsList[i] == value) return true;
		}
		return false;
	}
	,matchPseudoClassSelector: function(node,pseudoClassSelector,matchedPseudoClasses) {
		switch(pseudoClassSelector[1]) {
		case 0:
			var value = pseudoClassSelector[2];
			return this.matchStructuralPseudoClassSelector(node,value);
		case 1:
			var value1 = pseudoClassSelector[2];
			return this.matchLinkPseudoClassSelector(node,value1,matchedPseudoClasses);
		case 4:
			var value2 = pseudoClassSelector[2];
			return this.matchUserActionPseudoClassSelector(node,value2,matchedPseudoClasses);
		case 2:
			return this.matchTargetPseudoClassSelector(node);
		case 6:
			var value3 = pseudoClassSelector[2];
			return this.matchNegationPseudoClassSelector(node,value3);
		case 3:
			var value4 = pseudoClassSelector[2];
			return this.matchLangPseudoClassSelector(node,value4);
		case 5:
			var value5 = pseudoClassSelector[2];
			return this.matchUIElementStatesSelector(node,value5,matchedPseudoClasses);
		}
	}
	,matchUIElementStatesSelector: function(node,uiElementState,matchedPseudoClasses) {
		switch(uiElementState[1]) {
		case 2:
			return matchedPseudoClasses.checked;
		case 1:
			return matchedPseudoClasses.disabled;
		case 0:
			return matchedPseudoClasses.enabled;
		}
	}
	,matchNegationPseudoClassSelector: function(node,negationSimpleSelectorSequence) {
		return false;
	}
	,matchLangPseudoClassSelector: function(node,lang) {
		return false;
	}
	,matchStructuralPseudoClassSelector: function(node,structuralPseudoClassSelector) {
		switch(structuralPseudoClassSelector[1]) {
		case 7:
			return node.hasChildNodes();
		case 1:
			if(node.parentNode == null) return false;
			return node.get_previousElementSibling() == null;
		case 2:
			if(node.parentNode == null) return false;
			return node.get_nextElementSibling() == null;
		case 5:
			if(node.parentNode == null) return false;
			return node.parentNode.childNodes.length == 1;
		case 0:
			return node.tagName == "HTML" && node.parentNode == null;
		case 6:
			return this.matchOnlyOfType(node);
		case 3:
			return this.matchFirstOfType(node);
		case 4:
			return this.matchLastOfType(node);
		case 8:
			var value = structuralPseudoClassSelector[2];
			return this.matchNthChild(node,value);
		case 9:
			var value1 = structuralPseudoClassSelector[2];
			return this.matchNthLastChild(node,value1);
		case 11:
			var value2 = structuralPseudoClassSelector[2];
			return this.matchNthLastOfType(node,value2);
		case 10:
			var value3 = structuralPseudoClassSelector[2];
			return this.matchNthOfType(node,value3);
		}
	}
	,matchNthChild: function(node,value) {
		return false;
	}
	,matchNthLastChild: function(node,value) {
		return false;
	}
	,matchNthLastOfType: function(node,value) {
		return false;
	}
	,matchNthOfType: function(node,value) {
		return false;
	}
	,matchFirstOfType: function(node) {
		var type = node.tagName;
		var previousElementSibling = node.get_previousElementSibling();
		while(previousElementSibling != null) {
			if(previousElementSibling.tagName == type) return false;
			previousElementSibling = previousElementSibling.get_previousElementSibling();
		}
		return true;
	}
	,matchLastOfType: function(node) {
		var type = node.tagName;
		var nextElementSibling = node.get_nextElementSibling();
		while(nextElementSibling != null) {
			if(nextElementSibling.tagName == type) return false;
			nextElementSibling = nextElementSibling.get_nextElementSibling();
		}
		return true;
	}
	,matchOnlyOfType: function(node) {
		return this.matchLastOfType(node) == true && this.matchFirstOfType(node) == true;
	}
	,matchLinkPseudoClassSelector: function(node,linkPseudoClassSelector,matchedPseudoClass) {
		switch(linkPseudoClassSelector[1]) {
		case 0:
			return matchedPseudoClass.link;
		case 1:
			return false;
		}
	}
	,matchUserActionPseudoClassSelector: function(node,userActionPseudoClassSelector,matchedPseudoClass) {
		switch(userActionPseudoClassSelector[1]) {
		case 0:
			return matchedPseudoClass.active;
		case 1:
			return matchedPseudoClass.hover;
		case 2:
			return matchedPseudoClass.focus;
		}
	}
	,matchTargetPseudoClassSelector: function(node) {
		return false;
	}
	,getSelectorSpecifity: function(selector) {
		this._selectorSpecificityVO.classAttributesAndPseudoClassesNumber = 0;
		this._selectorSpecificityVO.idSelectorsNumber = 0;
		this._selectorSpecificityVO.typeAndPseudoElementsNumber = 0;
		var _g = selector.pseudoElement;
		switch(_g[1]) {
		case 2:case 1:case 4:case 3:
			this._selectorSpecificityVO.typeAndPseudoElementsNumber++;
			break;
		case 0:
			break;
		}
		var components = selector.components;
		var length = components.length;
		var _g1 = 0;
		while(_g1 < length) {
			var i = _g1++;
			var component = components[i];
			switch(component[1]) {
			case 1:
				var value = component[2];
				break;
			case 0:
				var value1 = component[2];
				this.getSimpleSelectorSequenceSpecificity(value1,this._selectorSpecificityVO);
				break;
			}
		}
		return this._selectorSpecificityVO.idSelectorsNumber * 100 + this._selectorSpecificityVO.classAttributesAndPseudoClassesNumber * 10 + this._selectorSpecificityVO.typeAndPseudoElementsNumber;
	}
	,getSimpleSelectorSequenceSpecificity: function(simpleSelectorSequence,selectorSpecificity) {
		this.getSimpleSelectorSequenceStartSpecificity(simpleSelectorSequence.startValue,selectorSpecificity);
		var simpleSelectors = simpleSelectorSequence.simpleSelectors;
		var length = simpleSelectors.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var simpleSelectorSequenceItem = simpleSelectors[i];
			this.getSimpleSelectorSequenceItemSpecificity(simpleSelectorSequenceItem,selectorSpecificity);
		}
	}
	,getSimpleSelectorSequenceStartSpecificity: function(simpleSelectorSequenceStart,selectorSpecificity) {
		switch(simpleSelectorSequenceStart[1]) {
		case 1:
			var value = simpleSelectorSequenceStart[2];
			selectorSpecificity.typeAndPseudoElementsNumber++;
			break;
		case 0:
			break;
		}
	}
	,getSimpleSelectorSequenceItemSpecificity: function(simpleSelectorSequenceItem,selectorSpecificity) {
		switch(simpleSelectorSequenceItem[1]) {
		case 0:
			var value = simpleSelectorSequenceItem[2];
			selectorSpecificity.classAttributesAndPseudoClassesNumber++;
			break;
		case 1:
			var value1 = simpleSelectorSequenceItem[2];
			selectorSpecificity.classAttributesAndPseudoClassesNumber++;
			break;
		case 2:
			var value2 = simpleSelectorSequenceItem[2];
			selectorSpecificity.classAttributesAndPseudoClassesNumber++;
			break;
		case 3:
			var value3 = simpleSelectorSequenceItem[2];
			selectorSpecificity.idSelectorsNumber++;
			break;
		}
	}
	,__class__: cocktail.core.css.SelectorManager
};
cocktail.core.css.StyleManager = function() {
	this._styleSheets = new Array();
	this._matchingStyleDeclaration = new Array();
	this._mostSpecificMatchingProperties = new Array();
	this._matchingProperties = new Array();
	this._matchedProperties = new Array();
	this._userAgentDeclarations = new Array();
	this._authorNormalDeclarations = new Array();
	this._authorImportantDeclarations = new Array();
	this._selectorManager = new cocktail.core.css.SelectorManager();
};
$hxClasses["cocktail.core.css.StyleManager"] = cocktail.core.css.StyleManager;
cocktail.core.css.StyleManager.__name__ = ["cocktail","core","css","StyleManager"];
cocktail.core.css.StyleManager.prototype = {
	addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,getStyleDeclaration: function(node,matchedPseudoClasses) {
		var styleDeclaration = null;
		if(node.styleManagerCSSDeclaration != null) {
			styleDeclaration = node.styleManagerCSSDeclaration;
			styleDeclaration.reset();
		} else styleDeclaration = new cocktail.core.css.CSSStyleDeclaration();
		this.applyStyleSheets(node,styleDeclaration,this._styleSheets,matchedPseudoClasses);
		return styleDeclaration;
	}
	,applyStyleSheets: function(node,nodeStyleDeclaration,styleSheets,matchedPseudoClasses) {
		var matchingStyleDeclarations = this.getMatchingStyleDeclarations(node,styleSheets,matchedPseudoClasses);
		this._matchedProperties = [];
		var length = matchingStyleDeclarations.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var cssStyleDeclaration = matchingStyleDeclarations[i].style;
			var styleLength = cssStyleDeclaration.length;
			var _g1 = 0;
			while(_g1 < styleLength) {
				var j = _g1++;
				var propertyIndex = cssStyleDeclaration.item(j);
				if(this.alreadyMatched(propertyIndex,this._matchedProperties) == false) {
					this.applyMatchingProperty(propertyIndex,matchingStyleDeclarations,nodeStyleDeclaration);
					this._matchedProperties.push(propertyIndex);
				}
			}
		}
	}
	,alreadyMatched: function(propertyIndex,matchedProperties) {
		var length = matchedProperties.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(matchedProperties[i] == propertyIndex) return true;
		}
		return false;
	}
	,getMatchingStyleDeclarations: function(node,styleSheets,matchedPseudoClasses) {
		this._matchingStyleDeclaration = [];
		var styleSheetsLength = styleSheets.length;
		var _g = 0;
		while(_g < styleSheetsLength) {
			var i = _g++;
			var styleSheet = styleSheets[i];
			var cssRules = styleSheet.cssRules;
			var cssRulesLength = cssRules.length;
			var _g1 = 0;
			while(_g1 < cssRulesLength) {
				var j = _g1++;
				var cssRule = cssRules[j];
				var _g2 = cssRule.type;
				switch(_g2) {
				case 1:
					var styleRule = cssRule;
					var selectors = styleRule.selectors;
					var selectorsLength = selectors.length;
					var _g3 = 0;
					while(_g3 < selectorsLength) {
						var k = _g3++;
						var selector = selectors[k];
						var match = false;
						if(selector.beginsWithClass == true) {
							if(matchedPseudoClasses.hasClasses == true) {
								var classListLength = matchedPseudoClasses.nodeClassList.length;
								var _g4 = 0;
								while(_g4 < classListLength) {
									var l = _g4++;
									if(matchedPseudoClasses.nodeClassList[l] == selector.firstClass) {
										if(selector.isSimpleClassSelector == true) {
											match = true;
											break;
										} else {
											match = this._selectorManager.matchSelector(node,selectors[k],matchedPseudoClasses) == true;
											break;
										}
									}
								}
							}
						} else if(selector.beginsWithId == true) {
							if(matchedPseudoClasses.hasId == true) {
								if(matchedPseudoClasses.nodeId == selector.firstId) {
									if(selector.isSimpleIdSelector == true) match = true; else match = this._selectorManager.matchSelector(node,selectors[k],matchedPseudoClasses) == true;
								}
							}
						} else if(selector.beginsWithType == true) {
							if(matchedPseudoClasses.nodeType == selector.firstType) {
								if(selector.isSimpleTypeSelector == true) match = true; else match = this._selectorManager.matchSelector(node,selectors[k],matchedPseudoClasses) == true;
							}
						} else match = this._selectorManager.matchSelector(node,selectors[k],matchedPseudoClasses) == true;
						if(match == true) {
							var matchingStyleDeclaration = new cocktail.core.css.StyleDeclarationVO();
							matchingStyleDeclaration.style = styleRule.style;
							matchingStyleDeclaration.selector = selectors[k];
							this._matchingStyleDeclaration.push(matchingStyleDeclaration);
							break;
						}
					}
					break;
				default:
				}
			}
		}
		return this._matchingStyleDeclaration;
	}
	,applyMatchingProperty: function(propertyIndex,matchingStyleDeclarations,nodeStyleDeclaration) {
		this._matchingProperties = [];
		var matchingStyleDeclarationsLength = matchingStyleDeclarations.length;
		var _g = 0;
		while(_g < matchingStyleDeclarationsLength) {
			var i = _g++;
			var styleDeclaration = matchingStyleDeclarations[i].style;
			var selector = matchingStyleDeclarations[i].selector;
			var typedProperty;
			if(styleDeclaration._indexedProperties == null) {
				styleDeclaration.resetIndexedProperties();
				styleDeclaration.resetPropertiesPositions();
			}
			typedProperty = styleDeclaration._indexedProperties[propertyIndex];
			if(typedProperty != null) {
				var matchingProperty = new cocktail.core.css.PropertyVO();
				matchingProperty.selector = selector;
				matchingProperty.typedValue = typedProperty.typedValue;
				matchingProperty.origin = styleDeclaration.parentRule.parentStyleSheet.origin;
				matchingProperty.important = typedProperty.important;
				this._matchingProperties.push(matchingProperty);
			}
		}
		if(this._matchingProperties.length == 1) {
			var matchingProperty1 = this._matchingProperties[0];
			nodeStyleDeclaration.setTypedProperty(propertyIndex,matchingProperty1.typedValue,matchingProperty1.important);
			return;
		}
		var tempMatchingProperties = this.getSortedMatchingPropertiesByPriority(this._matchingProperties);
		if(tempMatchingProperties.length == 1) {
			var matchingProperty2 = tempMatchingProperties[0];
			nodeStyleDeclaration.setTypedProperty(propertyIndex,matchingProperty2.typedValue,matchingProperty2.important);
			return;
		}
		tempMatchingProperties = this.getSortedMatchingPropertiesBySpecificity(tempMatchingProperties);
		if(tempMatchingProperties.length == 1) {
			var matchingProperty3 = tempMatchingProperties[0];
			nodeStyleDeclaration.setTypedProperty(propertyIndex,matchingProperty3.typedValue,matchingProperty3.important);
			return;
		}
		var matchingProperty4 = tempMatchingProperties[tempMatchingProperties.length - 1];
		nodeStyleDeclaration.setTypedProperty(propertyIndex,matchingProperty4.typedValue,matchingProperty4.important);
	}
	,getSortedMatchingPropertiesByPriority: function(matchingProperties) {
		this._userAgentDeclarations = [];
		this._authorNormalDeclarations = [];
		this._authorImportantDeclarations = [];
		var length = matchingProperties.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var matchingProperty = matchingProperties[i];
			var _g1 = matchingProperty.origin;
			switch(_g1[1]) {
			case 1:
				this._userAgentDeclarations.push(matchingProperty);
				break;
			case 0:
				if(matchingProperty.important == true) this._authorImportantDeclarations.push(matchingProperty); else this._authorNormalDeclarations.push(matchingProperty);
				break;
			}
		}
		if(this._authorImportantDeclarations.length > 0) return this._authorImportantDeclarations;
		if(this._authorNormalDeclarations.length > 0) return this._authorNormalDeclarations;
		return this._userAgentDeclarations;
	}
	,getSortedMatchingPropertiesBySpecificity: function(matchingProperties) {
		this._mostSpecificMatchingProperties = [];
		var currentHigherSpecificity = 0;
		var length = matchingProperties.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var property = matchingProperties[i];
			var propertySpecificity = this._selectorManager.getSelectorSpecifity(property.selector);
			if(propertySpecificity > currentHigherSpecificity) {
				currentHigherSpecificity = propertySpecificity;
				this._mostSpecificMatchingProperties = [];
			}
			if(propertySpecificity == currentHigherSpecificity) this._mostSpecificMatchingProperties.push(property);
		}
		return this._mostSpecificMatchingProperties;
	}
	,__class__: cocktail.core.css.StyleManager
};
cocktail.core.css.parsers = {};
cocktail.core.css.parsers.SelectorParserState = $hxClasses["cocktail.core.css.parsers.SelectorParserState"] = { __ename__ : ["cocktail","core","css","parsers","SelectorParserState"], __constructs__ : ["IGNORE_SPACES","BEGIN_SIMPLE_SELECTOR","END_SIMPLE_SELECTOR","SIMPLE_SELECTOR","END_TYPE_SELECTOR","END_CLASS_SELECTOR","END_ID_SELECTOR","BEGIN_COMBINATOR","COMBINATOR","BEGIN_PSEUDO_SELECTOR","END_UNIVERSAL_SELECTOR","PSEUDO_ELEMENT_SELECTOR","BEGIN_ATTRIBUTE_SELECTOR","INVALID_SELECTOR"] };
cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR = ["BEGIN_SIMPLE_SELECTOR",1];
cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR = ["END_SIMPLE_SELECTOR",2];
cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR = ["SIMPLE_SELECTOR",3];
cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.END_TYPE_SELECTOR = ["END_TYPE_SELECTOR",4];
cocktail.core.css.parsers.SelectorParserState.END_TYPE_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.END_TYPE_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.END_CLASS_SELECTOR = ["END_CLASS_SELECTOR",5];
cocktail.core.css.parsers.SelectorParserState.END_CLASS_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.END_CLASS_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.END_ID_SELECTOR = ["END_ID_SELECTOR",6];
cocktail.core.css.parsers.SelectorParserState.END_ID_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.END_ID_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.BEGIN_COMBINATOR = ["BEGIN_COMBINATOR",7];
cocktail.core.css.parsers.SelectorParserState.BEGIN_COMBINATOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.BEGIN_COMBINATOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.COMBINATOR = ["COMBINATOR",8];
cocktail.core.css.parsers.SelectorParserState.COMBINATOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.COMBINATOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.BEGIN_PSEUDO_SELECTOR = ["BEGIN_PSEUDO_SELECTOR",9];
cocktail.core.css.parsers.SelectorParserState.BEGIN_PSEUDO_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.BEGIN_PSEUDO_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.END_UNIVERSAL_SELECTOR = ["END_UNIVERSAL_SELECTOR",10];
cocktail.core.css.parsers.SelectorParserState.END_UNIVERSAL_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.END_UNIVERSAL_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.PSEUDO_ELEMENT_SELECTOR = ["PSEUDO_ELEMENT_SELECTOR",11];
cocktail.core.css.parsers.SelectorParserState.PSEUDO_ELEMENT_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.PSEUDO_ELEMENT_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.BEGIN_ATTRIBUTE_SELECTOR = ["BEGIN_ATTRIBUTE_SELECTOR",12];
cocktail.core.css.parsers.SelectorParserState.BEGIN_ATTRIBUTE_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.BEGIN_ATTRIBUTE_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR = ["INVALID_SELECTOR",13];
cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR.toString = $estr;
cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR.__enum__ = cocktail.core.css.parsers.SelectorParserState;
cocktail.core.css.parsers.StyleDeclarationParserState = $hxClasses["cocktail.core.css.parsers.StyleDeclarationParserState"] = { __ename__ : ["cocktail","core","css","parsers","StyleDeclarationParserState"], __constructs__ : ["STYLE_NAME","STYLE_VALUE","IGNORE_SPACES","INVALID_STYLE","STYLE_SEPARATOR","BEGIN","COMMENT","BEGIN_COMMENT","END_COMMENT"] };
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_NAME = ["STYLE_NAME",0];
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_NAME.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_NAME.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_VALUE = ["STYLE_VALUE",1];
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_VALUE.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_VALUE.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES = ["IGNORE_SPACES",2];
cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE = ["INVALID_STYLE",3];
cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_SEPARATOR = ["STYLE_SEPARATOR",4];
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_SEPARATOR.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_SEPARATOR.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN = ["BEGIN",5];
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.COMMENT = ["COMMENT",6];
cocktail.core.css.parsers.StyleDeclarationParserState.COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.COMMENT.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN_COMMENT = ["BEGIN_COMMENT",7];
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN_COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN_COMMENT.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleDeclarationParserState.END_COMMENT = ["END_COMMENT",8];
cocktail.core.css.parsers.StyleDeclarationParserState.END_COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleDeclarationParserState.END_COMMENT.__enum__ = cocktail.core.css.parsers.StyleDeclarationParserState;
cocktail.core.css.parsers.StyleValueParserState = $hxClasses["cocktail.core.css.parsers.StyleValueParserState"] = { __ename__ : ["cocktail","core","css","parsers","StyleValueParserState"], __constructs__ : ["IGNORE_SPACES","BEGIN_VALUE","IDENT_FUNCTION","NUMBER_INTEGER_DIMENSION_PERCENTAGE","COMPONENT_OR_END","INVALID_STYLE_VALUE","IMPORTANT","END","HEX","STRING"] };
cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE = ["BEGIN_VALUE",1];
cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.IDENT_FUNCTION = ["IDENT_FUNCTION",2];
cocktail.core.css.parsers.StyleValueParserState.IDENT_FUNCTION.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.IDENT_FUNCTION.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.NUMBER_INTEGER_DIMENSION_PERCENTAGE = ["NUMBER_INTEGER_DIMENSION_PERCENTAGE",3];
cocktail.core.css.parsers.StyleValueParserState.NUMBER_INTEGER_DIMENSION_PERCENTAGE.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.NUMBER_INTEGER_DIMENSION_PERCENTAGE.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END = ["COMPONENT_OR_END",4];
cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE = ["INVALID_STYLE_VALUE",5];
cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.IMPORTANT = ["IMPORTANT",6];
cocktail.core.css.parsers.StyleValueParserState.IMPORTANT.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.IMPORTANT.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.END = ["END",7];
cocktail.core.css.parsers.StyleValueParserState.END.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.END.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.HEX = ["HEX",8];
cocktail.core.css.parsers.StyleValueParserState.HEX.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.HEX.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.StyleValueParserState.STRING = ["STRING",9];
cocktail.core.css.parsers.StyleValueParserState.STRING.toString = $estr;
cocktail.core.css.parsers.StyleValueParserState.STRING.__enum__ = cocktail.core.css.parsers.StyleValueParserState;
cocktail.core.css.parsers.AttributeSelectorParserState = $hxClasses["cocktail.core.css.parsers.AttributeSelectorParserState"] = { __ename__ : ["cocktail","core","css","parsers","AttributeSelectorParserState"], __constructs__ : ["IGNORE_SPACES","END_OPERATOR","ATTRIBUTE","BEGIN_OPERATOR","OPERATOR","IDENTIFIER_VALUE","STRING_VALUE","END_SELECTOR","INVALID_SELECTOR"] };
cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.END_OPERATOR = ["END_OPERATOR",1];
cocktail.core.css.parsers.AttributeSelectorParserState.END_OPERATOR.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.END_OPERATOR.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.ATTRIBUTE = ["ATTRIBUTE",2];
cocktail.core.css.parsers.AttributeSelectorParserState.ATTRIBUTE.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.ATTRIBUTE.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.BEGIN_OPERATOR = ["BEGIN_OPERATOR",3];
cocktail.core.css.parsers.AttributeSelectorParserState.BEGIN_OPERATOR.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.BEGIN_OPERATOR.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.OPERATOR = ["OPERATOR",4];
cocktail.core.css.parsers.AttributeSelectorParserState.OPERATOR.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.OPERATOR.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.IDENTIFIER_VALUE = ["IDENTIFIER_VALUE",5];
cocktail.core.css.parsers.AttributeSelectorParserState.IDENTIFIER_VALUE.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.IDENTIFIER_VALUE.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.STRING_VALUE = ["STRING_VALUE",6];
cocktail.core.css.parsers.AttributeSelectorParserState.STRING_VALUE.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.STRING_VALUE.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR = ["END_SELECTOR",7];
cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR = ["INVALID_SELECTOR",8];
cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR.toString = $estr;
cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR.__enum__ = cocktail.core.css.parsers.AttributeSelectorParserState;
cocktail.core.css.parsers.StyleRuleParserState = $hxClasses["cocktail.core.css.parsers.StyleRuleParserState"] = { __ename__ : ["cocktail","core","css","parsers","StyleRuleParserState"], __constructs__ : ["IGNORE_SPACES","BEGIN_SELECTOR","END_SELECTOR","SELECTOR","BEGIN_STYLES","STYLES","END_STYLES"] };
cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_SELECTOR = ["BEGIN_SELECTOR",1];
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_SELECTOR.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_SELECTOR.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR = ["END_SELECTOR",2];
cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.END_SELECTOR.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.SELECTOR = ["SELECTOR",3];
cocktail.core.css.parsers.StyleRuleParserState.SELECTOR.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.SELECTOR.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_STYLES = ["BEGIN_STYLES",4];
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_STYLES.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.BEGIN_STYLES.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.STYLES = ["STYLES",5];
cocktail.core.css.parsers.StyleRuleParserState.STYLES.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.STYLES.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleRuleParserState.END_STYLES = ["END_STYLES",6];
cocktail.core.css.parsers.StyleRuleParserState.END_STYLES.toString = $estr;
cocktail.core.css.parsers.StyleRuleParserState.END_STYLES.__enum__ = cocktail.core.css.parsers.StyleRuleParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState = $hxClasses["cocktail.core.css.parsers.StyleSheetRulesParserState"] = { __ename__ : ["cocktail","core","css","parsers","StyleSheetRulesParserState"], __constructs__ : ["IGNORE_SPACES","BEGIN","BEGIN_RULE","RULE","END_RULE","COMMENT","BEGIN_COMMENT","END_COMMENT"] };
cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN = ["BEGIN",1];
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_RULE = ["BEGIN_RULE",2];
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.RULE = ["RULE",3];
cocktail.core.css.parsers.StyleSheetRulesParserState.RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.END_RULE = ["END_RULE",4];
cocktail.core.css.parsers.StyleSheetRulesParserState.END_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.END_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.COMMENT = ["COMMENT",5];
cocktail.core.css.parsers.StyleSheetRulesParserState.COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.COMMENT.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_COMMENT = ["BEGIN_COMMENT",6];
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_COMMENT.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRulesParserState.END_COMMENT = ["END_COMMENT",7];
cocktail.core.css.parsers.StyleSheetRulesParserState.END_COMMENT.toString = $estr;
cocktail.core.css.parsers.StyleSheetRulesParserState.END_COMMENT.__enum__ = cocktail.core.css.parsers.StyleSheetRulesParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState = $hxClasses["cocktail.core.css.parsers.StyleSheetRuleParserState"] = { __ename__ : ["cocktail","core","css","parsers","StyleSheetRuleParserState"], __constructs__ : ["IGNORE_SPACES","BEGIN_RULE","BEGIN_AT_RULE","END_MEDIA_RULE","RULE","END_STYLE_RULE"] };
cocktail.core.css.parsers.StyleSheetRuleParserState.IGNORE_SPACES = ["IGNORE_SPACES",0];
cocktail.core.css.parsers.StyleSheetRuleParserState.IGNORE_SPACES.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.IGNORE_SPACES.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_RULE = ["BEGIN_RULE",1];
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_AT_RULE = ["BEGIN_AT_RULE",2];
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_AT_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_AT_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState.END_MEDIA_RULE = ["END_MEDIA_RULE",3];
cocktail.core.css.parsers.StyleSheetRuleParserState.END_MEDIA_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.END_MEDIA_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState.RULE = ["RULE",4];
cocktail.core.css.parsers.StyleSheetRuleParserState.RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.StyleSheetRuleParserState.END_STYLE_RULE = ["END_STYLE_RULE",5];
cocktail.core.css.parsers.StyleSheetRuleParserState.END_STYLE_RULE.toString = $estr;
cocktail.core.css.parsers.StyleSheetRuleParserState.END_STYLE_RULE.__enum__ = cocktail.core.css.parsers.StyleSheetRuleParserState;
cocktail.core.css.parsers.CSSRulesParser = function() {
};
$hxClasses["cocktail.core.css.parsers.CSSRulesParser"] = cocktail.core.css.parsers.CSSRulesParser;
cocktail.core.css.parsers.CSSRulesParser.__name__ = ["cocktail","core","css","parsers","CSSRulesParser"];
cocktail.core.css.parsers.CSSRulesParser.isValidChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45;
};
cocktail.core.css.parsers.CSSRulesParser.prototype = {
	parseRules: function(css) {
		var state = cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES;
		var next = cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN;
		var start = 0;
		var position = 0;
		var c = css.charCodeAt(position);
		var ruleStarted = false;
		var rules = new Array();
		while(!(c != c)) {
			switch(state[1]) {
			case 0:
				switch(c) {
				case 10:case 13:case 9:case 32:
					break;
				default:
					state = next;
					continue;
				}
				break;
			case 1:
				switch(c) {
				case 47:
					state = cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_COMMENT;
					break;
				default:
					start = position;
					state = cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN_RULE;
					continue;
				}
				break;
			case 2:
				start = position;
				state = cocktail.core.css.parsers.StyleSheetRulesParserState.RULE;
				ruleStarted = true;
				continue;
				break;
			case 3:
				switch(c) {
				case 125:
					state = cocktail.core.css.parsers.StyleSheetRulesParserState.END_RULE;
					break;
				}
				break;
			case 4:
				var rule = HxOverrides.substr(css,start,position - start);
				rules.push(rule);
				state = cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN;
				ruleStarted = false;
				continue;
				break;
			case 6:
				if(c != 42) return rules; else state = cocktail.core.css.parsers.StyleSheetRulesParserState.COMMENT;
				break;
			case 5:
				if(c == 42) state = cocktail.core.css.parsers.StyleSheetRulesParserState.END_COMMENT;
				break;
			case 7:
				if(c == 47) {
					state = cocktail.core.css.parsers.StyleSheetRulesParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.StyleSheetRulesParserState.BEGIN;
				} else state = cocktail.core.css.parsers.StyleSheetRulesParserState.COMMENT;
				break;
			}
			c = StringTools.fastCodeAt(css,++position);
		}
		if(ruleStarted == true) {
			var rule1 = HxOverrides.substr(css,start,position - start);
			rules.push(rule1);
		}
		return rules;
	}
	,parseRule: function(rule,parentSyleSheet) {
		var state = cocktail.core.css.parsers.StyleSheetRuleParserState.IGNORE_SPACES;
		var next = cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_RULE;
		var start = 0;
		var position = 0;
		var c = rule.charCodeAt(position);
		var cssRule = null;
		while(!(c != c)) {
			switch(state[1]) {
			case 0:
				switch(c) {
				case 10:case 13:case 9:case 32:
					break;
				default:
					state = next;
					continue;
				}
				break;
			case 1:
				switch(c) {
				case 64:
					state = cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_AT_RULE;
					start = position;
					break;
				default:
					state = cocktail.core.css.parsers.StyleSheetRuleParserState.RULE;
					next = cocktail.core.css.parsers.StyleSheetRuleParserState.END_STYLE_RULE;
					start = position;
					continue;
				}
				break;
			case 2:
				if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
					var atRule = HxOverrides.substr(rule,start,position - start);
					switch(atRule) {
					case "@media":
						state = cocktail.core.css.parsers.StyleSheetRuleParserState.RULE;
						next = cocktail.core.css.parsers.StyleSheetRuleParserState.END_MEDIA_RULE;
						continue;
						break;
					default:
						state = cocktail.core.css.parsers.StyleSheetRuleParserState.IGNORE_SPACES;
						next = cocktail.core.css.parsers.StyleSheetRuleParserState.BEGIN_RULE;
					}
				}
				break;
			case 4:
				switch(c) {
				case 125:
					state = next;
					continue;
					break;
				}
				break;
			case 3:
				var rule1 = HxOverrides.substr(rule,start,position - start + 1);
				var cssMediaRule = new cocktail.core.css.CSSMediaRule(parentSyleSheet);
				cssMediaRule.set_cssText(rule1);
				return cssMediaRule;
			case 5:
				var rule2 = HxOverrides.substr(rule,start,position - start + 1);
				var cssStyleRule = new cocktail.core.css.CSSStyleRule(parentSyleSheet);
				cssStyleRule.set_cssText(rule2);
				return cssStyleRule;
			}
			c = StringTools.fastCodeAt(rule,++position);
		}
		return cssRule;
	}
	,__class__: cocktail.core.css.parsers.CSSRulesParser
};
cocktail.core.css.parsers.CSSSelectorParser = function() {
};
$hxClasses["cocktail.core.css.parsers.CSSSelectorParser"] = cocktail.core.css.parsers.CSSSelectorParser;
cocktail.core.css.parsers.CSSSelectorParser.__name__ = ["cocktail","core","css","parsers","CSSSelectorParser"];
cocktail.core.css.parsers.CSSSelectorParser.isOperatorChar = function(c) {
	return c == 61 || c == 126 || c == 94 || c == 36 || c == 42 || c == 124;
};
cocktail.core.css.parsers.CSSSelectorParser.isAsciiChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57;
};
cocktail.core.css.parsers.CSSSelectorParser.isSelectorChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95;
};
cocktail.core.css.parsers.CSSSelectorParser.isPseudoClassChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45;
};
cocktail.core.css.parsers.CSSSelectorParser.prototype = {
	parseSelector: function(selector,typedSelectors) {
		var state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
		var next = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
		var start = 0;
		var position = 0;
		var c = selector.charCodeAt(position);
		var simpleSelectorSequenceStartValue = null;
		var simpleSelectorSequenceItemValues = [];
		var components = [];
		var selectorData = new cocktail.core.css.SelectorVO(components,cocktail.core.css.PseudoElementSelectorValue.NONE,false,null,false,null,false,null,false,false,false);
		while(!(c != c)) {
			switch(state[1]) {
			case 0:
				switch(c) {
				case 10:case 13:case 9:case 32:
					break;
				default:
					state = next;
					continue;
				}
				break;
			case 1:
				if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95) {
					state = cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR;
					next = cocktail.core.css.parsers.SelectorParserState.END_TYPE_SELECTOR;
					start = position;
				} else switch(c) {
				case 46:
					state = cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR;
					next = cocktail.core.css.parsers.SelectorParserState.END_CLASS_SELECTOR;
					start = position + 1;
					break;
				case 35:
					state = cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR;
					next = cocktail.core.css.parsers.SelectorParserState.END_ID_SELECTOR;
					start = position + 1;
					break;
				case 42:
					state = cocktail.core.css.parsers.SelectorParserState.SIMPLE_SELECTOR;
					next = cocktail.core.css.parsers.SelectorParserState.END_UNIVERSAL_SELECTOR;
					start = position;
					break;
				case 58:
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_PSEUDO_SELECTOR;
					start = position;
					break;
				case 91:
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_ATTRIBUTE_SELECTOR;
					start = position;
					break;
				default:
					state = cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR;
					continue;
				}
				break;
			case 12:
				position = this.parseAttributeSelector(selector,position,simpleSelectorSequenceItemValues);
				state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
				next = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
				break;
			case 9:
				if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95) {
					position = this.parsePseudoClass(selector,position,simpleSelectorSequenceItemValues);
					state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
					next = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
				} else switch(c) {
				case 58:
					state = cocktail.core.css.parsers.SelectorParserState.PSEUDO_ELEMENT_SELECTOR;
					break;
				default:
					state = cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR;
					continue;
				}
				break;
			case 11:
				position = this.parsePseudoElement(selector,position,selectorData);
				state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR;
				break;
			case 2:
				switch(c) {
				case 32:case 10:case 13:case 62:
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_COMBINATOR;
					continue;
					break;
				case 58:case 35:case 46:case 91:
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					continue;
					break;
				default:
					state = cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR;
					continue;
				}
				break;
			case 3:
				if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95)) switch(c) {
				case 32:case 10:case 13:case 62:case 58:case 35:case 46:case 91:
					state = next;
					continue;
					break;
				default:
					state = cocktail.core.css.parsers.SelectorParserState.INVALID_SELECTOR;
					continue;
				}
				break;
			case 4:
				var type = HxOverrides.substr(selector,start,position - start);
				simpleSelectorSequenceStartValue = cocktail.core.css.SimpleSelectorSequenceStartValue.TYPE(type.toUpperCase());
				state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
				continue;
				break;
			case 5:
				var className = HxOverrides.substr(selector,start,position - start);
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.CSS_CLASS(className));
				state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
				continue;
				break;
			case 6:
				var id = HxOverrides.substr(selector,start,position - start);
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ID(id));
				state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
				continue;
				break;
			case 10:
				simpleSelectorSequenceStartValue = cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL;
				state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
				continue;
				break;
			case 7:
				this.flushSelectors(simpleSelectorSequenceStartValue,simpleSelectorSequenceItemValues,components);
				simpleSelectorSequenceStartValue = null;
				simpleSelectorSequenceItemValues = [];
				state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.SelectorParserState.COMBINATOR;
				continue;
				break;
			case 8:
				if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95) {
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					components.push(cocktail.core.css.SelectorComponentValue.COMBINATOR(cocktail.core.css.CombinatorValue.DESCENDANT));
					continue;
				} else switch(c) {
				case 62:
					state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					components.push(cocktail.core.css.SelectorComponentValue.COMBINATOR(cocktail.core.css.CombinatorValue.CHILD));
					break;
				case 43:
					state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					components.push(cocktail.core.css.SelectorComponentValue.COMBINATOR(cocktail.core.css.CombinatorValue.ADJACENT_SIBLING));
					break;
				case 126:
					state = cocktail.core.css.parsers.SelectorParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					components.push(cocktail.core.css.SelectorComponentValue.COMBINATOR(cocktail.core.css.CombinatorValue.GENERAL_SIBLING));
					break;
				case 58:case 35:case 46:case 91:case 42:
					state = cocktail.core.css.parsers.SelectorParserState.BEGIN_SIMPLE_SELECTOR;
					components.push(cocktail.core.css.SelectorComponentValue.COMBINATOR(cocktail.core.css.CombinatorValue.DESCENDANT));
					continue;
					break;
				}
				break;
			case 13:
				return false;
			}
			c = StringTools.fastCodeAt(selector,++position);
		}
		switch(next[1]) {
		case 4:
			var type1 = HxOverrides.substr(selector,start,position - start);
			simpleSelectorSequenceStartValue = cocktail.core.css.SimpleSelectorSequenceStartValue.TYPE(type1.toUpperCase());
			break;
		case 10:
			simpleSelectorSequenceStartValue = cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL;
			break;
		case 5:
			var className1 = HxOverrides.substr(selector,start,position - start);
			simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.CSS_CLASS(className1));
			state = cocktail.core.css.parsers.SelectorParserState.END_SIMPLE_SELECTOR;
			break;
		case 6:
			var id1 = HxOverrides.substr(selector,start,position - start);
			simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ID(id1));
			break;
		default:
		}
		this.flushSelectors(simpleSelectorSequenceStartValue,simpleSelectorSequenceItemValues,components);
		if(selectorData.components.length == 0) return false;
		selectorData.components.reverse();
		var firstClass = this.getFirstClass(selectorData.components);
		var isSimpleClassSelector = false;
		if(firstClass != null) isSimpleClassSelector = this.getIsSimpleClassSelector(selectorData.components);
		var firstId = this.getFirstId(selectorData.components);
		var isSimpleIdSelector = false;
		if(firstId != null) isSimpleIdSelector = this.getIsSimpleIdSelector(selectorData.components);
		var firstType = this.getFirstType(selectorData.components);
		var isSimpleTypeSelector = false;
		if(firstType != null) isSimpleTypeSelector = this.getIsSimpleTypeSelector(selectorData.components);
		var typedSelector = new cocktail.core.css.SelectorVO(selectorData.components,selectorData.pseudoElement,firstClass != null,firstClass,firstId != null,firstId,firstType != null,firstType,isSimpleClassSelector,isSimpleIdSelector,isSimpleTypeSelector);
		typedSelectors.push(typedSelector);
		return true;
	}
	,flushSelectors: function(simpleSelectorSequenceStartValue,simpleSelectorSequenceItemValues,components) {
		if(simpleSelectorSequenceStartValue == null && simpleSelectorSequenceItemValues.length == 0) return;
		if(simpleSelectorSequenceStartValue == null) simpleSelectorSequenceStartValue = cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL;
		var simpleSelectorSequence = new cocktail.core.css.SimpleSelectorSequenceVO(simpleSelectorSequenceStartValue,simpleSelectorSequenceItemValues);
		components.push(cocktail.core.css.SelectorComponentValue.SIMPLE_SELECTOR_SEQUENCE(simpleSelectorSequence));
	}
	,parsePseudoClass: function(selector,position,simpleSelectorSequenceItemValues) {
		var c = selector.charCodeAt(position);
		var start = position;
		while(true) {
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45)) break;
			c = StringTools.fastCodeAt(selector,++position);
		}
		var pseudoClass = HxOverrides.substr(selector,start,position - start);
		var typedPseudoClass = null;
		switch(pseudoClass) {
		case "first-child":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_CHILD);
			break;
		case "last-child":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_CHILD);
			break;
		case "empty":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.EMPTY);
			break;
		case "root":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.ROOT);
			break;
		case "first-of-type":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.FIRST_OF_TYPE);
			break;
		case "last-of-type":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.LAST_OF_TYPE);
			break;
		case "only-of-type":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_OF_TYPE);
			break;
		case "only-child":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.STRUCTURAL(cocktail.core.css.StructuralPseudoClassSelectorValue.ONLY_CHILD);
			break;
		case "link":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.LINK(cocktail.core.css.LinkPseudoClassValue.LINK);
			break;
		case "visited":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.LINK(cocktail.core.css.LinkPseudoClassValue.VISITED);
			break;
		case "active":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.USER_ACTION(cocktail.core.css.UserActionPseudoClassValue.ACTIVE);
			break;
		case "hover":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.USER_ACTION(cocktail.core.css.UserActionPseudoClassValue.HOVER);
			break;
		case "focus":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.USER_ACTION(cocktail.core.css.UserActionPseudoClassValue.FOCUS);
			break;
		case "target":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.TARGET;
			break;
		case "nth-child":
			break;
		case "nth-last-child":
			break;
		case "nth-of-type":
			break;
		case "nth-last-of-type":
			break;
		case "not":
			break;
		case "lang":
			break;
		case "enabled":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.UI_ELEMENT_STATES(cocktail.core.css.UIElementStatesValue.ENABLED);
			break;
		case "disabled":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.UI_ELEMENT_STATES(cocktail.core.css.UIElementStatesValue.DISABLED);
			break;
		case "checked":
			typedPseudoClass = cocktail.core.css.PseudoClassSelectorValue.UI_ELEMENT_STATES(cocktail.core.css.UIElementStatesValue.CHECKED);
			break;
		}
		simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.PSEUDO_CLASS(typedPseudoClass));
		return --position;
	}
	,parsePseudoElement: function(selector,position,selectorData) {
		var c = selector.charCodeAt(position);
		var start = position;
		while(true) {
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45)) break;
			c = StringTools.fastCodeAt(selector,++position);
		}
		var pseudoElement = HxOverrides.substr(selector,start,position - start);
		var typedPseudoElement = null;
		switch(pseudoElement) {
		case "first-line":
			typedPseudoElement = cocktail.core.css.PseudoElementSelectorValue.FIRST_LINE;
			break;
		case "first-letter":
			typedPseudoElement = cocktail.core.css.PseudoElementSelectorValue.FIRST_LETTER;
			break;
		case "before":
			typedPseudoElement = cocktail.core.css.PseudoElementSelectorValue.BEFORE;
			break;
		case "after":
			typedPseudoElement = cocktail.core.css.PseudoElementSelectorValue.AFTER;
			break;
		}
		selectorData.pseudoElement = typedPseudoElement;
		return --position;
	}
	,parseAttributeSelector: function(selector,position,simpleSelectorSequenceItemValues) {
		var c = selector.charCodeAt(position);
		var start = position;
		var attribute = null;
		var operator = null;
		var value = null;
		var state = cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES;
		var next = cocktail.core.css.parsers.AttributeSelectorParserState.ATTRIBUTE;
		try {
			while(true) {
				switch(state[1]) {
				case 0:
					switch(c) {
					case 10:case 13:case 9:case 32:
						break;
					default:
						state = next;
						continue;
					}
					break;
				case 2:
					if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95)) {
						attribute = HxOverrides.substr(selector,start,position - start);
						if(c == 93) {
							state = cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR;
							continue;
						} else {
							state = cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES;
							next = cocktail.core.css.parsers.AttributeSelectorParserState.BEGIN_OPERATOR;
							continue;
						}
					}
					break;
				case 3:
					start = position;
					state = cocktail.core.css.parsers.AttributeSelectorParserState.OPERATOR;
					break;
				case 4:
					if(!(c == 61 || c == 126 || c == 94 || c == 36 || c == 42 || c == 124)) {
						operator = HxOverrides.substr(selector,start,position - start);
						state = cocktail.core.css.parsers.AttributeSelectorParserState.IGNORE_SPACES;
						next = cocktail.core.css.parsers.AttributeSelectorParserState.END_OPERATOR;
						continue;
					}
					break;
				case 1:
					switch(c) {
					case 34:case 39:
						position++;
						start = position;
						state = cocktail.core.css.parsers.AttributeSelectorParserState.STRING_VALUE;
						break;
					case 93:
						state = cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR;
						continue;
						break;
					default:
						if((c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95) == true) {
							start = position;
							state = cocktail.core.css.parsers.AttributeSelectorParserState.IDENTIFIER_VALUE;
						} else state = cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR;
					}
					break;
				case 6:
					if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95)) switch(c) {
					case 34:case 39:
						value = HxOverrides.substr(selector,start,position - start);
						state = cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR;
						break;
					case 93:
						state = cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR;
						break;
					default:
						state = cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR;
					}
					break;
				case 5:
					if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 45 || c == 95)) switch(c) {
					case 93:
						value = HxOverrides.substr(selector,start,position - start);
						state = cocktail.core.css.parsers.AttributeSelectorParserState.END_SELECTOR;
						continue;
						break;
					default:
						state = cocktail.core.css.parsers.AttributeSelectorParserState.INVALID_SELECTOR;
					}
					break;
				case 8:
					throw "__break__";
					break;
				case 7:
					throw "__break__";
					break;
				}
				c = StringTools.fastCodeAt(selector,++position);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		if(attribute != null) {
			if(operator != null) switch(operator) {
			case "=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE(attribute,value)));
				break;
			case "^=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_BEGINS(attribute,value)));
				break;
			case "~=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_LIST(attribute,value)));
				break;
			case "$=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_ENDS(attribute,value)));
				break;
			case "*=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_CONTAINS(attribute,value)));
				break;
			case "|=":
				simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE_VALUE_BEGINS_HYPHEN_LIST(attribute,value)));
				break;
			} else simpleSelectorSequenceItemValues.push(cocktail.core.css.SimpleSelectorSequenceItemValue.ATTRIBUTE(cocktail.core.css.AttributeSelectorValue.ATTRIBUTE(attribute)));
		}
		return position;
	}
	,getFirstClass: function(components) {
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				if(value.startValue == cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL) {
					if(value.simpleSelectors.length != 0) {
						var _g1 = value.simpleSelectors[0];
						switch(_g1[1]) {
						case 2:
							var value1 = _g1[2];
							return value1;
						default:
						}
					}
				}
				break;
			case 1:
				var value2 = _g[2];
				break;
			}
		}
		return null;
	}
	,getIsSimpleClassSelector: function(components) {
		if(components.length > 1) return false;
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				if(value.startValue == cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL) {
					if(value.simpleSelectors.length == 1) {
						var _g1 = value.simpleSelectors[0];
						switch(_g1[1]) {
						case 2:
							var value1 = _g1[2];
							return true;
						default:
						}
					}
				}
				break;
			case 1:
				var value2 = _g[2];
				break;
			}
		}
		return false;
	}
	,getIsSimpleIdSelector: function(components) {
		if(components.length > 1) return false;
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				if(value.startValue == cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL) {
					if(value.simpleSelectors.length == 1) {
						var _g1 = value.simpleSelectors[0];
						switch(_g1[1]) {
						case 3:
							var value1 = _g1[2];
							return true;
						default:
						}
					}
				}
				break;
			case 1:
				var value2 = _g[2];
				break;
			}
		}
		return false;
	}
	,getIsSimpleTypeSelector: function(components) {
		if(components.length > 1) return false;
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				{
					var _g1 = value.startValue;
					switch(_g1[1]) {
					case 1:
						var typeValue = _g1[2];
						if(value.simpleSelectors.length == 0) return true;
						break;
					default:
					}
				}
				break;
			case 1:
				var value1 = _g[2];
				break;
			}
		}
		return false;
	}
	,getFirstId: function(components) {
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				if(value.startValue == cocktail.core.css.SimpleSelectorSequenceStartValue.UNIVERSAL) {
					if(value.simpleSelectors.length != 0) {
						var _g1 = value.simpleSelectors[0];
						switch(_g1[1]) {
						case 3:
							var value1 = _g1[2];
							return value1;
						default:
						}
					}
				}
				break;
			case 1:
				var value2 = _g[2];
				break;
			}
		}
		return null;
	}
	,getFirstType: function(components) {
		{
			var _g = components[0];
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				{
					var _g1 = value.startValue;
					switch(_g1[1]) {
					case 1:
						var value1 = _g1[2];
						return value1;
					default:
					}
				}
				break;
			case 1:
				var value2 = _g[2];
				break;
			}
		}
		return null;
	}
	,__class__: cocktail.core.css.parsers.CSSSelectorParser
};
cocktail.core.css.parsers.CSSStyleParser = function() {
};
$hxClasses["cocktail.core.css.parsers.CSSStyleParser"] = cocktail.core.css.parsers.CSSStyleParser;
cocktail.core.css.parsers.CSSStyleParser.__name__ = ["cocktail","core","css","parsers","CSSStyleParser"];
cocktail.core.css.parsers.CSSStyleParser.parseStyle = function(styles,baseURL) {
	cocktail.core.css.parsers.CSSStyleParser._position = 0;
	var state = cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES;
	var next = cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN;
	if(cocktail.core.css.parsers.CSSStyleParser._typedProperties == null) cocktail.core.css.parsers.CSSStyleParser._typedProperties = new Array();
	cocktail.core.css.parsers.CSSStyleParser._typedProperties = [];
	var typedProperties = cocktail.core.css.parsers.CSSStyleParser._typedProperties;
	var position = 0;
	var start = position;
	var c = styles.charCodeAt(position);
	var styleName = null;
	while(!(c != c)) {
		switch(state[1]) {
		case 2:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 5:
			switch(c) {
			case 47:
				state = cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN_COMMENT;
				break;
			default:
				start = position;
				state = cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_NAME;
				continue;
			}
			break;
		case 7:
			if(c != 42) state = cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE; else state = cocktail.core.css.parsers.StyleDeclarationParserState.COMMENT;
			break;
		case 6:
			if(c == 42) state = cocktail.core.css.parsers.StyleDeclarationParserState.END_COMMENT;
			break;
		case 8:
			if(c == 47) {
				state = cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN;
			} else state = cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE;
			break;
		case 0:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45)) switch(c) {
			case 58:
				styleName = HxOverrides.substr(styles,start,position - start);
				state = cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_VALUE;
				continue;
				break;
			case 32:
				styleName = HxOverrides.substr(styles,start,position - start);
				state = cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES;
				next = cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_SEPARATOR;
				continue;
				break;
			default:
				state = cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE;
				continue;
			}
			break;
		case 4:
			if(c == 58) state = cocktail.core.css.parsers.StyleDeclarationParserState.STYLE_VALUE; else {
				state = cocktail.core.css.parsers.StyleDeclarationParserState.INVALID_STYLE;
				continue;
			}
			break;
		case 1:
			var typedProperty = cocktail.core.css.parsers.CSSStyleParser.parseStyleValue(styleName,styles,position,baseURL);
			position = cocktail.core.css.parsers.CSSStyleParser._position;
			if(typedProperty != null) typedProperties.push(typedProperty);
			state = cocktail.core.css.parsers.StyleDeclarationParserState.IGNORE_SPACES;
			next = cocktail.core.css.parsers.StyleDeclarationParserState.BEGIN;
			break;
		case 3:
			return [];
		}
		c = StringTools.fastCodeAt(styles,++position);
	}
	return typedProperties;
};
cocktail.core.css.parsers.CSSStyleParser.parseStyleValue = function(propertyName,styles,position,baseURL) {
	var c = styles.charCodeAt(position);
	if(c == 58) {
		++position;
		c = styles.charCodeAt(position);
	}
	var state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
	var next = cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE;
	var start = position;
	var important = false;
	var styleValues = [];
	var styleValuesLists = [];
	var fontNotations = [];
	try {
		while(!(c != c)) {
			switch(state[1]) {
			case 0:
				switch(c) {
				case 10:case 13:case 9:case 32:
					break;
				default:
					state = next;
					continue;
				}
				break;
			case 4:
				if(c != c) {
					state = cocktail.core.css.parsers.StyleValueParserState.END;
					continue;
				} else if(c == 47 && fontNotations.length > 0) {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				} else {
					if(fontNotations.length == 1) {
						fontNotations.push(styleValues.pop());
						styleValues.push(cocktail.core.css.CSSPropertyValue.FONT_SIZE_LINE_HEIGHT_GROUP(fontNotations[0],fontNotations[1]));
						fontNotations = [];
					}
					switch(c) {
					case 32:
						state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
						next = cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE;
						break;
					case 44:
						styleValuesLists.push(styleValues);
						styleValues = [];
						state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
						next = cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE;
						break;
					case 47:
						if(propertyName == "font") {
							fontNotations.push(styleValues.pop());
							state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
							next = cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE;
						} else {
							state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
							continue;
						}
						break;
					case 59:
						state = cocktail.core.css.parsers.StyleValueParserState.END;
						continue;
						break;
					default:
						state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
						continue;
					}
				}
				break;
			case 1:
				switch(c) {
				case 44:
					styleValuesLists.push(styleValues);
					styleValues = [];
					state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.StyleValueParserState.BEGIN_VALUE;
					c = StringTools.fastCodeAt(styles,++position);
					continue;
					break;
				case 59:
					state = cocktail.core.css.parsers.StyleValueParserState.END;
					continue;
					break;
				case 45:case 43:case 46:
					state = cocktail.core.css.parsers.StyleValueParserState.NUMBER_INTEGER_DIMENSION_PERCENTAGE;
					start = position;
					continue;
					break;
				case 35:
					state = cocktail.core.css.parsers.StyleValueParserState.HEX;
					start = position;
					continue;
					break;
				case 33:
					state = cocktail.core.css.parsers.StyleValueParserState.IMPORTANT;
					start = position;
					continue;
					break;
				case 34:case 39:
					state = cocktail.core.css.parsers.StyleValueParserState.STRING;
					start = position;
					continue;
					break;
				}
				if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45) {
					state = cocktail.core.css.parsers.StyleValueParserState.IDENT_FUNCTION;
					start = position;
					continue;
				}
				if(c >= 48 && c <= 57) {
					state = cocktail.core.css.parsers.StyleValueParserState.NUMBER_INTEGER_DIMENSION_PERCENTAGE;
					start = position;
					continue;
				}
				state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
				continue;
				break;
			case 7:
				if(c != c) throw "__break__"; else if(c != 59) {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				} else throw "__break__";
				break;
			case 6:
				var endPosition = cocktail.core.css.parsers.CSSStyleParser.parseImportant(styles,++position);
				if(endPosition != -1) {
					position = endPosition;
					c = styles.charCodeAt(position);
					important = true;
					state = cocktail.core.css.parsers.StyleValueParserState.IGNORE_SPACES;
					next = cocktail.core.css.parsers.StyleValueParserState.END;
					continue;
				} else {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				}
				break;
			case 8:
				var endPosition1 = cocktail.core.css.parsers.CSSStyleParser.parseHexaColor(styles,++position,styleValues);
				if(endPosition1 != -1) {
					position = endPosition1;
					state = cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END;
				} else {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				}
				break;
			case 9:
				var endPosition2 = cocktail.core.css.parsers.CSSStyleParser.parseString(styles,position,styleValues);
				if(endPosition2 != -1) {
					position = endPosition2;
					c = styles.charCodeAt(position);
					state = cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END;
					continue;
				} else {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				}
				break;
			case 2:
				var endPosition3 = cocktail.core.css.parsers.CSSStyleParser.parseIdentOrFunctionnalNotation(styles,position,styleValues,baseURL);
				if(endPosition3 != -1) {
					position = endPosition3;
					c = styles.charCodeAt(position);
					state = cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END;
					continue;
				} else {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				}
				break;
			case 3:
				var endPosition4 = cocktail.core.css.parsers.CSSStyleParser.parseIntegerNumberDimensionOrPercentage(styles,position,styleValues);
				if(endPosition4 != -1) {
					position = endPosition4;
					c = styles.charCodeAt(position);
					state = cocktail.core.css.parsers.StyleValueParserState.COMPONENT_OR_END;
					continue;
				} else {
					state = cocktail.core.css.parsers.StyleValueParserState.INVALID_STYLE_VALUE;
					continue;
				}
				break;
			case 5:
				if(c == 59) {
					cocktail.core.css.parsers.CSSStyleParser._position = ++position;
					return null;
				}
				break;
			}
			c = StringTools.fastCodeAt(styles,++position);
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	cocktail.core.css.parsers.CSSStyleParser._position = position;
	if(fontNotations.length == 1) {
		fontNotations.push(styleValues.pop());
		styleValues.push(cocktail.core.css.CSSPropertyValue.FONT_SIZE_LINE_HEIGHT_GROUP(fontNotations[0],fontNotations[1]));
		fontNotations = [];
	}
	if(styleValuesLists.length == 0) {
		if(styleValues.length == 1) {
			var typedProperty = new cocktail.core.css.TypedPropertyVO();
			typedProperty.important = important;
			typedProperty.index = cocktail.core.css.CSSConstants.getPropertyIndexFromName(propertyName);
			typedProperty.typedValue = styleValues[0];
			return typedProperty;
		} else {
			var typedProperty1 = new cocktail.core.css.TypedPropertyVO();
			typedProperty1.important = important;
			typedProperty1.index = cocktail.core.css.CSSConstants.getPropertyIndexFromName(propertyName);
			typedProperty1.typedValue = cocktail.core.css.CSSPropertyValue.GROUP(styleValues);
			return typedProperty1;
		}
	} else {
		var styleListProperty = [];
		if(styleValues.length > 0) styleValuesLists.push(styleValues);
		var _g1 = 0;
		var _g = styleValuesLists.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(styleValuesLists[i].length == 1) styleListProperty.push(styleValuesLists[i][0]); else styleListProperty.push(cocktail.core.css.CSSPropertyValue.GROUP(styleValuesLists[i]));
		}
		var typedProperty2 = new cocktail.core.css.TypedPropertyVO();
		typedProperty2.important = important;
		typedProperty2.index = cocktail.core.css.CSSConstants.getPropertyIndexFromName(propertyName);
		typedProperty2.typedValue = cocktail.core.css.CSSPropertyValue.CSS_LIST(styleListProperty);
		return typedProperty2;
	}
};
cocktail.core.css.parsers.CSSStyleParser.parseImportant = function(styles,position) {
	var c = styles.charCodeAt(position);
	while(c == 32) c = StringTools.fastCodeAt(styles,++position);
	var start = position;
	while(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45) c = StringTools.fastCodeAt(styles,++position);
	var ident = HxOverrides.substr(styles,start,position - start);
	if(ident == "important") return position;
	return -1;
};
cocktail.core.css.parsers.CSSStyleParser.parseIntegerNumberDimensionOrPercentage = function(styles,position,styleValues) {
	var c = styles.charCodeAt(position);
	var start = position;
	if(c == 45 || c == 43) c = StringTools.fastCodeAt(styles,++position);
	var isNumber = c == 46;
	while(c >= 48 && c <= 57) c = StringTools.fastCodeAt(styles,++position);
	if(c != c && isNumber == false) {
		var integer = Std.parseInt(HxOverrides.substr(styles,start,position - start));
		styleValues.push(cocktail.core.css.CSSPropertyValue.INTEGER(integer));
		return position;
	}
	if(c == 46) {
		c = StringTools.fastCodeAt(styles,++position);
		isNumber = true;
		while(c >= 48 && c <= 57) c = StringTools.fastCodeAt(styles,++position);
	}
	if(c != c) {
		var number = Std.parseFloat(HxOverrides.substr(styles,start,position - start));
		styleValues.push(cocktail.core.css.CSSPropertyValue.NUMBER(number));
		return position;
	}
	if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45) {
		var numberOrInteger = Std.parseFloat(HxOverrides.substr(styles,start,position - start));
		position = cocktail.core.css.parsers.CSSStyleParser.parseDimension(numberOrInteger,styles,position,styleValues);
	} else switch(c) {
	case 37:
		var numberOrInteger1 = Std.parseFloat(HxOverrides.substr(styles,start,position - start));
		styleValues.push(cocktail.core.css.CSSPropertyValue.PERCENTAGE(numberOrInteger1));
		++position;
		break;
	default:
		if(isNumber) {
			var number1 = Std.parseFloat(HxOverrides.substr(styles,start,position - start));
			styleValues.push(cocktail.core.css.CSSPropertyValue.NUMBER(number1));
		} else {
			var integer1 = Std.parseInt(HxOverrides.substr(styles,start,position - start));
			styleValues.push(cocktail.core.css.CSSPropertyValue.INTEGER(integer1));
		}
	}
	return position;
};
cocktail.core.css.parsers.CSSStyleParser.parseDimension = function(numberOrInteger,styles,position,styleValues) {
	var c = styles.charCodeAt(position);
	var start = position;
	while(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45) c = StringTools.fastCodeAt(styles,++position);
	var ident = HxOverrides.substr(styles,start,position - start);
	switch(ident) {
	case "px":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.PX(numberOrInteger)));
		break;
	case "em":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.EM(numberOrInteger)));
		break;
	case "ex":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.EX(numberOrInteger)));
		break;
	case "mm":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.MM(numberOrInteger)));
		break;
	case "in":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.IN(numberOrInteger)));
		break;
	case "cm":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.CM(numberOrInteger)));
		break;
	case "pc":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.PC(numberOrInteger)));
		break;
	case "pt":
		styleValues.push(cocktail.core.css.CSSPropertyValue.LENGTH(cocktail.core.css.CSSLengthValue.PT(numberOrInteger)));
		break;
	case "deg":
		styleValues.push(cocktail.core.css.CSSPropertyValue.ANGLE(cocktail.core.css.CSSAngleValue.DEG(numberOrInteger)));
		break;
	case "rad":
		styleValues.push(cocktail.core.css.CSSPropertyValue.ANGLE(cocktail.core.css.CSSAngleValue.RAD(numberOrInteger)));
		break;
	case "grad":
		styleValues.push(cocktail.core.css.CSSPropertyValue.ANGLE(cocktail.core.css.CSSAngleValue.GRAD(numberOrInteger)));
		break;
	case "turn":
		styleValues.push(cocktail.core.css.CSSPropertyValue.ANGLE(cocktail.core.css.CSSAngleValue.TURN(numberOrInteger)));
		break;
	case "s":
		styleValues.push(cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.SECONDS(numberOrInteger)));
		break;
	case "ms":
		styleValues.push(cocktail.core.css.CSSPropertyValue.TIME(cocktail.core.css.CSSTimeValue.MILLISECONDS(numberOrInteger)));
		break;
	case "Hz":
		styleValues.push(cocktail.core.css.CSSPropertyValue.FREQUENCY(cocktail.core.css.CSSFrequencyValue.HERTZ(numberOrInteger)));
		break;
	case "kHz":
		styleValues.push(cocktail.core.css.CSSPropertyValue.FREQUENCY(cocktail.core.css.CSSFrequencyValue.KILO_HERTZ(numberOrInteger)));
		break;
	case "dpi":
		styleValues.push(cocktail.core.css.CSSPropertyValue.RESOLUTION(cocktail.core.css.CSSResolutionValue.DPI(numberOrInteger)));
		break;
	case "dpcm":
		styleValues.push(cocktail.core.css.CSSPropertyValue.RESOLUTION(cocktail.core.css.CSSResolutionValue.DPCM(numberOrInteger)));
		break;
	case "dppx":
		styleValues.push(cocktail.core.css.CSSPropertyValue.RESOLUTION(cocktail.core.css.CSSResolutionValue.DPPX(numberOrInteger)));
		break;
	default:
		return -1;
	}
	return position;
};
cocktail.core.css.parsers.CSSStyleParser.parseString = function(styles,position,styleValues) {
	var quote = styles.charCodeAt(position);
	var start = ++position;
	var c = styles.charCodeAt(position);
	while(c != quote) {
		if(c != c) return -1;
		c = StringTools.fastCodeAt(styles,++position);
	}
	var stringValue = HxOverrides.substr(styles,start,position - start);
	styleValues.push(cocktail.core.css.CSSPropertyValue.STRING(stringValue));
	return ++position;
};
cocktail.core.css.parsers.CSSStyleParser.parseIdentOrFunctionnalNotation = function(styles,position,styleValues,baseURL) {
	var c = styles.charCodeAt(position);
	var start = position;
	while(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45) c = StringTools.fastCodeAt(styles,++position);
	var ident = HxOverrides.substr(styles,start,position - start);
	switch(c) {
	case 40:
		position = cocktail.core.css.parsers.CSSStyleParser.parseFunctionnalNotation(ident,styles,++position,styleValues,baseURL);
		break;
	default:
		cocktail.core.css.parsers.CSSStyleParser.parseIdent(ident,styleValues);
	}
	return position;
};
cocktail.core.css.parsers.CSSStyleParser.parseHexaColor = function(styles,position,styleValues) {
	var c = styles.charCodeAt(position);
	var start = position;
	while(c >= 97 && c <= 102 || c >= 65 && c <= 70 || c >= 48 && c <= 57) c = StringTools.fastCodeAt(styles,++position);
	var hexa = HxOverrides.substr(styles,start,position - start);
	if(hexa.length == 3 || hexa.length == 6) {
		styleValues.push(cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.HEX(hexa)));
		return --position;
	}
	return -1;
};
cocktail.core.css.parsers.CSSStyleParser.parseFunctionnalNotation = function(ident,styles,position,styleValues,baseURL) {
	var c = styles.charCodeAt(position);
	var start = position;
	while(c != 41) {
		if(c != c) return -1;
		c = StringTools.fastCodeAt(styles,++position);
	}
	var cssFunction = HxOverrides.substr(styles,start,position - start);
	if(ident == "url") {
		if(cssFunction.charAt(0) != "'" && cssFunction.charAt(0) != "\"") cssFunction = "'" + cssFunction + "'";
	}
	var functionValues = cocktail.core.css.parsers.CSSStyleParser.parseStyleValue("",cssFunction,0,baseURL);
	var functionValue = cocktail.core.css.parsers.CSSStyleParser.getFunctionalNotation(ident,functionValues.typedValue,baseURL);
	if(functionValue == null) return -1; else {
		styleValues.push(functionValue);
		return ++position;
	}
};
cocktail.core.css.parsers.CSSStyleParser.getFunctionalNotation = function(name,value,baseURL) {
	switch(name) {
	case "rgb":
		return cocktail.core.css.parsers.CSSStyleParser.parseRGBOrRGBA(value,false);
	case "rgba":
		return cocktail.core.css.parsers.CSSStyleParser.parseRGBOrRGBA(value,true);
	case "url":
		switch(value[1]) {
		case 3:
			var value1 = value[2];
			return cocktail.core.css.CSSPropertyValue.URL(cocktail.core.css.parsers.CSSStyleParser.getURLRelativeToDocument(value1,baseURL));
		case 6:
			var value2 = value[2];
			return cocktail.core.css.CSSPropertyValue.URL(cocktail.core.css.parsers.CSSStyleParser.getURLRelativeToDocument(value2,baseURL));
		default:
			return null;
		}
		break;
	case "matrix":
		switch(value[1]) {
		case 15:
			var value3 = value[2];
			if(value3.length == 6) {
				var matrixNumbers = new Array();
				var _g1 = 0;
				var _g = value3.length;
				while(_g1 < _g) {
					var i = _g1++;
					{
						var _g2 = value3[i];
						switch(_g2[1]) {
						case 1:
							var value4 = _g2[2];
							matrixNumbers.push(value4);
							break;
						case 0:
							var value5 = _g2[2];
							matrixNumbers.push(value5);
							break;
						default:
							return null;
						}
					}
				}
				return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.MATRIX(matrixNumbers[0],matrixNumbers[1],matrixNumbers[2],matrixNumbers[3],matrixNumbers[4],matrixNumbers[5]));
			}
			break;
		default:
		}
		break;
	case "rotate":
		switch(value[1]) {
		case 8:
			var value6 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.ROTATE(value6));
		default:
		}
		break;
	case "scaleX":
		switch(value[1]) {
		case 1:
			var value7 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE_X(value7));
		case 0:
			var value8 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE_X(value8));
		default:
		}
		break;
	case "scaleY":
		switch(value[1]) {
		case 1:
			var value9 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE_Y(value9));
		case 0:
			var value10 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE_Y(value10));
		default:
		}
		break;
	case "scale":
		switch(value[1]) {
		case 1:
			var value11 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE(value11,value11));
		case 0:
			var value12 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE(value12,value12));
		case 15:
			var value13 = value[2];
			if(value13.length == 2) {
				var scaleX = 0.0;
				var scaleY = 0.0;
				{
					var _g3 = value13[0];
					switch(_g3[1]) {
					case 1:
						var value14 = _g3[2];
						scaleX = value14;
						break;
					case 0:
						var value15 = _g3[2];
						scaleX = value15;
						break;
					default:
						return null;
					}
				}
				{
					var _g4 = value13[1];
					switch(_g4[1]) {
					case 1:
						var value16 = _g4[2];
						scaleY = value16;
						break;
					case 0:
						var value17 = _g4[2];
						scaleY = value17;
						break;
					default:
						return null;
					}
				}
				return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SCALE(scaleX,scaleY));
			}
			break;
		default:
		}
		break;
	case "skew":
		switch(value[1]) {
		case 8:
			var value18 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SKEW(value18,value18));
		case 15:
			var value19 = value[2];
			if(value19.length == 2) {
				var skewX = null;
				var skewY = null;
				{
					var _g5 = value19[0];
					switch(_g5[1]) {
					case 8:
						var value20 = _g5[2];
						skewX = value20;
						break;
					default:
						return null;
					}
				}
				{
					var _g6 = value19[1];
					switch(_g6[1]) {
					case 8:
						var value21 = _g6[2];
						skewY = value21;
						break;
					default:
						return null;
					}
				}
				return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SKEW(skewX,skewY));
			}
			break;
		default:
		}
		break;
	case "skewX":
		switch(value[1]) {
		case 8:
			var value22 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SKEW_X(value22));
		default:
		}
		break;
	case "skewY":
		switch(value[1]) {
		case 8:
			var value23 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.SKEW_Y(value23));
		default:
		}
		break;
	case "translateX":
		switch(value[1]) {
		case 18:
			var value24 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_X(cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value24)));
		case 2:
			var value25 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_X(cocktail.core.css.CSSTranslationValue.PERCENTAGE(value25)));
		case 7:
			var value26 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_X(cocktail.core.css.CSSTranslationValue.LENGTH(value26)));
		default:
		}
		break;
	case "translateY":
		switch(value[1]) {
		case 18:
			var value27 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_Y(cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value27)));
		case 2:
			var value28 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_Y(cocktail.core.css.CSSTranslationValue.PERCENTAGE(value28)));
		case 7:
			var value29 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE_Y(cocktail.core.css.CSSTranslationValue.LENGTH(value29)));
		default:
		}
		break;
	case "translate":
		switch(value[1]) {
		case 18:
			var value30 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE(cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value30),cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value30)));
		case 2:
			var value31 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE(cocktail.core.css.CSSTranslationValue.PERCENTAGE(value31),cocktail.core.css.CSSTranslationValue.PERCENTAGE(value31)));
		case 7:
			var value32 = value[2];
			return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE(cocktail.core.css.CSSTranslationValue.LENGTH(value32),cocktail.core.css.CSSTranslationValue.LENGTH(value32)));
		case 15:
			var value33 = value[2];
			var translateX = null;
			var translateY = null;
			if(value33.length == 2) {
				{
					var _g7 = value33[0];
					switch(_g7[1]) {
					case 18:
						var value34 = _g7[2];
						translateX = cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value34);
						break;
					case 2:
						var value35 = _g7[2];
						translateX = cocktail.core.css.CSSTranslationValue.PERCENTAGE(value35);
						break;
					case 7:
						var value36 = _g7[2];
						translateX = cocktail.core.css.CSSTranslationValue.LENGTH(value36);
						break;
					default:
						return null;
					}
				}
				{
					var _g8 = value33[1];
					switch(_g8[1]) {
					case 18:
						var value37 = _g8[2];
						translateY = cocktail.core.css.CSSTranslationValue.ABSOLUTE_LENGTH(value37);
						break;
					case 2:
						var value38 = _g8[2];
						translateY = cocktail.core.css.CSSTranslationValue.PERCENTAGE(value38);
						break;
					case 7:
						var value39 = _g8[2];
						translateY = cocktail.core.css.CSSTranslationValue.LENGTH(value39);
						break;
					default:
						return null;
					}
				}
				return cocktail.core.css.CSSPropertyValue.TRANSFORM_FUNCTION(cocktail.core.css.CSSTransformFunctionValue.TRANSLATE(translateX,translateY));
			}
			break;
		default:
		}
		break;
	default:
	}
	return null;
};
cocktail.core.css.parsers.CSSStyleParser.parseRGBOrRGBA = function(property,isRGBA) {
	switch(property[1]) {
	case 15:
		var value = property[2];
		if(isRGBA == true) {
			if(value.length != 4) return null;
		} else if(value.length != 3) return null;
		var isPercentRGB = false;
		var red = 0;
		var green = 0;
		var blue = 0;
		var percentRed = 0.0;
		var percentGreen = 0.0;
		var percentBlue = 0.0;
		{
			var _g = value[0];
			switch(_g[1]) {
			case 0:
				var value1 = _g[2];
				red = value1;
				break;
			case 2:
				var value2 = _g[2];
				percentRed = value2;
				isPercentRGB = true;
				break;
			default:
				return null;
			}
		}
		{
			var _g1 = value[1];
			switch(_g1[1]) {
			case 0:
				var value3 = _g1[2];
				green = value3;
				if(isPercentRGB == true) return null;
				break;
			case 2:
				var value4 = _g1[2];
				percentGreen = value4;
				if(isPercentRGB == false) return null;
				break;
			default:
				return null;
			}
		}
		{
			var _g2 = value[2];
			switch(_g2[1]) {
			case 0:
				var value5 = _g2[2];
				blue = value5;
				if(isPercentRGB == true) return null;
				break;
			case 2:
				var value6 = _g2[2];
				percentBlue = value6;
				if(isPercentRGB == false) return null;
				break;
			default:
				return null;
			}
		}
		if(isRGBA == false) {
			if(isPercentRGB == true) return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.RGB_PERCENTAGE(percentRed,percentGreen,percentBlue)); else return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.RGB(red,green,blue));
		} else {
			var alpha = 0.0;
			{
				var _g3 = value[3];
				switch(_g3[1]) {
				case 1:
					var value7 = _g3[2];
					alpha = value7;
					break;
				case 0:
					var value8 = _g3[2];
					alpha = value8;
					break;
				default:
					return null;
				}
			}
			if(isPercentRGB == true) return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.RGBA_PERCENTAGE(percentRed,percentGreen,percentBlue,alpha)); else return cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.RGBA(red,green,blue,alpha));
		}
		return null;
	default:
		return null;
	}
};
cocktail.core.css.parsers.CSSStyleParser.parseIdent = function(ident,styleValues) {
	ident = ident.toLowerCase();
	switch(ident) {
	case "inherit":
		styleValues.push(cocktail.core.css.CSSPropertyValue.INHERIT);
		break;
	case "initial":
		styleValues.push(cocktail.core.css.CSSPropertyValue.INITIAL);
		break;
	default:
		cocktail.core.css.parsers.CSSStyleParser.parseKeyword(ident,styleValues);
	}
};
cocktail.core.css.parsers.CSSStyleParser.parseKeyword = function(ident,styleValues) {
	var cssPropertyValue = cocktail.core.css.CSSPropertyValue.IDENTIFIER(ident);
	switch(ident) {
	case "normal":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NORMAL);
		break;
	case "bold":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BOLD);
		break;
	case "bolder":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BOLDER);
		break;
	case "lighter":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LIGHTER);
		break;
	case "oblique":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.OBLIQUE);
		break;
	case "italic":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ITALIC);
		break;
	case "small-caps":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SMALL_CAPS);
		break;
	case "pre":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PRE);
		break;
	case "nowrap":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_WRAP);
		break;
	case "pre-wrap":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PRE_WRAP);
		break;
	case "pre-line":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PRE_LINE);
		break;
	case "left":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LEFT);
		break;
	case "right":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.RIGHT);
		break;
	case "center":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CENTER);
		break;
	case "justify":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.JUSTIFY);
		break;
	case "capitalize":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CAPITALIZE);
		break;
	case "uppercase":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.UPPERCASE);
		break;
	case "lowercase":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LOWERCASE);
		break;
	case "none":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NONE);
		break;
	case "baseline":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BASELINE);
		break;
	case "sub":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SUB);
		break;
	case "super":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SUPER);
		break;
	case "top":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.TOP);
		break;
	case "text-top":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.TEXT_TOP);
		break;
	case "middle":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MIDDLE);
		break;
	case "bottom":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BOTTOM);
		break;
	case "text-bottom":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.TEXT_BOTTOM);
		break;
	case "auto":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO);
		break;
	case "block":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BLOCK);
		break;
	case "inline-block":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INLINE_BLOCK);
		break;
	case "inline":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INLINE);
		break;
	case "both":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BOTH);
		break;
	case "static":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.STATIC);
		break;
	case "relative":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.RELATIVE);
		break;
	case "absolute":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ABSOLUTE);
		break;
	case "fixed":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.FIXED);
		break;
	case "visible":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.VISIBLE);
		break;
	case "hidden":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.HIDDEN);
		break;
	case "scroll":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SCROLL);
		break;
	case "border-box":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BORDER_BOX);
		break;
	case "padding-box":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.PADDING_BOX);
		break;
	case "content-box":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CONTENT_BOX);
		break;
	case "contain":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CONTAIN);
		break;
	case "cover":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.COVER);
		break;
	case "crosshair":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.CROSSHAIR);
		break;
	case "default":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.DEFAULT);
		break;
	case "pointer":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.POINTER);
		break;
	case "text":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.TEXT);
		break;
	case "all":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ALL);
		break;
	case "ease":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE);
		break;
	case "linear":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LINEAR);
		break;
	case "ease-in":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE_IN);
		break;
	case "ease-out":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE_OUT);
		break;
	case "ease-in-out":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.EASE_IN_OUT);
		break;
	case "step-start":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.STEP_START);
		break;
	case "step-end":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.STEP_END);
		break;
	case "start":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.START);
		break;
	case "end":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.END);
		break;
	case "x-small":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.X_SMALL);
		break;
	case "xx-small":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.XX_SMALL);
		break;
	case "x-large":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.X_LARGE);
		break;
	case "xx-large":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.XX_LARGE);
		break;
	case "medium":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.MEDIUM);
		break;
	case "smaller":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SMALLER);
		break;
	case "larger":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LARGER);
		break;
	case "space":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SPACE);
		break;
	case "round":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.ROUND);
		break;
	case "large":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LARGE);
		break;
	case "small":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SMALL);
		break;
	case "repeat-x":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT_X);
		break;
	case "repeat-y":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT_Y);
		break;
	case "no-repeat":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.NO_REPEAT);
		break;
	case "repeat":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.REPEAT);
		break;
	case "thin":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.THIN);
		break;
	case "thick":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.THICK);
		break;
	case "dotted":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.DOTTED);
		break;
	case "dashed":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.DASHED);
		break;
	case "solid":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.SOLID);
		break;
	case "double":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.DOUBLE);
		break;
	case "groove":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.GROOVE);
		break;
	case "ridge":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.RIDGE);
		break;
	case "inset":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INSET);
		break;
	case "outset":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.OUTSET);
		break;
	case "invert":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.INVERT);
		break;
	case "underline":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.UNDERLINE);
		break;
	case "overline":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.OVERLINE);
		break;
	case "line-through":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.LINE_THROUGH);
		break;
	case "blink":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.BLINK);
		break;
	case "transparent":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.TRANSPARENT);
		break;
	case "currentcolor":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.CURRENT_COLOR);
		break;
	default:
		cssPropertyValue = cocktail.core.css.parsers.CSSStyleParser.parseColorKeyword(ident);
	}
	if(cssPropertyValue == null) cssPropertyValue = cocktail.core.css.CSSPropertyValue.IDENTIFIER(ident);
	styleValues.push(cssPropertyValue);
};
cocktail.core.css.parsers.CSSStyleParser.parseColorKeyword = function(ident) {
	var cssPropertyValue = null;
	switch(ident) {
	case "aliceblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ALICE_BLUE));
		break;
	case "antiquewhite":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ANTIQUE_WHITE));
		break;
	case "aqua":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.AQUA));
		break;
	case "aquamarine":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.AQUAMARINE));
		break;
	case "azure":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.AZURE));
		break;
	case "beige":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BEIGE));
		break;
	case "bisque":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BISQUE));
		break;
	case "dimgray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DIM_GRAY));
		break;
	case "dimgrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DIM_GREY));
		break;
	case "blue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BLUE));
		break;
	case "black":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BLACK));
		break;
	case "blanchedalmond":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BLANCHE_DALMOND));
		break;
	case "blueviolet":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BLUE_VIOLET));
		break;
	case "brown":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.BROWN));
		break;
	case "burlywood":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ALICE_BLUE));
		break;
	case "cadetblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CADET_BLUE));
		break;
	case "chartreuse":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CHARTREUSE));
		break;
	case "chocolate":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CHOCOLATE));
		break;
	case "coral":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CORAL));
		break;
	case "cornflowerblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CORNFLOWER_BLUE));
		break;
	case "cornsilk":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CORNSILK));
		break;
	case "crimson":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CRIMSON));
		break;
	case "cyan":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.CYAN));
		break;
	case "darkblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_BLUE));
		break;
	case "darkgoldenrod":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_GOLDEN_ROD));
		break;
	case "darkgray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_GRAY));
		break;
	case "darkgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_GREEN));
		break;
	case "darkgrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_GREY));
		break;
	case "darkkhaki":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_KHAKI));
		break;
	case "darkmagenta":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_MAGENTA));
		break;
	case "darkolivegreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_OLIVE_GREEN));
		break;
	case "darkorange":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_ORANGE));
		break;
	case "darkorchid":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_ORCHID));
		break;
	case "darkred":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_RED));
		break;
	case "darksalmon":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_SALMON));
		break;
	case "darkseagreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_SEA_GREEN));
		break;
	case "darkslateblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_SLATE_BLUE));
		break;
	case "darkslategray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_SLATE_GRAY));
		break;
	case "darkslategrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_SLATE_GREY));
		break;
	case "darkturquoise":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_TURQUOISE));
		break;
	case "darkviolet":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DARK_VIOLET));
		break;
	case "deeppink":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DEEP_PINK));
		break;
	case "deepskyblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DEEP_SKY_BLUE));
		break;
	case "dodgerblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.DODGER_BLUE));
		break;
	case "firebrick":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.FIRE_BRICK));
		break;
	case "floralwhite":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.FLORAL_WHITE));
		break;
	case "forestgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.FOREST_GREEN));
		break;
	case "gainsboro":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GAINSBORO));
		break;
	case "ghostwhite":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GHOST_WHITE));
		break;
	case "gold":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GOLD));
		break;
	case "goldenrod":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GOLDEN_ROD));
		break;
	case "greenyellow":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GREEN_YELLOW));
		break;
	case "honeydew":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.HONEY_DEW));
		break;
	case "hotpink":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.HOT_PINK));
		break;
	case "indianred":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.INDIAN_RED));
		break;
	case "indigo":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.INDIGO));
		break;
	case "ivory":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.IVORY));
		break;
	case "khaki":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.KHAKI));
		break;
	case "lavender":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LAVENDER));
		break;
	case "lavenderblush":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LAVENDER_BLUSH));
		break;
	case "lawngreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LAWN_GREEN));
		break;
	case "lemonchiffon":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LEMON_CHIFFON));
		break;
	case "lightblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_BLUE));
		break;
	case "lightcoral":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_CORAL));
		break;
	case "lightcyan":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_CYAN));
		break;
	case "lightgoldenrodyellow":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_GOLDENROD_YELLOW));
		break;
	case "lightgray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_GRAY));
		break;
	case "lightgrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_GREY));
		break;
	case "lightgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_GREEN));
		break;
	case "lightpink":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_PINK));
		break;
	case "lightsalmon":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_SALMON));
		break;
	case "lightseagreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_SEA_GREEN));
		break;
	case "lightskyblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_SKY_BLUE));
		break;
	case "lightslategray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GRAY));
		break;
	case "lightslategrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_SLATE_GREY));
		break;
	case "lightsteelblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_STEEL_BLUE));
		break;
	default:
		cssPropertyValue = cocktail.core.css.parsers.CSSStyleParser.parseColorKeyword2(ident);
	}
	return cssPropertyValue;
};
cocktail.core.css.parsers.CSSStyleParser.parseColorKeyword2 = function(ident) {
	var cssPropertyValue = null;
	switch(ident) {
	case "lightyellow":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIGHT_YELLOW));
		break;
	case "limegreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIME_GREEN));
		break;
	case "linen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LINEN));
		break;
	case "magenta":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MAGENTA));
		break;
	case "marron":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MAROON));
		break;
	case "mediumaquamarine":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_AQUAMARINE));
		break;
	case "mediumblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_BLUE));
		break;
	case "mediumorchid":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_ORCHID));
		break;
	case "mediumpurple":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_PURPLE));
		break;
	case "mediumseagreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_SEA_GREEN));
		break;
	case "mediumslateblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_SLATE_BLUE));
		break;
	case "mediumspringgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MEDIUM_SPRING_GREEN));
		break;
	case "mintcream":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MINT_CREAM));
		break;
	case "mistyrose":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MISTY_ROSE));
		break;
	case "moccasin":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MOCCASIN));
		break;
	case "navajowhite":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.NAVAJO_WHITE));
		break;
	case "oldlace":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.OLD_LACE));
		break;
	case "olivedrab":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.OLIVE_DRAB));
		break;
	case "orangered":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ORANGE_RED));
		break;
	case "orchid":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ORCHID));
		break;
	case "palegoldenrod":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PALE_GOLDEN_ROD));
		break;
	case "palegreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PALE_GREEN));
		break;
	case "paleturquoise":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PALE_TURQUOISE));
		break;
	case "palevioletred":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PALE_VIOLET_RED));
		break;
	case "papayawhip":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PAPAYA_WHIP));
		break;
	case "peachpuff":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PEACH_PUFF));
		break;
	case "peru":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PERU));
		break;
	case "pink":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PINK));
		break;
	case "plum":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PLUM));
		break;
	case "powderblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.POWDER_BLUE));
		break;
	case "rosybrown":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ROSY_BROWN));
		break;
	case "royalblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ROYAL_BLUE));
		break;
	case "saddlebrown":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SADDLE_BROWN));
		break;
	case "salmon":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SALMON));
		break;
	case "sandybrown":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SANDY_BROWN));
		break;
	case "seagreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SEA_GREEN));
		break;
	case "sienna":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SIENNA));
		break;
	case "skyblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SKY_BLUE));
		break;
	case "slateblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SLATE_BLUE));
		break;
	case "slategray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SLATE_GRAY));
		break;
	case "slategrey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SLATE_GREY));
		break;
	case "snow":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SNOW));
		break;
	case "springgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SPRING_GREEN));
		break;
	case "steelblue":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.STEEL_BLUE));
		break;
	case "tan":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.TAN));
		break;
	case "thisle":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.THISLE));
		break;
	case "tomato":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.TOMATO));
		break;
	case "turquoise":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.TURQUOISE));
		break;
	case "violet":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.VIOLET));
		break;
	case "wheat":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.WHEAT));
		break;
	case "whitesmoke":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.WHITE_SMOKE));
		break;
	case "yellowgreen":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.YELLOW_GREEN));
		break;
	case "silver":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.SILVER));
		break;
	case "gray":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GRAY));
		break;
	case "grey":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GREY));
		break;
	case "white":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.WHITE));
		break;
	case "maroon":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.MAROON));
		break;
	case "red":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.RED));
		break;
	case "purple":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.PURPLE));
		break;
	case "fuchsia":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.FUCHSIA));
		break;
	case "green":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.GREEN));
		break;
	case "lime":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.LIME));
		break;
	case "olive":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.OLIVE));
		break;
	case "yellow":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.YELLOW));
		break;
	case "navy":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.NAVY));
		break;
	case "orange":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.ORANGE));
		break;
	case "teal":
		cssPropertyValue = cocktail.core.css.CSSPropertyValue.COLOR(cocktail.core.css.CSSColorValue.KEYWORD(cocktail.core.css.CSSColorKeyword.TEAL));
		break;
	}
	return cssPropertyValue;
};
cocktail.core.css.parsers.CSSStyleParser.getURLRelativeToDocument = function(value,baseURL) {
	if(baseURL == null) return value;
	var url = cocktail.core.url.URL.fromString(value);
	if(cocktail.core.url.URL.isRelative(url) == false) return value;
	var typedBaseURL = cocktail.core.url.URL.fromString(baseURL);
	return cocktail.core.url.URL.toString(cocktail.core.url.URL.appendURL(typedBaseURL,url));
};
cocktail.core.css.parsers.CSSStyleParser.isHexaChar = function(c) {
	return c >= 97 && c <= 102 || c >= 65 && c <= 70 || c >= 48 && c <= 57;
};
cocktail.core.css.parsers.CSSStyleParser.isIdentChar = function(c) {
	return c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45;
};
cocktail.core.css.parsers.CSSStyleParser.isNumChar = function(c) {
	return c >= 48 && c <= 57;
};
cocktail.core.css.parsers.CSSStyleParser.prototype = {
	__class__: cocktail.core.css.parsers.CSSStyleParser
};
cocktail.core.css.parsers.CSSStyleSerializer = function() {
};
$hxClasses["cocktail.core.css.parsers.CSSStyleSerializer"] = cocktail.core.css.parsers.CSSStyleSerializer;
cocktail.core.css.parsers.CSSStyleSerializer.__name__ = ["cocktail","core","css","parsers","CSSStyleSerializer"];
cocktail.core.css.parsers.CSSStyleSerializer.serialize = function(property) {
	switch(property[1]) {
	case 4:
		var value = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeKeyword(value);
	case 3:
		var value1 = property[2];
		return value1;
	case 6:
		var value2 = property[2];
		return "\"" + value2 + "\"";
	case 5:
		var value3 = property[2];
		return "url(" + value3 + ")";
	case 16:
		return "inherit";
	case 17:
		return "initial";
	case 9:
		var value4 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeTime(value4);
	case 2:
		var value5 = property[2];
		return value5 + "%";
	case 8:
		var value6 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(value6);
	case 0:
		var value7 = property[2];
		if(value7 == null) return "null"; else return "" + value7;
		break;
	case 1:
		var value8 = property[2];
		if(value8 == null) return "null"; else return "" + value8;
		break;
	case 18:
		var value9 = property[2];
		if(value9 == null) return "null"; else return "" + value9;
		break;
	case 19:
		var intervalChange = property[3];
		var intervalNumber = property[2];
		return "steps(" + (intervalNumber == null?"null":"" + intervalNumber) + "," + cocktail.core.css.parsers.CSSStyleSerializer.serializeKeyword(intervalChange) + ")";
	case 20:
		var y2 = property[5];
		var x2 = property[4];
		var y1 = property[3];
		var x1 = property[2];
		return "cubic-bezier(" + (x1 == null?"null":"" + x1) + "," + (y1 == null?"null":"" + y1) + "," + (x2 == null?"null":"" + x2) + "," + (y2 == null?"null":"" + y2) + ")";
	case 10:
		var value10 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeFrequency(value10);
	case 7:
		var value11 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeLength(value11);
	case 11:
		var value12 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeResolution(value12);
	case 12:
		var value13 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeColor(value13);
	case 21:
		var value14 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeTransformFunction(value14);
	case 13:
		var value15 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeGroup(value15);
	case 14:
		var lineHeight = property[3];
		var fontSize = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serialize(fontSize) + "/" + cocktail.core.css.parsers.CSSStyleSerializer.serialize(lineHeight);
	case 15:
		var value16 = property[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeList(value16);
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeList = function(list) {
	var serializedList = "";
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		serializedList += cocktail.core.css.parsers.CSSStyleSerializer.serialize(list[i]);
		if(i < list.length) serializedList += ",";
	}
	return serializedList;
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeGroup = function(group) {
	var serializedGroup = "";
	var _g1 = 0;
	var _g = group.length;
	while(_g1 < _g) {
		var i = _g1++;
		serializedGroup += cocktail.core.css.parsers.CSSStyleSerializer.serialize(group[i]);
		if(i < group.length) serializedGroup += " ";
	}
	return serializedGroup;
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeTransformFunction = function(transformFunction) {
	switch(transformFunction[1]) {
	case 0:
		var f = transformFunction[7];
		var e = transformFunction[6];
		var d = transformFunction[5];
		var c = transformFunction[4];
		var b = transformFunction[3];
		var a = transformFunction[2];
		return "matrix(" + (a == null?"null":"" + a) + "," + (b == null?"null":"" + b) + "," + (c == null?"null":"" + c) + "," + (d == null?"null":"" + d) + "," + (e == null?"null":"" + e) + "," + (f == null?"null":"" + f) + ")";
	case 1:
		var ty = transformFunction[3];
		var tx = transformFunction[2];
		return "translate(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeTranslation(tx) + "," + cocktail.core.css.parsers.CSSStyleSerializer.serializeTranslation(ty) + ")";
	case 2:
		var tx1 = transformFunction[2];
		return "translateX(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeTranslation(tx1) + ")";
	case 3:
		var ty1 = transformFunction[2];
		return "translateY(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeTranslation(ty1) + ")";
	case 10:
		var angleY = transformFunction[3];
		var angleX = transformFunction[2];
		return "skew(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(angleX) + "," + cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(angleY) + ")";
	case 8:
		var angleX1 = transformFunction[2];
		return "skewX(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(angleX1) + ")";
	case 9:
		var angleY1 = transformFunction[2];
		return "skewY(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(angleY1) + ")";
	case 7:
		var angle = transformFunction[2];
		return "rotate(" + cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle(angle) + ")";
	case 4:
		var sy = transformFunction[3];
		var sx = transformFunction[2];
		return "scale(" + (sx == null?"null":"" + sx) + "," + (sy == null?"null":"" + sy) + ")";
	case 5:
		var sx1 = transformFunction[2];
		return "scaleX(" + (sx1 == null?"null":"" + sx1) + ")";
	case 6:
		var sy1 = transformFunction[2];
		return "scaleY(" + (sy1 == null?"null":"" + sy1) + ")";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeTranslation = function(translation) {
	switch(translation[1]) {
	case 1:
		var value = translation[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeLength(value);
	case 2:
		var value1 = translation[2];
		return value1 + "%";
	case 0:
		var value2 = translation[2];
		if(value2 == null) return "null"; else return "" + value2;
		break;
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeColor = function(color) {
	switch(color[1]) {
	case 7:
		var value = color[2];
		return cocktail.core.css.parsers.CSSStyleSerializer.serializeColorKeyword(value);
	case 0:
		var blue = color[4];
		var green = color[3];
		var red = color[2];
		return "rgb(" + (red == null?"null":"" + red) + "," + (green == null?"null":"" + green) + "," + (blue == null?"null":"" + blue) + ")";
	case 1:
		var blue1 = color[4];
		var green1 = color[3];
		var red1 = color[2];
		return "rgb(" + (red1 == null?"null":"" + red1) + "%," + (green1 == null?"null":"" + green1) + "%," + (blue1 == null?"null":"" + blue1) + "%)";
	case 2:
		var alpha = color[5];
		var blue2 = color[4];
		var green2 = color[3];
		var red2 = color[2];
		return "rgba(" + (red2 == null?"null":"" + red2) + "," + (green2 == null?"null":"" + green2) + "," + (blue2 == null?"null":"" + blue2) + "," + (alpha == null?"null":"" + alpha) + ")";
	case 3:
		var alpha1 = color[5];
		var blue3 = color[4];
		var green3 = color[3];
		var red3 = color[2];
		return "rgba(" + (red3 == null?"null":"" + red3) + "%," + (green3 == null?"null":"" + green3) + "%," + (blue3 == null?"null":"" + blue3) + "%," + (alpha1 == null?"null":"" + alpha1) + "%)";
	case 8:
		return "transparent";
	case 5:
		var lightness = color[4];
		var saturation = color[3];
		var hue = color[2];
		return "hsl(" + (hue == null?"null":"" + hue) + "," + (saturation == null?"null":"" + saturation) + "," + (lightness == null?"null":"" + lightness) + ")";
	case 6:
		var alpha2 = color[5];
		var lightness1 = color[4];
		var saturation1 = color[3];
		var hue1 = color[2];
		return "hsl(" + (hue1 == null?"null":"" + hue1) + "," + (saturation1 == null?"null":"" + saturation1) + "," + (lightness1 == null?"null":"" + lightness1) + "," + (alpha2 == null?"null":"" + alpha2) + ")";
	case 4:
		var value1 = color[2];
		return "#" + value1;
	case 9:
		return "currentColor";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeColorKeyword = function(keyword) {
	switch(keyword[1]) {
	case 0:
		return "aliceblue";
	case 1:
		return "antiquewhite";
	case 2:
		return "aqua";
	case 3:
		return "aquamarine";
	case 4:
		return "azure";
	case 5:
		return "beige";
	case 6:
		return "bisque";
	case 9:
		return "blue";
	case 7:
		return "black";
	case 8:
		return "blanchedalmond";
	case 10:
		return "blueviolet";
	case 11:
		return "brown";
	case 12:
		return "burlywood";
	case 13:
		return "cadetblue";
	case 14:
		return "chartreuse";
	case 15:
		return "chocolate";
	case 16:
		return "coral";
	case 17:
		return "cornflowerblue";
	case 18:
		return "cornsilk";
	case 19:
		return "crimson";
	case 20:
		return "cyan";
	case 21:
		return "darkblue";
	case 22:
		return "darkcyan";
	case 23:
		return "darkgoldenrod";
	case 24:
		return "darkgray";
	case 25:
		return "darkgreen";
	case 26:
		return "darkgrey";
	case 27:
		return "darkkhaki";
	case 28:
		return "darkmagenta";
	case 29:
		return "darkolivegreen";
	case 30:
		return "darkorange";
	case 31:
		return "darkorchid";
	case 32:
		return "darkred";
	case 33:
		return "darksalmon";
	case 34:
		return "darkseagreen";
	case 35:
		return "darkslateblue";
	case 36:
		return "darkslategray";
	case 37:
		return "darkslategrey";
	case 38:
		return "darkturquoise";
	case 39:
		return "darkviolet";
	case 40:
		return "deeppink";
	case 41:
		return "deepskyblue";
	case 42:
		return "dimgray";
	case 43:
		return "dimgrey";
	case 44:
		return "dodgerblue";
	case 45:
		return "firebrick";
	case 46:
		return "floralwhite";
	case 47:
		return "forestgreen";
	case 48:
		return "fuchsia";
	case 49:
		return "gainsboro";
	case 50:
		return "ghostwhite";
	case 51:
		return "gold";
	case 52:
		return "goldenrod";
	case 53:
		return "gray";
	case 56:
		return "grey";
	case 55:
		return "greenyellow";
	case 57:
		return "honeydew";
	case 58:
		return "hotpink";
	case 60:
		return "indigo";
	case 61:
		return "ivory";
	case 59:
		return "indianred";
	case 62:
		return "khaki";
	case 63:
		return "lavender";
	case 64:
		return "lavenderblush";
	case 65:
		return "lawngreen";
	case 66:
		return "lemonchiffon";
	case 67:
		return "lightblue";
	case 68:
		return "lightcoral";
	case 69:
		return "lightcyan";
	case 70:
		return "lightgoldenrodyellow";
	case 71:
		return "lightgray";
	case 72:
		return "lightgreen";
	case 73:
		return "lightgrey";
	case 74:
		return "lightpink";
	case 75:
		return "lightsalmon";
	case 76:
		return "lightseagreen";
	case 77:
		return "lightskyblue";
	case 78:
		return "lightslategray";
	case 79:
		return "lightslategrey";
	case 80:
		return "lightsteelblue";
	case 81:
		return "lightyellow";
	case 82:
		return "lime";
	case 83:
		return "limegreen";
	case 84:
		return "linen";
	case 85:
		return "magenta";
	case 86:
		return "marron";
	case 87:
		return "mediumaquamarine";
	case 88:
		return "mediumblue";
	case 89:
		return "mediumorchid";
	case 90:
		return "mediumpurple";
	case 91:
		return "mediumseagreen";
	case 92:
		return "mediumslateblue";
	case 93:
		return "mediumspringgreen";
	case 94:
		return "mediumturquoise";
	case 95:
		return "mediumvioletred";
	case 96:
		return "midnightblue";
	case 97:
		return "mintcream";
	case 98:
		return "mistyrose";
	case 99:
		return "moccasin";
	case 100:
		return "navajowhite";
	case 102:
		return "oldlace";
	case 104:
		return "olivedrab";
	case 106:
		return "orangered";
	case 107:
		return "orchid";
	case 108:
		return "palegoldenrod";
	case 109:
		return "palegreen";
	case 110:
		return "paleturquoise";
	case 111:
		return "palevioletred";
	case 112:
		return "papayawhip";
	case 113:
		return "peachpuff";
	case 114:
		return "peru";
	case 115:
		return "pink";
	case 116:
		return "plum";
	case 117:
		return "powderblue";
	case 120:
		return "rosybrown";
	case 121:
		return "royalblue";
	case 122:
		return "saddlebrown";
	case 123:
		return "salmon";
	case 124:
		return "sandybrown";
	case 125:
		return "seagreen";
	case 126:
		return "seashell";
	case 127:
		return "sienna";
	case 128:
		return "silver";
	case 129:
		return "skyblue";
	case 130:
		return "slateblue";
	case 131:
		return "slategray";
	case 132:
		return "slategrey";
	case 133:
		return "snow";
	case 134:
		return "springgreen";
	case 135:
		return "steelblue";
	case 136:
		return "tan";
	case 138:
		return "thisle";
	case 139:
		return "tomato";
	case 140:
		return "turquoise";
	case 141:
		return "violet";
	case 142:
		return "wheat";
	case 143:
		return "white";
	case 144:
		return "whitesmoke";
	case 146:
		return "yellowgreen";
	case 119:
		return "red";
	case 118:
		return "purple";
	case 54:
		return "green";
	case 103:
		return "olive";
	case 145:
		return "yellow";
	case 101:
		return "navy";
	case 105:
		return "orange";
	case 137:
		return "teal";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeResolution = function(resolution) {
	switch(resolution[1]) {
	case 1:
		var value = resolution[2];
		return value + "dcpm";
	case 0:
		var value1 = resolution[2];
		return value1 + "dpi";
	case 2:
		var value2 = resolution[2];
		return value2 + "dppx";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeLength = function(length) {
	switch(length[1]) {
	case 0:
		var value = length[2];
		return value + "px";
	case 6:
		var value1 = length[2];
		return value1 + "em";
	case 5:
		var value2 = length[2];
		return value2 + "in";
	case 4:
		var value3 = length[2];
		return value3 + "pc";
	case 7:
		var value4 = length[2];
		return value4 + "ex";
	case 3:
		var value5 = length[2];
		return value5 + "pt";
	case 2:
		var value6 = length[2];
		return value6 + "mm";
	case 1:
		var value7 = length[2];
		return value7 + "cm";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeFrequency = function(frequency) {
	switch(frequency[1]) {
	case 0:
		var value = frequency[2];
		return value + "hz";
	case 1:
		var value1 = frequency[2];
		return value1 + "khz";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeAngle = function(angle) {
	switch(angle[1]) {
	case 0:
		var value = angle[2];
		return value + "deg";
	case 2:
		var value1 = angle[2];
		return value1 + "rad";
	case 3:
		var value2 = angle[2];
		return value2 + "turn";
	case 1:
		var value3 = angle[2];
		return value3 + "grad";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeTime = function(time) {
	switch(time[1]) {
	case 0:
		var value = time[2];
		return value + "s";
	case 1:
		var value1 = time[2];
		return value1 + "ms";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.serializeKeyword = function(keyword) {
	switch(keyword[1]) {
	case 0:
		return "normal";
	case 1:
		return "bold";
	case 2:
		return "bolder";
	case 3:
		return "lighter";
	case 5:
		return "oblique";
	case 4:
		return "italic";
	case 6:
		return "small-caps";
	case 7:
		return "pre";
	case 8:
		return "no-wrap";
	case 9:
		return "pre-wrap";
	case 10:
		return "pre-line";
	case 11:
		return "left";
	case 12:
		return "right";
	case 13:
		return "center";
	case 14:
		return "justify";
	case 15:
		return "capitalize";
	case 16:
		return "uppercase";
	case 17:
		return "lowercase";
	case 18:
		return "none";
	case 19:
		return "baseline";
	case 20:
		return "sub";
	case 21:
		return "super";
	case 22:
		return "top";
	case 23:
		return "text-top";
	case 24:
		return "middle";
	case 25:
		return "bottom";
	case 26:
		return "text-bottom";
	case 27:
		return "auto";
	case 28:
		return "block";
	case 29:
		return "inline-block";
	case 30:
		return "inline";
	case 31:
		return "both";
	case 32:
		return "static";
	case 33:
		return "relative";
	case 34:
		return "absolute";
	case 35:
		return "fixed";
	case 36:
		return "visible";
	case 37:
		return "hidden";
	case 38:
		return "scroll";
	case 39:
		return "border-box";
	case 40:
		return "padding-box";
	case 41:
		return "content-box";
	case 42:
		return "contain";
	case 43:
		return "cover";
	case 44:
		return "crosshair";
	case 45:
		return "default";
	case 46:
		return "pointer";
	case 47:
		return "text";
	case 48:
		return "all";
	case 49:
		return "ease";
	case 50:
		return "linear";
	case 51:
		return "ease-in";
	case 52:
		return "ease-out";
	case 53:
		return "ease-in-out";
	case 54:
		return "step-start";
	case 55:
		return "step-end";
	case 56:
		return "start";
	case 57:
		return "end";
	case 58:
		return "xx-small";
	case 59:
		return "x-small";
	case 60:
		return "small";
	case 64:
		return "xx-large";
	case 63:
		return "x-large";
	case 62:
		return "large";
	case 61:
		return "medium";
	case 65:
		return "larger";
	case 66:
		return "smaller";
	case 70:
		return "space";
	case 71:
		return "round";
	case 69:
		return "repeat-y";
	case 68:
		return "repeat-x";
	case 72:
		return "no-repeat";
	case 67:
		return "repeat";
	case 73:
		return "thin";
	case 74:
		return "thick";
	case 75:
		return "dotted";
	case 76:
		return "dashed";
	case 77:
		return "solid";
	case 78:
		return "double";
	case 79:
		return "groove";
	case 80:
		return "ridge";
	case 81:
		return "inset";
	case 82:
		return "outset";
	case 83:
		return "invert";
	case 84:
		return "underline";
	case 85:
		return "overline";
	case 86:
		return "line-through";
	case 87:
		return "blink";
	}
};
cocktail.core.css.parsers.CSSStyleSerializer.prototype = {
	__class__: cocktail.core.css.parsers.CSSStyleSerializer
};
cocktail.core.css.parsers.SelectorSerializer = function() {
};
$hxClasses["cocktail.core.css.parsers.SelectorSerializer"] = cocktail.core.css.parsers.SelectorSerializer;
cocktail.core.css.parsers.SelectorSerializer.__name__ = ["cocktail","core","css","parsers","SelectorSerializer"];
cocktail.core.css.parsers.SelectorSerializer.serialize = function(selector) {
	var serializedSelector = "";
	var _g1 = 0;
	var _g = selector.components.length;
	while(_g1 < _g) {
		var i = _g1++;
		var component = selector.components[i];
		switch(component[1]) {
		case 0:
			var value = component[2];
			serializedSelector += cocktail.core.css.parsers.SelectorSerializer.serializeSimpleSelectorSequence(value);
			break;
		case 1:
			var value1 = component[2];
			serializedSelector += cocktail.core.css.parsers.SelectorSerializer.serializeCombinator(value1);
			break;
		}
	}
	serializedSelector += cocktail.core.css.parsers.SelectorSerializer.serializePseudoElement(selector.pseudoElement);
	return serializedSelector;
};
cocktail.core.css.parsers.SelectorSerializer.serializePseudoElement = function(pseudoElement) {
	switch(pseudoElement[1]) {
	case 0:
		return "";
	case 2:
		return "::first-letter";
	case 1:
		return "::first-line";
	case 3:
		return "::before";
	case 4:
		return "::after";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeSimpleSelectorSequence = function(simpleSelectorSequence) {
	var serializedSimpleSelectorSequence = "";
	serializedSimpleSelectorSequence += cocktail.core.css.parsers.SelectorSerializer.serializeStartValue(simpleSelectorSequence.startValue);
	var _g1 = 0;
	var _g = simpleSelectorSequence.simpleSelectors.length;
	while(_g1 < _g) {
		var i = _g1++;
		var simpleSelector = simpleSelectorSequence.simpleSelectors[i];
		serializedSimpleSelectorSequence += cocktail.core.css.parsers.SelectorSerializer.serializeSimpleSelector(simpleSelector);
	}
	return serializedSimpleSelectorSequence;
};
cocktail.core.css.parsers.SelectorSerializer.serializeCombinator = function(combinator) {
	switch(combinator[1]) {
	case 0:
		return " ";
	case 1:
		return " > ";
	case 2:
		return " + ";
	case 3:
		return " ~ ";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeStartValue = function(selectorStartValue) {
	switch(selectorStartValue[1]) {
	case 0:
		return "*";
	case 1:
		var value = selectorStartValue[2];
		return value;
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeSimpleSelector = function(simpleSelector) {
	switch(simpleSelector[1]) {
	case 3:
		var value = simpleSelector[2];
		return "#" + value;
	case 2:
		var value1 = simpleSelector[2];
		return "." + value1;
	case 0:
		var value2 = simpleSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeAttributeSelector(value2);
	case 1:
		var value3 = simpleSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializePseudoClassSelector(value3);
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeAttributeSelector = function(attributeSelector) {
	switch(attributeSelector[1]) {
	case 0:
		var value = attributeSelector[2];
		return "[" + value + "]";
	case 1:
		var value1 = attributeSelector[3];
		var name = attributeSelector[2];
		return "[" + name + "=\"" + value1 + "\"]";
	case 2:
		var value2 = attributeSelector[3];
		var name1 = attributeSelector[2];
		return "[" + name1 + "~=\"" + value2 + "\"]";
	case 3:
		var value3 = attributeSelector[3];
		var name2 = attributeSelector[2];
		return "[" + name2 + "^=\"" + value3 + "\"]";
	case 4:
		var value4 = attributeSelector[3];
		var name3 = attributeSelector[2];
		return "[" + name3 + "$=\"" + value4 + "\"]";
	case 5:
		var value5 = attributeSelector[3];
		var name4 = attributeSelector[2];
		return "[" + name4 + "*=\"" + value5 + "\"]";
	case 6:
		var value6 = attributeSelector[3];
		var name5 = attributeSelector[2];
		return "[" + name5 + "|=\"" + value6 + "\"]";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializePseudoClassSelector = function(pseudoClassSelector) {
	switch(pseudoClassSelector[1]) {
	case 0:
		var value = pseudoClassSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeStructuralPseudoClassSelector(value);
	case 1:
		var value1 = pseudoClassSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeLinkPseudoClassSelector(value1);
	case 2:
		return ":target";
	case 3:
		var value2 = pseudoClassSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeLangPseudoClassSelector(value2);
	case 4:
		var value3 = pseudoClassSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeUserActionPseudoClassSelector(value3);
	case 5:
		var value4 = pseudoClassSelector[2];
		return cocktail.core.css.parsers.SelectorSerializer.serializeUIElementStatePseudoClass(value4);
	case 6:
		var value5 = pseudoClassSelector[2];
		return ":not(" + cocktail.core.css.parsers.SelectorSerializer.serializeSimpleSelectorSequence(value5) + ")";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeUIElementStatePseudoClass = function(uiElementStateSelector) {
	switch(uiElementStateSelector[1]) {
	case 0:
		return ":enabled";
	case 1:
		return ":disabled";
	case 2:
		return ":checked";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeLangPseudoClassSelector = function(langs) {
	var serializedLangSelector = ":lang(";
	var _g1 = 0;
	var _g = langs.length;
	while(_g1 < _g) {
		var i = _g1++;
		serializedLangSelector += langs[i];
		if(i < langs.length) serializedLangSelector += "-";
	}
	serializedLangSelector += ")";
	return serializedLangSelector;
};
cocktail.core.css.parsers.SelectorSerializer.serializeLinkPseudoClassSelector = function(linkPseudoClassSelector) {
	switch(linkPseudoClassSelector[1]) {
	case 1:
		return ":visited";
	case 0:
		return ":link";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeUserActionPseudoClassSelector = function(userActionPseudoClassSelector) {
	switch(userActionPseudoClassSelector[1]) {
	case 0:
		return ":active";
	case 1:
		return ":hover";
	case 2:
		return ":focus";
	}
};
cocktail.core.css.parsers.SelectorSerializer.serializeStructuralPseudoClassSelector = function(structuralpseudoClassSelector) {
	switch(structuralpseudoClassSelector[1]) {
	case 0:
		return ":root";
	case 1:
		return ":first-child";
	case 2:
		return ":last-child";
	case 3:
		return ":first-of-type";
	case 4:
		return ":last-of-type";
	case 5:
		return ":only-child";
	case 6:
		return ":only-of-type";
	case 7:
		return ":empty";
	default:
		return "";
	}
};
cocktail.core.css.parsers.SelectorSerializer.prototype = {
	__class__: cocktail.core.css.parsers.SelectorSerializer
};
cocktail.core.event.EventCallback = function() {
	cocktail.core.event.EventTarget.call(this);
};
$hxClasses["cocktail.core.event.EventCallback"] = cocktail.core.event.EventCallback;
cocktail.core.event.EventCallback.__name__ = ["cocktail","core","event","EventCallback"];
cocktail.core.event.EventCallback.__super__ = cocktail.core.event.EventTarget;
cocktail.core.event.EventCallback.prototype = $extend(cocktail.core.event.EventTarget.prototype,{
	updateCallbackListener: function(eventType,newListener,oldListener) {
		if(oldListener != null) this.removeEventListener(eventType,oldListener);
		if(newListener != null) this.addEventListener(eventType,newListener);
	}
	,set_onclick: function(value) {
		this.updateCallbackListener("click",value,this.onclick);
		return this.onclick = value;
	}
	,set_ondblclick: function(value) {
		this.updateCallbackListener("dblclick",value,this.ondblclick);
		return this.ondblclick = value;
	}
	,set_onmousedown: function(value) {
		this.updateCallbackListener("mousedown",value,this.onmousedown);
		return this.onmousedown = value;
	}
	,set_onmouseup: function(value) {
		this.updateCallbackListener("mouseup",value,this.onmouseup);
		return this.onmouseup = value;
	}
	,set_onmouseover: function(value) {
		this.updateCallbackListener("mouseover",value,this.onmouseover);
		return this.onmouseover = value;
	}
	,set_onmouseout: function(value) {
		this.updateCallbackListener("mouseout",value,this.onmouseout);
		return this.onmouseout = value;
	}
	,set_onmousemove: function(value) {
		this.updateCallbackListener("mousemove",value,this.onmousemove);
		return this.onmousemove = value;
	}
	,set_onmousewheel: function(value) {
		this.updateCallbackListener("wheel",value,this.onmousewheel);
		return this.onmousewheel = value;
	}
	,set_onkeydown: function(value) {
		this.updateCallbackListener("keydown",value,this.onkeydown);
		return this.onkeydown = value;
	}
	,set_onkeyup: function(value) {
		this.updateCallbackListener("keyup",value,this.onkeyup);
		return this.onkeyup = value;
	}
	,set_onfocus: function(value) {
		this.updateCallbackListener("focus",value,this.onfocus);
		return this.onfocus = value;
	}
	,set_onblur: function(value) {
		this.updateCallbackListener("blur",value,this.onblur);
		return this.onblur = value;
	}
	,set_onresize: function(value) {
		this.updateCallbackListener("resize",value,this.onresize);
		return this.onresize = value;
	}
	,set_onfullscreenchange: function(value) {
		this.updateCallbackListener("fullscreenchange",value,this.onfullscreenchange);
		return this.onfullscreenchange = value;
	}
	,set_onscroll: function(value) {
		this.updateCallbackListener("scroll",value,this.onscroll);
		return this.onscroll = value;
	}
	,set_onload: function(value) {
		this.updateCallbackListener("load",value,this.onload);
		return this.onload = value;
	}
	,set_onerror: function(value) {
		this.updateCallbackListener("error",value,this.onerror);
		return this.onerror = value;
	}
	,set_onchange: function(value) {
		this.updateCallbackListener("change",value,this.onchange);
		return this.onchange = value;
	}
	,set_oninput: function(value) {
		this.updateCallbackListener("input",value,this.oninput);
		return this.oninput = value;
	}
	,set_onreset: function(value) {
		this.updateCallbackListener("reset",value,this.onreset);
		return this.onreset = value;
	}
	,set_onsubmit: function(value) {
		this.updateCallbackListener("submit",value,this.onsubmit);
		return this.onsubmit = value;
	}
	,set_onloadstart: function(value) {
		this.updateCallbackListener("loadstart",value,this.onloadstart);
		return this.onloadstart = value;
	}
	,set_onprogress: function(value) {
		this.updateCallbackListener("progress",value,this.onprogress);
		return this.onprogress = value;
	}
	,set_onsuspend: function(value) {
		this.updateCallbackListener("suspend",value,this.onsuspend);
		return this.onsuspend = value;
	}
	,set_onemptied: function(value) {
		this.updateCallbackListener("emptied",value,this.onemptied);
		return this.onemptied = value;
	}
	,set_onstalled: function(value) {
		this.updateCallbackListener("stalled",value,this.onstalled);
		return this.onstalled = value;
	}
	,set_onloadedmetadata: function(value) {
		this.updateCallbackListener("loadedmetadata",value,this.onloadedmetadata);
		return this.onloadedmetadata = value;
	}
	,set_onloadeddata: function(value) {
		this.updateCallbackListener("loadeddata",value,this.onloadeddata);
		return this.onloadeddata = value;
	}
	,set_oncanplay: function(value) {
		this.updateCallbackListener("canplay",value,this.oncanplay);
		return this.oncanplay = value;
	}
	,set_oncanplaythrough: function(value) {
		this.updateCallbackListener("canplaythrough",value,this.oncanplaythrough);
		return this.oncanplaythrough = value;
	}
	,set_onplaying: function(value) {
		this.updateCallbackListener("playing",value,this.onplaying);
		return this.onplaying = value;
	}
	,set_onwaiting: function(value) {
		this.updateCallbackListener("waiting",value,this.onwaiting);
		return this.onwaiting = value;
	}
	,set_onseeking: function(value) {
		this.updateCallbackListener("seeking",value,this.onseeking);
		return this.set_onwaiting(value);
	}
	,set_onseeked: function(value) {
		this.updateCallbackListener("seeked",value,this.onseeked);
		return this.onseeked = value;
	}
	,set_onended: function(value) {
		this.updateCallbackListener("ended",value,this.onended);
		return this.onended = value;
	}
	,set_ondurationchange: function(value) {
		this.updateCallbackListener("durationchange",value,this.ondurationchange);
		return this.ondurationchange = value;
	}
	,set_ontimeupdate: function(value) {
		this.updateCallbackListener("timeupdate",value,this.ontimeupdate);
		return this.ontimeupdate = value;
	}
	,set_onplay: function(value) {
		this.updateCallbackListener("play",value,this.onplay);
		return this.onplay = value;
	}
	,set_onpause: function(value) {
		this.updateCallbackListener("pause",value,this.onpause);
		return this.onpause = value;
	}
	,set_onvolumechange: function(value) {
		this.updateCallbackListener("volumechange",value,this.onvolumechange);
		return this.onvolumechange = value;
	}
	,set_ontransitionend: function(value) {
		this.updateCallbackListener("transitionend",value,this.ontransitionend);
		return this.ontransitionend = value;
	}
	,set_onpopstate: function(value) {
		this.updateCallbackListener("popstate",value,this.onpopstate);
		return this.onpopstate = value;
	}
	,__class__: cocktail.core.event.EventCallback
	,__properties__: {set_onpopstate:"set_onpopstate",set_ontransitionend:"set_ontransitionend",set_onvolumechange:"set_onvolumechange",set_onpause:"set_onpause",set_onplay:"set_onplay",set_ontimeupdate:"set_ontimeupdate",set_ondurationchange:"set_ondurationchange",set_onended:"set_onended",set_onseeked:"set_onseeked",set_onseeking:"set_onseeking",set_onwaiting:"set_onwaiting",set_onplaying:"set_onplaying",set_oncanplaythrough:"set_oncanplaythrough",set_oncanplay:"set_oncanplay",set_onloadeddata:"set_onloadeddata",set_onloadedmetadata:"set_onloadedmetadata",set_onstalled:"set_onstalled",set_onemptied:"set_onemptied",set_onsuspend:"set_onsuspend",set_onprogress:"set_onprogress",set_onloadstart:"set_onloadstart",set_onsubmit:"set_onsubmit",set_onreset:"set_onreset",set_oninput:"set_oninput",set_onchange:"set_onchange",set_onerror:"set_onerror",set_onload:"set_onload",set_onscroll:"set_onscroll",set_onfullscreenchange:"set_onfullscreenchange",set_onresize:"set_onresize",set_onblur:"set_onblur",set_onfocus:"set_onfocus",set_onkeyup:"set_onkeyup",set_onkeydown:"set_onkeydown",set_onmousewheel:"set_onmousewheel",set_onmousemove:"set_onmousemove",set_onmouseout:"set_onmouseout",set_onmouseover:"set_onmouseover",set_onmouseup:"set_onmouseup",set_onmousedown:"set_onmousedown",set_ondblclick:"set_ondblclick",set_onclick:"set_onclick"}
});
cocktail.core.dom = {};
cocktail.core.dom.INode = function() { };
$hxClasses["cocktail.core.dom.INode"] = cocktail.core.dom.INode;
cocktail.core.dom.INode.__name__ = ["cocktail","core","dom","INode"];
cocktail.core.dom.INode.prototype = {
	__class__: cocktail.core.dom.INode
};
cocktail.core.dom.Node = function() {
	cocktail.core.event.EventCallback.call(this);
	this.initChildNodes();
};
$hxClasses["cocktail.core.dom.Node"] = cocktail.core.dom.Node;
cocktail.core.dom.Node.__name__ = ["cocktail","core","dom","Node"];
cocktail.core.dom.Node.__interfaces__ = [cocktail.core.dom.INode];
cocktail.core.dom.Node.__super__ = cocktail.core.event.EventCallback;
cocktail.core.dom.Node.prototype = $extend(cocktail.core.event.EventCallback.prototype,{
	initChildNodes: function() {
		this.childNodes = new Array();
	}
	,removeChild: function(oldChild) {
		oldChild.parentNode = null;
		HxOverrides.remove(this.childNodes,oldChild);
		return oldChild;
	}
	,appendChild: function(newChild) {
		this.removeFromParentIfNecessary(newChild);
		newChild.parentNode = this;
		this.childNodes.push(newChild);
		return newChild;
	}
	,insertBefore: function(newChild,refChild) {
		if(refChild == null) this.appendChild(newChild); else {
			var length = this.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(this.childNodes[i] == refChild) {
					this.childNodes.splice(i,0,newChild);
					this.removeFromParentIfNecessary(newChild);
					newChild.parentNode = this;
					return newChild;
				}
			}
			throw 8;
		}
		return newChild;
	}
	,isSameNode: function(other) {
		return other == this;
	}
	,replaceChild: function(newChild,oldChild) {
		var length = this.childNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(this.childNodes[i] == oldChild) {
				this.removeChild(oldChild);
				this.appendChild(newChild);
			}
		}
		return oldChild;
	}
	,hasChildNodes: function() {
		return this.childNodes.length > 0;
	}
	,cloneNode: function(deep) {
		var clonedNode = this.doCloneNode();
		if(deep == true) {
			var childLength = this.childNodes.length;
			var _g = 0;
			while(_g < childLength) {
				var i = _g++;
				clonedNode.appendChild(this.childNodes[i].cloneNode(deep));
			}
		}
		return clonedNode;
	}
	,hasAttributes: function() {
		return false;
	}
	,getTargetAncestors: function() {
		var parent = this.parentNode;
		var targetAncestors = cocktail.core.event.EventCallback.prototype.getTargetAncestors.call(this);
		while(parent != null) {
			targetAncestors.push(parent);
			parent = parent.parentNode;
		}
		return targetAncestors;
	}
	,doCloneNode: function() {
		return new cocktail.core.dom.Node();
	}
	,removeFromParentIfNecessary: function(newChild) {
		if(newChild.parentNode != null) {
			var parentNode = newChild.parentNode;
			parentNode.removeChild(newChild);
		}
	}
	,get_firstChild: function() {
		if(this.hasChildNodes() == true) return this.childNodes[0]; else return null;
	}
	,get_lastChild: function() {
		if(this.hasChildNodes() == true) return this.childNodes[this.childNodes.length - 1]; else return null;
	}
	,get_nextSibling: function() {
		if(this.parentNode == null) return null;
		var thisAsNodeClass = this;
		if(this.parentNode.get_lastChild() != thisAsNodeClass) {
			var parentChildNodes = this.parentNode.childNodes;
			var length = parentChildNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(parentChildNodes[i] == thisAsNodeClass) return parentChildNodes[i + 1];
			}
		}
		return null;
	}
	,get_previousSibling: function() {
		if(this.parentNode == null) return null;
		var thisAsNodeClass = this;
		if(this.parentNode.get_firstChild() != thisAsNodeClass) {
			var length = this.parentNode.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(this.parentNode.childNodes[i] == thisAsNodeClass) return this.parentNode.childNodes[i - 1];
			}
		}
		return null;
	}
	,get_nodeType: function() {
		return -1;
	}
	,get_nodeValue: function() {
		return null;
	}
	,set_nodeValue: function(value) {
		if(value != null) throw 7;
		return value;
	}
	,set_ownerDocument: function(value) {
		return this.ownerDocument = value;
	}
	,get_nodeName: function() {
		return null;
	}
	,get_textContent: function() {
		return null;
	}
	,__class__: cocktail.core.dom.Node
	,__properties__: $extend(cocktail.core.event.EventCallback.prototype.__properties__,{get_textContent:"get_textContent",set_ownerDocument:"set_ownerDocument",get_nodeName:"get_nodeName",set_nodeValue:"set_nodeValue",get_nodeValue:"get_nodeValue",get_nodeType:"get_nodeType",get_previousSibling:"get_previousSibling",get_nextSibling:"get_nextSibling",get_lastChild:"get_lastChild",get_firstChild:"get_firstChild"})
});
cocktail.core.dom.Attr = function(name) {
	this.name = name;
	this.specified = false;
	cocktail.core.dom.Node.call(this);
};
$hxClasses["cocktail.core.dom.Attr"] = cocktail.core.dom.Attr;
cocktail.core.dom.Attr.__name__ = ["cocktail","core","dom","Attr"];
cocktail.core.dom.Attr.__super__ = cocktail.core.dom.Node;
cocktail.core.dom.Attr.prototype = $extend(cocktail.core.dom.Node.prototype,{
	initChildNodes: function() {
	}
	,doCloneNode: function() {
		var clonedAttr = new cocktail.core.dom.Attr(this.name);
		clonedAttr.specified = this.specified;
		clonedAttr.isId = this.isId;
		clonedAttr.set_value(this.get_value());
		return clonedAttr;
	}
	,get_nodeName: function() {
		return this.name;
	}
	,get_nodeType: function() {
		return 2;
	}
	,get_nodeValue: function() {
		return this.get_value();
	}
	,set_nodeValue: function(value) {
		return this.set_value(value);
	}
	,get_value: function() {
		if(this.value == null) return "";
		return this.value;
	}
	,set_value: function(value) {
		this.specified = true;
		return this.value = value;
	}
	,__class__: cocktail.core.dom.Attr
	,__properties__: $extend(cocktail.core.dom.Node.prototype.__properties__,{set_value:"set_value",get_value:"get_value"})
});
cocktail.core.dom.Element = function(tagName) {
	this.tagName = tagName;
	this.initAttributes();
	cocktail.core.dom.Node.call(this);
};
$hxClasses["cocktail.core.dom.Element"] = cocktail.core.dom.Element;
cocktail.core.dom.Element.__name__ = ["cocktail","core","dom","Element"];
cocktail.core.dom.Element.__super__ = cocktail.core.dom.Node;
cocktail.core.dom.Element.prototype = $extend(cocktail.core.dom.Node.prototype,{
	initAttributes: function() {
		this.attributes = new cocktail.core.dom.NamedNodeMap();
	}
	,getAttribute: function(name) {
		var attribute = this.getAttributeNode(name);
		if(attribute != null) return attribute.get_value(); else return null;
	}
	,setAttribute: function(name,value) {
		var attribute = this.attributes.getNamedItem(name);
		if(attribute == null) {
			attribute = new cocktail.core.dom.Attr(name);
			this.attributes.setNamedItem(attribute);
			attribute.ownerElement = this;
		}
		attribute.set_value(value);
	}
	,getAttributeNode: function(name) {
		var attribute = this.attributes.getNamedItem(name);
		if(attribute != null) return attribute;
		return null;
	}
	,setAttributeNode: function(newAttr) {
		newAttr.ownerElement = this;
		return this.attributes.setNamedItem(newAttr);
	}
	,removeAttribute: function(name) {
		var removedAttribute = this.attributes.removeNamedItem(name);
		if(removedAttribute != null) removedAttribute.ownerElement = null;
	}
	,setIdAttribute: function(name,isId) {
		var idAttribute = this.attributes.getNamedItem(name);
		if(idAttribute == null) {
			idAttribute = new cocktail.core.dom.Attr(name);
			this.attributes.setNamedItem(idAttribute);
			idAttribute.ownerElement = this;
		}
		idAttribute.isId = isId;
	}
	,setIdAttributeNode: function(idAttr,isId) {
		idAttr.isId = isId;
		this.attributes.setNamedItem(idAttr);
	}
	,hasAttribute: function(name) {
		return this.attributes.getNamedItem(name) != null;
	}
	,getElementsByTagName: function(tagName) {
		var elements = new Array();
		this.doGetElementsByTagName(this,tagName,elements);
		return elements;
	}
	,getElementsByClassName: function(className) {
		var elements = new Array();
		this.doGetElementsByClassName(this,className,elements);
		return elements;
	}
	,doCloneNode: function() {
		var clonedElement = new cocktail.core.dom.Element(this.tagName);
		var length = this.attributes.get_length();
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var clonedAttr = this.attributes.item(i).cloneNode(false);
			clonedElement.setAttributeNode(clonedAttr);
		}
		return clonedElement;
	}
	,doGetElementsByTagName: function(node,tagName,elements) {
		if(node.hasChildNodes() == true) {
			var length = node.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				var childNode = node.childNodes[i];
				if(childNode.get_nodeName() == tagName) elements.push(childNode); else if(tagName == "*" && childNode.get_nodeType() == 1) elements.push(childNode);
				this.doGetElementsByTagName(childNode,tagName,elements);
			}
		}
	}
	,doGetElementsByClassName: function(node,className,elements) {
		if(node.hasChildNodes() == true) {
			var length = node.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				var childNode = node.childNodes[i];
				var _g1 = childNode.get_nodeType();
				switch(_g1) {
				case 1:
					var classList = childNode.classList;
					if(classList != null) {
						var foundFlag = false;
						var classListLength = classList.length;
						var _g2 = 0;
						while(_g2 < classListLength) {
							var j = _g2++;
							if(classList[j] == className && foundFlag == false) {
								elements.push(childNode);
								foundFlag = true;
							}
						}
					}
					break;
				}
				this.doGetElementsByClassName(childNode,className,elements);
			}
		}
	}
	,doGetTextContent: function(node) {
		var text = "";
		if(node.hasChildNodes() == true) {
			var length = node.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				var childNode = node.childNodes[i];
				var _g1 = childNode.get_nodeType();
				switch(_g1) {
				case 3:
					var textNode = childNode;
					text += textNode.data;
					break;
				}
				text += this.doGetTextContent(childNode);
			}
		}
		return text;
	}
	,hasAttributes: function() {
		return this.attributes.get_length() > 0;
	}
	,get_nodeName: function() {
		return this.tagName;
	}
	,get_nodeType: function() {
		return 1;
	}
	,get_textContent: function() {
		return this.doGetTextContent(this);
	}
	,get_firstElementChild: function() {
		if(this.hasChildNodes() == false) return null;
		if(this.get_firstChild().get_nodeType() == 1) return this.get_firstChild(); else {
			var length = this.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(this.childNodes[i].get_nodeType() == 1) return this.childNodes[i];
			}
		}
		return null;
	}
	,get_lastElementChild: function() {
		if(this.hasChildNodes() == false) return null;
		if(this.get_lastChild().get_nodeType() == 1) return this.get_lastChild(); else {
			var length = this.childNodes.length;
			var _g = length;
			while(_g < 0) {
				var i = _g++;
				if(this.childNodes[i].get_nodeType() == 1) return this.childNodes[i];
			}
		}
		return null;
	}
	,get_nextElementSibling: function() {
		if(this.get_nextSibling() == null) return null;
		var nextElementSibling = this.get_nextSibling();
		while(nextElementSibling.get_nodeType() != 1) {
			nextElementSibling = nextElementSibling.get_nextSibling();
			if(nextElementSibling == null) return null;
		}
		return nextElementSibling;
	}
	,get_previousElementSibling: function() {
		if(this.get_previousSibling() == null) return null;
		var previousElementSibling = this.get_previousSibling();
		while(previousElementSibling.get_nodeType() != 1) {
			previousElementSibling = previousElementSibling.get_previousSibling();
			if(previousElementSibling == null) return null;
		}
		return previousElementSibling;
	}
	,get_childElementCount: function() {
		var childElementCount = 0;
		var length = this.childNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(this.childNodes[i].get_nodeType() == 1) childElementCount++;
		}
		return childElementCount;
	}
	,__class__: cocktail.core.dom.Element
	,__properties__: $extend(cocktail.core.dom.Node.prototype.__properties__,{get_childElementCount:"get_childElementCount",get_nextElementSibling:"get_nextElementSibling",get_previousElementSibling:"get_previousElementSibling",get_lastElementChild:"get_lastElementChild",get_firstElementChild:"get_firstElementChild"})
});
cocktail.core.html = {};
cocktail.core.html.HTMLElement = function(tagName) {
	cocktail.core.dom.Element.call(this,tagName);
	this.attachedToDOM = false;
	this._isInitialised = false;
	this._needsCascading = false;
	this._needsStyleDeclarationUpdate = false;
	this._shouldCascadeAllProperties = true;
	this._needsElementRendererUpdate = true;
	this._pendingChangedProperties = new Array();
	this._initialStyleDeclaration = cocktail.core.css.InitialStyleDeclaration.getInstance();
};
$hxClasses["cocktail.core.html.HTMLElement"] = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLElement.__name__ = ["cocktail","core","html","HTMLElement"];
cocktail.core.html.HTMLElement.__super__ = cocktail.core.dom.Element;
cocktail.core.html.HTMLElement.prototype = $extend(cocktail.core.dom.Element.prototype,{
	dispose: function() {
		this._ownerHTMLDocument = null;
		this.set_ownerDocument(null);
		this._initialStyleDeclaration = null;
		this._pendingChangedProperties = null;
		this.coreStyle.dispose();
		this.coreStyle = null;
		this.style.dispose();
		this.style = null;
	}
	,init: function() {
		this.initCoreStyle();
		this.initStyle();
	}
	,initCoreStyle: function() {
		this.coreStyle = new cocktail.core.css.CoreStyle(this);
	}
	,initStyle: function() {
		this.style = new cocktail.core.css.CSSStyleDeclaration(null,$bind(this,this.onInlineStyleChange));
	}
	,set_ownerDocument: function(value) {
		cocktail.core.dom.Element.prototype.set_ownerDocument.call(this,value);
		if(this._isInitialised == false) {
			this.init();
			this._isInitialised = true;
		}
		this._ownerHTMLDocument = value;
		return value;
	}
	,appendChild: function(newChild) {
		cocktail.core.dom.Element.prototype.appendChild.call(this,newChild);
		newChild.appended();
		this.invalidateCascade();
		return newChild;
	}
	,removeChild: function(oldChild) {
		cocktail.core.dom.Element.prototype.removeChild.call(this,oldChild);
		oldChild.removed();
		return oldChild;
	}
	,insertBefore: function(newChild,refChild) {
		cocktail.core.dom.Element.prototype.insertBefore.call(this,newChild,refChild);
		if(refChild != null) {
			newChild.appended();
			this.invalidateCascade();
		}
		return newChild;
	}
	,getElementsByTagName: function(tagName) {
		return cocktail.core.dom.Element.prototype.getElementsByTagName.call(this,tagName.toUpperCase());
	}
	,setAttribute: function(name,value) {
		if(name == "style") {
			this.style.set_cssText(value);
			this.invalidateCascade();
		} else if(name == "class") this.set_className(value); else {
			cocktail.core.dom.Element.prototype.setAttribute.call(this,name,value);
			this.invalidateStyleDeclaration(true);
		}
	}
	,getAttribute: function(name) {
		if(name == "style") return this.style.get_cssText(); else return cocktail.core.dom.Element.prototype.getAttribute.call(this,name);
	}
	,getTargetAncestors: function() {
		var targetAncestors = cocktail.core.dom.Element.prototype.getTargetAncestors.call(this);
		targetAncestors.push(this._ownerHTMLDocument);
		targetAncestors.push(this._ownerHTMLDocument.window);
		return targetAncestors;
	}
	,executeDefaultActionIfNeeded: function(defaultPrevented,event) {
		if(defaultPrevented == false) {
			var _g = event.type;
			switch(_g) {
			case "mousedown":
				this.focus();
				break;
			}
		}
	}
	,reset: function() {
	}
	,invalidate: function() {
		if(this.elementRenderer != null) this.elementRenderer.invalidate();
	}
	,invalidateStyle: function(styleIndex) {
		if(this.elementRenderer != null) this.elementRenderer.invalidateStyle(styleIndex);
	}
	,invalidateElementRenderer: function() {
		this._needsElementRendererUpdate = true;
		if(this._ownerHTMLDocument != null) this._ownerHTMLDocument.invalidationManager.invalidateRenderingTree();
	}
	,invalidateLayerRenderer: function() {
		if(this.elementRenderer != null) this.elementRenderer.invalidateLayerRenderer();
	}
	,invalidateStyleDeclaration: function(recursive) {
		this._needsStyleDeclarationUpdate = true;
		if(recursive == true) {
			if(this.get_nodeType() == 1) {
				var length = this.childNodes.length;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					this.childNodes[i].invalidateStyleDeclaration(true);
				}
			}
		}
		this.invalidateCascade();
	}
	,invalidateCascade: function() {
		this._needsCascading = true;
		if(this._ownerHTMLDocument != null) this._ownerHTMLDocument.invalidationManager.invalidateCascade();
	}
	,invalidateRendering: function() {
		if(this.elementRenderer != null) this._ownerHTMLDocument.invalidationManager.invalidateRendering();
	}
	,updateDocumentImmediately: function() {
		this._ownerHTMLDocument.invalidationManager.updateDocumentImmediately();
	}
	,appended: function() {
		if(this.attachedToDOM == false) {
			if(this.isAttachedToDOM() == true) {
				this.attachedToDOM = true;
				this.addedToDOM();
				var child = this.get_firstChild();
				while(child != null) {
					child.appended();
					child = child.get_nextSibling();
				}
			}
		}
	}
	,removed: function() {
		this.attachedToDOM = false;
		this.removedFromDOM();
		var child = this.get_firstChild();
		while(child != null) {
			child.removed();
			child = child.get_nextSibling();
		}
	}
	,addedToDOM: function() {
		var _g = this.get_nodeType();
		switch(_g) {
		case 1:case 3:
			this.invalidateElementRenderer();
			break;
		}
		this.invalidateStyleDeclaration(true);
		this.invalidateCascade();
	}
	,removedFromDOM: function() {
		var _g = this.get_nodeType();
		switch(_g) {
		case 1:case 3:
			this.detach(true);
			this.invalidateElementRenderer();
			break;
		}
	}
	,isAttachedToDOM: function() {
		var parent = this.parentNode;
		while(parent != null) {
			if(parent.get_nodeName() == "HTML") return true;
			parent = parent.parentNode;
		}
		return false;
	}
	,updateElementRenderer: function() {
		if(this._needsElementRendererUpdate == true) {
			this._needsElementRendererUpdate = false;
			if(this.isRendered() == false) {
				if(this.elementRenderer != null) {
					this.detach(true);
					return;
				}
			} else if(this.elementRenderer == null) {
				this.attach(true);
				return;
			} else {
				this.detach(false);
				this.attach(false);
			}
		}
		if(this.get_nodeType() == 1) {
			var length = this.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				this.childNodes[i].updateElementRenderer();
			}
		}
	}
	,attach: function(recursive) {
		if(this.isParentRendered() == false) return;
		if(this.isRendered() == true) this.createElementRenderer();
		if(this.elementRenderer != null) {
			this.attachToParentElementRenderer();
			if(recursive == true) {
				if(this.get_nodeType() == 1) {
					var length = this.childNodes.length;
					var _g = 0;
					while(_g < length) {
						var i = _g++;
						this.childNodes[i].attach(true);
					}
				}
			}
		}
		this._needsElementRendererUpdate = false;
	}
	,detach: function(recursive) {
		if(this.elementRenderer != null) {
			if(recursive == true) {
				if(this.get_nodeType() == 1) {
					var length = this.childNodes.length;
					var _g = 0;
					while(_g < length) {
						var i = _g++;
						this.childNodes[i].detach(true);
					}
				}
			}
			this.detachFromParentElementRenderer();
			this.elementRenderer = null;
		}
	}
	,cascade: function(cascadeManager,programmaticChange) {
		if(this._needsCascading == true || cascadeManager.hasPropertiesToCascade == true) {
			this.cascadeSelf(cascadeManager,programmaticChange);
			this._needsCascading = false;
			if(cascadeManager.hasDisplay == true || cascadeManager.hasFloat == true || cascadeManager.hasOverflowX == true || cascadeManager.hasOverflowY == true || cascadeManager.hasPosition == true) {
				this.detach(true);
				this.invalidateElementRenderer();
			} else if(cascadeManager.hasTransform == true || cascadeManager.hasZIndex == true || cascadeManager.hasOpacity == true) this.invalidateLayerRenderer();
		}
		var childNodes = this.childNodes;
		var childLength = childNodes.length;
		var _g = 0;
		while(_g < childLength) {
			var i = _g++;
			var childNode = childNodes[i];
			childNode.cascade(cascadeManager,programmaticChange);
		}
	}
	,getStyleDeclaration: function() {
		this._shouldCascadeAllProperties = true;
		this.styleManagerCSSDeclaration = this._ownerHTMLDocument.getStyleDeclaration(this);
	}
	,cascadeSelf: function(cascadeManager,programmaticChange) {
		if(this.parentNode != null) {
			if(this.parentNode.styleManagerCSSDeclaration != null) {
				if(this._needsStyleDeclarationUpdate == true || this.styleManagerCSSDeclaration == null) {
					this.getStyleDeclaration();
					this._needsStyleDeclarationUpdate = false;
				}
				var parentStyleDeclaration = this.parentNode.coreStyle.computedValues;
				var parentFontMetrics = this.parentNode.coreStyle.fontMetrics;
				if(this._shouldCascadeAllProperties == true) cascadeManager.shouldCascadeAll(); else {
					var length = this._pendingChangedProperties.length;
					var _g = 0;
					while(_g < length) {
						var i = _g++;
						cascadeManager.addPropertyToCascade(this._pendingChangedProperties[i]);
					}
				}
				this.coreStyle.cascade(cascadeManager,this._initialStyleDeclaration,this.styleManagerCSSDeclaration,this.style,parentStyleDeclaration,parentFontMetrics.fontSize,parentFontMetrics.xHeight,programmaticChange);
			}
		} else {
			if(this._needsStyleDeclarationUpdate == true || this.styleManagerCSSDeclaration == null) {
				this.getStyleDeclaration();
				this._needsStyleDeclarationUpdate = false;
			}
			if(this._shouldCascadeAllProperties == true) cascadeManager.shouldCascadeAll(); else {
				var length1 = this._pendingChangedProperties.length;
				var _g1 = 0;
				while(_g1 < length1) {
					var i1 = _g1++;
					cascadeManager.addPropertyToCascade(this._pendingChangedProperties[i1]);
				}
			}
			this.coreStyle.cascade(cascadeManager,this._initialStyleDeclaration,this.styleManagerCSSDeclaration,this.style,this._initialStyleDeclaration,12,12,programmaticChange);
		}
		this._shouldCascadeAllProperties = false;
		this._pendingChangedProperties = [];
	}
	,onInlineStyleChange: function(changedPropertyIndex) {
		if(this._shouldCascadeAllProperties == false) this._pendingChangedProperties.push(changedPropertyIndex);
		this.invalidateCascade();
	}
	,getNextElementRendererSibling: function() {
		var nextSibling = this.get_nextSibling();
		if(nextSibling == null) return null; else while(nextSibling != null) {
			if(nextSibling.elementRenderer != null) {
				var elementRenderParent = nextSibling.elementRenderer.parentNode;
				if(elementRenderParent.isAnonymousBlockBox() == true) return elementRenderParent;
				return nextSibling.elementRenderer;
			}
			nextSibling = nextSibling.get_nextSibling();
		}
		return null;
	}
	,attachToParentElementRenderer: function() {
		this.parentNode.elementRenderer.insertBefore(this.elementRenderer,this.getNextElementRendererSibling());
	}
	,detachFromParentElementRenderer: function() {
		this.elementRenderer.parentNode.removeChild(this.elementRenderer);
	}
	,createElementRenderer: function() {
		var _g = this.coreStyle.getKeyword(this.coreStyle.getComputedOrInitialProperty(0));
		switch(_g[1]) {
		case 28:case 29:
			this.elementRenderer = new cocktail.core.renderer.BlockBoxRenderer(this);
			break;
		case 30:
			this.elementRenderer = new cocktail.core.renderer.InlineBoxRenderer(this);
			break;
		case 18:
			break;
		default:
			throw "Illegal value for display style";
		}
	}
	,isRendered: function() {
		if(this.get_hidden() == true) return false;
		if(this.coreStyle.isNone(this.coreStyle.getComputedOrInitialProperty(0))) return false;
		return true;
	}
	,isParentRendered: function() {
		if(this.parentNode == null) return false;
		return this.parentNode.elementRenderer != null;
	}
	,startPendingTransitions: function() {
		var atLeastOneTransitionStarted = false;
		var transitionStarted = this.coreStyle.startPendingTransitions();
		if(transitionStarted == true) atLeastOneTransitionStarted = true;
		var length = this.childNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var transitionStarted1 = this.childNodes[i].startPendingTransitions();
			if(transitionStarted1 == true) atLeastOneTransitionStarted = true;
		}
		return atLeastOneTransitionStarted;
	}
	,endPendingTransitions: function() {
		this.coreStyle.endPendingTransitions();
		var length = this.childNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this.childNodes[i].endPendingTransitions();
		}
	}
	,click: function() {
		this.dispatchEvent(this.createMouseClickEvent());
	}
	,createMouseClickEvent: function() {
		var mouseEvent = new cocktail.core.event.MouseEvent();
		mouseEvent.initMouseEvent("click",false,false,null,0,0,0,0,0,false,false,false,false,0,null);
		return mouseEvent;
	}
	,fireEvent: function(eventType,bubbles,cancelable) {
		var event = new cocktail.core.event.Event();
		event.initEvent(eventType,bubbles,cancelable);
		this.dispatchEvent(event);
		return event.defaultPrevented;
	}
	,isFocusable: function() {
		if(this.parentNode == null) return false;
		if(this.elementRenderer == null) return false; else if(this.isDefaultFocusable() == true) return true; else if(this.get_tabIndex() > 0) return true;
		return false;
	}
	,isDefaultFocusable: function() {
		return false;
	}
	,focus: function() {
		this._ownerHTMLDocument.set_activeElement(this);
	}
	,blur: function() {
		this._ownerHTMLDocument.body.focus();
	}
	,requestFullScreen: function() {
		this._ownerHTMLDocument.set_fullscreenElement(this);
	}
	,triggerActivationBehaviour: function(clickEvent) {
		var nearestActivatableElement = this.getNearestActivatableElement();
		if(nearestActivatableElement != null) nearestActivatableElement.runPreClickActivation();
		if(clickEvent == null) clickEvent = this.createMouseClickEvent();
		this.dispatchEvent(clickEvent);
		if(nearestActivatableElement != null) {
			if(clickEvent.defaultPrevented == true) nearestActivatableElement.runCanceledActivationStep(); else nearestActivatableElement.runPostClickActivationStep(clickEvent);
		}
	}
	,hasActivationBehaviour: function() {
		return false;
	}
	,runPreClickActivation: function() {
	}
	,runCanceledActivationStep: function() {
	}
	,runPostClickActivationStep: function(event) {
	}
	,getNearestActivatableElement: function() {
		var htmlElement = this;
		while(htmlElement.hasActivationBehaviour() == false) {
			if(htmlElement.parentNode == null) return null;
			htmlElement = htmlElement.parentNode;
		}
		return htmlElement;
	}
	,get_scrollHeight: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) return Math.round(this.elementRenderer.get_scrollHeight());
		return 0;
	}
	,get_scrollWidth: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) return Math.round(this.elementRenderer.get_scrollWidth());
		return 0;
	}
	,set_scrollLeft: function(value) {
		if(this.elementRenderer != null) this.elementRenderer.set_scrollLeft(value);
		return value;
	}
	,get_scrollLeft: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) return Math.round(this.elementRenderer.get_scrollLeft());
		return 0;
	}
	,set_scrollTop: function(value) {
		if(this.elementRenderer != null) this.elementRenderer.set_scrollTop(value);
		return value;
	}
	,get_scrollTop: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) return Math.round(this.elementRenderer.get_scrollTop());
		return 0;
	}
	,set_tabIndex: function(value) {
		this.setAttribute("tabindex",value == null?"null":"" + value);
		return value;
	}
	,get_tabIndex: function() {
		var tabIndex = cocktail.core.dom.Element.prototype.getAttribute.call(this,"tabindex");
		if(tabIndex == null) {
			if(this.isDefaultFocusable() == true) return 0; else return -1;
		} else return Std.parseInt(tabIndex);
	}
	,get_id: function() {
		return this.getAttributeAsDOMString("id");
	}
	,set_id: function(value) {
		this.setAttribute("id",value);
		return value;
	}
	,get_className: function() {
		return this.getAttributeAsDOMString("class");
	}
	,set_className: function(value) {
		cocktail.core.dom.Element.prototype.setAttribute.call(this,"class",value);
		this.classList = value.split(" ");
		this.invalidateStyleDeclaration(true);
		return value;
	}
	,get_hidden: function() {
		return this.getAttributeAsBool("hidden");
	}
	,set_hidden: function(value) {
		this.setAttributeAsBool("hidden",value);
		return value;
	}
	,getAttributeAsDOMString: function(name) {
		var attribute = this.getAttribute(name);
		if(attribute == null) attribute = "";
		return attribute;
	}
	,getEnumeratedAttributeAsDOMString: function(name,allowedValues,missingValueDefault,invalidValueDefault) {
		var attribute = this.getAttribute(name);
		if(attribute == null) {
			if(missingValueDefault != null) return missingValueDefault; else return "";
		}
		var allowedValuesLength = allowedValues.length;
		var _g = 0;
		while(_g < allowedValuesLength) {
			var i = _g++;
			if(attribute == allowedValues[i]) return attribute;
		}
		if(invalidValueDefault != null) return invalidValueDefault; else if(missingValueDefault != null) return missingValueDefault; else return "";
	}
	,getAttributeAsBool: function(name) {
		if(this.getAttribute(name) != null) return true; else return false;
	}
	,setAttributeAsBool: function(name,value) {
		var attribute = this.getAttribute(name);
		if(value == false) {
			if(attribute != null) this.removeAttribute(name);
		} else this.setAttribute(name,"");
	}
	,getAttributeAsSignedInteger: function(name,defaultValue) {
		var attribute = this.getAttribute(name);
		if(attribute == null) {
			if(defaultValue != null) return defaultValue; else return 0;
		}
		return Std.parseInt(attribute);
	}
	,getAttributeAsPositiveSignedInteger: function(name,defaultValue) {
		var attribute = this.getAttribute(name);
		if(attribute == null) {
			if(defaultValue != null) return defaultValue; else return -1;
		}
		var valueAsInt = Std.parseInt(attribute);
		if(valueAsInt < 0) return -1; else return valueAsInt;
	}
	,set_innerHTML: function(value) {
		var childLength = this.childNodes.length;
		var _g = 0;
		while(_g < childLength) {
			var i = _g++;
			this.removeChild(this.childNodes[0]);
		}
		var wrappedHTML = "<" + "DIV" + ">";
		wrappedHTML += value;
		wrappedHTML += "<" + "/" + "DIV" + ">";
		var node = cocktail.core.parser.DOMParser.parse(wrappedHTML,this.ownerDocument);
		if(node == null) return value;
		var length = node.childNodes.length;
		var _g1 = 0;
		while(_g1 < length) {
			var i1 = _g1++;
			this.appendChild(node.childNodes[0]);
		}
		return value;
	}
	,set_outerHTML: function(value) {
		var node = cocktail.core.parser.DOMParser.parse(value,this.ownerDocument);
		var oldNextSibling = this.get_nextSibling();
		this.parentNode.removeChild(this);
		if(node == null) return value;
		this.parentNode.insertBefore(node,oldNextSibling);
		return value;
	}
	,get_innerHTML: function() {
		var str = cocktail.core.parser.DOMParser.serialize(this);
		var pos = str.indexOf(">") + 1;
		var len = str.lastIndexOf("<") - str.indexOf(">") - 1;
		str = HxOverrides.substr(str,pos,len);
		return str;
	}
	,get_outerHTML: function() {
		var str = cocktail.core.parser.DOMParser.serialize(this);
		return str;
	}
	,isVoidElement: function() {
		return false;
	}
	,get_offsetParent: function() {
		if(this.elementRenderer == null) return null;
		var _g = this.coreStyle.getKeyword(this.coreStyle.getComputedOrInitialProperty(1));
		switch(_g[1]) {
		case 35:
			return null;
		default:
		}
		var parent = this.parentNode;
		while(parent != null) {
			if(parent.elementRenderer.isPositioned() == true || parent.tagName == "BODY") return parent;
			parent = parent.parentNode;
		}
		return null;
	}
	,get_offsetWidth: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.width + usedValues.paddingLeft + usedValues.paddingRight + usedValues.borderLeftWidth + usedValues.borderRightWidth);
		}
		return 0;
	}
	,get_offsetHeight: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.height + usedValues.paddingTop + usedValues.paddingBottom + usedValues.borderTopWidth + usedValues.borderBottomWidth);
		}
		return 0;
	}
	,get_offsetLeft: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var offsetParent = this.get_offsetParent();
			if(offsetParent == null) return Math.round(this.elementRenderer.globalBounds.x); else {
				var globalX = offsetParent.elementRenderer.globalBounds.x;
				if(offsetParent.tagName == "BODY" && offsetParent.elementRenderer.isAbsolutelyPositioned() == false) globalX = 0;
				return Math.round(this.elementRenderer.globalBounds.x - globalX);
			}
		}
		return 0;
	}
	,get_offsetTop: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var offsetParent = this.get_offsetParent();
			if(offsetParent == null) return Math.round(this.elementRenderer.globalBounds.y); else {
				var globalY = offsetParent.elementRenderer.globalBounds.y;
				if(offsetParent.tagName == "BODY" && offsetParent.elementRenderer.isAbsolutelyPositioned() == false) globalY = 0;
				return Math.round(this.elementRenderer.globalBounds.y - globalY);
			}
		}
		return 0;
	}
	,get_clientWidth: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.width + usedValues.paddingLeft + usedValues.paddingRight);
		}
		return 0;
	}
	,get_clientHeight: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.height + usedValues.paddingTop + usedValues.paddingBottom);
		}
		return 0;
	}
	,get_clientTop: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.borderTopWidth);
		}
		return 0;
	}
	,get_clientLeft: function() {
		this.updateDocumentImmediately();
		if(this.elementRenderer != null) {
			var usedValues = this.coreStyle.usedValues;
			return Math.round(usedValues.borderBottomWidth);
		}
		return 0;
	}
	,__class__: cocktail.core.html.HTMLElement
	,__properties__: $extend(cocktail.core.dom.Element.prototype.__properties__,{get_clientTop:"get_clientTop",get_clientLeft:"get_clientLeft",get_clientHeight:"get_clientHeight",get_clientWidth:"get_clientWidth",get_offsetTop:"get_offsetTop",get_offsetLeft:"get_offsetLeft",get_offsetHeight:"get_offsetHeight",get_offsetWidth:"get_offsetWidth",get_offsetParent:"get_offsetParent",set_outerHTML:"set_outerHTML",get_outerHTML:"get_outerHTML",set_innerHTML:"set_innerHTML",get_innerHTML:"get_innerHTML",get_scrollWidth:"get_scrollWidth",get_scrollHeight:"get_scrollHeight",set_scrollLeft:"set_scrollLeft",get_scrollLeft:"get_scrollLeft",set_scrollTop:"set_scrollTop",get_scrollTop:"get_scrollTop",set_hidden:"set_hidden",get_hidden:"get_hidden",set_className:"set_className",get_className:"get_className",set_id:"set_id",get_id:"get_id",set_tabIndex:"set_tabIndex",get_tabIndex:"get_tabIndex"})
});
cocktail.core.dom.CharacterData = function() {
	cocktail.core.html.HTMLElement.call(this,"");
};
$hxClasses["cocktail.core.dom.CharacterData"] = cocktail.core.dom.CharacterData;
cocktail.core.dom.CharacterData.__name__ = ["cocktail","core","dom","CharacterData"];
cocktail.core.dom.CharacterData.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.dom.CharacterData.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	initChildNodes: function() {
	}
	,initAttributes: function() {
	}
	,cascade: function(cascadeManager,programmaticChange) {
	}
	,invalidateCascade: function() {
	}
	,hasChildNodes: function() {
		return false;
	}
	,hasAttributes: function() {
		return false;
	}
	,getStyleDeclaration: function() {
	}
	,init: function() {
	}
	,startPendingTransitions: function() {
		return false;
	}
	,endPendingTransitions: function() {
	}
	,get_nodeValue: function() {
		return this.data;
	}
	,set_nodeValue: function(value) {
		return this.data = value;
	}
	,__class__: cocktail.core.dom.CharacterData
});
cocktail.core.dom.Comment = function() {
	cocktail.core.dom.CharacterData.call(this);
};
$hxClasses["cocktail.core.dom.Comment"] = cocktail.core.dom.Comment;
cocktail.core.dom.Comment.__name__ = ["cocktail","core","dom","Comment"];
cocktail.core.dom.Comment.__super__ = cocktail.core.dom.CharacterData;
cocktail.core.dom.Comment.prototype = $extend(cocktail.core.dom.CharacterData.prototype,{
	updateElementRenderer: function() {
	}
	,attach: function(recursive) {
	}
	,detach: function(recursive) {
	}
	,get_nodeType: function() {
		return 8;
	}
	,__class__: cocktail.core.dom.Comment
});
cocktail.core.dom.DOMConstants = function() {
};
$hxClasses["cocktail.core.dom.DOMConstants"] = cocktail.core.dom.DOMConstants;
cocktail.core.dom.DOMConstants.__name__ = ["cocktail","core","dom","DOMConstants"];
cocktail.core.dom.DOMConstants.prototype = {
	__class__: cocktail.core.dom.DOMConstants
};
cocktail.core.dom.DOMException = function() {
};
$hxClasses["cocktail.core.dom.DOMException"] = cocktail.core.dom.DOMException;
cocktail.core.dom.DOMException.__name__ = ["cocktail","core","dom","DOMException"];
cocktail.core.dom.DOMException.prototype = {
	__class__: cocktail.core.dom.DOMException
};
cocktail.core.dom.Document = function() {
	cocktail.core.dom.Node.call(this);
};
$hxClasses["cocktail.core.dom.Document"] = cocktail.core.dom.Document;
cocktail.core.dom.Document.__name__ = ["cocktail","core","dom","Document"];
cocktail.core.dom.Document.__super__ = cocktail.core.dom.Node;
cocktail.core.dom.Document.prototype = $extend(cocktail.core.dom.Node.prototype,{
	createElement: function(tagName) {
		return null;
	}
	,createTextNode: function(data) {
		var text = new cocktail.core.dom.Text();
		text.set_nodeValue(data);
		text.set_ownerDocument(this);
		return text;
	}
	,createComment: function(data) {
		var comment = new cocktail.core.dom.Comment();
		comment.set_nodeValue(data);
		return comment;
	}
	,createAttribute: function(name) {
		var attribute = new cocktail.core.dom.Attr(name);
		return attribute;
	}
	,createEvent: function(eventInterface) {
		switch(eventInterface) {
		case "Event":
			return new cocktail.core.event.Event();
		case "UIEvent":
			return new cocktail.core.event.UIEvent();
		case "CustomEvent":
			return new cocktail.core.event.CustomEvent();
		case "MouseEvent":
			return new cocktail.core.event.MouseEvent();
		case "KeyboardEvent":
			return new cocktail.core.event.KeyboardEvent();
		case "FocusEvent":
			return new cocktail.core.event.FocusEvent();
		case "WheelEvent":
			return new cocktail.core.event.WheelEvent();
		case "TransitionEvent":
			return new cocktail.core.event.TransitionEvent();
		case "PopStateEvent":
			return new cocktail.core.event.PopStateEvent();
		default:
			throw 9;
		}
		return null;
	}
	,getElementById: function(elementId) {
		return this.doGetElementById(this.documentElement,elementId);
	}
	,doGetElementById: function(node,elementId) {
		if(node.get_nodeType() == 1) {
			if(node.hasChildNodes() == true) {
				var length = node.childNodes.length;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					var matchingElement = this.doGetElementById(node.childNodes[i],elementId);
					if(matchingElement != null) return matchingElement;
				}
			}
			if(node.getAttribute("id") == elementId) return node;
		}
		return null;
	}
	,getElementsByTagName: function(tagName) {
		if(this.documentElement == null) return [];
		return this.documentElement.getElementsByTagName(tagName);
	}
	,getElementsByClassName: function(className) {
		return this.documentElement.getElementsByClassName(className);
	}
	,get_nodeType: function() {
		return 9;
	}
	,__class__: cocktail.core.dom.Document
});
cocktail.core.dom.NamedNodeMap = function() {
	this._nodes = new Array();
};
$hxClasses["cocktail.core.dom.NamedNodeMap"] = cocktail.core.dom.NamedNodeMap;
cocktail.core.dom.NamedNodeMap.__name__ = ["cocktail","core","dom","NamedNodeMap"];
cocktail.core.dom.NamedNodeMap.prototype = {
	getNamedItem: function(name) {
		var length = this._nodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(this._nodes[i].name == name) return this._nodes[i];
		}
		return null;
	}
	,setNamedItem: function(arg) {
		var replacedNode = this.getNamedItem(arg.get_nodeName());
		if(replacedNode != null) {
			var _g1 = 0;
			var _g = this.get_length();
			while(_g1 < _g) {
				var i = _g1++;
				if(this._nodes[i] == replacedNode) {
					this._nodes[i] = arg;
					return replacedNode;
				}
			}
		} else this._nodes.push(arg);
		return replacedNode;
	}
	,removeNamedItem: function(name) {
		var removedNode = this.getNamedItem(name);
		if(removedNode == null) return null;
		HxOverrides.remove(this._nodes,removedNode);
		return removedNode;
	}
	,item: function(index) {
		if(index > this.get_length() - 1) return null; else return this._nodes[index];
	}
	,get_length: function() {
		return this._nodes.length;
	}
	,__class__: cocktail.core.dom.NamedNodeMap
	,__properties__: {get_length:"get_length"}
};
cocktail.core.dom.Text = function() {
	cocktail.core.dom.CharacterData.call(this);
};
$hxClasses["cocktail.core.dom.Text"] = cocktail.core.dom.Text;
cocktail.core.dom.Text.__name__ = ["cocktail","core","dom","Text"];
cocktail.core.dom.Text.__super__ = cocktail.core.dom.CharacterData;
cocktail.core.dom.Text.prototype = $extend(cocktail.core.dom.CharacterData.prototype,{
	createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.TextRenderer(this);
	}
	,isRendered: function() {
		return true;
	}
	,get_nodeName: function() {
		return "#text";
	}
	,get_nodeType: function() {
		return 3;
	}
	,__class__: cocktail.core.dom.Text
});
cocktail.core.ds = {};
cocktail.core.ds.IFastNode = function() { };
$hxClasses["cocktail.core.ds.IFastNode"] = cocktail.core.ds.IFastNode;
cocktail.core.ds.IFastNode.__name__ = ["cocktail","core","ds","IFastNode"];
cocktail.core.ds.IFastNode.prototype = {
	__class__: cocktail.core.ds.IFastNode
};
cocktail.core.ds.FastNode = function() {
};
$hxClasses["cocktail.core.ds.FastNode"] = cocktail.core.ds.FastNode;
cocktail.core.ds.FastNode.__name__ = ["cocktail","core","ds","FastNode"];
cocktail.core.ds.FastNode.__interfaces__ = [cocktail.core.ds.IFastNode];
cocktail.core.ds.FastNode.prototype = {
	removeChild: function(oldChild) {
		oldChild.parentNode = null;
		if(this.firstChild == oldChild && this.lastChild == oldChild) {
			this.firstChild = null;
			this.lastChild = null;
		} else if(this.firstChild == oldChild) {
			var nextSibling = oldChild.nextSibling;
			this.firstChild = nextSibling;
			if(nextSibling != null) nextSibling.previousSibling = null;
		} else if(this.lastChild == oldChild) {
			var previousSibling = oldChild.previousSibling;
			this.lastChild = previousSibling;
			if(previousSibling != null) previousSibling.nextSibling = null;
		} else {
			var previousSibling1 = oldChild.previousSibling;
			var nextSibling1 = oldChild.nextSibling;
			previousSibling1.nextSibling = nextSibling1;
			nextSibling1.previousSibling = previousSibling1;
		}
		oldChild.previousSibling = null;
		oldChild.nextSibling = null;
	}
	,appendChild: function(newChild) {
		this.removeFromParentIfNecessary(newChild);
		newChild.parentNode = this;
		if(this.firstChild == null) {
			this.firstChild = newChild;
			this.lastChild = newChild;
			newChild.previousSibling = null;
			newChild.nextSibling = null;
		} else {
			var oldLastChild = this.lastChild;
			this.lastChild = newChild;
			oldLastChild.nextSibling = newChild;
			newChild.previousSibling = oldLastChild;
			newChild.nextSibling = null;
		}
	}
	,removeFromParentIfNecessary: function(newChild) {
		if(newChild.parentNode != null) {
			var parentNode = newChild.parentNode;
			parentNode.removeChild(newChild);
		}
	}
	,insertBefore: function(newChild,refChild) {
		if(this.firstChild == null || refChild == null) {
			this.appendChild(newChild);
			return;
		}
		this.removeFromParentIfNecessary(newChild);
		newChild.parentNode = this;
		var oldPreviousSibling = refChild.previousSibling;
		if(oldPreviousSibling == null) {
			this.firstChild = newChild;
			refChild.previousSibling = newChild;
			newChild.nextSibling = refChild;
			newChild.previousSibling = null;
		} else {
			oldPreviousSibling.nextSibling = newChild;
			refChild.previousSibling = newChild;
			newChild.previousSibling = oldPreviousSibling;
			newChild.nextSibling = refChild;
		}
	}
	,__class__: cocktail.core.ds.FastNode
};
cocktail.core.event.Event = function() {
};
$hxClasses["cocktail.core.event.Event"] = cocktail.core.event.Event;
cocktail.core.event.Event.__name__ = ["cocktail","core","event","Event"];
cocktail.core.event.Event.prototype = {
	initEvent: function(eventTypeArg,canBubbleArg,cancelableArg) {
		if(this.dispatched == true) return;
		this.type = eventTypeArg;
		this.bubbles = canBubbleArg;
		this.cancelable = cancelableArg;
	}
	,preventDefault: function() {
		this.defaultPrevented = true;
	}
	,stopPropagation: function() {
		this.propagationStopped = true;
	}
	,stopImmediatePropagation: function() {
		this.immediatePropagationStopped = true;
	}
	,__class__: cocktail.core.event.Event
};
cocktail.core.event.CustomEvent = function() {
	cocktail.core.event.Event.call(this);
};
$hxClasses["cocktail.core.event.CustomEvent"] = cocktail.core.event.CustomEvent;
cocktail.core.event.CustomEvent.__name__ = ["cocktail","core","event","CustomEvent"];
cocktail.core.event.CustomEvent.__super__ = cocktail.core.event.Event;
cocktail.core.event.CustomEvent.prototype = $extend(cocktail.core.event.Event.prototype,{
	initCustomEvent: function(eventTypeArg,canBubbleArg,cancelableArg,detailArg) {
		if(this.dispatched == true) return;
		this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
		this.detail = detailArg;
	}
	,__class__: cocktail.core.event.CustomEvent
});
cocktail.core.event.EventConstants = function() {
};
$hxClasses["cocktail.core.event.EventConstants"] = cocktail.core.event.EventConstants;
cocktail.core.event.EventConstants.__name__ = ["cocktail","core","event","EventConstants"];
cocktail.core.event.EventConstants.prototype = {
	__class__: cocktail.core.event.EventConstants
};
cocktail.core.event.EventListener = function(eventType,listener,useCapture) {
	this.listener = listener;
	this.useCapture = useCapture;
	this.eventType = eventType;
};
$hxClasses["cocktail.core.event.EventListener"] = cocktail.core.event.EventListener;
cocktail.core.event.EventListener.__name__ = ["cocktail","core","event","EventListener"];
cocktail.core.event.EventListener.prototype = {
	handleEvent: function(evt) {
		this.listener(evt);
	}
	,__class__: cocktail.core.event.EventListener
};
cocktail.core.event.UIEvent = function() {
	cocktail.core.event.Event.call(this);
};
$hxClasses["cocktail.core.event.UIEvent"] = cocktail.core.event.UIEvent;
cocktail.core.event.UIEvent.__name__ = ["cocktail","core","event","UIEvent"];
cocktail.core.event.UIEvent.__super__ = cocktail.core.event.Event;
cocktail.core.event.UIEvent.prototype = $extend(cocktail.core.event.Event.prototype,{
	initUIEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg) {
		if(this.dispatched == true) return;
		this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
		this.view = viewArg;
		this.detail = detailArg;
	}
	,__class__: cocktail.core.event.UIEvent
});
cocktail.core.event.FocusEvent = function() {
	cocktail.core.event.UIEvent.call(this);
};
$hxClasses["cocktail.core.event.FocusEvent"] = cocktail.core.event.FocusEvent;
cocktail.core.event.FocusEvent.__name__ = ["cocktail","core","event","FocusEvent"];
cocktail.core.event.FocusEvent.__super__ = cocktail.core.event.UIEvent;
cocktail.core.event.FocusEvent.prototype = $extend(cocktail.core.event.UIEvent.prototype,{
	initFocusEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,relatedTargetArg) {
		if(this.dispatched == true) return;
		this.initUIEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg);
		this.relatedTarget = relatedTargetArg;
	}
	,__class__: cocktail.core.event.FocusEvent
});
cocktail.core.event.KeyboardEvent = function() {
	cocktail.core.event.UIEvent.call(this);
};
$hxClasses["cocktail.core.event.KeyboardEvent"] = cocktail.core.event.KeyboardEvent;
cocktail.core.event.KeyboardEvent.__name__ = ["cocktail","core","event","KeyboardEvent"];
cocktail.core.event.KeyboardEvent.__super__ = cocktail.core.event.UIEvent;
cocktail.core.event.KeyboardEvent.prototype = $extend(cocktail.core.event.UIEvent.prototype,{
	initKeyboardEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,charArg,keyArg,locationArg,modifiersListArg,repeatArg,localeArg) {
		if(this.dispatched == true) return;
		this.initUIEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,0);
		this.keyChar = charArg;
		this.key = keyArg;
		this.repeat = repeatArg;
		this.location = locationArg;
		this.locale = localeArg;
		this.setModifiersListArg(modifiersListArg);
	}
	,setModifiersListArg: function(modifiersListArg) {
		this.ctrlKey = false;
		this.shiftKey = false;
		this.altKey = false;
		this.metaKey = false;
		if(modifiersListArg == null) return;
		var modifiers = modifiersListArg.split(" ");
		var _g1 = 0;
		var _g = modifiers.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = modifiers[i];
			switch(_g2) {
			case "Shift":
				this.shiftKey = true;
				break;
			case "Alt":
				this.altKey = true;
				break;
			case "Control":
				this.ctrlKey = true;
				break;
			case "Meta":
				this.metaKey = true;
				break;
			}
		}
	}
	,__class__: cocktail.core.event.KeyboardEvent
});
cocktail.core.event.MouseEvent = function() {
	cocktail.core.event.UIEvent.call(this);
};
$hxClasses["cocktail.core.event.MouseEvent"] = cocktail.core.event.MouseEvent;
cocktail.core.event.MouseEvent.__name__ = ["cocktail","core","event","MouseEvent"];
cocktail.core.event.MouseEvent.__super__ = cocktail.core.event.UIEvent;
cocktail.core.event.MouseEvent.prototype = $extend(cocktail.core.event.UIEvent.prototype,{
	initMouseEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,screenXArg,screenYArg,clientXArg,clientYArg,ctrlKeyArg,altKeyArg,shiftKeyArg,metaKeyArg,buttonArg,relatedTargeArg) {
		if(this.dispatched == true) return;
		this.initUIEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg);
		this.screenX = screenXArg;
		this.screenY = screenYArg;
		this.clientX = clientXArg;
		this.clientY = clientYArg;
		this.ctrlKey = ctrlKeyArg;
		this.shiftKey = shiftKeyArg;
		this.altKey = altKeyArg;
		this.metaKey = metaKeyArg;
		this.button = buttonArg;
		this.relatedTarget = relatedTargeArg;
	}
	,__class__: cocktail.core.event.MouseEvent
});
cocktail.core.event.PopStateEvent = function() {
	cocktail.core.event.UIEvent.call(this);
};
$hxClasses["cocktail.core.event.PopStateEvent"] = cocktail.core.event.PopStateEvent;
cocktail.core.event.PopStateEvent.__name__ = ["cocktail","core","event","PopStateEvent"];
cocktail.core.event.PopStateEvent.__super__ = cocktail.core.event.UIEvent;
cocktail.core.event.PopStateEvent.prototype = $extend(cocktail.core.event.UIEvent.prototype,{
	initPopStateEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,state) {
		if(this.dispatched == true) return;
		this.initUIEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg);
		this.state = state;
	}
	,__class__: cocktail.core.event.PopStateEvent
});
cocktail.core.event.ProgressEvent = function() {
	cocktail.core.event.Event.call(this);
	this.lengthComputable = false;
	this.loaded = 0;
	this.total = 0;
};
$hxClasses["cocktail.core.event.ProgressEvent"] = cocktail.core.event.ProgressEvent;
cocktail.core.event.ProgressEvent.__name__ = ["cocktail","core","event","ProgressEvent"];
cocktail.core.event.ProgressEvent.__super__ = cocktail.core.event.Event;
cocktail.core.event.ProgressEvent.prototype = $extend(cocktail.core.event.Event.prototype,{
	initProgressEvent: function(eventTypeArg,canBubbleArg,cancelableArg,lengthComputableArg,loadedArg,totalArg) {
		if(this.dispatched == true) return;
		this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
		this.lengthComputable = lengthComputableArg;
		this.loaded = loadedArg;
		this.total = totalArg;
	}
	,__class__: cocktail.core.event.ProgressEvent
});
cocktail.core.event.Touch = function() {
};
$hxClasses["cocktail.core.event.Touch"] = cocktail.core.event.Touch;
cocktail.core.event.Touch.__name__ = ["cocktail","core","event","Touch"];
cocktail.core.event.Touch.prototype = {
	__class__: cocktail.core.event.Touch
};
cocktail.core.event.TouchEvent = function() {
	cocktail.core.event.UIEvent.call(this);
};
$hxClasses["cocktail.core.event.TouchEvent"] = cocktail.core.event.TouchEvent;
cocktail.core.event.TouchEvent.__name__ = ["cocktail","core","event","TouchEvent"];
cocktail.core.event.TouchEvent.__super__ = cocktail.core.event.UIEvent;
cocktail.core.event.TouchEvent.prototype = $extend(cocktail.core.event.UIEvent.prototype,{
	initTouchEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,touchesArg,targetTouchesArg,changedTouchesArg,altKeyArg,metaKeyArg,ctrlKeyArg,shiftKeyArg) {
		if(this.dispatched == true) return;
		this.initUIEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg);
		this.touches = touchesArg;
		targetTouchesArg = this.targetTouches;
		this.changedTouches = changedTouchesArg;
		this.altKey = altKeyArg;
		this.metaKey = metaKeyArg;
		this.ctrlKey = ctrlKeyArg;
		this.shiftKey = shiftKeyArg;
	}
	,__class__: cocktail.core.event.TouchEvent
});
cocktail.core.event.TouchList = function(touches) {
	this._touches = touches;
};
$hxClasses["cocktail.core.event.TouchList"] = cocktail.core.event.TouchList;
cocktail.core.event.TouchList.__name__ = ["cocktail","core","event","TouchList"];
cocktail.core.event.TouchList.prototype = {
	item: function(index) {
		return this._touches[index];
	}
	,identifiedTouch: function(identifier) {
		var _g1 = 0;
		var _g = this.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			if(this._touches[i].identifier == identifier) return this._touches[i];
		}
		return null;
	}
	,get_length: function() {
		return this._touches.length;
	}
	,__class__: cocktail.core.event.TouchList
	,__properties__: {get_length:"get_length"}
};
cocktail.core.event.TransitionEvent = function() {
	cocktail.core.event.Event.call(this);
};
$hxClasses["cocktail.core.event.TransitionEvent"] = cocktail.core.event.TransitionEvent;
cocktail.core.event.TransitionEvent.__name__ = ["cocktail","core","event","TransitionEvent"];
cocktail.core.event.TransitionEvent.__super__ = cocktail.core.event.Event;
cocktail.core.event.TransitionEvent.prototype = $extend(cocktail.core.event.Event.prototype,{
	initTransitionEvent: function(eventTypeArg,canBubbleArg,cancelableArg,propertyNameArg,elapsedTimeArg,pseudoElementArg) {
		if(this.dispatched == true) return;
		this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
		this.propertyName = propertyNameArg;
		this.elapsedTime = elapsedTimeArg;
		this.pseudoElement = pseudoElementArg;
	}
	,__class__: cocktail.core.event.TransitionEvent
});
cocktail.core.event.WheelEvent = function() {
	cocktail.core.event.MouseEvent.call(this);
};
$hxClasses["cocktail.core.event.WheelEvent"] = cocktail.core.event.WheelEvent;
cocktail.core.event.WheelEvent.__name__ = ["cocktail","core","event","WheelEvent"];
cocktail.core.event.WheelEvent.__super__ = cocktail.core.event.MouseEvent;
cocktail.core.event.WheelEvent.prototype = $extend(cocktail.core.event.MouseEvent.prototype,{
	initWheelEvent: function(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,screenXArg,screenYArg,clientXArg,clientYArg,buttonArg,relatedTargetArg,modifiersListArg,deltaXArg,deltaYArg,deltaZArg,deltaModeArg) {
		if(this.dispatched == true) return;
		this.initMouseEvent(eventTypeArg,canBubbleArg,cancelableArg,viewArg,detailArg,screenXArg,screenYArg,clientXArg,clientYArg,false,false,false,false,buttonArg,relatedTargetArg);
		this.deltaY = deltaYArg;
		this.deltaX = deltaXArg;
		this.deltaMode = deltaModeArg;
		this.deltaZ = deltaZArg;
	}
	,__class__: cocktail.core.event.WheelEvent
});
cocktail.core.event.XMLHttpRequestEventTarget = function() {
	cocktail.core.event.EventTarget.call(this);
};
$hxClasses["cocktail.core.event.XMLHttpRequestEventTarget"] = cocktail.core.event.XMLHttpRequestEventTarget;
cocktail.core.event.XMLHttpRequestEventTarget.__name__ = ["cocktail","core","event","XMLHttpRequestEventTarget"];
cocktail.core.event.XMLHttpRequestEventTarget.__super__ = cocktail.core.event.EventTarget;
cocktail.core.event.XMLHttpRequestEventTarget.prototype = $extend(cocktail.core.event.EventTarget.prototype,{
	updateCallbackListener: function(eventType,newListener,oldListener) {
		if(oldListener != null) this.removeEventListener(eventType,oldListener);
		if(newListener != null) this.addEventListener(eventType,newListener);
	}
	,set_onloadstart: function(value) {
		this.updateCallbackListener("loadstart",value,this.onloadstart);
		return this.onloadstart = value;
	}
	,set_onprogress: function(value) {
		this.updateCallbackListener("progress",value,this.onprogress);
		return this.onprogress = value;
	}
	,set_onabort: function(value) {
		this.updateCallbackListener("abort",value,this.onabort);
		return this.onabort = value;
	}
	,set_onerror: function(value) {
		this.updateCallbackListener("error",value,this.onerror);
		return this.onerror = value;
	}
	,set_onload: function(value) {
		this.updateCallbackListener("load",value,this.onload);
		return this.onload = value;
	}
	,set_ontimeout: function(value) {
		this.updateCallbackListener("timeout",value,this.ontimeout);
		return this.ontimeout = value;
	}
	,set_onloadend: function(value) {
		this.updateCallbackListener("loadend",value,this.onloadend);
		return this.onloadend = value;
	}
	,__class__: cocktail.core.event.XMLHttpRequestEventTarget
	,__properties__: {set_onloadend:"set_onloadend",set_ontimeout:"set_ontimeout",set_onload:"set_onload",set_onerror:"set_onerror",set_onabort:"set_onabort",set_onprogress:"set_onprogress",set_onloadstart:"set_onloadstart"}
});
cocktail.core.floats = {};
cocktail.core.floats.FloatsManager = function() {
	var floatsLeft = new Array();
	var floatsRight = new Array();
	this.childrenWithClearance = new Array();
	this.floats = new cocktail.core.layout.FloatsVO(floatsLeft,floatsRight);
};
$hxClasses["cocktail.core.floats.FloatsManager"] = cocktail.core.floats.FloatsManager;
cocktail.core.floats.FloatsManager.__name__ = ["cocktail","core","floats","FloatsManager"];
cocktail.core.floats.FloatsManager.prototype = {
	init: function() {
		if(this.floats.left.length > 0 || this.floats.right.length > 0) {
			this.floats.left = [];
			this.floats.right = [];
		}
		this.childrenWithClearance = new Array();
	}
	,registerClear: function(elementRenderer) {
		this.childrenWithClearance.push(elementRenderer);
	}
	,getClearance: function(target,currentY) {
		var clearance = 0;
		var _g = target.coreStyle.getKeyword(target.coreStyle.getComputedOrInitialProperty(3));
		switch(_g[1]) {
		case 11:
			clearance = this.doGetClearance(target,currentY,this.floats.left);
			break;
		case 12:
			clearance = this.doGetClearance(target,currentY,this.floats.right);
			break;
		case 31:
			clearance = this.clearBoth(target,currentY);
			break;
		default:
		}
		return clearance;
	}
	,hasClearance: function(target,currentY) {
		var hasClearance = false;
		var _g = target.coreStyle.getKeyword(target.coreStyle.getComputedOrInitialProperty(3));
		switch(_g[1]) {
		case 11:
			hasClearance = this.doGetHasClearance(target,currentY,this.floats.left);
			break;
		case 12:
			hasClearance = this.doGetHasClearance(target,currentY,this.floats.right);
			break;
		case 31:
			hasClearance = this.hasClearanceBoth(target,currentY);
			break;
		default:
		}
		return hasClearance;
	}
	,clearBoth: function(target,currentY) {
		var leftClearance = this.doGetClearance(target,currentY,this.floats.left);
		var rightClearance = this.doGetClearance(target,currentY,this.floats.right);
		if(leftClearance > rightClearance) return leftClearance; else return rightClearance;
	}
	,hasClearanceBoth: function(target,currentY) {
		var hasLeftClearance = this.doGetHasClearance(target,currentY,this.floats.left);
		if(hasLeftClearance == true) return true;
		return this.doGetHasClearance(target,currentY,this.floats.right);
	}
	,doGetClearance: function(target,currentY,floats) {
		var clearance = 0;
		var maxY = currentY;
		var length = floats.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var floatBounds = floats[i].bounds;
			if(floatBounds.y + floatBounds.height >= maxY || floatBounds.y <= maxY && floatBounds.y + floatBounds.height > maxY) maxY = floatBounds.y + floatBounds.height;
		}
		return maxY - currentY;
	}
	,doGetHasClearance: function(target,currentY,floats) {
		var length = floats.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var floatBounds = floats[i].bounds;
			if(floatBounds.y + floatBounds.height >= currentY || floatBounds.y <= currentY && floatBounds.y + floatBounds.height > currentY) return true;
		}
		return false;
	}
	,registerFloat: function(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset) {
		var bounds = this.getFloatBoundsIfAlreadyRegistered(elementRenderer);
		if(bounds != null) return bounds;
		var _g = elementRenderer.coreStyle.getKeyword(elementRenderer.coreStyle.getComputedOrInitialProperty(2));
		switch(_g[1]) {
		case 11:
			var floatBounds = this.getLeftFloatBounds(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset);
			this.floats.left.push(new cocktail.core.layout.FloatVO(elementRenderer,floatBounds));
			return floatBounds;
		case 12:
			var floatBounds1 = this.getRightFloatBounds(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset);
			this.floats.right.push(new cocktail.core.layout.FloatVO(elementRenderer,floatBounds1));
			return floatBounds1;
		default:
			throw "Illegal value for float style";
		}
	}
	,getFloatBoundsIfAlreadyRegistered: function(elementRenderer) {
		var _g1 = 0;
		var _g = this.floats.left.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.floats.left[i].node == elementRenderer) return this.floats.left[i].bounds;
		}
		var _g11 = 0;
		var _g2 = this.floats.right.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.floats.right[i1].node == elementRenderer) return this.floats.right[i1].bounds;
		}
		return null;
	}
	,getLeftFloatBounds: function(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset) {
		var floatBounds = this.getFloatBounds(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset);
		floatBounds.x = this.getLeftFloatOffset(floatBounds.y,floatBounds.height,containingBlockXOffset);
		return floatBounds;
	}
	,getRightFloatBounds: function(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset) {
		var floatBounds = this.getFloatBounds(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset);
		floatBounds.x = this.getRightFloatOffset(floatBounds.y,floatBounds.height,floatBounds.width,containingBlockXOffset,containingBlockWidth) - floatBounds.width;
		return floatBounds;
	}
	,getFloatBounds: function(elementRenderer,floatY,containingBlockWidth,containingBlockXOffset) {
		var usedValues = elementRenderer.coreStyle.usedValues;
		var floatWidth = elementRenderer.bounds.width + usedValues.marginLeft + usedValues.marginRight;
		var floatHeight = elementRenderer.bounds.height + usedValues.marginTop + usedValues.marginBottom;
		var floatY1 = this.getFirstAvailableYPosition(floatY,floatHeight,floatWidth,containingBlockWidth,containingBlockXOffset);
		var floatX = 0.0;
		var rect = new cocktail.core.geom.RectangleVO();
		rect.x = floatX;
		rect.y = floatY1;
		rect.width = floatWidth;
		rect.height = floatHeight;
		return rect;
	}
	,getFirstAvailableYPosition: function(currentYPosition,elementHeight,elementWidth,containingBlockWidth,containingBlockXOffset) {
		var retY = currentYPosition;
		while(this.canFitElementAtY(retY,elementHeight,elementWidth,containingBlockWidth,containingBlockXOffset) == false) {
			var afterFloats = new Array();
			var leftFloatLength = this.floats.left.length;
			var _g = 0;
			while(_g < leftFloatLength) {
				var i = _g++;
				var floatBounds = this.floats.left[i].bounds;
				if(floatBounds.y <= retY && floatBounds.height + floatBounds.y > retY || floatBounds.y <= retY + elementHeight && floatBounds.y > retY) afterFloats.push(floatBounds);
			}
			var rightFloatLength = this.floats.right.length;
			var _g1 = 0;
			while(_g1 < rightFloatLength) {
				var i1 = _g1++;
				var floatBounds1 = this.floats.right[i1].bounds;
				if(floatBounds1.y <= retY && floatBounds1.height + floatBounds1.y > retY || floatBounds1.y <= retY + elementHeight && floatBounds1.y > retY) afterFloats.push(floatBounds1);
			}
			if(afterFloats.length == 0) break; else {
				var nextY = 1000000;
				var _g11 = 0;
				var _g2 = afterFloats.length;
				while(_g11 < _g2) {
					var i2 = _g11++;
					if(afterFloats[i2].y + afterFloats[i2].height - retY < nextY) nextY = afterFloats[i2].y + afterFloats[i2].height - retY;
				}
				retY += nextY;
			}
		}
		return retY;
	}
	,canFitElementAtY: function(y,elementHeight,elementWidth,containingBlockWidth,containingBlockXOffset) {
		if(this.getRightFloatOffset(y,elementHeight,elementWidth,containingBlockXOffset,containingBlockWidth) - this.getLeftFloatOffset(y,elementHeight,containingBlockXOffset) < elementWidth) return false; else return true;
	}
	,getLeftFloatOffset: function(y,elementHeight,containingBlockXOffset) {
		var leftFloatOffset = containingBlockXOffset;
		var length = this.floats.left.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var floatBounds = this.floats.left[i].bounds;
			if(floatBounds.y + floatBounds.height > y && floatBounds.y <= y || floatBounds.y <= y + elementHeight && floatBounds.y > y) {
				if(floatBounds.x + floatBounds.width > leftFloatOffset) leftFloatOffset = floatBounds.x + floatBounds.width;
			}
		}
		return leftFloatOffset;
	}
	,getRightFloatOffset: function(y,elementHeight,elementWidth,containingBlockXOffset,containingBlockWidth) {
		var rightFloatOffset = containingBlockXOffset + containingBlockWidth;
		var length = this.floats.right.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var floatBounds = this.floats.right[i].bounds;
			if(floatBounds.y + floatBounds.height > y && floatBounds.y <= y || floatBounds.y <= y + elementHeight && floatBounds.y > y) {
				if(floatBounds.x < rightFloatOffset) rightFloatOffset = floatBounds.x;
			}
		}
		return rightFloatOffset;
	}
	,get_hasFloats: function() {
		return this.floats.left.length > 0 || this.floats.right.length > 0;
	}
	,__class__: cocktail.core.floats.FloatsManager
	,__properties__: {get_hasFloats:"get_hasFloats"}
};
cocktail.core.focus = {};
cocktail.core.focus.FocusManager = function() {
};
$hxClasses["cocktail.core.focus.FocusManager"] = cocktail.core.focus.FocusManager;
cocktail.core.focus.FocusManager.__name__ = ["cocktail","core","focus","FocusManager"];
cocktail.core.focus.FocusManager.prototype = {
	dispose: function() {
		this.activeElement = null;
	}
	,getNextFocusedElement: function(reverse,rootElement,activeElement) {
		var tabList = this.buildTabList(rootElement);
		var tabListIndex;
		if(activeElement == rootElement) {
			if(reverse == false) tabListIndex = 0; else tabListIndex = tabList.length - 1;
		} else {
			tabListIndex = this.getElementTabListIndex(activeElement,tabList);
			if(reverse == false) tabListIndex++; else tabListIndex--;
		}
		if(tabListIndex == tabList.length) tabListIndex = 0; else if(tabListIndex == -1) tabListIndex = tabList.length - 1;
		return tabList[tabListIndex];
	}
	,getElementTabListIndex: function(element,tabList) {
		var _g1 = 0;
		var _g = tabList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(tabList[i] == element) return i;
		}
		return -1;
	}
	,buildTabList: function(rootElement) {
		var orderedTabList = new Array();
		var indexedTabList = new Array();
		this.doBuildTabList(rootElement,orderedTabList,indexedTabList);
		var _g1 = 0;
		var _g = orderedTabList.length;
		while(_g1 < _g) {
			var i = _g1++;
			indexedTabList.push(orderedTabList[i]);
		}
		return indexedTabList;
	}
	,doBuildTabList: function(htmlElement,orderedTabList,indexedTabList) {
		var _g1 = 0;
		var _g = htmlElement.childNodes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(htmlElement.childNodes[i].get_nodeType() == 1) {
				var child = htmlElement.childNodes[i];
				if(child.hasChildNodes() == true) this.doBuildTabList(child,orderedTabList,indexedTabList);
				if(child.isFocusable() == true) {
					if(child.get_tabIndex() == 0) orderedTabList.push(child); else if(child.get_tabIndex() > 0) {
						if(indexedTabList.length == 0) indexedTabList.push(child); else {
							var foundSpotFlag = false;
							var _g3 = 0;
							var _g2 = indexedTabList.length;
							while(_g3 < _g2) {
								var j = _g3++;
								if(child.get_tabIndex() < indexedTabList[j].get_tabIndex()) {
									indexedTabList.splice(j,0,child);
									foundSpotFlag = true;
								}
							}
							if(foundSpotFlag == false) indexedTabList.push(child);
						}
					}
				}
			}
		}
	}
	,setActiveElement: function(newActiveElement,body) {
		if(newActiveElement == null) return this.activeElement;
		if(this.activeElement == null) return this.activeElement = newActiveElement;
		if(newActiveElement != this.activeElement) {
			var focusOutEvent = new cocktail.core.event.FocusEvent();
			focusOutEvent.initFocusEvent("focusout",true,false,null,0.0,newActiveElement);
			this.activeElement.dispatchEvent(focusOutEvent);
			var focusInEvent = new cocktail.core.event.FocusEvent();
			focusInEvent.initFocusEvent("focusin",true,false,null,0.0,this.activeElement);
			newActiveElement.dispatchEvent(focusInEvent);
			var oldActiveElement = this.activeElement;
			oldActiveElement.invalidateStyleDeclaration(false);
			if(newActiveElement.isFocusable() == true) this.activeElement = newActiveElement; else this.activeElement = body;
			this.activeElement.invalidateStyleDeclaration(false);
			var blurEvent = new cocktail.core.event.FocusEvent();
			blurEvent.initFocusEvent("blur",false,false,null,0.0,null);
			oldActiveElement.dispatchEvent(blurEvent);
			var focusEvent = new cocktail.core.event.FocusEvent();
			focusEvent.initFocusEvent("focus",false,false,null,0.0,null);
			newActiveElement.dispatchEvent(focusEvent);
			if(this.activeElement.onfocus != null) {
				var focusEvent1 = new cocktail.core.event.FocusEvent();
				focusEvent1.initFocusEvent("focus",true,false,null,0.0,null);
				this.activeElement.onfocus(focusEvent1);
			}
		}
		return this.activeElement;
	}
	,__class__: cocktail.core.focus.FocusManager
};
cocktail.core.font = {};
cocktail.core.font.FontMetricsVO = function(fontSize,ascent,descent,xHeight,subscriptOffset,superscriptOffset,underlineOffset,spaceWidth) {
	this.fontSize = fontSize;
	this.ascent = ascent;
	this.descent = descent;
	this.xHeight = xHeight;
	this.subscriptOffset = subscriptOffset;
	this.superscriptOffset = superscriptOffset;
	this.underlineOffset = underlineOffset;
	this.spaceWidth = spaceWidth;
};
$hxClasses["cocktail.core.font.FontMetricsVO"] = cocktail.core.font.FontMetricsVO;
cocktail.core.font.FontMetricsVO.__name__ = ["cocktail","core","font","FontMetricsVO"];
cocktail.core.font.FontMetricsVO.prototype = {
	__class__: cocktail.core.font.FontMetricsVO
};
cocktail.core.font.FontManager = function() {
	this._fontBuilder = new cocktail.port.base.FontBuilderBase();
	this._computedFontMetrics = new haxe.ds.StringMap();
};
$hxClasses["cocktail.core.font.FontManager"] = cocktail.core.font.FontManager;
cocktail.core.font.FontManager.__name__ = ["cocktail","core","font","FontManager"];
cocktail.core.font.FontManager.prototype = {
	dispose: function() {
		this._fontBuilder.dispose();
	}
	,getFontMetrics: function(fontFamily,fontSize) {
		var fontMetrics;
		var fontSizeMap = this._computedFontMetrics.get(fontFamily);
		if(fontSizeMap != null) {
			var key = Math.round(fontSize);
			fontMetrics = fontSizeMap.get(key);
			if(fontMetrics == null) {
				fontMetrics = this.doGetFontMetrics(fontFamily,fontSize);
				var key1 = Math.round(fontSize);
				fontSizeMap.set(key1,fontMetrics);
				this._computedFontMetrics.set(fontFamily,fontSizeMap);
			}
		} else {
			fontMetrics = this.doGetFontMetrics(fontFamily,fontSize);
			fontSizeMap = new haxe.ds.IntMap();
			var key2 = Math.round(fontSize);
			fontSizeMap.set(key2,fontMetrics);
			this._computedFontMetrics.set(fontFamily,fontSizeMap);
		}
		return fontMetrics;
	}
	,createNativeTextElement: function(text,style,fontFamily) {
		return this._fontBuilder.createNativeTextElement(text,style,fontFamily);
	}
	,getNativeFontFamily: function(fontFamily) {
		return this._fontBuilder.getNativeFontFamily(fontFamily);
	}
	,doGetFontMetrics: function(fontFamily,fontSize) {
		return this._fontBuilder.getFontMetrics(fontFamily,fontSize);
	}
	,__class__: cocktail.core.font.FontManager
};
cocktail.core.geom = {};
cocktail.core.geom.CubicBezier = function() {
};
$hxClasses["cocktail.core.geom.CubicBezier"] = cocktail.core.geom.CubicBezier;
cocktail.core.geom.CubicBezier.__name__ = ["cocktail","core","geom","CubicBezier"];
cocktail.core.geom.CubicBezier.prototype = {
	init: function(x1,y1,x2,y2) {
		this._x1 = x1;
		this._y1 = y1;
		this._x2 = x2;
		this._y2 = y2;
		this._cx = 3 * this._x1;
		this._bx = 3 * (this._x2 - this._x1) - this._cx;
		this._ax = 1 - this._cx - this._bx;
		this._cy = 3 * this._y1;
		this._by = 3 * (this._y2 - this._y1) - this._cy;
		this._ay = 1 - this._cy - this._by;
	}
	,bezierX: function(t) {
		return t * (this._cx + t * (this._bx + t * this._ax));
	}
	,bezierY: function(t) {
		return t * (this._cy + t * (this._by + t * this._ay));
	}
	,__class__: cocktail.core.geom.CubicBezier
};
cocktail.core.geom.RectangleVO = function() {
	this.x = 0;
	this.y = 0;
	this.width = 0;
	this.height = 0;
};
$hxClasses["cocktail.core.geom.RectangleVO"] = cocktail.core.geom.RectangleVO;
cocktail.core.geom.RectangleVO.__name__ = ["cocktail","core","geom","RectangleVO"];
cocktail.core.geom.RectangleVO.prototype = {
	__class__: cocktail.core.geom.RectangleVO
};
cocktail.core.geom.PointVO = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["cocktail.core.geom.PointVO"] = cocktail.core.geom.PointVO;
cocktail.core.geom.PointVO.__name__ = ["cocktail","core","geom","PointVO"];
cocktail.core.geom.PointVO.prototype = {
	__class__: cocktail.core.geom.PointVO
};
cocktail.core.geom.DimensionVO = function(width,height) {
	this.width = width;
	this.height = height;
};
$hxClasses["cocktail.core.geom.DimensionVO"] = cocktail.core.geom.DimensionVO;
cocktail.core.geom.DimensionVO.__name__ = ["cocktail","core","geom","DimensionVO"];
cocktail.core.geom.DimensionVO.prototype = {
	__class__: cocktail.core.geom.DimensionVO
};
cocktail.core.geom.GeomUtils = function() {
};
$hxClasses["cocktail.core.geom.GeomUtils"] = cocktail.core.geom.GeomUtils;
cocktail.core.geom.GeomUtils.__name__ = ["cocktail","core","geom","GeomUtils"];
cocktail.core.geom.GeomUtils.addBounds = function(addedBounds,bounds,getHorizontalBounds,getVerticalBounds) {
	if(getVerticalBounds == null) getVerticalBounds = true;
	if(getHorizontalBounds == null) getHorizontalBounds = true;
	if(getHorizontalBounds == true) {
		if(addedBounds.x < bounds.x) bounds.x = addedBounds.x;
		if(addedBounds.x + addedBounds.width > bounds.x + bounds.width) bounds.width = addedBounds.x + addedBounds.width - bounds.x;
	}
	if(getVerticalBounds == true) {
		if(addedBounds.y < bounds.y) bounds.y = addedBounds.y;
		if(addedBounds.y + addedBounds.height > bounds.y + bounds.height) bounds.height = addedBounds.y + addedBounds.height - bounds.y;
	}
};
cocktail.core.geom.GeomUtils.intersectBounds = function(bounds1,bounds2,resultBounds) {
	if(bounds1.x + bounds1.width < bounds2.x || bounds2.x + bounds2.width < bounds1.x || bounds1.y + bounds1.height < bounds2.y || bounds2.y + bounds2.height < bounds1.y) {
		resultBounds.x = 0;
		resultBounds.y = 0;
		resultBounds.height = 0;
		resultBounds.width = 0;
	} else {
		var left = 0;
		var right = 0;
		var top = 0;
		var bottom = 0;
		if(bounds1.x < bounds2.x) left = bounds2.x; else left = bounds1.x;
		if(bounds1.x + bounds1.width < bounds2.x + bounds2.width) right = bounds1.x + bounds1.width; else right = bounds2.x + bounds2.width;
		if(bounds1.y < bounds2.y) top = bounds2.y; else top = bounds1.y;
		if(bounds1.y + bounds1.height < bounds2.y + bounds2.height) bottom = bounds1.y + bounds1.height; else bottom = bounds2.y + bounds2.height;
		resultBounds.x = left;
		resultBounds.y = top;
		resultBounds.width = right - left;
		resultBounds.height = bottom - top;
	}
};
cocktail.core.geom.GeomUtils.getCenteredBounds = function(maximumWidth,maximumHeight,boundsWidth,boundsHeight,resultBounds) {
	if(maximumWidth == 0 || maximumHeight == 0 || boundsWidth == 0 || boundsHeight == 0) return;
	var width;
	var height;
	if(maximumWidth > maximumHeight) {
		var ratio = boundsHeight / maximumHeight;
		if(boundsWidth / ratio < maximumWidth) {
			width = boundsWidth / ratio;
			height = maximumHeight;
		} else {
			ratio = boundsWidth / maximumWidth;
			width = maximumWidth;
			height = boundsHeight / ratio;
		}
	} else {
		var ratio1 = boundsWidth / maximumWidth;
		if(boundsHeight / ratio1 < maximumHeight) {
			height = boundsHeight / ratio1;
			width = maximumWidth;
		} else {
			ratio1 = boundsHeight / maximumHeight;
			width = boundsWidth / ratio1;
			height = maximumHeight;
		}
	}
	var xOffset = (maximumWidth - width) / 2;
	var yOffset = (maximumHeight - height) / 2;
	resultBounds.x = xOffset;
	resultBounds.y = yOffset;
	resultBounds.width = width;
	resultBounds.height = height;
};
cocktail.core.geom.GeomUtils.prototype = {
	__class__: cocktail.core.geom.GeomUtils
};
cocktail.core.geom.Matrix = function(a,b,c,d,e,f) {
	if(f == null) f = 0.0;
	if(e == null) e = 0.0;
	if(d == null) d = 1.0;
	if(c == null) c = 0.0;
	if(b == null) b = 0.0;
	if(a == null) a = 1.0;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
};
$hxClasses["cocktail.core.geom.Matrix"] = cocktail.core.geom.Matrix;
cocktail.core.geom.Matrix.__name__ = ["cocktail","core","geom","Matrix"];
cocktail.core.geom.Matrix.getConcatenationMatrix = function(a,b,c,d,e,f) {
	if(cocktail.core.geom.Matrix._concatenationMatrix == null) cocktail.core.geom.Matrix._concatenationMatrix = new cocktail.core.geom.Matrix();
	cocktail.core.geom.Matrix._concatenationMatrix.a = a;
	cocktail.core.geom.Matrix._concatenationMatrix.b = b;
	cocktail.core.geom.Matrix._concatenationMatrix.c = c;
	cocktail.core.geom.Matrix._concatenationMatrix.d = d;
	cocktail.core.geom.Matrix._concatenationMatrix.e = e;
	cocktail.core.geom.Matrix._concatenationMatrix.f = f;
	return cocktail.core.geom.Matrix._concatenationMatrix;
};
cocktail.core.geom.Matrix.prototype = {
	identity: function() {
		this.a = 1.0;
		this.b = 0.0;
		this.c = 0.0;
		this.d = 1.0;
		this.e = 0.0;
		this.f = 0.0;
	}
	,concatenate: function(matrix) {
		this.a = this.a * matrix.a + this.c * matrix.b;
		this.b = this.b * matrix.a + this.d * matrix.b;
		this.c = this.a * matrix.c + this.c * matrix.d;
		this.d = this.b * matrix.c + this.d * matrix.d;
		this.e = this.a * matrix.e + this.c * matrix.f + this.e;
		this.f = this.b * matrix.e + this.d * matrix.f + this.f;
	}
	,isIdentity: function() {
		return this.a == 1.0 && this.b == 0.0 && this.c == 0.0 && this.d == 1.0 && this.e == 0.0 && this.f == 0.0;
	}
	,translate: function(x,y) {
		this.concatenate(cocktail.core.geom.Matrix.getConcatenationMatrix(1.0,0.0,0.0,1.0,x,y));
	}
	,rotate: function(angle) {
		var a = 0.0;
		var b = 0.0;
		var c = 0.0;
		var d = 0.0;
		if(angle == Math.PI / 2) {
			a = d = 0.0;
			c = b = 1.0;
		} else if(angle == Math.PI) {
			a = d = -1.0;
			c = b = 0.0;
		} else if(angle == Math.PI * 3 / 2) {
			a = d = 0.0;
			c = b = -1.0;
		} else {
			a = d = Math.cos(angle);
			c = b = Math.sin(angle);
		}
		this.concatenate(cocktail.core.geom.Matrix.getConcatenationMatrix(a,b,c * -1.0,d,0.0,0.0));
	}
	,scale: function(scaleX,scaleY) {
		this.concatenate(cocktail.core.geom.Matrix.getConcatenationMatrix(scaleX,0.0,0.0,scaleY,0.0,0.0));
	}
	,skew: function(skewX,skewY) {
		this.concatenate(cocktail.core.geom.Matrix.getConcatenationMatrix(1.0,Math.tan(skewY),Math.tan(skewY),1.0,0.0,0.0));
	}
	,__class__: cocktail.core.geom.Matrix
};
cocktail.core.graphics = {};
cocktail.core.graphics.BackgroundDrawer = function() {
};
$hxClasses["cocktail.core.graphics.BackgroundDrawer"] = cocktail.core.graphics.BackgroundDrawer;
cocktail.core.graphics.BackgroundDrawer.__name__ = ["cocktail","core","graphics","BackgroundDrawer"];
cocktail.core.graphics.BackgroundDrawer.render = function(graphicContext,backgroundBox,style,elementRenderer,clipRect) {
	if(Math.round(backgroundBox.width) <= 0 || Math.round(backgroundBox.height) <= 0) return;
	if(style.usedValues.backgroundColor.alpha != 0.0) {
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.x = backgroundBox.x;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.y = backgroundBox.y;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.width = backgroundBox.width;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.height = backgroundBox.height;
		cocktail.core.geom.GeomUtils.intersectBounds(cocktail.core.graphics.BackgroundDrawer._intersectionBounds,clipRect,cocktail.core.graphics.BackgroundDrawer._intersectionBounds);
		if(cocktail.core.graphics.BackgroundDrawer._intersectionBounds.width == 0 || cocktail.core.graphics.BackgroundDrawer._intersectionBounds.height == 0) return;
		graphicContext.nativeLayer.graphics.fillRect(backgroundBox,style.usedValues.backgroundColor,clipRect);
	}
	if(style.hasBackgroundImage == false) return;
	cocktail.core.graphics.BackgroundDrawer._intersectionBounds.x = backgroundBox.x;
	cocktail.core.graphics.BackgroundDrawer._intersectionBounds.y = backgroundBox.y;
	cocktail.core.graphics.BackgroundDrawer._intersectionBounds.width = backgroundBox.width;
	cocktail.core.graphics.BackgroundDrawer._intersectionBounds.height = backgroundBox.height;
	cocktail.core.geom.GeomUtils.intersectBounds(cocktail.core.graphics.BackgroundDrawer._intersectionBounds,clipRect,cocktail.core.graphics.BackgroundDrawer._intersectionBounds);
	if(cocktail.core.graphics.BackgroundDrawer._intersectionBounds.width == 0 || cocktail.core.graphics.BackgroundDrawer._intersectionBounds.height == 0) return;
	var backgroundImages = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(26));
	var backgroundPositions = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(30));
	var backgroundOrigins = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(28));
	var backgroundClips = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(31));
	var backgroundSizes = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(29));
	var backgroundRepeats = cocktail.core.graphics.BackgroundDrawer.getAsArray(style.getComputedOrInitialProperty(27));
	var i = backgroundImages.length - 1;
	while(i >= 0) {
		var backgroundImage = backgroundImages[i];
		switch(backgroundImage[1]) {
		case 4:
			var value = backgroundImage[2];
			break;
		case 5:
			var value1 = backgroundImage[2];
			cocktail.core.graphics.BackgroundDrawer.drawBackgroundImage(graphicContext,value1,style,backgroundBox,backgroundPositions[cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex(i,backgroundPositions.length)],backgroundSizes[cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex(i,backgroundSizes.length)],backgroundOrigins[cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex(i,backgroundOrigins.length)],backgroundClips[cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex(i,backgroundClips.length)],backgroundRepeats[cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex(i,backgroundRepeats.length)],backgroundImages[i],elementRenderer,clipRect);
			break;
		default:
		}
		i--;
	}
};
cocktail.core.graphics.BackgroundDrawer.getAsArray = function(cssProperty) {
	switch(cssProperty[1]) {
	case 4:
		var value = cssProperty[2];
		return [cssProperty];
	case 7:
		var value1 = cssProperty[2];
		return [cssProperty];
	case 2:
		var value2 = cssProperty[2];
		return [cssProperty];
	case 13:
		var value3 = cssProperty[2];
		return [cssProperty];
	case 5:
		var value4 = cssProperty[2];
		return [cssProperty];
	case 15:
		var value5 = cssProperty[2];
		var arr = [];
		var _g1 = 0;
		var _g = value5.length;
		while(_g1 < _g) {
			var i = _g1++;
			arr.push(value5[i]);
		}
		return arr;
	default:
		return null;
	}
};
cocktail.core.graphics.BackgroundDrawer.getRepeatedIndex = function(index,length) {
	if(index < length) return index; else if(length == 1) return 0;
	return length % index;
};
cocktail.core.graphics.BackgroundDrawer.drawBackgroundImage = function(graphicContext,url,style,backgroundBox,backgroundPosition,backgroundSize,backgroundOrigin,backgroundClip,backgroundRepeat,backgroundImage,elementRenderer,clipRect) {
	var foundResource = false;
	var htmlDocument = elementRenderer.domNode.ownerDocument;
	var resource = htmlDocument.resourceManager.getImageResource(url);
	if(resource.loaded == true) {
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.x = backgroundBox.x;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.y = backgroundBox.y;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.width = backgroundBox.width;
		cocktail.core.graphics.BackgroundDrawer._intersectionBounds.height = backgroundBox.height;
		cocktail.core.geom.GeomUtils.intersectBounds(cocktail.core.graphics.BackgroundDrawer._intersectionBounds,clipRect,cocktail.core.graphics.BackgroundDrawer._intersectionBounds);
		var computedGradientStyles = cocktail.core.layout.computer.BackgroundStylesComputer.computeIndividualBackground(style,backgroundBox,resource.intrinsicWidth,resource.intrinsicHeight,resource.intrinsicRatio,backgroundPosition,backgroundSize,backgroundOrigin,backgroundClip,backgroundRepeat,backgroundImage);
		cocktail.core.graphics.BackgroundDrawer.doDrawBackgroundImage(backgroundBox,graphicContext,resource,computedGradientStyles.backgroundOrigin,computedGradientStyles.backgroundClip,resource.intrinsicWidth,resource.intrinsicHeight,resource.intrinsicRatio,computedGradientStyles.backgroundSize,computedGradientStyles.backgroundPosition,computedGradientStyles.backgroundRepeat,cocktail.core.graphics.BackgroundDrawer._intersectionBounds);
		foundResource = true;
	} else if(resource.loadedWithError == false) {
		resource.addEventListener("load",function(e) {
			elementRenderer.invalidateRendering();
		});
		resource.addEventListener("error",function(e1) {
			elementRenderer.invalidateRendering();
		});
		foundResource = true;
	}
	if(foundResource == false) {
	}
};
cocktail.core.graphics.BackgroundDrawer.doDrawBackgroundImage = function(backgroundBox,graphicContext,resource,backgroundPositioningBox,backgroundPaintingBox,intrinsicWidth,intrinsicHeight,intrinsicRatio,computedBackgroundSize,computedBackgroundPosition,backgroundRepeat,clipRect) {
	var backgroundRepeatX = null;
	var backgroundRepeatY = null;
	switch(backgroundRepeat[1]) {
	case 13:
		var value = backgroundRepeat[2];
		{
			var _g = value[0];
			switch(_g[1]) {
			case 4:
				var value1 = _g[2];
				backgroundRepeatX = value1;
				break;
			default:
			}
		}
		{
			var _g1 = value[1];
			switch(_g1[1]) {
			case 4:
				var value2 = _g1[2];
				backgroundRepeatY = value2;
				break;
			default:
			}
		}
		break;
	default:
	}
	var totalWidth = computedBackgroundPosition.x + backgroundPositioningBox.x;
	var maxWidth = backgroundPaintingBox.x + backgroundPaintingBox.width;
	var imageWidth = computedBackgroundSize.width;
	switch(backgroundRepeatX[1]) {
	case 72:
		maxWidth = totalWidth + imageWidth;
		break;
	case 67:
		while(totalWidth > backgroundPaintingBox.x) totalWidth -= imageWidth;
		break;
	case 70:
		imageWidth = Math.round(backgroundPositioningBox.width / computedBackgroundSize.width);
		while(totalWidth > backgroundPaintingBox.x) totalWidth -= imageWidth;
		break;
	case 71:
		while(totalWidth > backgroundPaintingBox.x) totalWidth -= imageWidth;
		break;
	default:
	}
	var initialWidth = totalWidth;
	var totalHeight = computedBackgroundPosition.y + Math.round(backgroundPositioningBox.y);
	var maxHeight = backgroundPaintingBox.y + backgroundPaintingBox.height;
	var imageHeight = computedBackgroundSize.height;
	switch(backgroundRepeatY[1]) {
	case 72:
		maxHeight = totalHeight + imageHeight;
		break;
	case 67:
		while(totalHeight > backgroundPaintingBox.y) totalHeight -= imageHeight;
		break;
	case 70:
		imageHeight = backgroundPositioningBox.height / computedBackgroundSize.height;
		while(totalHeight > backgroundPaintingBox.y) totalHeight -= imageHeight;
		break;
	case 71:
		while(totalHeight > backgroundPaintingBox.y) totalHeight -= imageHeight;
		break;
	default:
	}
	var initialHeight = totalHeight;
	if(imageWidth / intrinsicWidth == 1 && imageHeight / intrinsicHeight == 1) {
		cocktail.core.graphics.BackgroundDrawer._destinationPoint.x = totalWidth + backgroundBox.x - computedBackgroundPosition.x;
		cocktail.core.graphics.BackgroundDrawer._destinationPoint.y = totalHeight + backgroundBox.y - computedBackgroundPosition.y;
		var intWidth = intrinsicWidth;
		var intHeight = intrinsicHeight;
		cocktail.core.graphics.BackgroundDrawer._box.x = backgroundPaintingBox.x - computedBackgroundPosition.x;
		cocktail.core.graphics.BackgroundDrawer._box.y = backgroundPaintingBox.y - computedBackgroundPosition.y;
		cocktail.core.graphics.BackgroundDrawer._box.width = backgroundPaintingBox.width;
		cocktail.core.graphics.BackgroundDrawer._box.height = backgroundPaintingBox.height;
		while(totalHeight < maxHeight) {
			graphicContext.nativeLayer.graphics.copyPixels(resource.nativeResource,cocktail.core.graphics.BackgroundDrawer._box,cocktail.core.graphics.BackgroundDrawer._destinationPoint,clipRect);
			totalWidth += imageWidth;
			if(totalWidth >= maxWidth) {
				totalWidth = initialWidth;
				totalHeight += imageHeight;
			}
			cocktail.core.graphics.BackgroundDrawer._destinationPoint.x = totalWidth + backgroundBox.x - computedBackgroundPosition.x;
			cocktail.core.graphics.BackgroundDrawer._destinationPoint.y = totalHeight + backgroundBox.y - computedBackgroundPosition.y;
		}
	} else {
		var matrix = new cocktail.core.geom.Matrix();
		backgroundPaintingBox.x += backgroundBox.x + computedBackgroundPosition.x;
		backgroundPaintingBox.y += backgroundBox.y + computedBackgroundPosition.y;
		while(totalHeight < maxHeight) {
			matrix.identity();
			matrix.translate(totalWidth + backgroundBox.x,totalHeight + backgroundBox.y);
			matrix.scale(imageWidth / intrinsicWidth,imageHeight / intrinsicHeight);
			graphicContext.nativeLayer.graphics.drawImage(resource.nativeResource,matrix,backgroundPaintingBox,clipRect);
			totalWidth += imageWidth;
			if(totalWidth >= maxWidth) {
				totalWidth = initialWidth;
				totalHeight += imageHeight;
			}
		}
	}
};
cocktail.core.graphics.BackgroundDrawer.prototype = {
	__class__: cocktail.core.graphics.BackgroundDrawer
};
cocktail.core.graphics.BorderDrawer = function() {
};
$hxClasses["cocktail.core.graphics.BorderDrawer"] = cocktail.core.graphics.BorderDrawer;
cocktail.core.graphics.BorderDrawer.__name__ = ["cocktail","core","graphics","BorderDrawer"];
cocktail.core.graphics.BorderDrawer.draw = function(graphicContext,borderBox,style,clipRect) {
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getTopBorderBox(borderBox,style.usedValues.borderTopWidth),style.usedValues.borderTopColor,style.getKeyword(style.getComputedOrInitialProperty(72)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getLeftBorderBox(borderBox,style.usedValues.borderLeftWidth),style.usedValues.borderLeftColor,style.getKeyword(style.getComputedOrInitialProperty(75)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getRightBorderBox(borderBox,style.usedValues.borderRightWidth),style.usedValues.borderRightColor,style.getKeyword(style.getComputedOrInitialProperty(73)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getBottomBorderBox(borderBox,style.usedValues.borderBottomWidth),style.usedValues.borderBottomColor,style.getKeyword(style.getComputedOrInitialProperty(74)),clipRect);
};
cocktail.core.graphics.BorderDrawer.drawOutline = function(graphicContext,outlineBox,style,clipRect) {
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getTopBorderBox(outlineBox,style.usedValues.outlineWidth),style.usedValues.outlineColor,style.getKeyword(style.getComputedOrInitialProperty(83)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getLeftBorderBox(outlineBox,style.usedValues.outlineWidth),style.usedValues.outlineColor,style.getKeyword(style.getComputedOrInitialProperty(83)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getRightBorderBox(outlineBox,style.usedValues.outlineWidth),style.usedValues.outlineColor,style.getKeyword(style.getComputedOrInitialProperty(83)),clipRect);
	cocktail.core.graphics.BorderDrawer.drawBorder(graphicContext,cocktail.core.graphics.BorderDrawer.getBottomBorderBox(outlineBox,style.usedValues.outlineWidth),style.usedValues.outlineColor,style.getKeyword(style.getComputedOrInitialProperty(83)),clipRect);
};
cocktail.core.graphics.BorderDrawer.drawBorder = function(graphicContext,borderBox,borderColor,borderStyle,clipRect) {
	if(Math.round(borderBox.width) <= 0 || Math.round(borderBox.height) <= 0) return;
	graphicContext.nativeLayer.graphics.fillRect(borderBox,borderColor,clipRect);
};
cocktail.core.graphics.BorderDrawer.getTopBorderBox = function(borderBox,borderWidth) {
	cocktail.core.graphics.BorderDrawer._currentBorderBox.x = borderBox.x;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.y = borderBox.y;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.width = borderBox.width;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.height = borderWidth;
	return cocktail.core.graphics.BorderDrawer._currentBorderBox;
};
cocktail.core.graphics.BorderDrawer.getBottomBorderBox = function(borderBox,borderWidth) {
	cocktail.core.graphics.BorderDrawer._currentBorderBox.x = borderBox.x;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.y = borderBox.y + borderBox.height - borderWidth;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.width = borderBox.width;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.height = borderWidth;
	return cocktail.core.graphics.BorderDrawer._currentBorderBox;
};
cocktail.core.graphics.BorderDrawer.getLeftBorderBox = function(borderBox,borderWidth) {
	cocktail.core.graphics.BorderDrawer._currentBorderBox.x = borderBox.x;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.y = borderBox.y;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.width = borderWidth;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.height = borderBox.height;
	return cocktail.core.graphics.BorderDrawer._currentBorderBox;
};
cocktail.core.graphics.BorderDrawer.getRightBorderBox = function(borderBox,borderWidth) {
	cocktail.core.graphics.BorderDrawer._currentBorderBox.x = borderBox.x + borderBox.width - borderWidth;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.y = borderBox.y;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.width = borderWidth;
	cocktail.core.graphics.BorderDrawer._currentBorderBox.height = borderBox.height;
	return cocktail.core.graphics.BorderDrawer._currentBorderBox;
};
cocktail.core.graphics.BorderDrawer.prototype = {
	__class__: cocktail.core.graphics.BorderDrawer
};
cocktail.core.graphics.GraphicsContext = function(layerRenderer) {
	cocktail.core.ds.FastNode.call(this);
	this.layerRenderer = layerRenderer;
	this._needsNativeLayerUpdate = true;
	this.nativeLayer = new cocktail.port.base.NativeLayerBase();
};
$hxClasses["cocktail.core.graphics.GraphicsContext"] = cocktail.core.graphics.GraphicsContext;
cocktail.core.graphics.GraphicsContext.__name__ = ["cocktail","core","graphics","GraphicsContext"];
cocktail.core.graphics.GraphicsContext.__super__ = cocktail.core.ds.FastNode;
cocktail.core.graphics.GraphicsContext.prototype = $extend(cocktail.core.ds.FastNode.prototype,{
	dispose: function() {
		this.nativeLayer.dispose();
		this.nativeLayer = null;
		this.layerRenderer = null;
	}
	,appendChild: function(newChild) {
		cocktail.core.ds.FastNode.prototype.appendChild.call(this,newChild);
		newChild.addedToGraphicsContextTree();
	}
	,removeChild: function(oldChild) {
		oldChild.removedFromGraphicsContextTree();
		cocktail.core.ds.FastNode.prototype.removeChild.call(this,oldChild);
	}
	,insertBefore: function(newChild,refChild) {
		cocktail.core.ds.FastNode.prototype.insertBefore.call(this,newChild,refChild);
		if(refChild == null) return;
		newChild.addedToGraphicsContextTree();
	}
	,addedToGraphicsContextTree: function() {
		this.invalidateNativeLayer();
		this.invalidateBitmapSize();
	}
	,removedFromGraphicsContextTree: function() {
		this.detach();
		this.invalidateNativeLayer();
		this.invalidateBitmapSize();
	}
	,updateGraphicsSize: function(viewportWidth,viewportHeight) {
		if(this.layerRenderer.needsBitmap() == true) this.nativeLayer.initBitmapData(viewportWidth,viewportHeight);
		var child = this.firstChild;
		while(child != null) {
			child.updateGraphicsSize(viewportWidth,viewportHeight);
			child = child.nextSibling;
		}
	}
	,updateNativeLayer: function() {
		if(this._needsNativeLayerUpdate == true) {
			this._needsNativeLayerUpdate = false;
			this.detach();
			this.attach();
			return;
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateNativeLayer();
			child = child.nextSibling;
		}
	}
	,invalidateNativeLayer: function() {
		this._needsNativeLayerUpdate = true;
		var htmlDocument = this.layerRenderer.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateNativeLayerTree();
	}
	,invalidateBitmapSize: function() {
		var htmlDocument = this.layerRenderer.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateBitmapSizes();
	}
	,attach: function() {
		this.doAttach();
		var child = this.firstChild;
		while(child != null) {
			child.attach();
			child = child.nextSibling;
		}
	}
	,detach: function() {
		var child = this.firstChild;
		while(child != null) {
			child.detach();
			child = child.nextSibling;
		}
		this.doDetach();
	}
	,doAttach: function() {
		var index = 0;
		var previousGraphicsContextSibling = this.previousSibling;
		while(previousGraphicsContextSibling != null) {
			index++;
			previousGraphicsContextSibling = previousGraphicsContextSibling.previousSibling;
		}
		this.nativeLayer.attach(this.parentNode.nativeLayer.platformLayer,index);
	}
	,doDetach: function() {
		this.nativeLayer.detach(this.parentNode.nativeLayer.platformLayer);
	}
	,__class__: cocktail.core.graphics.GraphicsContext
});
cocktail.core.graphics.InitialGraphicsContext = function(layerRenderer) {
	cocktail.core.graphics.GraphicsContext.call(this,layerRenderer);
	this.invalidateNativeLayer();
};
$hxClasses["cocktail.core.graphics.InitialGraphicsContext"] = cocktail.core.graphics.InitialGraphicsContext;
cocktail.core.graphics.InitialGraphicsContext.__name__ = ["cocktail","core","graphics","InitialGraphicsContext"];
cocktail.core.graphics.InitialGraphicsContext.__super__ = cocktail.core.graphics.GraphicsContext;
cocktail.core.graphics.InitialGraphicsContext.prototype = $extend(cocktail.core.graphics.GraphicsContext.prototype,{
	doAttach: function() {
		this.nativeLayer.attach(this.getTopPlatformLayer(),0);
		this.invalidateBitmapSize();
	}
	,doDetach: function() {
		this.nativeLayer.detach(this.getTopPlatformLayer());
	}
	,getTopPlatformLayer: function() {
		var htmlDocument = this.layerRenderer.rootElementRenderer.domNode.ownerDocument;
		return htmlDocument.window.platform.getTopPlatformLayer();
	}
	,__class__: cocktail.core.graphics.InitialGraphicsContext
});
cocktail.core.graphics.TextDrawer = function() {
};
$hxClasses["cocktail.core.graphics.TextDrawer"] = cocktail.core.graphics.TextDrawer;
cocktail.core.graphics.TextDrawer.__name__ = ["cocktail","core","graphics","TextDrawer"];
cocktail.core.graphics.TextDrawer.draw = function(graphicsContext,elementRenderer,hasUnderline,hasOverline,hasLineThrough,hasBlink,scrollOffset,clipRect) {
	var inlineBoxesLength = elementRenderer.inlineBoxes.length;
	var _g = 0;
	while(_g < inlineBoxesLength) {
		var i = _g++;
		var inlineBox = elementRenderer.inlineBoxes[i];
		cocktail.core.graphics.TextDrawer._renderRect.width = inlineBox.bounds.width;
		cocktail.core.graphics.TextDrawer._renderRect.height = inlineBox.bounds.height;
		cocktail.core.graphics.TextDrawer._destPoint.x = inlineBox.bounds.x + elementRenderer.globalBounds.x - scrollOffset.x;
		cocktail.core.graphics.TextDrawer._destPoint.y = inlineBox.bounds.y + elementRenderer.globalBounds.y - scrollOffset.y;
		cocktail.core.graphics.TextDrawer._destPoint.y += inlineBox.leadedAscent - elementRenderer.coreStyle.fontMetrics.ascent;
		if(inlineBox.lineBox != null) {
			cocktail.core.graphics.TextDrawer._destPoint.y += inlineBox.lineBox.bounds.y;
			cocktail.core.graphics.TextDrawer._destPoint.x += inlineBox.lineBox.bounds.x;
		}
		if(hasUnderline == true) {
			cocktail.core.graphics.TextDrawer._decorationRect.width = cocktail.core.graphics.TextDrawer._renderRect.width;
			cocktail.core.graphics.TextDrawer._decorationRect.height = cocktail.core.graphics.TextDrawer.TEXT_DECORATION_THICKNESS;
			cocktail.core.graphics.TextDrawer._decorationRect.x = cocktail.core.graphics.TextDrawer._destPoint.x;
			cocktail.core.graphics.TextDrawer._decorationRect.y = cocktail.core.graphics.TextDrawer._destPoint.y + elementRenderer.getLeadedAscent() + elementRenderer.coreStyle.fontMetrics.underlineOffset;
			graphicsContext.nativeLayer.graphics.fillRect(cocktail.core.graphics.TextDrawer._decorationRect,elementRenderer.coreStyle.usedValues.color,clipRect);
		}
		if(hasOverline == true) {
			cocktail.core.graphics.TextDrawer._decorationRect.width = cocktail.core.graphics.TextDrawer._renderRect.width;
			cocktail.core.graphics.TextDrawer._decorationRect.height = cocktail.core.graphics.TextDrawer.TEXT_DECORATION_THICKNESS;
			cocktail.core.graphics.TextDrawer._decorationRect.x = cocktail.core.graphics.TextDrawer._destPoint.x;
			cocktail.core.graphics.TextDrawer._decorationRect.y = cocktail.core.graphics.TextDrawer._destPoint.y;
			graphicsContext.nativeLayer.graphics.fillRect(cocktail.core.graphics.TextDrawer._decorationRect,elementRenderer.coreStyle.usedValues.color,clipRect);
		}
		if(inlineBox.isSpace == false) {
			var typedTextInlineBox = inlineBox;
			if(typedTextInlineBox.get_nativeTextBitmap() != null) graphicsContext.nativeLayer.graphics.copyPixels(typedTextInlineBox.get_nativeTextBitmap(),cocktail.core.graphics.TextDrawer._renderRect,cocktail.core.graphics.TextDrawer._destPoint,clipRect);
		}
		if(hasLineThrough == true) {
			cocktail.core.graphics.TextDrawer._decorationRect.width = cocktail.core.graphics.TextDrawer._renderRect.width;
			cocktail.core.graphics.TextDrawer._decorationRect.height = cocktail.core.graphics.TextDrawer.TEXT_DECORATION_THICKNESS;
			cocktail.core.graphics.TextDrawer._decorationRect.x = cocktail.core.graphics.TextDrawer._destPoint.x;
			cocktail.core.graphics.TextDrawer._decorationRect.y = cocktail.core.graphics.TextDrawer._destPoint.y + elementRenderer.coreStyle.fontMetrics.ascent / 2;
			graphicsContext.nativeLayer.graphics.fillRect(cocktail.core.graphics.TextDrawer._decorationRect,elementRenderer.coreStyle.usedValues.color,clipRect);
		}
	}
};
cocktail.core.graphics.TextDrawer.prototype = {
	__class__: cocktail.core.graphics.TextDrawer
};
cocktail.core.history = {};
cocktail.core.history.History = function(document) {
	this.stateDataArray = new Array();
	this.currentIdx = 0;
	this.document = document;
	this.stateDataArray.push({ state : null, title : "", url : null});
};
$hxClasses["cocktail.core.history.History"] = cocktail.core.history.History;
cocktail.core.history.History.__name__ = ["cocktail","core","history","History"];
cocktail.core.history.History.prototype = {
	dispose: function() {
		this.stateDataArray = null;
		this.document = null;
		this.state = null;
	}
	,get_length: function() {
		return this.stateDataArray.length;
	}
	,go: function(delta) {
		var newIndex = this.currentIdx + delta;
		if(newIndex < 0 || newIndex >= this.stateDataArray.length) return;
		this.currentIdx = newIndex;
		this.state = this.cloneData(this.stateDataArray[this.currentIdx].state);
		this.onPopState({ state : this.state, title : this.stateDataArray[this.currentIdx].title, url : this.stateDataArray[this.currentIdx].url});
	}
	,back: function() {
		this.go(-1);
	}
	,forward: function() {
		this.go(1);
	}
	,pushState: function(data,title,url) {
		while(this.stateDataArray.length > this.currentIdx + 1) this.stateDataArray.pop();
		var newStateData = this.computeStateData(data,title,url);
		this.stateDataArray.push(newStateData);
		this.currentIdx++;
		this.state = this.cloneData(newStateData.state);
	}
	,replaceState: function(data,title,url) {
		var newStateData = this.computeStateData(data,title,url);
		this.stateDataArray[this.currentIdx] = newStateData;
		this.state = this.cloneData(newStateData.state);
	}
	,onPopState: function(stateData) {
		var clonedState = this.cloneData(stateData.state);
		var event = new cocktail.core.event.PopStateEvent();
		event.initPopStateEvent("popstate",true,false,null,0.0,clonedState);
		this.document.window.dispatchEvent(event);
		if(this.document.window.onpopstate != null) this.document.window.onpopstate(event);
	}
	,cloneData: function(data) {
		return haxe.Unserializer.run(haxe.Serializer.run(data));
	}
	,computeStateData: function(data,title,url) {
		var clonedData;
		try {
			clonedData = this.cloneData(data);
		} catch( e ) {
			throw "SecurityError - Error duplicating the data passed to History::replaceState or History::pushState. The error is: " + Std.string(e);
		}
		if(url != null) url = this.resolveUrl(url); else url = this.stateDataArray[this.currentIdx].url;
		return { state : clonedData, title : title, url : url};
	}
	,resolveUrl: function(url,base) {
		if(base == null) {
			var tags = this.document.getElementsByTagName("base");
			var _g1 = 0;
			var _g = tags.length;
			while(_g1 < _g) {
				var idx = _g1++;
				if(tags[idx].hasAttribute("href")) {
					base = tags[idx].getAttribute("href");
					break;
				}
			}
			if(base == null) base = "";
		}
		url = StringTools.replace(url,"\\","/");
		var idxBase = url.indexOf("http");
		if(idxBase != 0) url = base + url;
		var urlArray = url.split("/");
		var absoluteUrlArray = new Array();
		var _g11 = 0;
		var _g2 = urlArray.length;
		while(_g11 < _g2) {
			var idx1 = _g11++;
			if(urlArray[idx1] == "..") absoluteUrlArray.pop(); else absoluteUrlArray.push(urlArray[idx1]);
		}
		url = absoluteUrlArray.join("/");
		return url;
	}
	,__class__: cocktail.core.history.History
	,__properties__: {get_length:"get_length"}
};
cocktail.core.hittest = {};
cocktail.core.hittest.HitTestManager = function() {
	this._targetPoint = new cocktail.core.geom.PointVO(0.0,0.0);
	this._elementRenderersAtPoint = new Array();
};
$hxClasses["cocktail.core.hittest.HitTestManager"] = cocktail.core.hittest.HitTestManager;
cocktail.core.hittest.HitTestManager.__name__ = ["cocktail","core","hittest","HitTestManager"];
cocktail.core.hittest.HitTestManager.prototype = {
	dispose: function() {
		this._elementRenderersAtPoint = null;
		this._targetPoint = null;
	}
	,getTopMostElementRendererAtPoint: function(stackingContext,x,y) {
		this._targetPoint.x = x;
		this._targetPoint.y = y;
		this._elementRenderersAtPoint = [];
		this.getElementRenderersAtPointInStackingContext(this._elementRenderersAtPoint,stackingContext,this._targetPoint);
		return this._elementRenderersAtPoint[this._elementRenderersAtPoint.length - 1];
	}
	,getElementRenderersAtPointInStackingContext: function(elementRenderersAtPoint,stackingContext,point) {
		this.getElementRenderersAtPointInLayers(elementRenderersAtPoint,stackingContext.layerRenderer,point);
		var child = stackingContext.firstChild;
		while(child != null) {
			this.getElementRenderersAtPointInStackingContext(elementRenderersAtPoint,child,point);
			child = child.nextSibling;
		}
	}
	,getElementRenderersAtPointInLayers: function(elementRenderersAtPoint,layer,point) {
		this.getElementRenderersAtPointInLayer(elementRenderersAtPoint,layer,layer.rootElementRenderer,point);
		var child = layer.firstChild;
		while(child != null) {
			if(child.hasOwnStackingContext == false) this.getElementRenderersAtPointInLayers(elementRenderersAtPoint,child,point);
			child = child.nextSibling;
		}
	}
	,getElementRenderersAtPointInLayer: function(elementRenderersAtPoint,layer,renderer,point) {
		this.hitTestElementRenderer(elementRenderersAtPoint,renderer,point);
		var child = renderer.firstChild;
		while(child != null) {
			if(child.layerRenderer == layer) {
				if(child.firstChild != null) this.getElementRenderersAtPointInLayer(elementRenderersAtPoint,layer,child,point); else this.hitTestElementRenderer(elementRenderersAtPoint,child,point);
			}
			child = child.nextSibling;
		}
	}
	,hitTestElementRenderer: function(elementRenderersAtPoint,elementRenderer,point) {
		if(this.isWithinBounds(point,elementRenderer.hitTestingBounds) == true) {
			if(elementRenderer.isVisible() == true) elementRenderersAtPoint.push(elementRenderer);
		}
	}
	,isWithinBounds: function(point,bounds) {
		return point.x >= bounds.x && point.x <= bounds.x + bounds.width && point.y >= bounds.y && point.y <= bounds.y + bounds.height;
	}
	,__class__: cocktail.core.hittest.HitTestManager
};
cocktail.core.html.EmbeddedElement = function(tagName) {
	cocktail.core.html.HTMLElement.call(this,tagName);
};
$hxClasses["cocktail.core.html.EmbeddedElement"] = cocktail.core.html.EmbeddedElement;
cocktail.core.html.EmbeddedElement.__name__ = ["cocktail","core","html","EmbeddedElement"];
cocktail.core.html.EmbeddedElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.EmbeddedElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	init: function() {
		cocktail.core.html.HTMLElement.prototype.init.call(this);
	}
	,get_intrinsicHeight: function() {
		return this.intrinsicHeight;
	}
	,get_intrinsicWidth: function() {
		return this.intrinsicWidth;
	}
	,get_intrinsicRatio: function() {
		return this.intrinsicRatio;
	}
	,set_width: function(value) {
		this.setAttribute("width",value == null?"null":"" + value);
		return value;
	}
	,get_width: function() {
		return this.getAttributeAsPositiveSignedInteger("width",0);
	}
	,set_height: function(value) {
		this.setAttribute("height",value == null?"null":"" + value);
		return value;
	}
	,get_height: function() {
		return this.getAttributeAsPositiveSignedInteger("height",0);
	}
	,__class__: cocktail.core.html.EmbeddedElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{get_intrinsicRatio:"get_intrinsicRatio",get_intrinsicWidth:"get_intrinsicWidth",get_intrinsicHeight:"get_intrinsicHeight",set_width:"set_width",get_width:"get_width",set_height:"set_height",get_height:"get_height"})
});
cocktail.core.html.FormAssociatedElement = function(tagName) {
	cocktail.core.html.EmbeddedElement.call(this,tagName);
};
$hxClasses["cocktail.core.html.FormAssociatedElement"] = cocktail.core.html.FormAssociatedElement;
cocktail.core.html.FormAssociatedElement.__name__ = ["cocktail","core","html","FormAssociatedElement"];
cocktail.core.html.FormAssociatedElement.__super__ = cocktail.core.html.EmbeddedElement;
cocktail.core.html.FormAssociatedElement.prototype = $extend(cocktail.core.html.EmbeddedElement.prototype,{
	appended: function() {
		cocktail.core.html.EmbeddedElement.prototype.appended.call(this);
		this.resetFormOwner();
	}
	,removed: function() {
		cocktail.core.html.EmbeddedElement.prototype.removed.call(this);
		this.resetFormOwner();
	}
	,resetFormOwner: function() {
		var firstFormAncestor = this.getFirstFormAncestor();
		if(firstFormAncestor == this.form) return;
		if(this.form != null) {
			this.dissociateFormElement(this.form);
			this.form = null;
		}
		if(firstFormAncestor != null) {
			this.form = firstFormAncestor;
			this.associateFormElement(this.form);
		}
	}
	,getFirstFormAncestor: function() {
		var parent = this.parentNode;
		while(parent != null) {
			if(parent.tagName == "FORM") return parent;
			parent = parent.parentNode;
		}
		return null;
	}
	,associateFormElement: function(form) {
		form.elements.push(this);
	}
	,dissociateFormElement: function(form) {
		HxOverrides.remove(form.elements,this);
	}
	,__class__: cocktail.core.html.FormAssociatedElement
});
cocktail.core.html.HTMLAnchorElement = function() {
	cocktail.core.html.HTMLElement.call(this,"A");
};
$hxClasses["cocktail.core.html.HTMLAnchorElement"] = cocktail.core.html.HTMLAnchorElement;
cocktail.core.html.HTMLAnchorElement.__name__ = ["cocktail","core","html","HTMLAnchorElement"];
cocktail.core.html.HTMLAnchorElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLAnchorElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	hasActivationBehaviour: function() {
		return true;
	}
	,runPostClickActivationStep: function(event) {
		if(event.defaultPrevented == true) return;
		this.openDocument();
	}
	,isDefaultFocusable: function() {
		if(this.get_href() != null) return true; else return false;
	}
	,openDocument: function() {
		if(this.get_href() != null) this._ownerHTMLDocument.navigateToURL(this.get_href(),this.get_target());
	}
	,set_href: function(value) {
		this.setAttribute("href",value);
		return value;
	}
	,get_href: function() {
		return this.getAttributeAsDOMString("href");
	}
	,set_target: function(value) {
		this.setAttribute("target",value);
		return value;
	}
	,get_target: function() {
		return this.getAttributeAsDOMString("target");
	}
	,__class__: cocktail.core.html.HTMLAnchorElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_target:"set_target",get_target:"get_target",set_href:"set_href",get_href:"get_href"})
});
cocktail.core.html.HTMLMediaElement = function(tagName) {
	cocktail.core.html.EmbeddedElement.call(this,tagName);
	this.networkState = 0;
	this.ended = false;
	this.duration = 0;
	this.paused = true;
	this.seeking = false;
	this.readyState = 0;
	this._autoplaying = true;
	this.set_volume(1.0);
	this.set_muted(false);
	this._stalledByPreload = false;
	this._loadedDataWasDispatched = false;
	this._defaultPlaybackStartPosition = 0;
	this._officialPlaybackPosition = 0;
	this._currentPlaybackPosition = 0;
	this._initialPlaybackPosition = 0;
	this._earliestPossiblePosition = 0;
};
$hxClasses["cocktail.core.html.HTMLMediaElement"] = cocktail.core.html.HTMLMediaElement;
cocktail.core.html.HTMLMediaElement.__name__ = ["cocktail","core","html","HTMLMediaElement"];
cocktail.core.html.HTMLMediaElement.__super__ = cocktail.core.html.EmbeddedElement;
cocktail.core.html.HTMLMediaElement.prototype = $extend(cocktail.core.html.EmbeddedElement.prototype,{
	init: function() {
		this.initNativeMedia();
		cocktail.core.html.EmbeddedElement.prototype.init.call(this);
	}
	,initNativeMedia: function() {
	}
	,appendChild: function(newChild) {
		cocktail.core.html.EmbeddedElement.prototype.appendChild.call(this,newChild);
		if(this.get_src() == null && this.networkState == 0) {
			if(newChild.get_nodeName() == "SOURCE") this.selectResource();
		}
		return newChild;
	}
	,setAttribute: function(name,value) {
		if(name == "src") this.set_src(value); else if(name == "preload") this.set_preload(value); else cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,name,value);
	}
	,getAttribute: function(name) {
		if(name == "preload") return this.get_preload(); else return cocktail.core.html.EmbeddedElement.prototype.getAttribute.call(this,name);
	}
	,play: function() {
		if(this.networkState == 0) this.selectResource();
		if(this.ended == true) {
			this.ended = false;
			this.seek(0);
		}
		if(this.paused == true) {
			this.paused = false;
			this.fireEvent("play",false,false);
			var _g = this.readyState;
			switch(_g) {
			case 0:case 1:case 2:
				this.fireEvent("waiting",false,false);
				break;
			case 3:case 4:
				this.doPlay();
				this.fireEvent("playing",false,false);
				break;
			}
		}
		this._autoplaying = false;
		if(this._stalledByPreload == true) this.selectResource();
	}
	,pause: function() {
		if(this.networkState == 0) this.selectResource();
		this._autoplaying = false;
		if(this.paused == false) {
			this.paused = true;
			this.fireEvent("timeupdate",false,false);
			this.fireEvent("pause",false,false);
			this._officialPlaybackPosition = this._currentPlaybackPosition;
		}
		this.nativeMedia.pause();
	}
	,canPlayType: function(type) {
		return this.nativeMedia.canPlayType(type);
	}
	,doPlay: function() {
		this.nativeMedia.play();
		this.onTimeUpdateTick(0);
	}
	,loadResource: function() {
		var _g = this.networkState;
		switch(_g) {
		case 2:case 1:
			this.fireEvent("abort",false,false);
			break;
		}
		if(this.networkState != 0) {
			this.fireEvent("emptied",false,false);
			this.nativeMedia.set_src(null);
			this.networkState = 0;
			this.readyState = 0;
			this.paused = true;
			this.seeking = false;
			this._currentPlaybackPosition = 0;
			if(this._officialPlaybackPosition > 0) {
				this._officialPlaybackPosition = 0;
				this.fireEvent("timeupdate",false,false);
			} else this._officialPlaybackPosition = 0;
			this._initialPlaybackPosition = 0;
			this.duration = Math.NaN;
		}
		this._loadedDataWasDispatched = false;
		this.selectResource();
	}
	,selectResource: function() {
		this.networkState = 3;
		this._ownerHTMLDocument.timer.delay($bind(this,this.doSelectResource));
	}
	,doSelectResource: function(time) {
		var mode;
		var candidate;
		if(this.get_src() != null) mode = 0; else if(this.hasChildSourceElement() == true) {
			mode = 1;
			var length = this.childNodes.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				if(this.childNodes[i].get_nodeName() == "SOURCE") {
					candidate = this.childNodes[i];
					break;
				}
			}
		} else {
			this.networkState = 0;
			return;
		}
		this.networkState = 2;
		this.fireEvent("loadstart",false,false);
		if(mode == 0) {
			if(this.get_src() == "") {
				this.networkState = 3;
				this.fireEvent("error",false,false);
				return;
			}
			this.currentSrc = this.get_src();
			this.fetchResource(this.currentSrc);
		} else if(mode == 1) {
			var _g1 = 0;
			var _g2 = this.childNodes.length;
			while(_g1 < _g2) {
				var i1 = _g1++;
				if(this.childNodes[i1].get_nodeName() == "SOURCE") {
					var sourceChild = this.childNodes[i1];
					if(sourceChild.get_type() != null) {
						if(this.canPlayType(sourceChild.get_type()) == "probably") {
							this.currentSrc = sourceChild.get_src();
							this.fetchResource(this.currentSrc);
							return;
						}
					} else if(sourceChild.get_src() != null) {
						if(this.canPlayType(sourceChild.get_src()) == "probably") {
							this.currentSrc = sourceChild.get_src();
							this.fetchResource(this.currentSrc);
							return;
						}
					}
				}
			}
			this.networkState = 0;
		}
	}
	,fetchResource: function(url) {
		if(this.get_preload() == "none" && this._stalledByPreload == false) {
			if(this.get_autoplay() == false) {
				this.networkState = 1;
				this.fireEvent("suspend",false,false);
				this._stalledByPreload = true;
				return;
			}
		}
		this.nativeMedia.onLoadedMetaData = $bind(this,this.onNativeMediaLoadedMetaData);
		var absoluteUrl = this._ownerHTMLDocument.getAbsoluteURL(url);
		this.nativeMedia.set_src(absoluteUrl);
	}
	,seek: function(newPlaybackPosition) {
		if(this.readyState == 0) return;
		if(this.seeking == true) {
		}
		this.seeking = true;
		if(newPlaybackPosition > this.duration) newPlaybackPosition = this.duration;
		if(newPlaybackPosition < this._earliestPossiblePosition) newPlaybackPosition = 0;
		this.fireEvent("seeking",false,false);
		this._currentPlaybackPosition = newPlaybackPosition;
		this.nativeMedia.seek(newPlaybackPosition);
		this.fireEvent("timeupdate",false,false);
		this.fireEvent("seeked",false,false);
	}
	,setReadyState: function(newReadyState) {
		if(this.readyState == 0 && newReadyState == 1) this.fireEvent("loadedmetadata",false,false);
		if(this.readyState == 1 && (newReadyState == 2 || newReadyState == 4 || newReadyState == 3) || this.readyState == 3 && newReadyState == 4) {
			if(this._loadedDataWasDispatched == false && this.readyState == 1) {
				this.fireEvent("loadeddata",false,false);
				this._loadedDataWasDispatched = true;
			}
			if(newReadyState == 4 || newReadyState == 3) {
				if(this.readyState >= 3 && newReadyState <= 2) {
					if(this.isPotentiallyPlaying() == true) {
						this.fireEvent("timeupdate",false,false);
						this.fireEvent("waiting",false,false);
					}
				}
				if(this.readyState <= 2 && newReadyState == 3) {
					this.fireEvent("canplay",false,false);
					if(this.paused == false) {
						this.doPlay();
						this.fireEvent("playing",false,false);
					}
				}
				if(newReadyState == 4) {
					if(this.readyState == 2) {
						this.fireEvent("canplay",false,false);
						if(this.paused == false) {
							this.doPlay();
							this.fireEvent("playing",false,false);
						}
					}
					if(this._autoplaying == true) {
						if(this.paused == true) {
							if(this.get_autoplay() == true) {
								this.paused = false;
								this.fireEvent("play",false,false);
								this.doPlay();
								this.fireEvent("playing",false,false);
							}
						}
					}
					this.fireEvent("canplaythrough",false,false);
				}
			}
		}
		this.readyState = newReadyState;
	}
	,isPotentiallyPlaying: function() {
		if(this.paused == true) return false;
		if(this.ended == true) return false;
		return true;
	}
	,establishMediaTimeline: function() {
		this._currentPlaybackPosition = 0;
		this._initialPlaybackPosition = 0;
		this._officialPlaybackPosition = 0;
		this.duration = this.nativeMedia.get_duration();
		this.fireEvent("durationchange",false,false);
		this.setReadyState(1);
		var jumped = false;
		if(this._defaultPlaybackStartPosition > 0) {
			this.seek(this._defaultPlaybackStartPosition);
			jumped = true;
		}
		this._defaultPlaybackStartPosition = 0;
	}
	,hasChildSourceElement: function() {
		var _g1 = 0;
		var _g = this.childNodes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.childNodes[i].get_nodeName() == "SOURCE") return true;
		}
		return false;
	}
	,onLoadingError: function(error) {
		this.selectResource();
	}
	,onNativeMediaLoadedMetaData: function(e) {
		this.intrinsicHeight = this.nativeMedia.get_height();
		this.intrinsicWidth = this.nativeMedia.get_width();
		this.intrinsicRatio = this.get_intrinsicHeight() / this.get_intrinsicWidth();
		this.establishMediaTimeline();
		this.invalidate();
		this.onProgressTick(0);
		if(this._stalledByPreload == true) {
			this._stalledByPreload = false;
			this.play();
		}
	}
	,onTimeUpdateTick: function(timeStamp) {
		if(this.paused == true) return;
		this._currentPlaybackPosition = this.nativeMedia.get_currentTime();
		this._officialPlaybackPosition = this._currentPlaybackPosition;
		if(this.duration - this._currentPlaybackPosition < 0.2) {
			if(this.get_loop() == true) {
				this.seek(0);
				this.doPlay();
				return;
			}
			this.ended = true;
			this._currentPlaybackPosition = this.duration;
			this._officialPlaybackPosition = this._currentPlaybackPosition;
			this.fireEvent("timeupdate",false,false);
			if(this.paused == false) {
				this.paused = true;
				this.fireEvent("pause",false,false);
			}
			this.fireEvent("ended",false,false);
			return;
		}
		this.fireEvent("timeupdate",false,false);
		this._ownerHTMLDocument.timer.delay($bind(this,this.onTimeUpdateTick),250);
	}
	,onProgressTick: function(timeStamp) {
		this.fireEvent("progress",false,false);
		if(this.readyState == 1) this.setReadyState(3);
		if(this.nativeMedia.get_bytesLoaded() >= this.nativeMedia.get_bytesTotal()) {
			this.setReadyState(4);
			this.networkState = 1;
			this.fireEvent("suspend",false,false);
			return;
		}
		this._ownerHTMLDocument.timer.delay($bind(this,this.onProgressTick),350);
	}
	,get_src: function() {
		return this.getAttribute("src");
	}
	,set_src: function(value) {
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"src",value);
		this.selectResource();
		return value;
	}
	,get_autoplay: function() {
		if(this.getAttribute("autoplay") != null) return true; else return false;
	}
	,set_autoplay: function(value) {
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"autoplay",value == null?"null":"" + value);
		return value;
	}
	,get_loop: function() {
		if(this.getAttribute("loop") != null) return true; else return false;
	}
	,set_loop: function(value) {
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"loop",value == null?"null":"" + value);
		return value;
	}
	,get_preload: function() {
		var preloadValue = cocktail.core.html.EmbeddedElement.prototype.getAttribute.call(this,"preload");
		if(preloadValue == null) return "metadata";
		return preloadValue;
	}
	,set_preload: function(value) {
		switch(value) {
		case "":
			value = "auto";
			break;
		case "auto":case "metadata":case "none":
			break;
		default:
			value = "metadata";
		}
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"preload",value);
		return value;
	}
	,set_muted: function(value) {
		if(value == false) this.nativeMedia.set_volume(this.volume); else this.nativeMedia.set_volume(0);
		this.muted = value;
		this.fireEvent("volumechange",false,false);
		return value;
	}
	,set_volume: function(value) {
		if(this.muted == false) this.nativeMedia.set_volume(value);
		this.volume = value;
		this.fireEvent("volumechange",false,false);
		return value;
	}
	,get_buffered: function() {
		var ranges = new Array();
		ranges.push({ start : 0.0, end : this.duration * (this.nativeMedia.get_bytesLoaded() / this.nativeMedia.get_bytesTotal())});
		var timeRanges = new cocktail.core.html.TimeRanges(ranges);
		return timeRanges;
	}
	,get_currentTime: function() {
		if(this._defaultPlaybackStartPosition != 0) return this._defaultPlaybackStartPosition;
		return this._officialPlaybackPosition;
	}
	,set_currentTime: function(value) {
		var _g = this.readyState;
		switch(_g) {
		case 0:
			this._defaultPlaybackStartPosition = value;
			break;
		default:
			this._officialPlaybackPosition = value;
			this.seek(value);
		}
		return value;
	}
	,__class__: cocktail.core.html.HTMLMediaElement
	,__properties__: $extend(cocktail.core.html.EmbeddedElement.prototype.__properties__,{set_volume:"set_volume",set_muted:"set_muted",get_buffered:"get_buffered",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime",set_preload:"set_preload",get_preload:"get_preload",set_loop:"set_loop",get_loop:"get_loop",set_autoplay:"set_autoplay",get_autoplay:"get_autoplay",set_src:"set_src",get_src:"get_src"})
});
cocktail.core.html.HTMLAudioElement = function() {
	cocktail.core.html.HTMLMediaElement.call(this,"AUDIO");
};
$hxClasses["cocktail.core.html.HTMLAudioElement"] = cocktail.core.html.HTMLAudioElement;
cocktail.core.html.HTMLAudioElement.__name__ = ["cocktail","core","html","HTMLAudioElement"];
cocktail.core.html.HTMLAudioElement.__super__ = cocktail.core.html.HTMLMediaElement;
cocktail.core.html.HTMLAudioElement.prototype = $extend(cocktail.core.html.HTMLMediaElement.prototype,{
	initNativeMedia: function() {
		this.nativeMedia = new cocktail.port.base.NativeMedia();
	}
	,createElementRenderer: function() {
	}
	,__class__: cocktail.core.html.HTMLAudioElement
});
cocktail.core.html.HTMLBRElement = function() {
	cocktail.core.html.EmbeddedElement.call(this,"BR");
};
$hxClasses["cocktail.core.html.HTMLBRElement"] = cocktail.core.html.HTMLBRElement;
cocktail.core.html.HTMLBRElement.__name__ = ["cocktail","core","html","HTMLBRElement"];
cocktail.core.html.HTMLBRElement.__super__ = cocktail.core.html.EmbeddedElement;
cocktail.core.html.HTMLBRElement.prototype = $extend(cocktail.core.html.EmbeddedElement.prototype,{
	isVoidElement: function() {
		return true;
	}
	,__class__: cocktail.core.html.HTMLBRElement
});
cocktail.core.html.HTMLBodyElement = function() {
	cocktail.core.html.HTMLElement.call(this,"BODY");
};
$hxClasses["cocktail.core.html.HTMLBodyElement"] = cocktail.core.html.HTMLBodyElement;
cocktail.core.html.HTMLBodyElement.__name__ = ["cocktail","core","html","HTMLBodyElement"];
cocktail.core.html.HTMLBodyElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLBodyElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.BodyBoxRenderer(this);
	}
	,cascadeSelf: function(cascadeManager,programmaticChange) {
		cocktail.core.html.HTMLElement.prototype.cascadeSelf.call(this,cascadeManager,programmaticChange);
		var parentCoreStyle = this.parentNode.coreStyle;
		if(parentCoreStyle.computedValues.get_overflowX() != null) {
			var _g = parentCoreStyle.getKeyword(parentCoreStyle.getComputedOrInitialProperty(51));
			switch(_g[1]) {
			case 36:
				parentCoreStyle.computedValues.set_overflowX(this.coreStyle.computedValues.get_overflowX());
				break;
			default:
			}
		}
		if(parentCoreStyle.computedValues.get_overflowY() != null) {
			var _g1 = parentCoreStyle.getKeyword(parentCoreStyle.getComputedOrInitialProperty(52));
			switch(_g1[1]) {
			case 36:
				parentCoreStyle.computedValues.set_overflowY(this.coreStyle.computedValues.get_overflowY());
				break;
			default:
			}
		}
	}
	,get_offsetParent: function() {
		return null;
	}
	,get_offsetTop: function() {
		return 0;
	}
	,get_offsetLeft: function() {
		return 0;
	}
	,__class__: cocktail.core.html.HTMLBodyElement
});
cocktail.core.html.HTMLConstants = function() {
};
$hxClasses["cocktail.core.html.HTMLConstants"] = cocktail.core.html.HTMLConstants;
cocktail.core.html.HTMLConstants.__name__ = ["cocktail","core","html","HTMLConstants"];
cocktail.core.html.HTMLConstants.getInputTypeValues = function() {
	return ["hidden","text","password","checkbox","radio","submit","reset","button","file","image"];
};
cocktail.core.html.HTMLConstants.prototype = {
	__class__: cocktail.core.html.HTMLConstants
};
cocktail.core.html.ValueModeValue = $hxClasses["cocktail.core.html.ValueModeValue"] = { __ename__ : ["cocktail","core","html","ValueModeValue"], __constructs__ : ["VALUE","DEFAULT","DEFAULT_ON","FILENAME"] };
cocktail.core.html.ValueModeValue.VALUE = ["VALUE",0];
cocktail.core.html.ValueModeValue.VALUE.toString = $estr;
cocktail.core.html.ValueModeValue.VALUE.__enum__ = cocktail.core.html.ValueModeValue;
cocktail.core.html.ValueModeValue.DEFAULT = ["DEFAULT",1];
cocktail.core.html.ValueModeValue.DEFAULT.toString = $estr;
cocktail.core.html.ValueModeValue.DEFAULT.__enum__ = cocktail.core.html.ValueModeValue;
cocktail.core.html.ValueModeValue.DEFAULT_ON = ["DEFAULT_ON",2];
cocktail.core.html.ValueModeValue.DEFAULT_ON.toString = $estr;
cocktail.core.html.ValueModeValue.DEFAULT_ON.__enum__ = cocktail.core.html.ValueModeValue;
cocktail.core.html.ValueModeValue.FILENAME = ["FILENAME",3];
cocktail.core.html.ValueModeValue.FILENAME.toString = $estr;
cocktail.core.html.ValueModeValue.FILENAME.__enum__ = cocktail.core.html.ValueModeValue;
cocktail.core.html.HTMLDocument = function() {
	cocktail.core.dom.Document.call(this);
	this.init();
};
$hxClasses["cocktail.core.html.HTMLDocument"] = cocktail.core.html.HTMLDocument;
cocktail.core.html.HTMLDocument.__name__ = ["cocktail","core","html","HTMLDocument"];
cocktail.core.html.HTMLDocument.__super__ = cocktail.core.dom.Document;
cocktail.core.html.HTMLDocument.prototype = $extend(cocktail.core.dom.Document.prototype,{
	dispose: function() {
		this.timer.dispose();
		this.timer = null;
		this.fontManager.dispose();
		this.fontManager = null;
		this.resourceManager.dispose();
		this.resourceManager = null;
		this.transitionManager.dispose();
		this.transitionManager = null;
		this.invalidationManager.dispose();
		this.invalidationManager = null;
		this.cascadeManager.dispose();
		this.cascadeManager = null;
		this._matchedPseudoClasses = null;
		this._focusManager.dispose();
		this._focusManager = null;
		this._hitTestManager.dispose();
		this._hitTestManager = null;
		this._multiTouchManager.dispose();
		this._multiTouchManager = null;
		this._lastTouchStartPosition = null;
		this.layoutManager.dispose();
		this.layoutManager = null;
		this.location.dispose();
		this.location = null;
		if(this.documentElement != null) {
			this.documentElement.dispose();
			this.documentElement = null;
			this.body = null;
		}
	}
	,init: function() {
		this.timer = new cocktail.core.timer.Timer();
		this.fontManager = new cocktail.core.font.FontManager();
		this.resourceManager = new cocktail.core.resource.ResourceManager(this);
		this.transitionManager = new cocktail.core.transition.TransitionManager(this);
		this.location = new cocktail.core.location.Location(this);
		this.location.onLocationChanged = $bind(this,this.onLocationChanged);
		this.initStyleManager();
		this.invalidationManager = new cocktail.core.invalidation.InvalidationManager(this);
		this.cascadeManager = new cocktail.core.css.CascadeManager();
		this._matchedPseudoClasses = new cocktail.core.css.MatchedPseudoClassesVO(false,false,false,false,false,false,false,false,false,null,null,null);
		this._focusManager = new cocktail.core.focus.FocusManager();
		this._hitTestManager = new cocktail.core.hittest.HitTestManager();
		this._multiTouchManager = new cocktail.core.multitouch.MultiTouchManager();
		this._shouldDispatchClickOnNextMouseUp = false;
		this._lastTouchStartPosition = new cocktail.core.geom.PointVO(0,0);
		this.layoutManager = new cocktail.core.layout.LayoutManager();
		this._delayLoadEventCounter = 0;
		this._documentLoaded = false;
		this._currentMouseCursor = cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO);
	}
	,initBody: function(htmlBodyElement) {
		if(htmlBodyElement != null) {
			this.body = htmlBodyElement;
			this.documentElement.appendChild(this.body);
			this.set_activeElement(this.body);
		}
	}
	,initStyleManager: function() {
		this._styleManager = new cocktail.core.css.StyleManager();
		this._styleManager.addStyleSheet(new cocktail.core.css.DefaultCSSStyleSheet());
	}
	,createElement: function(tagName) {
		var element;
		tagName = tagName.toUpperCase();
		switch(tagName) {
		case "IMG":
			element = new cocktail.core.html.HTMLImageElement();
			break;
		case "INPUT":
			element = new cocktail.core.html.HTMLInputElement();
			break;
		case "A":
			element = new cocktail.core.html.HTMLAnchorElement();
			break;
		case "HTML":
			element = new cocktail.core.html.HTMLHtmlElement();
			break;
		case "BODY":
			element = new cocktail.core.html.HTMLBodyElement();
			break;
		case "VIDEO":
			element = new cocktail.core.html.HTMLVideoElement();
			break;
		case "AUDIO":
			element = new cocktail.core.html.HTMLAudioElement();
			break;
		case "SOURCE":
			element = new cocktail.core.html.HTMLSourceElement();
			break;
		case "OBJECT":
			element = new cocktail.core.html.HTMLObjectElement();
			break;
		case "PARAM":
			element = new cocktail.core.html.HTMLParamElement();
			break;
		case "LINK":
			element = new cocktail.core.html.HTMLLinkElement();
			break;
		case "STYLE":
			element = new cocktail.core.html.HTMLStyleElement();
			break;
		case "BR":
			element = new cocktail.core.html.HTMLBRElement();
			break;
		case "META":
			element = new cocktail.core.html.HTMLMetaElement();
			break;
		case "FORM":
			element = new cocktail.core.html.HTMLFormElement();
			break;
		case "TEXTAREA":
			element = new cocktail.core.html.HTMLTextAreaElement();
			break;
		default:
			element = new cocktail.core.html.HTMLElement(tagName);
		}
		element.set_ownerDocument(this);
		return element;
	}
	,delayLoadEvent: function() {
		this._delayLoadEventCounter++;
	}
	,undelayLoadEvent: function() {
		this._delayLoadEventCounter--;
		this.checkifDocumentLoaded();
	}
	,onDocumentLoaded: function() {
		this._documentLoaded = true;
		var event = new cocktail.core.event.UIEvent();
		event.initUIEvent("load",false,false,null,0);
		this.window.dispatchEvent(event);
	}
	,checkifDocumentLoaded: function() {
		if(this._delayLoadEventCounter == 0 && this._documentLoaded == false) this.onDocumentLoaded();
	}
	,onUpdated: function() {
		if(this.onDocumentUpdated != null) this.onDocumentUpdated();
	}
	,focusNextElement: function() {
		this.set_activeElement(this._focusManager.getNextFocusedElement(false,this.body,this.get_activeElement()));
	}
	,focusPreviousElement: function() {
		this.set_activeElement(this._focusManager.getNextFocusedElement(true,this.body,this.get_activeElement()));
	}
	,addStyleSheet: function(stylesheet) {
		this._styleManager.addStyleSheet(stylesheet);
		if(this.documentElement != null) {
			this.documentElement.invalidateStyleDeclaration(true);
			this.documentElement.cascade(this.cascadeManager,false);
		}
	}
	,removeStyleSheet: function(stylesheet) {
		this._styleManager.removeStyleSheet(stylesheet);
		this.documentElement.invalidateStyleDeclaration(true);
		this.documentElement.cascade(this.cascadeManager,false);
	}
	,getStyleDeclaration: function(node) {
		return this._styleManager.getStyleDeclaration(node,this.getMatchedPseudoClassesVO(node));
	}
	,getMatchedPseudoClassesVO: function(node) {
		var hover = false;
		var focus = false;
		var active = false;
		var link = false;
		var enabled = false;
		var disabled = false;
		var checked = false;
		if(this._hoveredElementRenderer != null) hover = this._hoveredElementRenderer.domNode == node;
		if(this.get_activeElement() != null) focus = this.get_activeElement() == node;
		if(this._mousedDownedElementRenderer != null) active = this._mousedDownedElementRenderer.domNode == node;
		if(node.tagName == "A" && node.getAttribute("href") != null) link = true;
		if(node.tagName == "INPUT") {
			var inputNode = node;
			if(inputNode.get_disabled() == false) {
				enabled = true;
				disabled = false;
			} else {
				disabled = true;
				enabled = false;
			}
			if(inputNode.get_type() == "checkbox" || inputNode.get_type() == "radio") {
				if(inputNode.get_checked() == true) checked = true;
			}
		}
		this._matchedPseudoClasses.hasClasses = node.get_className() != "";
		if(this._matchedPseudoClasses.hasClasses == true) this._matchedPseudoClasses.nodeClassList = node.classList;
		this._matchedPseudoClasses.hasId = node.get_id() != "";
		if(this._matchedPseudoClasses.hasId == true) this._matchedPseudoClasses.nodeId = node.get_id();
		this._matchedPseudoClasses.nodeType = node.tagName;
		this._matchedPseudoClasses.hover = hover;
		this._matchedPseudoClasses.focus = focus;
		this._matchedPseudoClasses.active = active;
		this._matchedPseudoClasses.link = link;
		this._matchedPseudoClasses.enabled = enabled;
		this._matchedPseudoClasses.disabled = disabled;
		this._matchedPseudoClasses.checked = checked;
		return this._matchedPseudoClasses;
	}
	,set_innerHTML: function(value) {
		var node = cocktail.core.parser.DOMParser.parse(value,this);
		this.documentElement = node;
		this.initBody(this.documentElement.getElementsByTagName("BODY")[0]);
		this.checkifDocumentLoaded();
		return value;
	}
	,get_innerHTML: function() {
		return cocktail.core.parser.DOMParser.serialize(this.documentElement);
	}
	,onPlatformMouseEvent: function(mouseEvent) {
		var eventType = mouseEvent.type;
		var elementRendererAtPoint = this.getFirstElementRendererWhichCanDispatchMouseEvent(mouseEvent.screenX,mouseEvent.screenY);
		this.refreshHoveredElement(elementRendererAtPoint,mouseEvent);
		if(elementRendererAtPoint == null) return;
		elementRendererAtPoint.domNode.dispatchEvent(mouseEvent);
		switch(eventType) {
		case "mousedown":
			this._shouldDispatchClickOnNextMouseUp = true;
			this._mousedDownedElementRenderer = elementRendererAtPoint;
			elementRendererAtPoint.domNode.invalidateStyleDeclaration(false);
			break;
		case "mouseup":
			if(this._shouldDispatchClickOnNextMouseUp == true) this.dispatchClickEvent(mouseEvent);
			if(this._mousedDownedElementRenderer != null) {
				this._mousedDownedElementRenderer.domNode.invalidateStyleDeclaration(false);
				this._mousedDownedElementRenderer = null;
			}
			break;
		}
	}
	,onPlatformMouseLeaveEvent: function(event) {
		if(this._hoveredElementRenderer != null) {
			var oldHoveredElementRenderer = this._hoveredElementRenderer;
			var mouseOutEvent = new cocktail.core.event.MouseEvent();
			mouseOutEvent.initMouseEvent("mouseout",true,true,null,0,0,0,0,0,false,false,false,false,0,null);
			this._hoveredElementRenderer.domNode.dispatchEvent(mouseOutEvent);
			oldHoveredElementRenderer.domNode.invalidateStyleDeclaration(false);
			this._hoveredElementRenderer = null;
			this.setMouseCursor(cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO));
		}
	}
	,onPlatformMouseWheelEvent: function(wheelEvent) {
		var elementRendererAtPoint = this.getFirstElementRendererWhichCanDispatchMouseEvent(wheelEvent.screenX,wheelEvent.screenY);
		elementRendererAtPoint.domNode.dispatchEvent(wheelEvent);
	}
	,onPlatformMouseMoveEvent: function(mouseEvent) {
		if(this.documentElement.elementRenderer == null) return;
		var elementRendererAtPoint = this.getFirstElementRendererWhichCanDispatchMouseEvent(mouseEvent.screenX,mouseEvent.screenY);
		this.refreshHoveredElement(elementRendererAtPoint,mouseEvent);
		if(elementRendererAtPoint != null) elementRendererAtPoint.domNode.dispatchEvent(mouseEvent);
	}
	,onPlatformKeyDownEvent: function(keyboardEvent) {
		this.get_activeElement().dispatchEvent(keyboardEvent);
	}
	,onPlatformKeyUpEvent: function(keyboardEvent) {
		this.get_activeElement().dispatchEvent(keyboardEvent);
	}
	,onPlatformTouchEvent: function(touchEvent) {
		var touch = touchEvent.touches.item(0);
		var elementAtTouchPoint = this.getFirstElementRendererWhichCanDispatchMouseEvent(touch.screenX,touch.screenY);
		this._multiTouchManager.setUpTouchEvent(touchEvent,elementAtTouchPoint.domNode);
		elementAtTouchPoint.domNode.dispatchEvent(touchEvent);
		if(this._shouldDispatchClickOnNextMouseUp == true) {
			var _g = touchEvent.type;
			switch(_g) {
			case "touchstart":
				if(touchEvent.defaultPrevented == true) this._shouldDispatchClickOnNextMouseUp = false; else if(touchEvent.touches.get_length() > 1) {
				} else {
					this._lastTouchStartPosition.x = touchEvent.touches.item(0).screenX;
					this._lastTouchStartPosition.y = touchEvent.touches.item(0).screenY;
				}
				break;
			case "touchmove":
				if(touchEvent.defaultPrevented == true) this._shouldDispatchClickOnNextMouseUp = false; else {
					var yOffset = touchEvent.touches.item(0).screenY - this._lastTouchStartPosition.y;
					if(Math.abs(yOffset) > cocktail.core.config.Config.getInstance().touchMovePreventClickDistance) this._shouldDispatchClickOnNextMouseUp = false; else {
						var xOffset = touchEvent.touches.item(0).screenX - this._lastTouchStartPosition.x;
						if(Math.abs(xOffset) > cocktail.core.config.Config.getInstance().touchMovePreventClickDistance) this._shouldDispatchClickOnNextMouseUp = false;
					}
				}
				break;
			}
		}
	}
	,onPlatformResizeEvent: function(e) {
		this.invalidationManager.invalidateViewportSize();
	}
	,onPlatformOrientationChangeEvent: function(e) {
		this.invalidationManager.invalidateViewportSize();
	}
	,dispatchClickEvent: function(mouseEvent) {
		var elementRendererAtPoint = this.getFirstElementRendererWhichCanDispatchMouseEvent(mouseEvent.screenX,mouseEvent.screenY);
		var htmlElement = elementRendererAtPoint.domNode;
		var clickEvent = new cocktail.core.event.MouseEvent();
		clickEvent.initMouseEvent("click",true,true,null,0.0,mouseEvent.screenX,mouseEvent.screenY,mouseEvent.clientX,mouseEvent.clientY,mouseEvent.ctrlKey,mouseEvent.altKey,mouseEvent.shiftKey,mouseEvent.metaKey,mouseEvent.button,null);
		htmlElement.triggerActivationBehaviour(clickEvent);
	}
	,setMouseCursor: function(cursor) {
		if(cursor != this._currentMouseCursor) {
			this._currentMouseCursor = cursor;
			if(this.onSetMouseCursor != null) this.onSetMouseCursor(cursor);
		}
	}
	,refreshHoveredElement: function(elementRendererAtPoint,mouseEvent) {
		if(elementRendererAtPoint == null) return;
		if(this._hoveredElementRenderer != elementRendererAtPoint) {
			var oldHoveredElementRenderer = this._hoveredElementRenderer;
			if(this._hoveredElementRenderer != null) {
				var mouseOutEvent = new cocktail.core.event.MouseEvent();
				mouseOutEvent.initMouseEvent("mouseout",true,true,null,0.0,mouseEvent.screenX,mouseEvent.screenY,mouseEvent.clientX,mouseEvent.clientY,mouseEvent.ctrlKey,mouseEvent.altKey,mouseEvent.shiftKey,mouseEvent.metaKey,mouseEvent.button,elementRendererAtPoint.domNode);
				this._hoveredElementRenderer.domNode.dispatchEvent(mouseOutEvent);
				oldHoveredElementRenderer.domNode.invalidateStyleDeclaration(false);
			}
			this._hoveredElementRenderer = elementRendererAtPoint;
			var relatedTarget = null;
			if(this._hoveredElementRenderer != null) relatedTarget = this._hoveredElementRenderer.domNode;
			var mouseOverEvent = new cocktail.core.event.MouseEvent();
			mouseOverEvent.initMouseEvent("mouseover",true,true,null,0.0,mouseEvent.screenX,mouseEvent.screenY,mouseEvent.clientX,mouseEvent.clientY,mouseEvent.ctrlKey,mouseEvent.shiftKey,mouseEvent.altKey,mouseEvent.metaKey,mouseEvent.button,relatedTarget);
			elementRendererAtPoint.domNode.dispatchEvent(mouseOverEvent);
			elementRendererAtPoint.domNode.invalidateStyleDeclaration(false);
			this._shouldDispatchClickOnNextMouseUp = false;
			this.setMouseCursor(elementRendererAtPoint.domNode.coreStyle.getComputedOrInitialProperty(54));
		}
	}
	,navigateToURL: function(url,name) {
		if(name == null) name = "_blank";
		if(this.onNavigateToURL != null) this.onNavigateToURL(url,name);
	}
	,onLocationChanged: function() {
	}
	,getAbsoluteURL: function(url) {
		if(this.location.href == null) return url;
		var typedURL = cocktail.core.url.URL.fromString(url);
		if(cocktail.core.url.URL.isRelative(typedURL) == false) return url;
		var documentURL = cocktail.core.url.URL.fromString(this.location.href);
		var retURL = cocktail.core.url.URL.appendURL(documentURL,typedURL);
		return cocktail.core.url.URL.toString(retURL);
	}
	,onPlatformFullScreenChange: function(event) {
		if(this.window.platform.fullscreen() == false) this.exitFullscreen();
	}
	,exitFullscreen: function() {
		if(this.fullscreenElement == null) return;
		this.set_fullscreenElement(null);
		if(this.onExitFullscreen != null) this.onExitFullscreen();
		var fullscreenEvent = new cocktail.core.event.Event();
		fullscreenEvent.initEvent("fullscreenchange",true,false);
	}
	,get_fullscreenEnabled: function() {
		return this.window.platform.fullScreenEnabled();
	}
	,set_fullscreenElement: function(value) {
		if(value == null) {
			this.fullscreenElement = null;
			return value;
		}
		if(this.fullscreenElement != null) return this.fullscreenElement;
		this.fullscreenElement = value;
		if(this.onEnterFullscreen != null) this.onEnterFullscreen();
		var fullscreenEvent = new cocktail.core.event.Event();
		fullscreenEvent.initEvent("fullscreenchange",true,false);
		return value;
	}
	,getFirstElementRendererWhichCanDispatchMouseEvent: function(x,y) {
		var elementRendererAtPoint = this._hitTestManager.getTopMostElementRendererAtPoint(this.documentElement.elementRenderer.layerRenderer.stackingContext,x,y);
		if(elementRendererAtPoint == null) return null;
		while(elementRendererAtPoint.domNode.get_nodeType() != 1 || elementRendererAtPoint.isAnonymousBlockBox() == true) {
			elementRendererAtPoint = elementRendererAtPoint.parentNode;
			if(elementRendererAtPoint == null) return null;
		}
		return elementRendererAtPoint;
	}
	,getFirstVerticallyScrollableHTMLElement: function(htmlElement,scrollOffset) {
		return htmlElement;
	}
	,set_activeElement: function(newActiveElement) {
		this._focusManager.setActiveElement(newActiveElement,this.body);
		return this.get_activeElement();
	}
	,get_activeElement: function() {
		return this._focusManager.activeElement;
	}
	,__class__: cocktail.core.html.HTMLDocument
	,__properties__: $extend(cocktail.core.dom.Document.prototype.__properties__,{set_innerHTML:"set_innerHTML",get_innerHTML:"get_innerHTML",set_fullscreenElement:"set_fullscreenElement",get_fullscreenEnabled:"get_fullscreenEnabled",set_activeElement:"set_activeElement",get_activeElement:"get_activeElement"})
});
cocktail.core.html.HTMLFormElement = function() {
	cocktail.core.html.HTMLElement.call(this,"FORM");
	this.elements = new Array();
	this._submittedFromSubmitMethod = false;
};
$hxClasses["cocktail.core.html.HTMLFormElement"] = cocktail.core.html.HTMLFormElement;
cocktail.core.html.HTMLFormElement.__name__ = ["cocktail","core","html","HTMLFormElement"];
cocktail.core.html.HTMLFormElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLFormElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	submit: function() {
		this._submittedFromSubmitMethod = true;
		this.doSubmit(null);
	}
	,submitFrom: function(submitter) {
		this._submittedFromSubmitMethod = false;
		this.doSubmit(submitter);
	}
	,reset: function() {
		var defaultPrevented = this.fireEvent("reset",false,true);
		if(defaultPrevented == true) return;
		var _g1 = 0;
		var _g = this.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			this.elements[i].reset();
		}
	}
	,doSubmit: function(submitter) {
		if(this._submittedFromSubmitMethod == false) {
			var defaultPrevented = this.fireEvent("submit",false,true);
			if(defaultPrevented == true) return;
		}
		var formDataSet = this.constructFormDataSet(submitter);
		var action = this.getSubmitAction(submitter);
		var scheme = cocktail.core.url.URL.fromString(action).scheme;
		var enctype = this.getSubmitEnctype(submitter);
		var method = this.getSubmitMethod(submitter);
		var target = this.getSubmitTarget(submitter);
		if(action != "") switch(scheme) {
		case "http":
			if(method.toUpperCase() == "GET") this.mutateActionUrl(formDataSet,action); else if(method.toUpperCase() == "POST") this.submitAsEntityBody(formDataSet,action,enctype);
			break;
		} else this.mutateActionUrl(formDataSet,action);
	}
	,mutateActionUrl: function(formDataSet,action) {
		var query = this.encodeAsURLQuery(formDataSet);
		var actionURL = cocktail.core.url.URL.fromString(action);
		actionURL.query = query;
		var destination = cocktail.core.url.URL.toString(actionURL);
		this._ownerHTMLDocument.navigateToURL(destination);
	}
	,submitAsEntityBody: function(formDataSet,action,enctype) {
	}
	,encodeAsURLQuery: function(formDataSet) {
		var result = "";
		var length = formDataSet.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(result != "") result += "&";
			var formData = formDataSet[i];
			result += encodeURIComponent(formData.name) + "=" + encodeURIComponent(formData.value);
		}
		return result;
	}
	,getSubmitAction: function(submitter) {
		return this.get_action();
	}
	,getSubmitEnctype: function(submitter) {
		return this.get_enctype();
	}
	,getSubmitMethod: function(submitter) {
		var formMethod = this.get_method();
		if(formMethod == "") formMethod = "GET";
		return formMethod;
	}
	,getSubmitTarget: function(submitter) {
		return this.getAttributeAsDOMString("target");
	}
	,constructFormDataSet: function(submitter) {
		var submittableElements = this.getSubmittablesElements(this,new Array());
		var formDataSet = new Array();
		var length = submittableElements.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var submittableElement = submittableElements[i];
			if(this.canBeSubmitted(submittableElement,submitter) == true) {
				var type = this.getElementType(submittableElement);
				var name = submittableElement.getAttribute("name");
				if(submittableElement.tagName == "SELECT") {
				} else if(submittableElement.tagName == "INPUT" && (type == "checkbox" || type == "radio")) {
					var inputElement = submittableElement;
					var value = inputElement.get_value();
					if(value == "") value = "on";
					formDataSet.push({ name : name, type : type, value : value});
				} else if(submittableElement.tagName == "INPUT" && type == "file") {
				} else if(submittableElement.tagName == "OBJECT") {
				} else {
					var value1 = this.getElementValue(submittableElement);
					formDataSet.push({ name : name, value : value1, type : type});
				}
			}
		}
		return formDataSet;
	}
	,getSubmittablesElements: function(rootElement,submittableElements) {
		var child = rootElement.get_firstChild();
		while(child != null) {
			var _g = child.tagName;
			switch(_g) {
			case "INPUT":case "OBJECT":case "TEXTAREA":
				submittableElements.push(child);
				break;
			}
			this.getSubmittablesElements(child,submittableElements);
			child = child.get_nextSibling();
		}
		return submittableElements;
	}
	,canBeSubmitted: function(element,submitter) {
		if(element.getAttribute("disabled") != null) return false;
		if(this.isButton(element) == true) {
			if(element != submitter) return false;
		}
		if(this.isUncheckedRadioOrCheckBox(element) == true) return false;
		if(this.getElementType(element) != "image") {
			if(element.getAttribute("name") == null || element.getAttribute("name") == "") return false;
		}
		if(element.tagName == "OBJECT") {
			var objectElement = element;
			if(objectElement.plugin == null) return false;
		}
		if(element.tagName == "TEXTAREA") {
			if(element.getAttribute("name") == null || element.getAttribute("name") == "") return false;
		}
		return true;
	}
	,isButton: function(element) {
		if(element.tagName == "BUTTON") return true; else if(element.tagName == "INPUT") {
			var inputElement = element;
			var _g = inputElement.get_type();
			switch(_g) {
			case "reset":case "button":case "submit":
				return true;
			}
		}
		return false;
	}
	,isUncheckedRadioOrCheckBox: function(element) {
		if(element.tagName == "INPUT") {
			var inputElement = element;
			var _g = inputElement.get_type();
			switch(_g) {
			case "radio":case "checkbox":
				return inputElement.get_checked() == false;
			}
		}
		return false;
	}
	,getElementType: function(element) {
		var _g = element.tagName;
		switch(_g) {
		case "INPUT":
			var inputElement = element;
			return inputElement.get_type();
		default:
			return "";
		}
	}
	,getElementValue: function(element) {
		var _g = element.tagName;
		switch(_g) {
		case "INPUT":
			var inputElement = element;
			return inputElement.get_value();
		case "TEXTAREA":
			var textAreaElement = element;
			return textAreaElement.get_value();
		default:
			return "";
		}
	}
	,get_length: function() {
		return this.elements.length;
	}
	,get_method: function() {
		return this.getEnumeratedAttributeAsDOMString("method",["GET","POST"],null,"GET");
	}
	,set_method: function(value) {
		this.setAttribute("method",value);
		return value;
	}
	,get_enctype: function() {
		return this.getEnumeratedAttributeAsDOMString("enctype",["application/x-www-form-urlencoded","multipart/form-data","text/plain"],null,"application/x-www-form-urlencoded");
	}
	,set_enctype: function(value) {
		this.setAttribute("enctype",value);
		return value;
	}
	,get_action: function() {
		return this.getAttributeAsDOMString("action");
	}
	,set_action: function(value) {
		this.setAttribute("action",value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLFormElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_action:"set_action",get_action:"get_action",set_enctype:"set_enctype",get_enctype:"get_enctype",set_method:"set_method",get_method:"get_method",get_length:"get_length"})
});
cocktail.core.html.HTMLHtmlElement = function() {
	cocktail.core.html.HTMLElement.call(this,"HTML");
};
$hxClasses["cocktail.core.html.HTMLHtmlElement"] = cocktail.core.html.HTMLHtmlElement;
cocktail.core.html.HTMLHtmlElement.__name__ = ["cocktail","core","html","HTMLHtmlElement"];
cocktail.core.html.HTMLHtmlElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLHtmlElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	set_innerHTML: function(value) {
		cocktail.core.html.HTMLElement.prototype.set_innerHTML.call(this,value);
		var htmlDocument = this.ownerDocument;
		htmlDocument.initBody(this.getElementsByTagName("BODY")[0]);
		return value;
	}
	,set_outerHTML: function(value) {
		throw 7;
		return value;
	}
	,isParentRendered: function() {
		return true;
	}
	,createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.InitialBlockRenderer(this);
	}
	,attachToParentElementRenderer: function() {
	}
	,detachFromParentElementRenderer: function() {
		this.elementRenderer.removedFromRenderingTree();
	}
	,get_offsetParent: function() {
		return null;
	}
	,get_offsetTop: function() {
		return 0;
	}
	,get_offsetLeft: function() {
		return 0;
	}
	,__class__: cocktail.core.html.HTMLHtmlElement
});
cocktail.core.html.HTMLImageElement = function() {
	cocktail.core.html.EmbeddedElement.call(this,"IMG");
};
$hxClasses["cocktail.core.html.HTMLImageElement"] = cocktail.core.html.HTMLImageElement;
cocktail.core.html.HTMLImageElement.__name__ = ["cocktail","core","html","HTMLImageElement"];
cocktail.core.html.HTMLImageElement.__super__ = cocktail.core.html.EmbeddedElement;
cocktail.core.html.HTMLImageElement.prototype = $extend(cocktail.core.html.EmbeddedElement.prototype,{
	setAttribute: function(name,value) {
		if(name == "src") this.set_src(value); else cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,name,value);
	}
	,createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.ImageRenderer(this);
	}
	,isVoidElement: function() {
		return true;
	}
	,set_src: function(value) {
		value = this._ownerHTMLDocument.getAbsoluteURL(value);
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"src",value);
		this._ownerHTMLDocument.getAbsoluteURL(value);
		var resource = this._ownerHTMLDocument.resourceManager.getImageResource(value);
		this._ownerHTMLDocument.delayLoadEvent();
		if(resource.loaded == false) {
			this._resourceLoadedCallback = $bind(this,this.onResourceLoaded);
			this._resourceLoadError = $bind(this,this.onResourceLoadError);
			resource.addEventListener("load",this._resourceLoadedCallback);
			resource.addEventListener("error",this._resourceLoadError);
		} else if(resource.loadedWithError == true) this.onLoadError(); else this.onLoadComplete(resource);
		return value;
	}
	,onResourceLoaded: function(e) {
		this.removeListeners(e.target);
		this.onLoadComplete(e.target);
	}
	,onResourceLoadError: function(e) {
		this.removeListeners(e.target);
		this.onLoadError();
	}
	,removeListeners: function(resource) {
		resource.removeEventListener("load",this._resourceLoadedCallback);
		resource.removeEventListener("error",this._resourceLoadError);
	}
	,onLoadComplete: function(resource) {
		this.intrinsicHeight = resource.intrinsicHeight;
		this.intrinsicWidth = resource.intrinsicWidth;
		this.intrinsicRatio = this.get_intrinsicHeight() / this.get_intrinsicWidth();
		if(this.getAttributeNode("height") != null && this.getAttributeNode("width") != null) this.invalidateRendering(); else this.invalidate();
		var loadEvent = new cocktail.core.event.UIEvent();
		loadEvent.initUIEvent("load",false,false,null,0.0);
		this.dispatchEvent(loadEvent);
		this._ownerHTMLDocument.undelayLoadEvent();
	}
	,onLoadError: function() {
		var errorEvent = new cocktail.core.event.UIEvent();
		errorEvent.initUIEvent("error",false,false,null,0.0);
		this.dispatchEvent(errorEvent);
		this._ownerHTMLDocument.undelayLoadEvent();
	}
	,get_src: function() {
		return this.getAttribute("src");
	}
	,get_naturalHeight: function() {
		if(this.get_intrinsicHeight() == null) return 0;
		return Math.round(this.get_intrinsicHeight());
	}
	,get_naturalWidth: function() {
		if(this.get_intrinsicWidth() == null) return 0;
		return Math.round(this.get_intrinsicWidth());
	}
	,__class__: cocktail.core.html.HTMLImageElement
	,__properties__: $extend(cocktail.core.html.EmbeddedElement.prototype.__properties__,{get_naturalHeight:"get_naturalHeight",get_naturalWidth:"get_naturalWidth",set_src:"set_src",get_src:"get_src"})
});
cocktail.core.html.HTMLInputElement = function() {
	cocktail.core.html.FormAssociatedElement.call(this,"INPUT");
	this._valueIsDirty = false;
	this._checkednessIsDirty = false;
	this._valueMode = cocktail.core.html.ValueModeValue.VALUE;
	this._value = "";
	this._checkedness = false;
};
$hxClasses["cocktail.core.html.HTMLInputElement"] = cocktail.core.html.HTMLInputElement;
cocktail.core.html.HTMLInputElement.__name__ = ["cocktail","core","html","HTMLInputElement"];
cocktail.core.html.HTMLInputElement.__super__ = cocktail.core.html.FormAssociatedElement;
cocktail.core.html.HTMLInputElement.prototype = $extend(cocktail.core.html.FormAssociatedElement.prototype,{
	isVoidElement: function() {
		return true;
	}
	,dispatchEvent: function(evt) {
		var defaultPrevented = cocktail.core.html.FormAssociatedElement.prototype.dispatchEvent.call(this,evt);
		if(this.elementRenderer != null) {
			if(evt.type == "focus") {
				var inputRenderer = this.elementRenderer;
				inputRenderer.focus();
			} else if(evt.type == "blur") {
				var inputRenderer1 = this.elementRenderer;
				inputRenderer1.blur();
			}
		}
		return defaultPrevented;
	}
	,setAttribute: function(name,value) {
		cocktail.core.html.FormAssociatedElement.prototype.setAttribute.call(this,name,value);
		if(name == "value") {
			if(this._valueIsDirty == false) this._value = value;
		} else if(name == "checked") {
			if(this._checkednessIsDirty == false) {
				if(value == "true") this.updateCheckedness(true); else this.updateCheckedness(false);
			}
		} else if(name == "name") {
			if(this._checkedness == true && this.get_type() == "radio") this.updateRadioButtonGroup();
		} else if(name == "disabled") this.updateInputRendererState();
	}
	,reset: function() {
		this._valueIsDirty = false;
		this._checkednessIsDirty = false;
		this._value = this.getAttributeAsDOMString("value");
		this.updateCheckedness(this.getAttributeAsBool("checked"));
		this.applyValueSanitization(this.get_value(),this.get_type());
		this.updateInputRendererState();
	}
	,createElementRenderer: function() {
		var _g = this.get_type();
		switch(_g) {
		case "text":
			this.elementRenderer = new cocktail.core.renderer.TextInputRenderer(this);
			break;
		case "password":
			this.elementRenderer = new cocktail.core.renderer.PasswordInputRenderer(this);
			break;
		case "checkbox":
			this.elementRenderer = new cocktail.core.renderer.CheckboxRenderer(this);
			break;
		case "radio":
			this.elementRenderer = new cocktail.core.renderer.RadioRenderer(this);
			break;
		case "button":case "reset":case "submit":
			this.elementRenderer = new cocktail.core.renderer.InputButtonRenderer(this);
			break;
		default:
		}
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			inputRenderer.onActivate = $bind(this,this.onUserActivation);
			inputRenderer.onInput = $bind(this,this.onUserInput);
			this.updateInputRendererState();
		}
	}
	,isDefaultFocusable: function() {
		if(this.get_disabled() == true) return false;
		if(this.isFocusableType() == false) return false;
		return true;
	}
	,associateFormElement: function(form) {
		cocktail.core.html.FormAssociatedElement.prototype.associateFormElement.call(this,form);
		if(this._checkedness == true && this.get_type() == "radio") this.updateRadioButtonGroup();
	}
	,hasActivationBehaviour: function() {
		var _g = this.get_type();
		switch(_g) {
		case "button":case "checkbox":case "radio":case "reset":case "submit":
			return true;
		default:
			return false;
		}
	}
	,runPreClickActivation: function() {
		if(this.isMutable() == false) return;
		var _g = this.get_type();
		switch(_g) {
		case "checkbox":
			this.updateCheckedness(!this._checkedness);
			break;
		case "radio":
			this.updateCheckedness(true);
			break;
		case "reset":
			if(this.form != null) this.form.reset();
			break;
		case "submit":
			if(this.form != null) this.form.submitFrom(this);
			break;
		}
	}
	,runPostClickActivationStep: function(event) {
		if(this.isMutable() == false) return;
		var _g = this.get_type();
		switch(_g) {
		case "checkbox":case "radio":
			this.fireEvent("change",false,false);
			break;
		}
	}
	,updateInputRendererState: function() {
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			inputRenderer.set_readonly(this.get_readOnly());
			inputRenderer.set_disabled(this.get_disabled());
			inputRenderer.set_maxLength(this.get_maxLength());
			inputRenderer.set_value(this.getElementRendererValue());
			inputRenderer.set_checked(this._checkedness);
		}
	}
	,updateInputType: function(oldType) {
		if(oldType == this.get_type()) return;
		if(this.useValueMode(oldType) == true && this.useDefaultOrDefaultOnMode(this.get_type()) == true) {
			if(this._value != "") this.setAttribute("value",this._value);
		} else if(this.useValueMode(oldType) == false && this.useValueMode(this.get_type()) == true) {
			this._value = this.getAttributeAsDOMString("value");
			this._valueIsDirty = false;
		}
		this.invalidateElementRenderer();
		this._value = this.applyValueSanitization(this._value,this.get_type());
	}
	,useValueMode: function(type) {
		switch(type) {
		case "hidden":case "checkbox":case "radio":
			return false;
		default:
			return true;
		}
	}
	,useDefaultOrDefaultOnMode: function(type) {
		switch(type) {
		case "text":case "password":
			return false;
		default:
			return true;
		}
	}
	,applyValueSanitization: function(value,type) {
		switch(type) {
		case "text":case "password":
			return StringTools.replace(value,"\n","");
		}
		return value;
	}
	,isMutable: function() {
		if(this.get_disabled() == true) return false; else if(this.readonlyApplies() == true) return this.get_readOnly() == false;
		return true;
	}
	,readonlyApplies: function() {
		var _g = this.get_type();
		switch(_g) {
		case "text":case "password":
			return true;
		default:
			return false;
		}
	}
	,isFocusableType: function() {
		var _g = this.get_type();
		switch(_g) {
		case "hidden":
			return false;
		default:
			return true;
		}
	}
	,updateCheckedness: function(value) {
		this._checkedness = value;
		this.invalidateStyleDeclaration(false);
		if(this._checkedness == true && this.get_type() == "radio") this.updateRadioButtonGroup();
	}
	,updateRadioButtonGroup: function() {
		if(this.get_name() == "") return;
		var inputElements = this._ownerHTMLDocument.getElementsByTagName("INPUT");
		var inputLength = inputElements.length;
		var _g = 0;
		while(_g < inputLength) {
			var i = _g++;
			var input = inputElements[i];
			if(input.get_type() == "radio" && input != this) {
				if(input.form == this.form) {
					if(input.get_name() == this.get_name()) input.set_checked(false);
				}
			}
		}
	}
	,getElementRendererValue: function() {
		var _g = this.get_type();
		switch(_g) {
		case "reset":case "submit":
			var valueAttribute = this.getAttribute("value");
			if(valueAttribute == null) {
				if(this.get_type() == "reset") return "Reset"; else return "Submit";
			}
			break;
		}
		return this.get_value();
	}
	,onUserActivation: function() {
		this.triggerActivationBehaviour();
	}
	,onUserInput: function() {
		this._valueIsDirty = true;
		var inputRenderer = this.elementRenderer;
		this._value = inputRenderer.get_value();
		this.fireEvent("input",true,false);
	}
	,get_intrinsicWidth: function() {
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			return inputRenderer.get_intrinsicWidth();
		}
		return 0;
	}
	,get_intrinsicHeight: function() {
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			return inputRenderer.get_intrinsicHeight();
		}
		return 0;
	}
	,set_value: function(value) {
		this._valueIsDirty = true;
		var _g = this._valueMode;
		switch(_g[1]) {
		case 0:
			this._value = value;
			break;
		case 1:case 2:
			this.setAttribute("value",value);
			break;
		case 3:
			break;
		}
		return value;
	}
	,get_value: function() {
		var _g = this._valueMode;
		switch(_g[1]) {
		case 0:
			return this._value;
		case 1:
			return this.getAttributeAsDOMString("value");
		case 2:
			var value = this.getAttributeAsDOMString("value");
			if(value == "") return "on"; else return value;
			break;
		case 3:
			return "";
		}
	}
	,set_maxLength: function(value) {
		this.setAttribute("maxlength",value == null?"null":"" + value);
		return value;
	}
	,get_maxLength: function() {
		return this.getAttributeAsPositiveSignedInteger("maxlength",null);
	}
	,get_checked: function() {
		return this._checkedness;
	}
	,set_checked: function(value) {
		this._checkednessIsDirty = true;
		this.updateCheckedness(value);
		return value;
	}
	,get_readOnly: function() {
		return this.getAttributeAsBool("readonly");
	}
	,set_readOnly: function(value) {
		this.setAttributeAsBool("readonly",value);
		return value;
	}
	,get_disabled: function() {
		return this.getAttributeAsBool("disabled");
	}
	,set_disabled: function(value) {
		this.setAttributeAsBool("disabled",value);
		this.updateInputRendererState();
		return value;
	}
	,get_type: function() {
		return this.getEnumeratedAttributeAsDOMString("type",["hidden","text","password","checkbox","radio","submit","reset","button","file","image"],"text",null);
	}
	,set_type: function(value) {
		var oldType = this.get_type();
		this.setAttribute("type",value);
		this.updateInputType(oldType);
		return value;
	}
	,get_name: function() {
		return this.getAttributeAsDOMString("name");
	}
	,set_name: function(value) {
		this.setAttribute("name",value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLInputElement
	,__properties__: $extend(cocktail.core.html.FormAssociatedElement.prototype.__properties__,{set_name:"set_name",get_name:"get_name",set_type:"set_type",get_type:"get_type",set_disabled:"set_disabled",get_disabled:"get_disabled",set_readOnly:"set_readOnly",get_readOnly:"get_readOnly",set_checked:"set_checked",get_checked:"get_checked",set_maxLength:"set_maxLength",get_maxLength:"get_maxLength",set_value:"set_value",get_value:"get_value"})
});
cocktail.core.html.HTMLLinkElement = function() {
	cocktail.core.html.HTMLElement.call(this,"LINK");
	this._hasLoadedResource = false;
};
$hxClasses["cocktail.core.html.HTMLLinkElement"] = cocktail.core.html.HTMLLinkElement;
cocktail.core.html.HTMLLinkElement.__name__ = ["cocktail","core","html","HTMLLinkElement"];
cocktail.core.html.HTMLLinkElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLLinkElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	addedToDOM: function() {
		if(this._hasLoadedResource == false) this.loadLinkedResource();
		cocktail.core.html.HTMLElement.prototype.addedToDOM.call(this);
	}
	,removedFromDOM: function() {
		cocktail.core.html.HTMLElement.prototype.removedFromDOM.call(this);
		if(this._hasLoadedResource == true) this.unloadLinkedResource();
	}
	,createElementRenderer: function() {
	}
	,loadLinkedResource: function() {
		if(this.get_type() == "text/css" && this.get_href() != null && this.get_rel() == "stylesheet") {
			this._hasLoadedResource = true;
			this._ownerHTMLDocument.delayLoadEvent();
			var nativeHttp = new cocktail.port.base.NativeHttpBase(this._ownerHTMLDocument.timer);
			nativeHttp.addEventListener("load",$bind(this,this.onCSSLoaded));
			nativeHttp.addEventListener("error",$bind(this,this.onCSSLoadError));
			var absoluteHref = this._ownerHTMLDocument.getAbsoluteURL(this.get_href());
			nativeHttp.load(absoluteHref,"GET",null,null,cocktail.core.http.DataFormatValue.TEXT);
		}
	}
	,unloadLinkedResource: function() {
		if(this.sheet != null) {
			var htmlDocument = this.ownerDocument;
			htmlDocument.removeStyleSheet(this.sheet);
			this.sheet = null;
			this._hasLoadedResource = false;
		}
	}
	,onCSSLoaded: function(event) {
		var nativeHttp = event.target;
		this.createStyleSheet(nativeHttp.response);
		var loadEvent = new cocktail.core.event.UIEvent();
		loadEvent.initUIEvent("load",false,false,null,0.0);
		this.dispatchEvent(loadEvent);
		this._ownerHTMLDocument.undelayLoadEvent();
	}
	,onCSSLoadError: function(event) {
		this.fireEvent("error",false,false);
		this._ownerHTMLDocument.undelayLoadEvent();
	}
	,createStyleSheet: function(css) {
		this.sheet = new cocktail.core.css.CSSStyleSheet(css,cocktail.core.css.PropertyOriginValue.AUTHOR,null,this.get_href());
		var htmlDocument = this.ownerDocument;
		htmlDocument.addStyleSheet(this.sheet);
	}
	,get_disabled: function() {
		return this.getAttributeAsBool("disabled");
	}
	,set_disabled: function(value) {
		this.setAttributeAsBool("disabled",value);
		return value;
	}
	,get_href: function() {
		return this.getAttributeAsDOMString("href");
	}
	,set_href: function(value) {
		this.setAttribute("href",value);
		return value;
	}
	,get_rel: function() {
		return this.getAttributeAsDOMString("rel");
	}
	,set_rel: function(value) {
		this.setAttribute("rel",value);
		return value;
	}
	,get_relList: function() {
		return [];
	}
	,get_media: function() {
		return this.getAttributeAsDOMString("media");
	}
	,set_media: function(value) {
		this.setAttribute("media",value);
		return value;
	}
	,get_hreflang: function() {
		return this.getAttributeAsDOMString("hreflang");
	}
	,set_hreflang: function(value) {
		this.setAttribute("hreflang",value);
		return value;
	}
	,get_type: function() {
		return this.getAttributeAsDOMString("type");
	}
	,set_type: function(value) {
		this.setAttribute("type",value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLLinkElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_hreflang:"set_hreflang",get_hreflang:"get_hreflang",set_media:"set_media",get_media:"get_media",get_relList:"get_relList",set_rel:"set_rel",get_rel:"get_rel",set_href:"set_href",get_href:"get_href",set_disabled:"set_disabled",get_disabled:"get_disabled"})
});
cocktail.core.html.HTMLMetaElement = function() {
	cocktail.core.html.HTMLElement.call(this,"META");
};
$hxClasses["cocktail.core.html.HTMLMetaElement"] = cocktail.core.html.HTMLMetaElement;
cocktail.core.html.HTMLMetaElement.__name__ = ["cocktail","core","html","HTMLMetaElement"];
cocktail.core.html.HTMLMetaElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLMetaElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	addedToDOM: function() {
		cocktail.core.html.HTMLElement.prototype.addedToDOM.call(this);
		this.updateConfig();
	}
	,updateConfig: function() {
		if(this.isAttachedToDOM() == true && this.get_name() != null && this.get_content() != null) cocktail.core.config.Config.getInstance().updateConfig(this.get_name(),this.get_content());
	}
	,get_name: function() {
		return this.getAttributeAsDOMString("name");
	}
	,set_name: function(value) {
		this.setAttribute("name",value);
		this.updateConfig();
		return value;
	}
	,get_content: function() {
		return this.getAttributeAsDOMString("content");
	}
	,set_content: function(value) {
		this.setAttribute("content",value);
		this.updateConfig();
		return value;
	}
	,__class__: cocktail.core.html.HTMLMetaElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_content:"set_content",get_content:"get_content",set_name:"set_name",get_name:"get_name"})
});
cocktail.core.html.HTMLObjectElement = function() {
	cocktail.core.html.EmbeddedElement.call(this,"OBJECT");
	this._pluginReady = false;
	this.intrinsicHeight = 150;
	this.intrinsicWidth = 300;
	this.intrinsicRatio = this.get_intrinsicWidth() / this.get_intrinsicHeight();
};
$hxClasses["cocktail.core.html.HTMLObjectElement"] = cocktail.core.html.HTMLObjectElement;
cocktail.core.html.HTMLObjectElement.__name__ = ["cocktail","core","html","HTMLObjectElement"];
cocktail.core.html.HTMLObjectElement.__super__ = cocktail.core.html.EmbeddedElement;
cocktail.core.html.HTMLObjectElement.prototype = $extend(cocktail.core.html.EmbeddedElement.prototype,{
	setAttribute: function(name,value) {
		if(name == "data") this.set_data(value); else if(name == "type") this.set_type(value); else cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,name,value);
	}
	,attach: function(recursive) {
		cocktail.core.html.EmbeddedElement.prototype.attach.call(this,recursive);
		if(this.isRendered() == true) this.createPlugin();
	}
	,addedToDOM: function() {
		cocktail.core.html.EmbeddedElement.prototype.addedToDOM.call(this);
		if(this.get_data() != null) {
			if(this.get_data().indexOf(".swf") != -1) this._ownerHTMLDocument.resourceManager.getBinaryResource(this.get_data());
		}
	}
	,removedFromDOM: function() {
		cocktail.core.html.EmbeddedElement.prototype.removedFromDOM.call(this);
		this.deletePlugin();
	}
	,createPlugin: function() {
		if(this.plugin != null) return;
		if(this.attachedToDOM == false) return;
		if(this.get_data() != null) {
			if(this.get_data().indexOf(".swf") != -1 || this.getAttribute("type") == "application/x-shockwave-flash") {
				var resource = this._ownerHTMLDocument.resourceManager.getBinaryResource(this.get_data());
				if(resource.error == true) return;
				if(resource.complete == false) {
					resource.addEventListener("load",$bind(this,this.onPluginResourceLoaded));
					return;
				}
				var params = new haxe.ds.StringMap();
				var length = this.childNodes.length;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					var child = this.childNodes[i];
					if(child.tagName == "PARAM") {
						var name = child.getAttribute("name");
						var value = child.getAttribute("value");
						if(name != null && value != null) params.set(name,value);
					}
				}
				var elementAttributes = new haxe.ds.StringMap();
				var _g1 = 0;
				var _g2 = this.attributes.get_length();
				while(_g1 < _g2) {
					var i1 = _g1++;
					var attr = this.attributes.item(i1);
					var value1 = attr.get_value();
					elementAttributes.set(attr.name,value1);
				}
				this.plugin = new cocktail.plugin.swf.SWFPlugin(this,elementAttributes,params,$bind(this,this.onLoadComplete),$bind(this,this.onLoadError));
			}
		}
	}
	,deletePlugin: function() {
		if(this.plugin != null) {
			this._pluginReady = false;
			this.plugin.dispose();
			this.plugin = null;
		}
	}
	,onPluginResourceLoaded: function(e) {
		e.target.removeEventListener("load",$bind(this,this.onPluginResourceLoaded));
		this.createPlugin();
	}
	,createElementRenderer: function() {
		if(this._pluginReady == true) this.elementRenderer = new cocktail.core.renderer.ObjectRenderer(this);
	}
	,onLoadComplete: function() {
		this._pluginReady = true;
		this.invalidateElementRenderer();
		var loadEvent = new cocktail.core.event.UIEvent();
		loadEvent.initUIEvent("load",false,false,null,0.0);
		this.dispatchEvent(loadEvent);
	}
	,onLoadError: function() {
		this._pluginReady = false;
		var errorEvent = new cocktail.core.event.UIEvent();
		errorEvent.initUIEvent("error",false,false,null,0.0);
		this.dispatchEvent(errorEvent);
	}
	,set_data: function(value) {
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"data",value);
		this.deletePlugin();
		this.createPlugin();
		return value;
	}
	,get_data: function() {
		return this.getAttributeAsDOMString("data");
	}
	,set_type: function(value) {
		cocktail.core.html.EmbeddedElement.prototype.setAttribute.call(this,"type",value);
		return value;
	}
	,get_type: function() {
		return this.getAttributeAsDOMString("type");
	}
	,__class__: cocktail.core.html.HTMLObjectElement
	,__properties__: $extend(cocktail.core.html.EmbeddedElement.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_data:"set_data",get_data:"get_data"})
});
cocktail.core.html.HTMLParamElement = function() {
	cocktail.core.html.HTMLElement.call(this,"PARAM");
};
$hxClasses["cocktail.core.html.HTMLParamElement"] = cocktail.core.html.HTMLParamElement;
cocktail.core.html.HTMLParamElement.__name__ = ["cocktail","core","html","HTMLParamElement"];
cocktail.core.html.HTMLParamElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLParamElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	createElementRenderer: function() {
	}
	,isVoidElement: function() {
		return true;
	}
	,get_name: function() {
		return this.getAttributeAsDOMString("name");
	}
	,set_name: function(value) {
		this.setAttribute("name",value);
		return value;
	}
	,get_value: function() {
		return this.getAttributeAsDOMString("value");
	}
	,set_value: function(value) {
		this.setAttribute("value",value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLParamElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_value:"set_value",get_value:"get_value",set_name:"set_name",get_name:"get_name"})
});
cocktail.core.html.HTMLSourceElement = function() {
	cocktail.core.html.HTMLElement.call(this,"SOURCE");
};
$hxClasses["cocktail.core.html.HTMLSourceElement"] = cocktail.core.html.HTMLSourceElement;
cocktail.core.html.HTMLSourceElement.__name__ = ["cocktail","core","html","HTMLSourceElement"];
cocktail.core.html.HTMLSourceElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLSourceElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	createElementRenderer: function() {
	}
	,isVoidElement: function() {
		return true;
	}
	,get_src: function() {
		return this.getAttributeAsDOMString("src");
	}
	,set_src: function(value) {
		this.setAttribute("src",value);
		return value;
	}
	,get_type: function() {
		return this.getAttributeAsDOMString("type");
	}
	,set_type: function(value) {
		this.setAttribute("type",value);
		return value;
	}
	,get_media: function() {
		return this.getAttributeAsDOMString("media");
	}
	,set_media: function(value) {
		this.setAttribute("media",value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLSourceElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_media:"set_media",get_media:"get_media",set_type:"set_type",get_type:"get_type",set_src:"set_src",get_src:"get_src"})
});
cocktail.core.html.HTMLStyleElement = function() {
	cocktail.core.html.HTMLElement.call(this,"STYLE");
};
$hxClasses["cocktail.core.html.HTMLStyleElement"] = cocktail.core.html.HTMLStyleElement;
cocktail.core.html.HTMLStyleElement.__name__ = ["cocktail","core","html","HTMLStyleElement"];
cocktail.core.html.HTMLStyleElement.__super__ = cocktail.core.html.HTMLElement;
cocktail.core.html.HTMLStyleElement.prototype = $extend(cocktail.core.html.HTMLElement.prototype,{
	appendChild: function(newChild) {
		cocktail.core.html.HTMLElement.prototype.appendChild.call(this,newChild);
		if(newChild.get_nodeType() == 3) this.updateStyleSheet();
		return newChild;
	}
	,removeChild: function(oldChild) {
		cocktail.core.html.HTMLElement.prototype.removeChild.call(this,oldChild);
		if(oldChild.get_nodeType() == 3) this.updateStyleSheet();
		return oldChild;
	}
	,insertBefore: function(newChild,refChild) {
		cocktail.core.html.HTMLElement.prototype.insertBefore.call(this,newChild,refChild);
		if(refChild != null) {
			if(newChild.get_nodeType() == 3) this.updateStyleSheet();
		}
		return newChild;
	}
	,addedToDOM: function() {
		cocktail.core.html.HTMLElement.prototype.addedToDOM.call(this);
		this.updateStyleSheet();
	}
	,removedFromDOM: function() {
		cocktail.core.html.HTMLElement.prototype.removedFromDOM.call(this);
		this.updateStyleSheet();
	}
	,updateStyleSheet: function() {
		if(this.sheet != null) this.removeStyleSheet();
		if(this.attachedToDOM == true) {
			var css = this.concatenateChildTextNode();
			if(css != "") {
				this.sheet = new cocktail.core.css.CSSStyleSheet(css,cocktail.core.css.PropertyOriginValue.AUTHOR,this);
				var htmlDocument = this.ownerDocument;
				htmlDocument.addStyleSheet(this.sheet);
			}
		}
	}
	,removeStyleSheet: function() {
		if(this.sheet != null) {
			var htmlDocument = this.ownerDocument;
			htmlDocument.removeStyleSheet(this.sheet);
			this.sheet = null;
		}
	}
	,concatenateChildTextNode: function() {
		var content = "";
		var length = this.childNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(this.childNodes[i].get_nodeType() == 3) content += this.childNodes[i].get_nodeValue();
		}
		return content;
	}
	,createElementRenderer: function() {
	}
	,get_disabled: function() {
		return this.getAttributeAsBool("disabled");
	}
	,set_disabled: function(value) {
		this.setAttribute("disabled",value == null?"null":"" + value);
		return value;
	}
	,__class__: cocktail.core.html.HTMLStyleElement
	,__properties__: $extend(cocktail.core.html.HTMLElement.prototype.__properties__,{set_disabled:"set_disabled",get_disabled:"get_disabled"})
});
cocktail.core.html.HTMLTextAreaElement = function() {
	cocktail.core.html.FormAssociatedElement.call(this,"TEXTAREA");
	this._valueIsDirty = false;
	this._rawValue = "";
};
$hxClasses["cocktail.core.html.HTMLTextAreaElement"] = cocktail.core.html.HTMLTextAreaElement;
cocktail.core.html.HTMLTextAreaElement.__name__ = ["cocktail","core","html","HTMLTextAreaElement"];
cocktail.core.html.HTMLTextAreaElement.__super__ = cocktail.core.html.FormAssociatedElement;
cocktail.core.html.HTMLTextAreaElement.prototype = $extend(cocktail.core.html.FormAssociatedElement.prototype,{
	dispatchEvent: function(evt) {
		var defaultPrevented = cocktail.core.html.FormAssociatedElement.prototype.dispatchEvent.call(this,evt);
		if(this.elementRenderer != null) {
			if(evt.type == "focus") {
				var inputRenderer = this.elementRenderer;
				inputRenderer.focus();
			} else if(evt.type == "blur") {
				var inputRenderer1 = this.elementRenderer;
				inputRenderer1.blur();
			}
		}
		return defaultPrevented;
	}
	,createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.TextAreaRenderer(this);
		if(this._valueIsDirty == false) this._rawValue = this.get_textContent();
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			inputRenderer.onInput = $bind(this,this.onUserInput);
			this.updateInputRendererState();
		}
	}
	,reset: function() {
		this._rawValue = this.get_textContent();
		this.updateInputRendererState();
	}
	,isDefaultFocusable: function() {
		if(this.get_disabled() == true) return false;
		return true;
	}
	,onUserInput: function() {
		this._valueIsDirty = true;
		var inputRenderer = this.elementRenderer;
		this._rawValue = inputRenderer.get_value();
		this.fireEvent("input",true,false);
	}
	,updateInputRendererState: function() {
		if(this.elementRenderer != null) {
			var inputRenderer = this.elementRenderer;
			inputRenderer.set_readonly(this.get_readOnly());
			inputRenderer.set_disabled(this.get_disabled());
			inputRenderer.set_maxLength(this.get_maxLength());
			inputRenderer.set_value(this.get_value());
		}
	}
	,isMutable: function() {
		if(this.get_disabled() == true || this.get_readOnly() == true) return false;
		return true;
	}
	,set_value: function(value) {
		this._valueIsDirty = true;
		this._rawValue = value;
		this.updateInputRendererState();
		return value;
	}
	,get_value: function() {
		return this._rawValue;
	}
	,set_maxLength: function(value) {
		this.setAttribute("maxlength",value == null?"null":"" + value);
		return value;
	}
	,get_maxLength: function() {
		return this.getAttributeAsPositiveSignedInteger("maxlength",null);
	}
	,get_readOnly: function() {
		return this.getAttributeAsBool("readonly");
	}
	,set_readOnly: function(value) {
		this.setAttributeAsBool("readonly",value);
		return value;
	}
	,get_disabled: function() {
		return this.getAttributeAsBool("disabled");
	}
	,set_disabled: function(value) {
		this.setAttributeAsBool("disabled",value);
		this.updateInputRendererState();
		return value;
	}
	,get_type: function() {
		return "textarea";
	}
	,__class__: cocktail.core.html.HTMLTextAreaElement
	,__properties__: $extend(cocktail.core.html.FormAssociatedElement.prototype.__properties__,{get_type:"get_type",set_disabled:"set_disabled",get_disabled:"get_disabled",set_readOnly:"set_readOnly",get_readOnly:"get_readOnly",set_maxLength:"set_maxLength",get_maxLength:"get_maxLength",set_value:"set_value",get_value:"get_value"})
});
cocktail.core.html.HTMLVideoElement = function() {
	cocktail.core.html.HTMLMediaElement.call(this,"VIDEO");
	this.initPosterFrame();
};
$hxClasses["cocktail.core.html.HTMLVideoElement"] = cocktail.core.html.HTMLVideoElement;
cocktail.core.html.HTMLVideoElement.__name__ = ["cocktail","core","html","HTMLVideoElement"];
cocktail.core.html.HTMLVideoElement.__super__ = cocktail.core.html.HTMLMediaElement;
cocktail.core.html.HTMLVideoElement.prototype = $extend(cocktail.core.html.HTMLMediaElement.prototype,{
	initNativeMedia: function() {
		this.nativeMedia = new cocktail.port.base.NativeMedia();
	}
	,initPosterFrame: function() {
		this._posterImage = new cocktail.core.html.HTMLImageElement();
	}
	,setAttribute: function(name,value) {
		if(name == "poster") this.set_poster(value); else cocktail.core.html.HTMLMediaElement.prototype.setAttribute.call(this,name,value);
	}
	,createElementRenderer: function() {
		this.elementRenderer = new cocktail.core.renderer.VideoRenderer(this);
	}
	,shouldRenderPosterFrame: function() {
		if(this.get_poster() == "") return false;
		var _g = this.readyState;
		switch(_g) {
		case 0:case 1:
			return true;
		}
		if(this.paused == true && this._currentPlaybackPosition == 0.0) return true;
		return false;
	}
	,onPosterLoadComplete: function(e) {
		this.removeListeners();
		this.invalidate();
	}
	,onPosterLoadError: function(e) {
		this.removeListeners();
	}
	,removeListeners: function() {
		this._posterImage.removeEventListener("load",this._onPosterLoadComplete);
		this._posterImage.removeEventListener("error",this._onPosterLoadError);
	}
	,set_poster: function(value) {
		cocktail.core.html.HTMLMediaElement.prototype.setAttribute.call(this,"poster",value);
		this._onPosterLoadComplete = $bind(this,this.onPosterLoadComplete);
		this._onPosterLoadError = $bind(this,this.onPosterLoadError);
		this._posterImage.addEventListener("load",this._onPosterLoadComplete);
		this._posterImage.addEventListener("error",this._onPosterLoadError);
		this._posterImage.set_src(value);
		return value;
	}
	,get_poster: function() {
		return this.getAttributeAsDOMString("poster");
	}
	,get_videoWidth: function() {
		if(this.nativeMedia.get_width() != null) return Math.round(this.nativeMedia.get_width()); else return 300;
	}
	,get_videoHeight: function() {
		if(this.nativeMedia.get_height() != null) return Math.round(this.nativeMedia.get_height()); else return 150;
	}
	,__class__: cocktail.core.html.HTMLVideoElement
	,__properties__: $extend(cocktail.core.html.HTMLMediaElement.prototype.__properties__,{get_videoHeight:"get_videoHeight",get_videoWidth:"get_videoWidth",set_poster:"set_poster",get_poster:"get_poster"})
});
cocktail.core.html.TimeRanges = function(ranges) {
	this._ranges = ranges;
};
$hxClasses["cocktail.core.html.TimeRanges"] = cocktail.core.html.TimeRanges;
cocktail.core.html.TimeRanges.__name__ = ["cocktail","core","html","TimeRanges"];
cocktail.core.html.TimeRanges.prototype = {
	start: function(index) {
		return this._ranges[index].start;
	}
	,end: function(index) {
		return this._ranges[index].end;
	}
	,get_length: function() {
		return this._ranges.length;
	}
	,__class__: cocktail.core.html.TimeRanges
	,__properties__: {get_length:"get_length"}
};
cocktail.core.http = {};
cocktail.core.http.HTTPConstants = function() {
};
$hxClasses["cocktail.core.http.HTTPConstants"] = cocktail.core.http.HTTPConstants;
cocktail.core.http.HTTPConstants.__name__ = ["cocktail","core","http","HTTPConstants"];
cocktail.core.http.HTTPConstants.getFormSubmitMethods = function() {
	return ["GET","POST"];
};
cocktail.core.http.HTTPConstants.getFormEncodings = function() {
	return ["application/x-www-form-urlencoded","multipart/form-data","text/plain"];
};
cocktail.core.http.HTTPConstants.prototype = {
	__class__: cocktail.core.http.HTTPConstants
};
cocktail.core.http.DataFormatValue = $hxClasses["cocktail.core.http.DataFormatValue"] = { __ename__ : ["cocktail","core","http","DataFormatValue"], __constructs__ : ["BINARY","TEXT"] };
cocktail.core.http.DataFormatValue.BINARY = ["BINARY",0];
cocktail.core.http.DataFormatValue.BINARY.toString = $estr;
cocktail.core.http.DataFormatValue.BINARY.__enum__ = cocktail.core.http.DataFormatValue;
cocktail.core.http.DataFormatValue.TEXT = ["TEXT",1];
cocktail.core.http.DataFormatValue.TEXT.toString = $estr;
cocktail.core.http.DataFormatValue.TEXT.__enum__ = cocktail.core.http.DataFormatValue;
cocktail.core.http.XMLHTTPRequest = function() {
	cocktail.core.event.XMLHttpRequestEventTarget.call(this);
	this._timer = new cocktail.core.timer.Timer();
	this._nativeHttp = new cocktail.port.base.NativeHttpBase(this._timer);
	this.set_responseType("");
	this.setReadyState(0);
};
$hxClasses["cocktail.core.http.XMLHTTPRequest"] = cocktail.core.http.XMLHTTPRequest;
cocktail.core.http.XMLHTTPRequest.__name__ = ["cocktail","core","http","XMLHTTPRequest"];
cocktail.core.http.XMLHTTPRequest.__super__ = cocktail.core.event.XMLHttpRequestEventTarget;
cocktail.core.http.XMLHTTPRequest.prototype = $extend(cocktail.core.event.XMLHttpRequestEventTarget.prototype,{
	open: function(method,url,async,user,password) {
		if(async == null) async = true;
		var _g = method.toUpperCase();
		switch(_g) {
		case "DELETE":case "GET":case "HEAD":case "OPTIONS":case "POST":case "PUT":
			break;
		case "CONNECT":case "TRACE":case "TRACK":
			throw 18;
			return;
		default:
			throw 12;
			return;
		}
		this._method = method;
		this._url = url;
		if(async == false) this._synchronous = true;
		this._authorRequestHeaders = new haxe.ds.StringMap();
		this._send = false;
		this.response = null;
		this.setReadyState(1);
	}
	,send: function(data) {
		if(this.readyState != 1 || this._send == true) {
			throw 11;
			return;
		}
		var useRequestEntityBody = data != null;
		var _g = this._method;
		switch(_g) {
		case "GET":case "HEAD":
			useRequestEntityBody = false;
			break;
		}
		if(useRequestEntityBody == true) {
		}
		if(this._synchronous == true) {
		} else if(this._registeredEventListeners != null) this._uploadEvents = true;
		this._error = false;
		if(useRequestEntityBody == false || data == null) this._uploadComplete = true;
		if(this._synchronous == false) {
			this._send = true;
			this.fireReadyStateChange();
			var loadStart = new cocktail.core.event.ProgressEvent();
			loadStart.initEvent("loadstart",false,false);
			this.dispatchEvent(loadStart);
			if(this._uploadComplete == false) {
				var uploadLoadStart = new cocktail.core.event.ProgressEvent();
				uploadLoadStart.initEvent("loadstart",false,false);
				this.upload.dispatchEvent(uploadLoadStart);
			}
		}
		this._nativeHttp.load(this._url,this._method,data,this._authorRequestHeaders,cocktail.core.http.DataFormatValue.TEXT);
		this.onHttpProgressTick(0);
	}
	,abort: function() {
	}
	,setRequestHeader: function(header,value) {
		if(this.readyState != 1 || this._send == true) {
			throw 11;
			return;
		}
		var _g = header.toLowerCase();
		switch(_g) {
		case "accept-charset":case "accept-encoding":case "access-control-request-headers":case "access-control-request-method":case "connection":case "content-length":case "cookie":case "cookie2":case "content-transfer-encoding":case "date":case "expect":case "host":case "keep-alive":case "origin":case "referer":case "te":case "trailer":case "transfer-encoding":case "upgrade":case "user-agent":case "via":
			return;
		}
		if((function($this) {
			var $r;
			var _this = header.toLowerCase();
			$r = HxOverrides.substr(_this,0,6);
			return $r;
		}(this)) == "proxy-" || (function($this) {
			var $r;
			var _this1 = header.toLowerCase();
			$r = HxOverrides.substr(_this1,0,4);
			return $r;
		}(this)) == "sec-") return;
		if(this._authorRequestHeaders.exists(header) == false) this._authorRequestHeaders.set(header,value); else this._authorRequestHeaders.set(header,value);
	}
	,onHttpProgressTick: function(timeStamp) {
		this.status = this._nativeHttp.status;
		if(this._error == true) return;
		this.makeProgressNotification();
		this.makeUploadProgressNotification();
		if(this.readyState == 1) {
			if(this._nativeHttp.responseHeadersLoaded == true && this._synchronous == false) {
				this._responseHeaders = this._nativeHttp.responseHeaders;
				this.setReadyState(2);
			}
		}
		if(this.readyState == 2) {
			if(this._synchronous == false) {
				if(this._nativeHttp.get_loaded() > 0) this.setReadyState(3);
			}
		}
		if(this.readyState == 3 || this._nativeHttp.complete == true) {
			if(this._nativeHttp.complete == true) {
				this._synchronous = false;
				this.response = this._nativeHttp.response;
				this.responseText = this._nativeHttp.response;
				this.setReadyState(4);
				var loadEvent = new cocktail.core.event.ProgressEvent();
				loadEvent.initEvent("load",false,false);
				this.dispatchEvent(loadEvent);
				var loadEndEvent = new cocktail.core.event.ProgressEvent();
				loadEndEvent.initEvent("loadend",false,false);
				this.dispatchEvent(loadEndEvent);
				return;
			}
		}
		this._timer.delay($bind(this,this.onHttpProgressTick),50);
	}
	,makeProgressNotification: function() {
		var progressEvent = new cocktail.core.event.ProgressEvent();
		progressEvent.initProgressEvent("progress",false,false,this._nativeHttp.get_total() != 0,this._nativeHttp.get_loaded(),this._nativeHttp.get_total());
		this.dispatchEvent(progressEvent);
	}
	,makeUploadProgressNotification: function() {
	}
	,requestError: function(error,event) {
		this._nativeHttp.close();
		this._error = true;
		this.readyState = 4;
		if(this._synchronous == true) {
			throw error;
			return;
		}
		this.fireReadyStateChange();
		if(this._uploadComplete == false) {
			this._uploadComplete = true;
			var errorEvent = new cocktail.core.event.ProgressEvent();
			errorEvent.initEvent(event,false,false);
			this.upload.dispatchEvent(errorEvent);
			var loadEnd = new cocktail.core.event.ProgressEvent();
			loadEnd.initEvent("loadend",false,false);
			this.upload.dispatchEvent(loadEnd);
		}
		var errorEvent1 = new cocktail.core.event.ProgressEvent();
		errorEvent1.initEvent(event,false,false);
		this.dispatchEvent(errorEvent1);
		var loadEnd1 = new cocktail.core.event.ProgressEvent();
		loadEnd1.initEvent("loadend",false,false);
		this.dispatchEvent(loadEnd1);
	}
	,setReadyState: function(value) {
		this.readyState = value;
		this.fireReadyStateChange();
	}
	,fireReadyStateChange: function() {
		var readyStateChangeEvent = new cocktail.core.event.Event();
		readyStateChangeEvent.initEvent("readystatechange",false,false);
		this.dispatchEvent(readyStateChangeEvent);
	}
	,get_status: function() {
		var _g = this.readyState;
		switch(_g) {
		case 0:case 1:
			return 0;
		default:
		}
		if(this._error == true) return 0;
		return this.status;
	}
	,get_statusText: function() {
		var _g = this.readyState;
		switch(_g) {
		case 0:case 1:
			return "";
		default:
		}
		if(this._error == true) return "";
		return this.statusText;
	}
	,get_response: function() {
		if(this.responseType == "" && this.responseType == "text") {
			var _g = this.readyState;
			switch(_g) {
			case 3:case 4:
				break;
			default:
				return "";
			}
			if(this._error == true) return "";
			return this.get_responseText();
		} else {
			if(this.readyState != 4) return null;
			if(this._error == true) return null;
			return null;
		}
	}
	,get_responseText: function() {
		if(this.responseType != "" && this.responseType != "text") {
			throw 11;
			return null;
		}
		var _g = this.readyState;
		switch(_g) {
		case 3:case 4:
			break;
		default:
			return "";
		}
		if(this._error == true) return "";
		return this.responseText;
	}
	,get_responseXML: function() {
		if(this.responseType != "" && this.responseType != "document") {
			throw 11;
			return null;
		}
		if(this.readyState != 4) return null;
		if(this._error == true) return null;
		return this.responseXML;
	}
	,set_responseType: function(value) {
		var _g = this.readyState;
		switch(_g) {
		case 3:case 4:
			throw 11;
			return null;
		default:
		}
		return this.responseType = value;
	}
	,set_onreadystatechange: function(value) {
		this.updateCallbackListener("readystatechange",value,this.onreadystatechange);
		return this.onreadystatechange = value;
	}
	,__class__: cocktail.core.http.XMLHTTPRequest
	,__properties__: $extend(cocktail.core.event.XMLHttpRequestEventTarget.prototype.__properties__,{set_onreadystatechange:"set_onreadystatechange",get_statusText:"get_statusText",get_status:"get_status",set_responseType:"set_responseType",get_responseXML:"get_responseXML",get_responseText:"get_responseText",get_response:"get_response"})
});
cocktail.core.http.XMLHttpRequestUpload = function() {
	cocktail.core.event.XMLHttpRequestEventTarget.call(this);
};
$hxClasses["cocktail.core.http.XMLHttpRequestUpload"] = cocktail.core.http.XMLHttpRequestUpload;
cocktail.core.http.XMLHttpRequestUpload.__name__ = ["cocktail","core","http","XMLHttpRequestUpload"];
cocktail.core.http.XMLHttpRequestUpload.__super__ = cocktail.core.event.XMLHttpRequestEventTarget;
cocktail.core.http.XMLHttpRequestUpload.prototype = $extend(cocktail.core.event.XMLHttpRequestEventTarget.prototype,{
	__class__: cocktail.core.http.XMLHttpRequestUpload
});
cocktail.core.invalidation = {};
cocktail.core.invalidation.InvalidationManager = function(htmlDocument) {
	this._htmlDocument = htmlDocument;
	this._invalidationScheduled = false;
	this._documentNeedsLayout = true;
	this._documentNeedsRendering = true;
	this._documentNeedsCascading = true;
	this._graphicsContextTreeNeedsUpdate = true;
	this._forceGraphicsContextUpdate = false;
	this._renderingTreeNeedsUpdate = true;
	this._layerTreeNeedsUpdate = true;
	this._nativeLayerTreeNeedsUpdate = true;
	this._stackingContextsNeedUpdate = true;
	this._pendingTransitionsNeedUpdate = true;
	this._forceLayout = false;
	this._viewportResized = false;
	this._bitmapSizeNeedsUpdate = true;
	this._scrollOffsetNeedsUpdate = false;
	this._initialMatrix = new cocktail.core.geom.Matrix();
	this._dirtyRect = new cocktail.core.geom.RectangleVO();
	this._firstDirtyRect = true;
	this._repaintWholeViewport = true;
};
$hxClasses["cocktail.core.invalidation.InvalidationManager"] = cocktail.core.invalidation.InvalidationManager;
cocktail.core.invalidation.InvalidationManager.__name__ = ["cocktail","core","invalidation","InvalidationManager"];
cocktail.core.invalidation.InvalidationManager.prototype = {
	dispose: function() {
		this._htmlDocument = null;
		this._initialMatrix = null;
		this._dirtyRect = null;
	}
	,updateDocumentImmediately: function() {
		if(this._documentNeedsRendering == false) this.updateDocument(); else {
			this._documentNeedsRendering = false;
			this.updateDocument();
			this._documentNeedsRendering = true;
		}
	}
	,invalidateViewportSize: function() {
		this.invalidateLayout(true);
		this.invalidateRendering();
		this._viewportResized = true;
		this._bitmapSizeNeedsUpdate = true;
	}
	,invalidateBitmapSizes: function() {
		this._bitmapSizeNeedsUpdate = true;
		this.invalidate();
	}
	,invalidateLayout: function(force) {
		if(this._forceLayout == true) this._forceLayout = force;
		this._documentNeedsLayout = true;
		this.invalidate();
	}
	,invalidateRendering: function(dirtyRect) {
		this._documentNeedsRendering = true;
		this.invalidate();
		if(this._repaintWholeViewport == true) return;
		if(dirtyRect == null) this._repaintWholeViewport = true; else if(this._firstDirtyRect == true) {
			this._dirtyRect.x = dirtyRect.x;
			this._dirtyRect.y = dirtyRect.y;
			this._dirtyRect.width = dirtyRect.width;
			this._dirtyRect.height = dirtyRect.height;
			this._firstDirtyRect = false;
		} else cocktail.core.geom.GeomUtils.addBounds(dirtyRect,this._dirtyRect,null,null);
	}
	,invalidateScrollOffset: function() {
		this._scrollOffsetNeedsUpdate = true;
		this.invalidate();
	}
	,invalidateRenderingTree: function() {
		this._renderingTreeNeedsUpdate = true;
		this.invalidate();
	}
	,invalidateLayerTree: function() {
		this._layerTreeNeedsUpdate = true;
		this.invalidate();
	}
	,invalidateStackingContexts: function() {
		this._stackingContextsNeedUpdate = true;
		this.invalidate();
	}
	,invalidateNativeLayerTree: function() {
		this._nativeLayerTreeNeedsUpdate = true;
		this.invalidate();
	}
	,invalidatePendingTransitions: function() {
		this._pendingTransitionsNeedUpdate = true;
		this.invalidate();
	}
	,invalidateGraphicsContextTree: function(force) {
		this._graphicsContextTreeNeedsUpdate = true;
		if(force == true) this._forceGraphicsContextUpdate = true;
		this.invalidate();
	}
	,invalidateCascade: function() {
		this._documentNeedsCascading = true;
		this.invalidate();
	}
	,invalidate: function() {
		if(this._invalidationScheduled == false) this.doInvalidate();
	}
	,doInvalidate: function() {
		this._invalidationScheduled = true;
		this._htmlDocument.timer.delay($bind(this,this.onUpdateSchedule));
	}
	,onUpdateSchedule: function(timeStamp) {
		this._invalidationScheduled = false;
		this.updateDocument();
	}
	,updateDocument: function() {
		if(this._documentNeedsCascading == true) {
			this.updateCascade(true);
			this._documentNeedsCascading = false;
		}
		if(this._renderingTreeNeedsUpdate == true) {
			this.updateRenderingTree();
			this._renderingTreeNeedsUpdate = false;
		}
		if(this._layerTreeNeedsUpdate == true) {
			this._htmlDocument.documentElement.elementRenderer.updateLayerRenderer();
			this._layerTreeNeedsUpdate = false;
		}
		if(this._stackingContextsNeedUpdate == true) {
			this._htmlDocument.documentElement.elementRenderer.layerRenderer.updateStackingContext();
			this._stackingContextsNeedUpdate = false;
		}
		if(this._documentNeedsLayout == true) {
			this._htmlDocument.documentElement.elementRenderer.updateText();
			this.updateLayout(this._forceLayout);
			this._forceLayout = false;
			this._documentNeedsLayout = false;
		}
		if(this._pendingTransitionsNeedUpdate == true) {
			var atLeastOneTransitionStarted = this._htmlDocument.documentElement.startPendingTransitions();
			if(atLeastOneTransitionStarted == true) this.updateLayout(false);
		}
		if(this._graphicsContextTreeNeedsUpdate == true) {
			this._htmlDocument.documentElement.elementRenderer.layerRenderer.updateGraphicsContext(this._forceGraphicsContextUpdate);
			this._graphicsContextTreeNeedsUpdate = false;
			this._forceGraphicsContextUpdate = false;
		}
		if(this._nativeLayerTreeNeedsUpdate == true) {
			this._htmlDocument.documentElement.elementRenderer.layerRenderer.graphicsContext.updateNativeLayer();
			this._nativeLayerTreeNeedsUpdate = false;
		}
		if(this._bitmapSizeNeedsUpdate == true) {
			this._htmlDocument.documentElement.elementRenderer.layerRenderer.graphicsContext.updateGraphicsSize(this._htmlDocument.window.get_innerWidth(),this._htmlDocument.window.get_innerHeight());
			this._bitmapSizeNeedsUpdate = false;
		}
		if(this._documentNeedsRendering == true || this._scrollOffsetNeedsUpdate == true) {
			var initialLayerRenderer = this._htmlDocument.documentElement.elementRenderer.layerRenderer;
			if(this._documentNeedsRendering == true) {
				initialLayerRenderer.updateLayerMatrix(this._initialMatrix);
				initialLayerRenderer.updateBounds();
				initialLayerRenderer.updateClippedBounds();
				initialLayerRenderer.updateScrollableBounds();
				initialLayerRenderer.resetScrollOffset();
				initialLayerRenderer.updateScrollOffset();
				initialLayerRenderer.resetClipRect(0,0,this._htmlDocument.window.get_innerWidth(),this._htmlDocument.window.get_innerHeight());
				initialLayerRenderer.updateClipRect();
				this._htmlDocument.documentElement.elementRenderer.updateHitTestingBounds();
				initialLayerRenderer.updateLayerAlpha(1.0);
				this._htmlDocument.documentElement.elementRenderer.updateTextDecorations(false,false,false,false);
				if(this._repaintWholeViewport == true) {
					this._dirtyRect.x = 0;
					this._dirtyRect.y = 0;
					this._dirtyRect.width = this._htmlDocument.window.get_innerWidth();
					this._dirtyRect.height = this._htmlDocument.window.get_innerHeight();
				}
				initialLayerRenderer.clear(this._dirtyRect.x,this._dirtyRect.y,this._dirtyRect.width,this._dirtyRect.height);
				initialLayerRenderer.stackingContext.render(this._dirtyRect);
			} else {
				initialLayerRenderer.resetScrollOffset();
				initialLayerRenderer.updateScrollOffset();
				initialLayerRenderer.resetClipRect(0,0,this._htmlDocument.window.get_innerWidth(),this._htmlDocument.window.get_innerHeight());
				initialLayerRenderer.updateClipRect();
				this._htmlDocument.documentElement.elementRenderer.updateHitTestingBounds();
				this._dirtyRect.x = 0;
				this._dirtyRect.y = 0;
				this._dirtyRect.width = 0;
				this._dirtyRect.height = 0;
				initialLayerRenderer.updateScrollRegion(this._dirtyRect);
				initialLayerRenderer.clear(this._dirtyRect.x,this._dirtyRect.y,this._dirtyRect.width,this._dirtyRect.height);
				initialLayerRenderer.stackingContext.render(this._dirtyRect);
			}
			this._documentNeedsRendering = false;
			this._repaintWholeViewport = false;
			this._firstDirtyRect = true;
			this._dirtyRect.x = 0;
			this._dirtyRect.y = 0;
			this._dirtyRect.width = 0;
			this._dirtyRect.height = 0;
			this._scrollOffsetNeedsUpdate = false;
		}
		if(this._pendingTransitionsNeedUpdate == true) {
			this._htmlDocument.documentElement.endPendingTransitions();
			this._pendingTransitionsNeedUpdate = false;
		}
		if(this._viewportResized == true) {
			this._viewportResized = false;
			var resizeEvent = new cocktail.core.event.UIEvent();
			resizeEvent.initUIEvent("resize",false,false,null,0);
			this._htmlDocument.window.dispatchEvent(resizeEvent);
		}
		this._htmlDocument.onUpdated();
	}
	,updateCascade: function(programmaticChange) {
		this._htmlDocument.cascadeManager.reset();
		this._htmlDocument.documentElement.cascade(this._htmlDocument.cascadeManager,programmaticChange);
	}
	,updateLayout: function(forceLayout) {
		this._htmlDocument.documentElement.elementRenderer.layout(forceLayout,cocktail.core.layout.LayoutStateValue.NORMAL);
		this._htmlDocument.documentElement.elementRenderer.setGlobalOrigins(0,0,0,0);
	}
	,updateRenderingTree: function() {
		this._htmlDocument.documentElement.updateElementRenderer();
		this._htmlDocument.documentElement.elementRenderer.updateAnonymousBlock();
		this._htmlDocument.documentElement.elementRenderer.updateInlineBoxes();
	}
	,__class__: cocktail.core.invalidation.InvalidationManager
};
cocktail.core.layer = {};
cocktail.core.layer.IScrollableView = function() { };
$hxClasses["cocktail.core.layer.IScrollableView"] = cocktail.core.layer.IScrollableView;
cocktail.core.layer.IScrollableView.__name__ = ["cocktail","core","layer","IScrollableView"];
cocktail.core.layer.IScrollableView.prototype = {
	__class__: cocktail.core.layer.IScrollableView
};
cocktail.core.layer.ScrollableView = function(rootElementRenderer) {
	cocktail.core.ds.FastNode.call(this);
	this.rootElementRenderer = rootElementRenderer;
	this.set_scrollLeft(0);
	this.set_scrollTop(0);
	this._previousScrollOffsetX = 0;
	this._previousScrollOffsetY = 0;
	this._ancestorsScrollOffset = new cocktail.core.geom.PointVO(0,0);
	this.scrollOffset = new cocktail.core.geom.PointVO(0,0);
	this.bounds = new cocktail.core.geom.RectangleVO();
	this._clippedBounds = new cocktail.core.geom.RectangleVO();
	this.scrollableBounds = new cocktail.core.geom.RectangleVO();
	this.clipRect = new cocktail.core.geom.RectangleVO();
};
$hxClasses["cocktail.core.layer.ScrollableView"] = cocktail.core.layer.ScrollableView;
cocktail.core.layer.ScrollableView.__name__ = ["cocktail","core","layer","ScrollableView"];
cocktail.core.layer.ScrollableView.__interfaces__ = [cocktail.core.layer.IScrollableView];
cocktail.core.layer.ScrollableView.__super__ = cocktail.core.ds.FastNode;
cocktail.core.layer.ScrollableView.prototype = $extend(cocktail.core.ds.FastNode.prototype,{
	resetClipRect: function(x,y,width,height) {
		this.clipRect.x = x;
		this.clipRect.y = y;
		this.clipRect.width = width;
		this.clipRect.height = height;
		var child = this.firstChild;
		while(child != null) {
			child.resetClipRect(x,y,width,height);
			child = child.nextSibling;
		}
	}
	,updateClipRect: function() {
		var clipped = false;
		if(this.isXAxisClipped() == true) clipped = true; else if(this.isYAxisClipped() == true) clipped = true;
		if(clipped == true) {
			this._clippedBounds.x -= this._ancestorsScrollOffset.x;
			this._clippedBounds.y -= this._ancestorsScrollOffset.y;
			cocktail.core.geom.GeomUtils.intersectBounds(this.clipRect,this._clippedBounds,this.clipRect);
			this._clippedBounds.x += this._ancestorsScrollOffset.x;
			this._clippedBounds.y += this._ancestorsScrollOffset.y;
			this.clipChildren(this,this.clipRect,this);
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateClipRect();
			child = child.nextSibling;
		}
	}
	,clipChildren: function(rootLayerRenderer,clipRect,referenceLayer) {
		var child = rootLayerRenderer.firstChild;
		while(child != null) {
			var childWasClipped = child.clipIfNeeded(clipRect,referenceLayer);
			if(childWasClipped == true) {
				if(child.firstChild != null) this.clipChildren(child,clipRect,referenceLayer);
			}
			child = child.nextSibling;
		}
	}
	,clipIfNeeded: function(parentClipRect,layer) {
		if(this.rootElementRenderer.coreStyle.isFixedPositioned == true) return false;
		if(this.isContainingBlockChildren(layer) == true) return false;
		cocktail.core.geom.GeomUtils.intersectBounds(this.clipRect,parentClipRect,this.clipRect);
		return true;
	}
	,resetScrollOffset: function() {
		this._ancestorsScrollOffset.x = 0;
		this._ancestorsScrollOffset.y = 0;
		this._previousScrollOffsetX = this.scrollOffset.x;
		this._previousScrollOffsetY = this.scrollOffset.y;
		this.scrollOffset.x = 0;
		this.scrollOffset.y = 0;
		var child = this.firstChild;
		while(child != null) {
			child.resetScrollOffset();
			child = child.nextSibling;
		}
	}
	,updateScrollOffset: function() {
		if(this.isXAxisClipped() == true) this.addScrollOffsetToChildren(this,this.scrollLeft,this.scrollTop,this); else if(this.isYAxisClipped() == true) this.addScrollOffsetToChildren(this,this.scrollLeft,this.scrollTop,this);
		var child = this.firstChild;
		while(child != null) {
			child.updateScrollOffset();
			child = child.nextSibling;
		}
		this.scrollOffset.x = this._ancestorsScrollOffset.x + this.scrollLeft;
		this.scrollOffset.y = this._ancestorsScrollOffset.y + this.scrollTop;
	}
	,addScrollOffsetIfNeeded: function(layer,scrollLeft,scrollTop) {
		if(this.rootElementRenderer.coreStyle.isFixedPositioned == true) return;
		if(this.isContainingBlockChildren(layer) == true) return;
		this._ancestorsScrollOffset.x += scrollLeft;
		this._ancestorsScrollOffset.y += scrollTop;
	}
	,addScrollOffsetToChildren: function(rootLayerRenderer,scrollLeft,scrollTop,referenceLayer) {
		var child = rootLayerRenderer.firstChild;
		while(child != null) {
			child.addScrollOffsetIfNeeded(referenceLayer,scrollLeft,scrollTop);
			if(child.firstChild != null) this.addScrollOffsetToChildren(child,scrollLeft,scrollTop,referenceLayer);
			child = child.nextSibling;
		}
	}
	,updateBounds: function() {
		var child = this.firstChild;
		this.getElementRenderersBounds(this.rootElementRenderer,this.bounds);
		while(child != null) {
			child.updateBounds();
			child = child.nextSibling;
		}
	}
	,updateClippedBounds: function() {
		var child = this.firstChild;
		var x = this.bounds.x;
		var y = this.bounds.y;
		var width = this.bounds.width;
		var height = this.bounds.height;
		if(this.isXAxisClipped() == true) {
			x = this.rootElementRenderer.globalBounds.x;
			width = this.rootElementRenderer.globalBounds.width;
		}
		if(this.isYAxisClipped() == true) {
			y = this.rootElementRenderer.globalBounds.y;
			height = this.rootElementRenderer.globalBounds.height;
		}
		this._clippedBounds.x = x;
		this._clippedBounds.y = y;
		this._clippedBounds.width = width;
		this._clippedBounds.height = height;
		while(child != null) {
			child.updateClippedBounds();
			child = child.nextSibling;
		}
	}
	,getElementRenderersBounds: function(rootElementRenderer,bounds) {
		bounds.x = 50000;
		bounds.y = 50000;
		bounds.width = 0;
		bounds.height = 0;
		cocktail.core.geom.GeomUtils.addBounds(rootElementRenderer.globalBounds,bounds,null,null);
		this.doGetElementRenderersBounds(rootElementRenderer,bounds);
	}
	,doGetElementRenderersBounds: function(rootElementRenderer,bounds) {
		var thisAsLayer = this;
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			if(child.isText == false) {
				if(child.layerRenderer == thisAsLayer) {
					cocktail.core.geom.GeomUtils.addBounds(child.globalBounds,bounds,null,null);
					if(child.firstChild != null) this.doGetElementRenderersBounds(child,bounds);
				}
			}
			child = child.nextSibling;
		}
	}
	,updateScrollableBounds: function() {
		var child = this.firstChild;
		this.getScrollableBounds(this,this.scrollableBounds);
		while(child != null) {
			child.updateScrollableBounds();
			child = child.nextSibling;
		}
	}
	,getScrollableBoundsIfNeeded: function(layer) {
		if(this.rootElementRenderer.coreStyle.isFixedPositioned == true) return null;
		if(this.isContainingBlockChildren(layer) == true) return null;
		if(this.isXAxisClipped() == false) {
			if(this.isYAxisClipped() == false) return this.bounds;
		}
		return this._clippedBounds;
	}
	,getScrollableBounds: function(rootLayerRenderer,scrollableBounds) {
		scrollableBounds.x = 50000;
		scrollableBounds.y = 50000;
		scrollableBounds.width = 0;
		scrollableBounds.height = 0;
		cocktail.core.geom.GeomUtils.addBounds(this.bounds,scrollableBounds,null,null);
		this.doGetScrollableBounds(rootLayerRenderer,scrollableBounds,this,true,true);
	}
	,doGetScrollableBounds: function(rootLayerRenderer,scrollableBounds,referenceLayer,getHorizontalBounds,getVerticalBounds) {
		var child = rootLayerRenderer.firstChild;
		while(child != null) {
			var childBounds = child.getScrollableBoundsIfNeeded(referenceLayer);
			if(childBounds != null) {
				if(getHorizontalBounds == true) {
					if(childBounds.x < scrollableBounds.x) scrollableBounds.x = childBounds.x;
					if(childBounds.x + childBounds.width > scrollableBounds.x + scrollableBounds.width) scrollableBounds.width = childBounds.x + childBounds.width - scrollableBounds.x;
				}
				if(getVerticalBounds == true) {
					if(childBounds.y < scrollableBounds.y) scrollableBounds.y = childBounds.y;
					if(childBounds.y + childBounds.height > scrollableBounds.y + scrollableBounds.height) scrollableBounds.height = childBounds.y + childBounds.height - scrollableBounds.y;
				}
				if(child.firstChild != null) {
					if(child.isXAxisClipped() == true) getHorizontalBounds = false;
					if(child.isYAxisClipped() == true) getVerticalBounds = false;
					if(getHorizontalBounds == true || getVerticalBounds == true) this.doGetScrollableBounds(child,scrollableBounds,referenceLayer,getHorizontalBounds,getVerticalBounds);
				}
			}
			child = child.nextSibling;
		}
	}
	,set_scrollLeft: function(value) {
		if(this.isXAxisClipped() == false) return this.scrollLeft = 0;
		if(value <= 0) {
			if(this.scrollLeft > 0) this.scrollChanged();
			this.scrollLeft = 0;
		} else {
			var maxWidthScroll = this.scrollableBounds.width - this._clippedBounds.width;
			if(maxWidthScroll <= 0) {
				if(this.scrollLeft != 0) this.scrollChanged();
				this.scrollLeft = 0;
			} else if(value > maxWidthScroll) {
				if(this.scrollLeft != maxWidthScroll) this.scrollChanged();
				this.scrollLeft = maxWidthScroll;
			} else {
				if(this.scrollLeft != value) this.scrollChanged();
				this.scrollLeft = value;
			}
		}
		return value;
	}
	,set_scrollTop: function(value) {
		if(this.isYAxisClipped() == false) return this.scrollTop = 0;
		if(value <= 0) {
			if(this.scrollTop > 0) this.scrollChanged();
			this.scrollTop = 0;
		} else {
			var maxHeightScroll = this.scrollableBounds.height - this._clippedBounds.height;
			if(maxHeightScroll <= 0) {
				if(this.scrollTop != 0) this.scrollChanged();
				this.scrollTop = 0;
			} else if(value > maxHeightScroll) {
				if(this.scrollTop != maxHeightScroll) this.scrollChanged();
				this.scrollTop = maxHeightScroll;
			} else {
				if(this.scrollTop != value) this.scrollChanged();
				this.scrollTop = value;
			}
		}
		return value;
	}
	,scrollChanged: function() {
	}
	,isContainingBlockChildren: function(layer) {
		var containingBlock = this.rootElementRenderer.containingBlock;
		var layerContainingBlock = layer.rootElementRenderer.containingBlock;
		if(containingBlock == layerContainingBlock) return false;
		var parent = layerContainingBlock;
		while(parent != null) {
			if(parent == containingBlock) return true;
			parent = parent.parentNode;
		}
		return false;
	}
	,isXAxisClipped: function() {
		if(this.rootElementRenderer.isBlockContainer == false) return false;
		if(this.rootElementRenderer.coreStyle.canAlwaysOverflow == true) return false;
		if(this.rootElementRenderer.coreStyle.hasHiddenOrScrollOverflowX == true) return true;
		var _g = this.rootElementRenderer.coreStyle.getKeyword(this.rootElementRenderer.coreStyle.getComputedOrInitialProperty(51));
		switch(_g[1]) {
		case 37:case 38:
			return true;
		case 27:
			return false;
		case 36:
			if(this.treatVisibleOverflowAsAuto() == true) return false;
			return false;
		default:
			return false;
		}
	}
	,isYAxisClipped: function() {
		if(this.rootElementRenderer.isBlockContainer == false) return false;
		if(this.rootElementRenderer.coreStyle.canAlwaysOverflow == true) return false;
		if(this.rootElementRenderer.coreStyle.hasHiddenOrScrollOverflowY == true) return true;
		var _g = this.rootElementRenderer.coreStyle.getKeyword(this.rootElementRenderer.coreStyle.getComputedOrInitialProperty(52));
		switch(_g[1]) {
		case 37:case 38:
			return true;
		case 27:
			return false;
		case 36:
			if(this.treatVisibleOverflowAsAuto() == true) return false;
			return false;
		default:
			return false;
		}
	}
	,treatVisibleOverflowAsAuto: function() {
		return false;
	}
	,__class__: cocktail.core.layer.ScrollableView
	,__properties__: {set_scrollTop:"set_scrollTop",set_scrollLeft:"set_scrollLeft"}
});
cocktail.core.layer.LayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.ScrollableView.call(this,rootElementRenderer);
	this.hasOwnGraphicsContext = false;
	this.hasOwnStackingContext = false;
	this._needsGraphicsContextUpdate = true;
	this._needsStackingContextUpdate = true;
	this._canUpdateScrollRegion = false;
	this.matrix = new cocktail.core.geom.Matrix();
	this._currentMatrix = new cocktail.core.geom.Matrix();
	this._relativeOffset = new cocktail.core.geom.PointVO(0,0);
	this._layerDirtyRect = new cocktail.core.geom.RectangleVO();
	this.alpha = 1.0;
};
$hxClasses["cocktail.core.layer.LayerRenderer"] = cocktail.core.layer.LayerRenderer;
cocktail.core.layer.LayerRenderer.__name__ = ["cocktail","core","layer","LayerRenderer"];
cocktail.core.layer.LayerRenderer.__super__ = cocktail.core.layer.ScrollableView;
cocktail.core.layer.LayerRenderer.prototype = $extend(cocktail.core.layer.ScrollableView.prototype,{
	dispose: function() {
		this.rootElementRenderer = null;
		this.graphicsContext = null;
	}
	,updateGraphicsContext: function(force) {
		if(this._needsGraphicsContextUpdate == true || force == true) {
			this._needsGraphicsContextUpdate = false;
			if(this.graphicsContext == null) {
				this.attachGraphicsContext();
				return;
			} else if(this.hasOwnGraphicsContext != this.establishesNewGraphicsContext()) {
				this.detachGraphicsContext();
				this.attachGraphicsContext();
				return;
			}
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateGraphicsContext(force);
			child = child.nextSibling;
		}
	}
	,updateLayerMatrix: function(parentMatrix) {
		this.matrix.identity();
		if(this.rootElementRenderer.coreStyle.isTransformed == true) {
			if(this.rootElementRenderer.coreStyle.hasCSSTransform == true) cocktail.core.layout.computer.VisualEffectStylesComputer.compute(this.rootElementRenderer.coreStyle);
			this.matrix = this.getTransformationMatrix();
		}
		this.matrix.concatenate(parentMatrix);
		var child = this.firstChild;
		while(child != null) {
			child.updateLayerMatrix(this.matrix);
			child = child.nextSibling;
		}
	}
	,updateLayerAlpha: function(parentAlpha) {
		var layerAlpha = 1.0;
		if(this.rootElementRenderer.coreStyle.isTransparent == true) {
			var coreStyle = this.rootElementRenderer.coreStyle;
			{
				var _g = coreStyle.getTransitionablePropertyValue(53);
				switch(_g[1]) {
				case 1:
					var value = _g[2];
					layerAlpha = value;
					break;
				case 18:
					var value1 = _g[2];
					layerAlpha = value1;
					break;
				default:
				}
			}
		}
		this.alpha = layerAlpha * parentAlpha;
		var child = this.firstChild;
		while(child != null) {
			child.updateLayerAlpha(this.alpha);
			child = child.nextSibling;
		}
	}
	,updateStackingContext: function() {
		if(this._needsStackingContextUpdate == true) {
			this._needsStackingContextUpdate = false;
			if(this.stackingContext == null) {
				this.attachStackingContext();
				return;
			} else if(this.establishesNewStackingContext() != this.hasOwnStackingContext) {
				this.detachStackingContext();
				this.attachStackingContext();
				return;
			}
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateStackingContext();
			child = child.nextSibling;
		}
	}
	,invalidateGraphicsContext: function(force) {
		this._needsGraphicsContextUpdate = true;
		var htmlDocument = this.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateGraphicsContextTree(force);
	}
	,invalidateRendering: function() {
		var htmlDocument = this.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateRendering();
	}
	,invalidateStackingContext: function() {
		var htmlDocument = this.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateStackingContexts();
		this._needsStackingContextUpdate = true;
		this.detachStackingContext();
	}
	,appendChild: function(newChild) {
		cocktail.core.layer.ScrollableView.prototype.appendChild.call(this,newChild);
		newChild.addedToLayerTree();
	}
	,insertBefore: function(newChild,refChild) {
		cocktail.core.layer.ScrollableView.prototype.insertBefore.call(this,newChild,refChild);
		if(refChild == null) return;
		newChild.addedToLayerTree();
	}
	,removeChild: function(oldChild) {
		oldChild.removedFromLayerTree();
		cocktail.core.layer.ScrollableView.prototype.removeChild.call(this,oldChild);
	}
	,addedToLayerTree: function() {
		this.invalidateStackingContext();
		this.invalidateRendering();
		this.invalidateGraphicsContext(this.isCompositingLayer());
	}
	,removedFromLayerTree: function() {
		this.invalidateGraphicsContext(this.isCompositingLayer());
		this.invalidateStackingContext();
		this.invalidateRendering();
		this.detachGraphicsContext();
	}
	,attachGraphicsContext: function() {
		this.doAttachGraphicsContext();
		var child = this.firstChild;
		while(child != null) {
			child.attachGraphicsContext();
			child = child.nextSibling;
		}
	}
	,detachGraphicsContext: function() {
		var child = this.firstChild;
		while(child != null) {
			child.detachGraphicsContext();
			child = child.nextSibling;
		}
		this.doDetachGraphicsContext();
	}
	,attachStackingContext: function() {
		this.doAttachStackingContext();
		var child = this.firstChild;
		while(child != null) {
			child.attachStackingContext();
			child = child.nextSibling;
		}
	}
	,detachStackingContext: function() {
		var child = this.firstChild;
		while(child != null) {
			child.detachStackingContext();
			child = child.nextSibling;
		}
		this.doDetachStackingContext();
	}
	,doAttachGraphicsContext: function() {
		if(this.parentNode != null) this.createGraphicsContext(this.parentNode.graphicsContext);
	}
	,doDetachGraphicsContext: function() {
		if(this.hasOwnGraphicsContext == true) {
			this.graphicsContext.parentNode.removeChild(this.graphicsContext);
			this.graphicsContext.dispose();
			this.hasOwnGraphicsContext = false;
		}
		this.graphicsContext = null;
	}
	,doAttachStackingContext: function() {
		if(this.parentNode != null) this.createStackingContext(this.parentNode.stackingContext);
	}
	,doDetachStackingContext: function() {
		if(this.hasOwnStackingContext == true) {
			this.parentNode.stackingContext.removeChild(this.stackingContext);
			this.hasOwnStackingContext = false;
		}
		this.stackingContext = null;
	}
	,createGraphicsContext: function(parentGraphicsContext) {
		if(this.establishesNewGraphicsContext() == true) {
			this.graphicsContext = new cocktail.core.graphics.GraphicsContext(this);
			this.hasOwnGraphicsContext = true;
			var parentStackingContext = this.parentNode.stackingContext;
			var foundSelf = false;
			var child = parentStackingContext.firstChild;
			var hasCheckedAutoAndZeroLayers = false;
			while(child != null) {
				if(hasCheckedAutoAndZeroLayers == false) {
					if(child.layerRenderer.getZIndex(child.layerRenderer) >= 0) {
						var nextSiblingWithGraphicsContext = this.getNextSiblingWithGraphicsContext(parentStackingContext.layerRenderer,this,foundSelf);
						if(nextSiblingWithGraphicsContext != null) {
							if(nextSiblingWithGraphicsContext == this) foundSelf = true; else {
								nextSiblingWithGraphicsContext.graphicsContext.parentNode.insertBefore(this.graphicsContext,nextSiblingWithGraphicsContext.graphicsContext);
								return;
							}
						}
						hasCheckedAutoAndZeroLayers = true;
					}
				}
				if(foundSelf == true && child.layerRenderer != this) {
					if(child.layerRenderer.graphicsContext != null) {
						if(child.layerRenderer.hasOwnGraphicsContext == true) {
							child.layerRenderer.graphicsContext.parentNode.insertBefore(this.graphicsContext,child.layerRenderer.graphicsContext);
							return;
						}
					}
				}
				if(this.hasOwnStackingContext == true) {
					if(child.layerRenderer == this) foundSelf = true;
				}
				child = child.nextSibling;
			}
			if(hasCheckedAutoAndZeroLayers == false) {
				var nextSiblingWithGraphicsContext1 = this.getNextSiblingWithGraphicsContext(parentStackingContext.layerRenderer,this,foundSelf);
				if(nextSiblingWithGraphicsContext1 != null) {
					if(nextSiblingWithGraphicsContext1 == this) foundSelf = true; else {
						nextSiblingWithGraphicsContext1.graphicsContext.parentNode.insertBefore(this.graphicsContext,nextSiblingWithGraphicsContext1.graphicsContext);
						return;
					}
				}
			}
			parentGraphicsContext.appendChild(this.graphicsContext);
		} else this.graphicsContext = parentGraphicsContext;
	}
	,getNextSiblingWithGraphicsContext: function(rootLayer,referenceLayer,hasFoundSelf) {
		var nextSiblingWithGraphicsContext = null;
		var child = rootLayer.firstChild;
		while(child != null) {
			if(child.hasOwnStackingContext == false) {
				if(child == referenceLayer) hasFoundSelf = true; else if(hasFoundSelf == true) {
					if(child.hasOwnGraphicsContext == true) return child;
				}
				var childNextSiblingWithGraphicsContext = this.getNextSiblingWithGraphicsContext(child,referenceLayer,hasFoundSelf);
				if(childNextSiblingWithGraphicsContext != null) {
					if(childNextSiblingWithGraphicsContext == referenceLayer) hasFoundSelf = true; else return childNextSiblingWithGraphicsContext;
				}
			} else {
				var _g = child.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
				switch(_g[1]) {
				case 0:
					var value = _g[2];
					if(value == 0) {
						if(child == referenceLayer) hasFoundSelf = true; else if(hasFoundSelf == true) {
							if(child.hasOwnGraphicsContext == true) return child;
						}
					}
					break;
				default:
				}
			}
			child = child.nextSibling;
		}
		if(hasFoundSelf == true) return referenceLayer; else return null;
	}
	,establishesNewGraphicsContext: function() {
		if(cocktail.core.config.Config.getInstance().enableCompositing == true) {
			if(this.hasCompositingLayerDescendant(this) == true) return true; else if(this.hasCompositingLayerSibling() == true) return true;
		}
		return false;
	}
	,createStackingContext: function(parentStackingContext) {
		if(this.establishesNewStackingContext() == true) {
			this.stackingContext = new cocktail.core.stacking.StackingContext(this);
			this.hasOwnStackingContext = true;
			var zIndex = this.getZIndex(this);
			var child = parentStackingContext.firstChild;
			while(child != null) {
				var childZIndex = this.getZIndex(child.layerRenderer);
				if(childZIndex > zIndex) {
					parentStackingContext.insertBefore(this.stackingContext,child);
					return;
				}
				child = child.nextSibling;
			}
			parentStackingContext.appendChild(this.stackingContext);
		} else this.stackingContext = parentStackingContext;
	}
	,getZIndex: function(layerRenderer) {
		var zIndex = 0;
		{
			var _g = layerRenderer.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
			switch(_g[1]) {
			case 0:
				var value = _g[2];
				zIndex = value;
				break;
			default:
			}
		}
		return zIndex;
	}
	,hasCompositingLayerDescendant: function(rootLayerRenderer) {
		var child = rootLayerRenderer.firstChild;
		while(child != null) {
			if(child.isCompositingLayer() == true || child.hasOwnGraphicsContext == true) return true; else if(child.firstChild != null) {
				var hasCompositingLayer = this.hasCompositingLayerDescendant(child);
				if(hasCompositingLayer == true) return true;
			}
			child = child.nextSibling;
		}
		return false;
	}
	,hasCompositingLayerSibling: function() {
		var parentStackingContext = this.parentNode.stackingContext;
		if(parentStackingContext == null) return false;
		var hasCheckedAutoAndZeroLayers = false;
		var child = parentStackingContext.firstChild;
		while(child != null) {
			if(hasCheckedAutoAndZeroLayers == false) {
				if(child.layerRenderer.getZIndex(child.layerRenderer) >= 0) {
					var ret = this.hasZeroOrAutoCompositingLayerSibling(parentStackingContext.layerRenderer,this);
					if(ret == true) return true;
					hasCheckedAutoAndZeroLayers = true;
				}
			}
			if(child.layerRenderer == this) return false; else if(child.layerRenderer.isCompositingLayer() == true || child.layerRenderer.hasOwnGraphicsContext == true) return true;
			child = child.nextSibling;
		}
		if(hasCheckedAutoAndZeroLayers == false) return this.hasZeroOrAutoCompositingLayerSibling(parentStackingContext.layerRenderer,this);
		return false;
	}
	,hasZeroOrAutoCompositingLayerSibling: function(rootLayer,referenceLayer) {
		var child = rootLayer.firstChild;
		while(child != null) {
			if(child.hasOwnStackingContext == false) {
				if(child == referenceLayer) return false;
				if(child.isCompositingLayer() == true || child.hasOwnGraphicsContext == true) return true;
				var ret = this.hasZeroOrAutoCompositingLayerSibling(child,referenceLayer);
				if(ret == true) return true;
			} else {
				var _g = child.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
				switch(_g[1]) {
				case 0:
					var value = _g[2];
					if(value == 0) {
						if(child == referenceLayer) return false;
						if(child.isCompositingLayer() == true || child.hasOwnGraphicsContext == true) return true;
					}
					break;
				default:
				}
			}
			child = child.nextSibling;
		}
		return false;
	}
	,isCompositingLayer: function() {
		return false;
	}
	,needsBitmap: function() {
		return true;
	}
	,updateBounds: function() {
		cocktail.core.layer.ScrollableView.prototype.updateBounds.call(this);
		this.bounds.x += this.matrix.e;
		this.bounds.y += this.matrix.f;
	}
	,scrollChanged: function() {
		var htmlDocument = this.rootElementRenderer.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateRendering(this.clipRect);
		this._canUpdateScrollRegion = true;
		htmlDocument.timer.delay($bind(this,this.dispatchScrollEvent));
	}
	,clear: function(x,y,width,height) {
		if(this.hasOwnGraphicsContext == true) this.doClear(x,y,width,height);
		var child = this.firstChild;
		while(child != null) {
			child.clear(x,y,width,height);
			child = child.nextSibling;
		}
	}
	,render: function(dirtyRect) {
		if(this.alpha == 0) return;
		cocktail.core.geom.GeomUtils.intersectBounds(dirtyRect,this.clipRect,this._layerDirtyRect);
		if(this._layerDirtyRect.width == 0 || this._layerDirtyRect.height == 0) return;
		if(this.alpha != 1.0) this.graphicsContext.nativeLayer.graphics.beginTransparency(this.alpha);
		this.graphicsContext.nativeLayer.graphics.beginTransformations(this.matrix);
		this.rootElementRenderer.render(this.graphicsContext,this._layerDirtyRect,this.scrollOffset);
		this.graphicsContext.nativeLayer.graphics.endTransformations();
		if(this.alpha != 1.0) this.graphicsContext.nativeLayer.graphics.endTransparency();
		this._canUpdateScrollRegion = false;
	}
	,updateScrollRegion: function(dirtyRect) {
		if(this._canUpdateScrollRegion == true) {
			var leftScrollOffset = this.scrollOffset.x - this._previousScrollOffsetX;
			var topScrollOffset = this.scrollOffset.y - this._previousScrollOffsetY;
			var copyRect = new cocktail.core.geom.RectangleVO();
			copyRect.x = this.clipRect.x;
			copyRect.y = this.clipRect.y;
			copyRect.width = this.clipRect.width;
			copyRect.height = this.clipRect.height;
			var copyDestination = new cocktail.core.geom.PointVO(this.clipRect.x,this.clipRect.y);
			if(topScrollOffset != 0) {
				copyRect.height -= Math.abs(topScrollOffset);
				if(topScrollOffset > 0) copyRect.y += topScrollOffset; else copyDestination.y -= topScrollOffset;
				var scrollTopRect = new cocktail.core.geom.RectangleVO();
				scrollTopRect.width = this.clipRect.width;
				scrollTopRect.height = Math.abs(topScrollOffset);
				scrollTopRect.x = this.clipRect.x;
				if(topScrollOffset > 0) scrollTopRect.y = this.clipRect.y + this.clipRect.height - topScrollOffset; else scrollTopRect.y = this.clipRect.y;
				if(dirtyRect.width == 0 && dirtyRect.height == 0) {
					dirtyRect.x = scrollTopRect.x;
					dirtyRect.y = scrollTopRect.y;
					dirtyRect.width = scrollTopRect.width;
					dirtyRect.height = scrollTopRect.height;
				} else cocktail.core.geom.GeomUtils.intersectBounds(dirtyRect,scrollTopRect,dirtyRect);
			}
			if(leftScrollOffset != 0) {
				copyRect.width -= Math.abs(leftScrollOffset);
				if(leftScrollOffset > 0) copyRect.x += leftScrollOffset; else copyDestination.x -= leftScrollOffset;
				var scrollLeftRect = new cocktail.core.geom.RectangleVO();
				scrollLeftRect.width = Math.abs(leftScrollOffset);
				scrollLeftRect.height = this.clipRect.height;
				scrollLeftRect.y = this.clipRect.y;
				if(leftScrollOffset > 0) scrollLeftRect.x = this.clipRect.x + this.clipRect.width - leftScrollOffset; else scrollLeftRect.x = this.clipRect.x;
				if(dirtyRect.width == 0 && dirtyRect.height == 0) {
					dirtyRect.x = scrollLeftRect.x;
					dirtyRect.y = scrollLeftRect.y;
					dirtyRect.width = scrollLeftRect.width;
					dirtyRect.height = scrollLeftRect.height;
				} else cocktail.core.geom.GeomUtils.intersectBounds(dirtyRect,scrollLeftRect,dirtyRect);
			}
			this.graphicsContext.nativeLayer.graphics.copyRect(copyRect,copyDestination.x,copyDestination.y);
			this._canUpdateScrollRegion = false;
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateScrollRegion(dirtyRect);
			child = child.nextSibling;
		}
	}
	,doClear: function(x,y,width,height) {
		this.graphicsContext.nativeLayer.graphics.clear(x,y,width,height);
	}
	,getTransformationMatrix: function() {
		var relativeOffset = this.getRelativeOffset(this.rootElementRenderer);
		this._currentMatrix.identity();
		if(this.rootElementRenderer.hasCSSTransform() == true) this.getConcatenatedMatrix(this.rootElementRenderer.coreStyle.usedValues.transform,relativeOffset);
		this._currentMatrix.translate(relativeOffset.x,relativeOffset.y);
		return this._currentMatrix;
	}
	,getConcatenatedMatrix: function(matrix,relativeOffset) {
		var globalBounds = this.rootElementRenderer.globalBounds;
		this._currentMatrix.translate(globalBounds.x + relativeOffset.x,globalBounds.y + relativeOffset.y);
		this._currentMatrix.concatenate(matrix);
		this._currentMatrix.translate((globalBounds.x + relativeOffset.x) * -1,(globalBounds.y + relativeOffset.y) * -1);
	}
	,getRelativeOffset: function(elementRenderer) {
		this._relativeOffset.x = 0;
		this._relativeOffset.y = 0;
		if(elementRenderer.isRelativePositioned() == true) {
			if(elementRenderer.coreStyle.hasAutoLeft == false) this._relativeOffset.x += elementRenderer.coreStyle.usedValues.left; else if(elementRenderer.coreStyle.hasAutoRight == false) this._relativeOffset.x -= elementRenderer.coreStyle.usedValues.right;
			if(elementRenderer.coreStyle.hasAutoTop == false) this._relativeOffset.y += elementRenderer.coreStyle.usedValues.top; else if(elementRenderer.coreStyle.hasAutoBottom == false) this._relativeOffset.y -= elementRenderer.coreStyle.usedValues.bottom;
		}
		return this._relativeOffset;
	}
	,establishesNewStackingContext: function() {
		if(this.rootElementRenderer.isPositioned() == false) return false;
		{
			var _g = this.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				if(value == cocktail.core.css.CSSKeywordValue.AUTO) return false;
				break;
			default:
			}
		}
		return true;
	}
	,dispatchScrollEvent: function(timestamp) {
		var scrollEvent = new cocktail.core.event.UIEvent();
		scrollEvent.initEvent("scroll",false,false);
		if(this.rootElementRenderer != null) {
			if(this.rootElementRenderer.domNode != null) this.rootElementRenderer.domNode.dispatchEvent(scrollEvent);
		}
	}
	,__class__: cocktail.core.layer.LayerRenderer
});
cocktail.core.layer.CompositingLayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.LayerRenderer.call(this,rootElementRenderer);
};
$hxClasses["cocktail.core.layer.CompositingLayerRenderer"] = cocktail.core.layer.CompositingLayerRenderer;
cocktail.core.layer.CompositingLayerRenderer.__name__ = ["cocktail","core","layer","CompositingLayerRenderer"];
cocktail.core.layer.CompositingLayerRenderer.__super__ = cocktail.core.layer.LayerRenderer;
cocktail.core.layer.CompositingLayerRenderer.prototype = $extend(cocktail.core.layer.LayerRenderer.prototype,{
	establishesNewGraphicsContext: function() {
		if(cocktail.core.config.Config.getInstance().enableCompositing == true) {
			if(this.isCompositingLayer() == true) return true; else return cocktail.core.layer.LayerRenderer.prototype.establishesNewGraphicsContext.call(this);
		}
		return false;
	}
	,isCompositingLayer: function() {
		return true;
	}
	,__class__: cocktail.core.layer.CompositingLayerRenderer
});
cocktail.core.layer.InitialLayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.LayerRenderer.call(this,rootElementRenderer);
};
$hxClasses["cocktail.core.layer.InitialLayerRenderer"] = cocktail.core.layer.InitialLayerRenderer;
cocktail.core.layer.InitialLayerRenderer.__name__ = ["cocktail","core","layer","InitialLayerRenderer"];
cocktail.core.layer.InitialLayerRenderer.__super__ = cocktail.core.layer.LayerRenderer;
cocktail.core.layer.InitialLayerRenderer.prototype = $extend(cocktail.core.layer.LayerRenderer.prototype,{
	doAttachGraphicsContext: function() {
		this.graphicsContext = new cocktail.core.graphics.InitialGraphicsContext(this);
		this.hasOwnGraphicsContext = true;
	}
	,doDetachGraphicsContext: function() {
		this.graphicsContext.removedFromGraphicsContextTree();
		this.graphicsContext.dispose();
		this.hasOwnGraphicsContext = false;
		this.graphicsContext = null;
	}
	,doAttachStackingContext: function() {
		this.stackingContext = new cocktail.core.stacking.StackingContext(this);
		this.hasOwnStackingContext = true;
	}
	,doDetachStackingContext: function() {
		this.stackingContext = null;
		this.hasOwnStackingContext = false;
	}
	,establishesNewGraphicsContext: function() {
		return true;
	}
	,establishesNewStackingContext: function() {
		return true;
	}
	,hasCompositingLayerSibling: function() {
		return false;
	}
	,treatVisibleOverflowAsAuto: function() {
		return true;
	}
	,__class__: cocktail.core.layer.InitialLayerRenderer
});
cocktail.core.layer.InputLayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.CompositingLayerRenderer.call(this,rootElementRenderer);
};
$hxClasses["cocktail.core.layer.InputLayerRenderer"] = cocktail.core.layer.InputLayerRenderer;
cocktail.core.layer.InputLayerRenderer.__name__ = ["cocktail","core","layer","InputLayerRenderer"];
cocktail.core.layer.InputLayerRenderer.__super__ = cocktail.core.layer.CompositingLayerRenderer;
cocktail.core.layer.InputLayerRenderer.prototype = $extend(cocktail.core.layer.CompositingLayerRenderer.prototype,{
	attachGraphicsContext: function() {
		cocktail.core.layer.CompositingLayerRenderer.prototype.attachGraphicsContext.call(this);
		if(this.graphicsContext != null) {
			var htmlInputElement = this.rootElementRenderer.domNode;
			if(htmlInputElement.elementRenderer != null) {
				var inputRenderer = htmlInputElement.elementRenderer;
				inputRenderer.nativeInput.attach(this.graphicsContext);
			}
		}
	}
	,detachGraphicsContext: function() {
		if(this.graphicsContext != null) {
			var htmlInputElement = this.rootElementRenderer.domNode;
			if(htmlInputElement.elementRenderer != null) {
				var inputRenderer = htmlInputElement.elementRenderer;
				inputRenderer.nativeInput.detach(this.graphicsContext);
			}
		}
		cocktail.core.layer.CompositingLayerRenderer.prototype.detachGraphicsContext.call(this);
	}
	,__class__: cocktail.core.layer.InputLayerRenderer
});
cocktail.core.layer.PluginLayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.CompositingLayerRenderer.call(this,rootElementRenderer);
};
$hxClasses["cocktail.core.layer.PluginLayerRenderer"] = cocktail.core.layer.PluginLayerRenderer;
cocktail.core.layer.PluginLayerRenderer.__name__ = ["cocktail","core","layer","PluginLayerRenderer"];
cocktail.core.layer.PluginLayerRenderer.__super__ = cocktail.core.layer.CompositingLayerRenderer;
cocktail.core.layer.PluginLayerRenderer.prototype = $extend(cocktail.core.layer.CompositingLayerRenderer.prototype,{
	attachGraphicsContext: function() {
		cocktail.core.layer.CompositingLayerRenderer.prototype.attachGraphicsContext.call(this);
		var htmlObjectElement = this.rootElementRenderer.domNode;
		htmlObjectElement.plugin.attach(this.graphicsContext);
	}
	,detachGraphicsContext: function() {
		if(this.graphicsContext != null) {
			var htmlObjectElement = this.rootElementRenderer.domNode;
			htmlObjectElement.plugin.detach(this.graphicsContext);
		}
		cocktail.core.layer.CompositingLayerRenderer.prototype.detachGraphicsContext.call(this);
	}
	,isCompositingLayer: function() {
		var htmlObjectElement = this.rootElementRenderer.domNode;
		return htmlObjectElement.plugin.isCompositedPlugin();
	}
	,needsBitmap: function() {
		return false;
	}
	,doClear: function(x,y,width,height) {
	}
	,__class__: cocktail.core.layer.PluginLayerRenderer
});
cocktail.core.layer.VideoLayerRenderer = function(rootElementRenderer) {
	cocktail.core.layer.CompositingLayerRenderer.call(this,rootElementRenderer);
};
$hxClasses["cocktail.core.layer.VideoLayerRenderer"] = cocktail.core.layer.VideoLayerRenderer;
cocktail.core.layer.VideoLayerRenderer.__name__ = ["cocktail","core","layer","VideoLayerRenderer"];
cocktail.core.layer.VideoLayerRenderer.__super__ = cocktail.core.layer.CompositingLayerRenderer;
cocktail.core.layer.VideoLayerRenderer.prototype = $extend(cocktail.core.layer.CompositingLayerRenderer.prototype,{
	attachGraphicsContext: function() {
		cocktail.core.layer.CompositingLayerRenderer.prototype.attachGraphicsContext.call(this);
		var htmlVideoElement = this.rootElementRenderer.domNode;
		htmlVideoElement.nativeMedia.attach(this.graphicsContext);
	}
	,detachGraphicsContext: function() {
		if(this.graphicsContext != null) {
			var htmlVideoElement = this.rootElementRenderer.domNode;
			htmlVideoElement.nativeMedia.detach(this.graphicsContext);
		}
		cocktail.core.layer.CompositingLayerRenderer.prototype.detachGraphicsContext.call(this);
	}
	,needsBitmap: function() {
		return false;
	}
	,doClear: function(x,y,width,height) {
	}
	,__class__: cocktail.core.layer.VideoLayerRenderer
});
cocktail.core.layout = {};
cocktail.core.layout.ContainingBlockVO = function(width,isWidthAuto,height,isHeightAuto) {
	this.width = width;
	this.isWidthAuto = isWidthAuto;
	this.height = height;
	this.isHeightAuto = isHeightAuto;
};
$hxClasses["cocktail.core.layout.ContainingBlockVO"] = cocktail.core.layout.ContainingBlockVO;
cocktail.core.layout.ContainingBlockVO.__name__ = ["cocktail","core","layout","ContainingBlockVO"];
cocktail.core.layout.ContainingBlockVO.prototype = {
	__class__: cocktail.core.layout.ContainingBlockVO
};
cocktail.core.layout.LayoutStateValue = $hxClasses["cocktail.core.layout.LayoutStateValue"] = { __ename__ : ["cocktail","core","layout","LayoutStateValue"], __constructs__ : ["NORMAL","SHRINK_TO_FIT_PREFERED_WIDTH","SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH"] };
cocktail.core.layout.LayoutStateValue.NORMAL = ["NORMAL",0];
cocktail.core.layout.LayoutStateValue.NORMAL.toString = $estr;
cocktail.core.layout.LayoutStateValue.NORMAL.__enum__ = cocktail.core.layout.LayoutStateValue;
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_WIDTH = ["SHRINK_TO_FIT_PREFERED_WIDTH",1];
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_WIDTH.toString = $estr;
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_WIDTH.__enum__ = cocktail.core.layout.LayoutStateValue;
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH = ["SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH",2];
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH.toString = $estr;
cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH.__enum__ = cocktail.core.layout.LayoutStateValue;
cocktail.core.layout.ComputedBackgroundStyleVO = function() {
};
$hxClasses["cocktail.core.layout.ComputedBackgroundStyleVO"] = cocktail.core.layout.ComputedBackgroundStyleVO;
cocktail.core.layout.ComputedBackgroundStyleVO.__name__ = ["cocktail","core","layout","ComputedBackgroundStyleVO"];
cocktail.core.layout.ComputedBackgroundStyleVO.prototype = {
	__class__: cocktail.core.layout.ComputedBackgroundStyleVO
};
cocktail.core.layout.InlineFormattingVO = function() {
};
$hxClasses["cocktail.core.layout.InlineFormattingVO"] = cocktail.core.layout.InlineFormattingVO;
cocktail.core.layout.InlineFormattingVO.__name__ = ["cocktail","core","layout","InlineFormattingVO"];
cocktail.core.layout.InlineFormattingVO.prototype = {
	__class__: cocktail.core.layout.InlineFormattingVO
};
cocktail.core.layout.FloatsVO = function(left,right) {
	this.left = left;
	this.right = right;
};
$hxClasses["cocktail.core.layout.FloatsVO"] = cocktail.core.layout.FloatsVO;
cocktail.core.layout.FloatsVO.__name__ = ["cocktail","core","layout","FloatsVO"];
cocktail.core.layout.FloatsVO.prototype = {
	__class__: cocktail.core.layout.FloatsVO
};
cocktail.core.layout.FloatVO = function(node,bounds) {
	this.node = node;
	this.bounds = bounds;
};
$hxClasses["cocktail.core.layout.FloatVO"] = cocktail.core.layout.FloatVO;
cocktail.core.layout.FloatVO.__name__ = ["cocktail","core","layout","FloatVO"];
cocktail.core.layout.FloatVO.prototype = {
	__class__: cocktail.core.layout.FloatVO
};
cocktail.core.layout.LayoutManager = function() {
	this.embeddedBlockBoxStylesComputer = new cocktail.core.boxmodel.EmbeddedBlockBoxStylesComputer();
	this.embeddedFloatBoxStylesComputer = new cocktail.core.boxmodel.EmbeddedFloatBoxStylesComputer();
	this.embeddedInlineBlockBoxStylesComputer = new cocktail.core.boxmodel.EmbeddedInlineBlockBoxStylesComputer();
	this.embeddedInlineBoxStylesComputer = new cocktail.core.boxmodel.EmbeddedInlineBoxStylesComputer();
	this.embeddedPositionedBoxStylesComputer = new cocktail.core.boxmodel.EmbeddedPositionedBoxStylesComputer();
	this.blockBoxStyleComputer = new cocktail.core.boxmodel.BlockBoxStylesComputer();
	this.floatBoxStylesComputer = new cocktail.core.boxmodel.FloatBoxStylesComputer();
	this.inlineBoxStylesComputer = new cocktail.core.boxmodel.InLineBoxStylesComputer();
	this.inlineBlockBoxStylesComputer = new cocktail.core.boxmodel.InlineBlockBoxStylesComputer();
	this.positionedBoxStylesComputer = new cocktail.core.boxmodel.PositionedBoxStylesComputer();
};
$hxClasses["cocktail.core.layout.LayoutManager"] = cocktail.core.layout.LayoutManager;
cocktail.core.layout.LayoutManager.__name__ = ["cocktail","core","layout","LayoutManager"];
cocktail.core.layout.LayoutManager.prototype = {
	dispose: function() {
		this.embeddedBlockBoxStylesComputer = null;
		this.embeddedFloatBoxStylesComputer = null;
		this.embeddedInlineBlockBoxStylesComputer = null;
		this.embeddedInlineBoxStylesComputer = null;
		this.embeddedPositionedBoxStylesComputer = null;
		this.blockBoxStyleComputer = null;
		this.floatBoxStylesComputer = null;
		this.inlineBoxStylesComputer = null;
		this.inlineBlockBoxStylesComputer = null;
		this.positionedBoxStylesComputer = null;
	}
	,getBoxStylesComputer: function(elementRenderer) {
		if(elementRenderer.isFloat() == true) {
			if(elementRenderer.isReplaced == true) return this.embeddedFloatBoxStylesComputer; else return this.floatBoxStylesComputer;
		} else if(elementRenderer.isPositioned() == true && elementRenderer.isRelativePositioned() == false) {
			if(elementRenderer.isReplaced == true) return this.embeddedPositionedBoxStylesComputer; else return this.positionedBoxStylesComputer;
		} else if(elementRenderer.isAnonymousBlockBox() == true) return this.blockBoxStyleComputer; else {
			var _g = elementRenderer.coreStyle.getComputedOrInitialProperty(0);
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				switch(value[1]) {
				case 28:
					if(elementRenderer.isReplaced == true) return this.embeddedBlockBoxStylesComputer; else return this.blockBoxStyleComputer;
					break;
				case 29:
					if(elementRenderer.isReplaced == true) return this.embeddedInlineBlockBoxStylesComputer; else return this.inlineBlockBoxStylesComputer;
					break;
				case 30:
					if(elementRenderer.isReplaced == true) return this.embeddedInlineBoxStylesComputer; else return this.inlineBoxStylesComputer;
					break;
				default:
					return null;
				}
				break;
			default:
				return null;
			}
		}
	}
	,__class__: cocktail.core.layout.LayoutManager
};
cocktail.core.layout.computer = {};
cocktail.core.layout.computer.BackgroundStylesComputer = function() {
};
$hxClasses["cocktail.core.layout.computer.BackgroundStylesComputer"] = cocktail.core.layout.computer.BackgroundStylesComputer;
cocktail.core.layout.computer.BackgroundStylesComputer.__name__ = ["cocktail","core","layout","computer","BackgroundStylesComputer"];
cocktail.core.layout.computer.BackgroundStylesComputer.computeIndividualBackground = function(style,backgroundBox,intrinsicWidth,intrinsicHeight,intrinsicRatio,backgroundPosition,backgroundSize,backgroundOrigin,backgroundClip,backgroundRepeat,backgroundImage) {
	var backgroundPositioningArea = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundPositioningArea(style,backgroundOrigin,backgroundBox);
	var computedBackgroundSize = cocktail.core.layout.computer.BackgroundStylesComputer.getComputedBackgroundSize(backgroundSize,backgroundPositioningArea,intrinsicWidth,intrinsicHeight,intrinsicRatio);
	var computedBackgroundPosition = cocktail.core.layout.computer.BackgroundStylesComputer.getComputedBackgroundPosition(backgroundPosition,backgroundPositioningArea,computedBackgroundSize);
	var computedBackgroundClip = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundPaintingArea(style,backgroundClip,backgroundBox);
	var computedBackgroundStyle = new cocktail.core.layout.ComputedBackgroundStyleVO();
	computedBackgroundStyle.backgroundOrigin = backgroundPositioningArea;
	computedBackgroundStyle.backgroundClip = computedBackgroundClip;
	computedBackgroundStyle.backgroundRepeat = backgroundRepeat;
	computedBackgroundStyle.backgroundImage = backgroundImage;
	computedBackgroundStyle.backgroundSize = computedBackgroundSize;
	computedBackgroundStyle.backgroundPosition = computedBackgroundPosition;
	return computedBackgroundStyle;
};
cocktail.core.layout.computer.BackgroundStylesComputer.getComputedBackgroundPosition = function(backgroundPosition,backgroundPositioningArea,computedBackgroundSize) {
	var backgroundPositionX = null;
	var backgroundPositionY = null;
	switch(backgroundPosition[1]) {
	case 13:
		var value = backgroundPosition[2];
		backgroundPositionX = value[0];
		backgroundPositionY = value[1];
		break;
	default:
	}
	var computedBackgroundXPosition = cocktail.core.layout.computer.BackgroundStylesComputer.doGetComputedBackgroundPosition(backgroundPositionX,backgroundPositioningArea.width,computedBackgroundSize.width);
	var computedBackgroundYPosition = cocktail.core.layout.computer.BackgroundStylesComputer.doGetComputedBackgroundPosition(backgroundPositionY,backgroundPositioningArea.height,computedBackgroundSize.height);
	var computedBackgroundPosition = new cocktail.core.geom.PointVO(computedBackgroundXPosition,computedBackgroundYPosition);
	return computedBackgroundPosition;
};
cocktail.core.layout.computer.BackgroundStylesComputer.doGetComputedBackgroundPosition = function(backgroundPosition,backgroundPositioningAreaDimension,imageDimension) {
	var computedBackgroundPosition = 0.0;
	switch(backgroundPosition[1]) {
	case 18:
		var value = backgroundPosition[2];
		computedBackgroundPosition = value;
		break;
	case 2:
		var value1 = backgroundPosition[2];
		computedBackgroundPosition = (backgroundPositioningAreaDimension - imageDimension) * (value1 * 0.01);
		break;
	case 4:
		var value2 = backgroundPosition[2];
		switch(value2[1]) {
		case 13:
			computedBackgroundPosition = (backgroundPositioningAreaDimension - imageDimension) * 0.5;
			break;
		case 11:case 22:
			computedBackgroundPosition = (backgroundPositioningAreaDimension - imageDimension) * 0.;
			break;
		case 12:case 25:
			computedBackgroundPosition = backgroundPositioningAreaDimension - imageDimension;
			break;
		default:
		}
		break;
	default:
	}
	return computedBackgroundPosition;
};
cocktail.core.layout.computer.BackgroundStylesComputer.getComputedBackgroundSize = function(backgroundSize,backgroundPositioningArea,intrinsicWidth,intrinsicHeight,intrinsicRatio) {
	var computedBackgroundSize = new cocktail.core.geom.DimensionVO(0.0,0.0);
	switch(backgroundSize[1]) {
	case 4:
		var value = backgroundSize[2];
		switch(value[1]) {
		case 42:
			if(intrinsicRatio != null) {
				var ratio = backgroundPositioningArea.width / backgroundPositioningArea.height;
				if(intrinsicRatio < ratio) {
					computedBackgroundSize.height = backgroundPositioningArea.height;
					computedBackgroundSize.width = backgroundPositioningArea.height * intrinsicRatio;
				} else {
					computedBackgroundSize.width = backgroundPositioningArea.width;
					computedBackgroundSize.height = backgroundPositioningArea.width / intrinsicRatio;
				}
			} else {
				computedBackgroundSize.width = backgroundPositioningArea.width;
				computedBackgroundSize.height = backgroundPositioningArea.height;
			}
			break;
		case 43:
			if(intrinsicRatio != null) {
				var ratio1 = backgroundPositioningArea.width / backgroundPositioningArea.height;
				if(intrinsicRatio > ratio1) {
					computedBackgroundSize.height = backgroundPositioningArea.height;
					computedBackgroundSize.width = backgroundPositioningArea.height * intrinsicRatio;
				} else {
					computedBackgroundSize.width = backgroundPositioningArea.width;
					computedBackgroundSize.height = backgroundPositioningArea.width / intrinsicRatio;
				}
			} else {
				computedBackgroundSize.width = backgroundPositioningArea.width;
				computedBackgroundSize.height = backgroundPositioningArea.height;
			}
			break;
		case 27:
			computedBackgroundSize.width = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundPositioningArea.width,backgroundPositioningArea.height,intrinsicWidth,intrinsicHeight,intrinsicRatio);
			computedBackgroundSize.height = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundPositioningArea.height,backgroundPositioningArea.width,intrinsicHeight,intrinsicWidth,intrinsicRatio);
			break;
		default:
		}
		break;
	case 18:
		var value1 = backgroundSize[2];
		computedBackgroundSize.width = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(backgroundSize,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundPositioningArea.width,backgroundPositioningArea.height,intrinsicWidth,intrinsicHeight,intrinsicRatio);
		computedBackgroundSize.height = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundSize,backgroundPositioningArea.height,backgroundPositioningArea.width,intrinsicHeight,intrinsicWidth,intrinsicRatio);
		break;
	case 2:
		var value2 = backgroundSize[2];
		computedBackgroundSize.width = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(backgroundSize,cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundPositioningArea.width,backgroundPositioningArea.height,intrinsicWidth,intrinsicHeight,intrinsicRatio);
		computedBackgroundSize.height = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(cocktail.core.css.CSSPropertyValue.KEYWORD(cocktail.core.css.CSSKeywordValue.AUTO),backgroundSize,backgroundPositioningArea.height,backgroundPositioningArea.width,intrinsicHeight,intrinsicWidth,intrinsicRatio);
		break;
	case 13:
		var value3 = backgroundSize[2];
		computedBackgroundSize.width = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(value3[0],value3[1],backgroundPositioningArea.width,backgroundPositioningArea.height,intrinsicWidth,intrinsicHeight,intrinsicRatio);
		computedBackgroundSize.height = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(value3[1],value3[0],backgroundPositioningArea.height,backgroundPositioningArea.width,intrinsicHeight,intrinsicWidth,intrinsicRatio);
		break;
	default:
	}
	return computedBackgroundSize;
};
cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO = function(backgroundSizeValue,opositeBackgroundSizeValue,backgroundPositioningAreaDimension,opositeBackgroundAreaDimension,intrinsicDimension,opositeIntrinsicDimension,intrinsicRatio) {
	var backgroundSizeStyleDimension = 0.0;
	switch(backgroundSizeValue[1]) {
	case 18:
		var value = backgroundSizeValue[2];
		backgroundSizeStyleDimension = value;
		break;
	case 2:
		var value1 = backgroundSizeValue[2];
		backgroundSizeStyleDimension = backgroundPositioningAreaDimension * (value1 * 0.01);
		break;
	case 4:
		var value2 = backgroundSizeValue[2];
		if(value2 == cocktail.core.css.CSSKeywordValue.AUTO) {
			var isOpositeAuto = false;
			switch(opositeBackgroundSizeValue[1]) {
			case 4:
				var value3 = opositeBackgroundSizeValue[2];
				if(value3 == cocktail.core.css.CSSKeywordValue.AUTO) isOpositeAuto = true;
				break;
			default:
			}
			if(intrinsicDimension != null && isOpositeAuto == true) backgroundSizeStyleDimension = intrinsicDimension; else if(opositeIntrinsicDimension != null && intrinsicRatio != null) {
				var opositeDimension = cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundSizeStyleDimensionVO(opositeBackgroundSizeValue,backgroundSizeValue,opositeBackgroundAreaDimension,backgroundPositioningAreaDimension,opositeIntrinsicDimension,intrinsicDimension,intrinsicRatio);
				backgroundSizeStyleDimension = opositeDimension * intrinsicRatio;
			} else backgroundSizeStyleDimension = backgroundPositioningAreaDimension;
		}
		break;
	default:
	}
	return backgroundSizeStyleDimension;
};
cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundPositioningArea = function(style,backgroundOrigin,backgroundBox) {
	var height = 0.0;
	var width = 0.0;
	var x = 0.0;
	var y = 0.0;
	switch(backgroundOrigin[1]) {
	case 4:
		var value = backgroundOrigin[2];
		switch(value[1]) {
		case 39:
			height = backgroundBox.height;
			width = backgroundBox.width;
			x = 0.0;
			y = 0.0;
			break;
		case 40:
			height = backgroundBox.height;
			width = backgroundBox.width;
			x = 0.0;
			y = 0.0;
			break;
		case 41:
			height = backgroundBox.height - style.usedValues.marginTop - style.usedValues.marginBottom - style.usedValues.paddingTop - style.usedValues.paddingBottom - style.usedValues.borderTopWidth - style.usedValues.borderBottomWidth;
			width = backgroundBox.width - style.usedValues.marginLeft - style.usedValues.marginRight - style.usedValues.paddingLeft - style.usedValues.paddingRight - style.usedValues.borderLeftWidth - style.usedValues.borderRightWidth;
			x = 0.0;
			y = 0.0;
			break;
		default:
		}
		break;
	default:
	}
	var rectangle = new cocktail.core.geom.RectangleVO();
	rectangle.x = x;
	rectangle.y = y;
	rectangle.width = width;
	rectangle.height = height;
	return rectangle;
};
cocktail.core.layout.computer.BackgroundStylesComputer.getBackgroundPaintingArea = function(style,backgroundClip,backgroundBox) {
	var height = 0.0;
	var width = 0.0;
	var x = 0.0;
	var y = 0.0;
	switch(backgroundClip[1]) {
	case 4:
		var value = backgroundClip[2];
		switch(value[1]) {
		case 39:
			height = backgroundBox.height;
			width = backgroundBox.width;
			x = 0.0;
			y = 0.0;
			break;
		case 40:
			height = backgroundBox.height;
			width = backgroundBox.width;
			x = style.usedValues.marginLeft;
			y = style.usedValues.marginTop;
			break;
		case 41:
			height = backgroundBox.height - style.usedValues.marginTop - style.usedValues.marginBottom - style.usedValues.paddingTop - style.usedValues.paddingBottom - style.usedValues.borderTopWidth - style.usedValues.borderBottomWidth;
			width = backgroundBox.width - style.usedValues.marginLeft - style.usedValues.marginRight - style.usedValues.paddingLeft - style.usedValues.paddingRight - style.usedValues.borderLeftWidth - style.usedValues.borderRightWidth;
			x = style.usedValues.marginLeft + style.usedValues.paddingLeft + style.usedValues.borderLeftWidth;
			y = style.usedValues.marginTop + style.usedValues.paddingTop + style.usedValues.borderTopWidth;
			break;
		default:
		}
		break;
	default:
	}
	var rectangle = new cocktail.core.geom.RectangleVO();
	rectangle.x = x;
	rectangle.y = y;
	rectangle.width = width;
	rectangle.height = height;
	return rectangle;
};
cocktail.core.layout.computer.BackgroundStylesComputer.prototype = {
	__class__: cocktail.core.layout.computer.BackgroundStylesComputer
};
cocktail.core.layout.computer.VisualEffectStylesComputer = function() {
};
$hxClasses["cocktail.core.layout.computer.VisualEffectStylesComputer"] = cocktail.core.layout.computer.VisualEffectStylesComputer;
cocktail.core.layout.computer.VisualEffectStylesComputer.__name__ = ["cocktail","core","layout","computer","VisualEffectStylesComputer"];
cocktail.core.layout.computer.VisualEffectStylesComputer.compute = function(style) {
	style.usedValues.transformOrigin = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTransformOrigin(style);
	style.usedValues.transform = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTransform(style);
};
cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTransformOrigin = function(style) {
	var x = 0.0;
	var y = 0.0;
	var transformOriginX = null;
	var transformOriginY = null;
	{
		var _g = style.getComputedOrInitialProperty(60);
		switch(_g[1]) {
		case 13:
			var value = _g[2];
			transformOriginX = value[0];
			transformOriginY = value[1];
			break;
		default:
		}
	}
	switch(transformOriginX[1]) {
	case 18:
		var value1 = transformOriginX[2];
		x = value1;
		break;
	case 2:
		var value2 = transformOriginX[2];
		x = style.usedValues.width * (value2 * 0.01);
		break;
	case 4:
		var value3 = transformOriginX[2];
		switch(value3[1]) {
		case 11:
			x = style.usedValues.width * 0.;
			break;
		case 13:
			x = style.usedValues.width * 0.5;
			break;
		case 12:
			x = style.usedValues.width;
			break;
		default:
		}
		break;
	default:
	}
	switch(transformOriginY[1]) {
	case 18:
		var value4 = transformOriginY[2];
		y = value4;
		break;
	case 2:
		var value5 = transformOriginY[2];
		y = style.usedValues.width * (value5 * 0.01);
		break;
	case 4:
		var value6 = transformOriginY[2];
		switch(value6[1]) {
		case 22:
			y = style.usedValues.width * 0.;
			break;
		case 13:
			y = style.usedValues.width * 0.5;
			break;
		case 25:
			y = style.usedValues.width;
			break;
		default:
		}
		break;
	default:
	}
	var transformOriginPoint = new cocktail.core.geom.PointVO(x,y);
	return transformOriginPoint;
};
cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTransform = function(style) {
	if(style.isNone(style.getComputedOrInitialProperty(61))) return new cocktail.core.geom.Matrix();
	var matrix = new cocktail.core.geom.Matrix();
	var transformFunctions = new Array();
	var transformOrigin = style.usedValues.transformOrigin;
	{
		var _g = style.getComputedOrInitialProperty(61);
		switch(_g[1]) {
		case 15:
			var value = _g[2];
			var _g2 = 0;
			var _g1 = value.length;
			while(_g2 < _g1) {
				var i = _g2++;
				{
					var _g3 = value[i];
					switch(_g3[1]) {
					case 21:
						var value1 = _g3[2];
						transformFunctions.push(value1);
						break;
					default:
					}
				}
			}
			break;
		default:
		}
	}
	matrix.translate(transformOrigin.x,transformOrigin.y);
	var _g11 = 0;
	var _g4 = transformFunctions.length;
	while(_g11 < _g4) {
		var i1 = _g11++;
		var transformFunction = transformFunctions[i1];
		switch(transformFunction[1]) {
		case 0:
			var f = transformFunction[7];
			var e = transformFunction[6];
			var d = transformFunction[5];
			var c = transformFunction[4];
			var b = transformFunction[3];
			var a = transformFunction[2];
			matrix.concatenate(new cocktail.core.geom.Matrix(a,b,c,d,e,f));
			break;
		case 7:
			var value2 = transformFunction[2];
			var angle = cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle(value2);
			matrix.rotate(angle);
			break;
		case 4:
			var sy = transformFunction[3];
			var sx = transformFunction[2];
			matrix.scale(sx,sy);
			break;
		case 5:
			var sx1 = transformFunction[2];
			matrix.scale(sx1,1);
			break;
		case 6:
			var sy1 = transformFunction[2];
			matrix.scale(1,sy1);
			break;
		case 10:
			var angleY = transformFunction[3];
			var angleX = transformFunction[2];
			var skewX = cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle(angleX);
			var skewY = cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle(angleY);
			matrix.skew(skewX,skewY);
			break;
		case 8:
			var angleX1 = transformFunction[2];
			var skewX1 = cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle(angleX1);
			matrix.skew(skewX1,0);
			break;
		case 9:
			var angleY1 = transformFunction[2];
			var skewY1 = cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle(angleY1);
			matrix.skew(0,skewY1);
			break;
		case 1:
			var ty = transformFunction[3];
			var tx = transformFunction[2];
			var translationX = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTranslation(style,tx,style.usedValues.width);
			var translationY = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTranslation(style,ty,style.usedValues.height);
			matrix.translate(translationX,translationY);
			break;
		case 2:
			var tx1 = transformFunction[2];
			var translationX1 = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTranslation(style,tx1,style.usedValues.width);
			matrix.translate(translationX1,0.0);
			break;
		case 3:
			var ty1 = transformFunction[2];
			var translationY1 = cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTranslation(style,ty1,style.usedValues.height);
			matrix.translate(0.0,translationY1);
			break;
		}
	}
	matrix.translate(transformOrigin.x * -1,transformOrigin.y * -1);
	return matrix;
};
cocktail.core.layout.computer.VisualEffectStylesComputer.getComputedTranslation = function(style,translation,percentReference) {
	var computedTranslation = 0.0;
	switch(translation[1]) {
	case 0:
		var value = translation[2];
		computedTranslation = value;
		break;
	case 2:
		var value1 = translation[2];
		computedTranslation = percentReference * (value1 * 0.01);
		break;
	default:
	}
	return computedTranslation;
};
cocktail.core.layout.computer.VisualEffectStylesComputer.getRadFromAngle = function(value) {
	var angle;
	switch(value[1]) {
	case 0:
		var value1 = value[2];
		angle = value1 * (Math.PI / 180);
		break;
	case 2:
		var value2 = value[2];
		angle = value2;
		break;
	case 3:
		var value3 = value[2];
		angle = value3 * 360 * (Math.PI / 180);
		break;
	case 1:
		var value4 = value[2];
		angle = value4 * (Math.PI / 200);
		break;
	}
	return angle;
};
cocktail.core.layout.computer.VisualEffectStylesComputer.prototype = {
	__class__: cocktail.core.layout.computer.VisualEffectStylesComputer
};
cocktail.core.linebox = {};
cocktail.core.linebox.InlineBox = function(elementRenderer,leadedAscent,leadedDescent) {
	cocktail.core.ds.FastNode.call(this);
	this.isSpace = false;
	this.isText = false;
	this.isEmbedded = false;
	this.isLineFeed = false;
	this.bounds = new cocktail.core.geom.RectangleVO();
	this.offsetFromParentInlineBox = new cocktail.core.geom.PointVO(0,0);
	this.elementRenderer = elementRenderer;
	this.marginLeft = 0;
	this.marginRight = 0;
	this.paddingLeft = 0;
	this.paddingRight = 0;
	this.borderLeft = 0;
	this.borderRight = 0;
	this.leadedAscent = leadedAscent;
	this.leadedDescent = leadedDescent;
};
$hxClasses["cocktail.core.linebox.InlineBox"] = cocktail.core.linebox.InlineBox;
cocktail.core.linebox.InlineBox.__name__ = ["cocktail","core","linebox","InlineBox"];
cocktail.core.linebox.InlineBox.__super__ = cocktail.core.ds.FastNode;
cocktail.core.linebox.InlineBox.prototype = $extend(cocktail.core.ds.FastNode.prototype,{
	dispose: function() {
		this.elementRenderer = null;
	}
	,__class__: cocktail.core.linebox.InlineBox
});
cocktail.core.linebox.EmbeddedInlineBox = function(elementRenderer,leadedAscent,leadedDescent) {
	cocktail.core.linebox.InlineBox.call(this,elementRenderer,leadedAscent,leadedDescent);
	this.isEmbedded = true;
};
$hxClasses["cocktail.core.linebox.EmbeddedInlineBox"] = cocktail.core.linebox.EmbeddedInlineBox;
cocktail.core.linebox.EmbeddedInlineBox.__name__ = ["cocktail","core","linebox","EmbeddedInlineBox"];
cocktail.core.linebox.EmbeddedInlineBox.__super__ = cocktail.core.linebox.InlineBox;
cocktail.core.linebox.EmbeddedInlineBox.prototype = $extend(cocktail.core.linebox.InlineBox.prototype,{
	__class__: cocktail.core.linebox.EmbeddedInlineBox
});
cocktail.core.linebox.LineBox = function(elementRenderer,isFirstLine,layoutState) {
	this._isFirstLine = isFirstLine;
	this._elementRenderer = elementRenderer;
	this._spacesNumber = 0;
	this.unbreakableWidth = 0;
	this._addedWidth = 0;
	this._firstInlineBoxInserted = false;
	this._unbreakableInlineBoxes = new Array();
	this._layoutState = layoutState;
	this._trailingSpaceWidth = 0;
	this.rootInlineBox = new cocktail.core.linebox.InlineBox(elementRenderer,elementRenderer.getLeadedAscent(),elementRenderer.getLeadedDescent());
	this.bounds = new cocktail.core.geom.RectangleVO();
};
$hxClasses["cocktail.core.linebox.LineBox"] = cocktail.core.linebox.LineBox;
cocktail.core.linebox.LineBox.__name__ = ["cocktail","core","linebox","LineBox"];
cocktail.core.linebox.LineBox.prototype = {
	addUnbreakableWidth: function(width) {
		this.unbreakableWidth += Math.floor(width);
	}
	,widthCanFit: function(width) {
		this._trailingSpaceWidth = 0;
		this.getTrailingSpacesWidth(this.rootInlineBox);
		if(this._addedWidth + width - this._trailingSpaceWidth <= this.bounds.width) return true; else return false;
	}
	,insert: function(inlineBox,parentInlineBox,force) {
		if(this._firstInlineBoxInserted == false) {
			if(inlineBox.isSpace == true) {
				var inlineBoxCoreStyle = inlineBox.elementRenderer.coreStyle;
				if(inlineBoxCoreStyle.hasNormalWhiteSpace == true || inlineBoxCoreStyle.hasPreWrapWhiteSpace == true || inlineBoxCoreStyle.hasNoWrapWhiteSpace) return false;
			}
			this._firstInlineBoxInserted = true;
		}
		if(inlineBox.isSpace == true) this._spacesNumber++;
		this._unbreakableInlineBoxes.push(inlineBox);
		var inlineBoxWidth = inlineBox.bounds.width + inlineBox.marginLeft + inlineBox.marginRight;
		this.unbreakableWidth += Math.floor(inlineBoxWidth);
		var remainingLineWidth = Math.floor(this.bounds.width - this._addedWidth);
		if(inlineBox.isLineFeed == true) return true; else if(remainingLineWidth - this.unbreakableWidth < 0) {
			if(this.introduceBreakOpportunity(inlineBox) == true && force == false) return true; else {
				this._addedWidth += this.unbreakableWidth;
				this.addUnbreakableInlineBoxesToLineBox(parentInlineBox);
			}
		} else if(this.introduceBreakOpportunity(inlineBox) == true || force == true) {
			this._addedWidth += this.unbreakableWidth;
			this.addUnbreakableInlineBoxesToLineBox(parentInlineBox);
		}
		if(this._layoutState == cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH) return true;
		return false;
	}
	,addUnbreakableInlineBoxesToLineBox: function(parentInlineBox) {
		var unbreakableLength = this._unbreakableInlineBoxes.length;
		var _g = 0;
		while(_g < unbreakableLength) {
			var i = _g++;
			this._unbreakableInlineBoxes[i].lineBox = this;
			parentInlineBox.appendChild(this._unbreakableInlineBoxes[i]);
		}
		this._unbreakableInlineBoxes = [];
		this.unbreakableWidth = 0;
	}
	,introduceBreakOpportunity: function(inlineBox) {
		if(this._layoutState == cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_WIDTH) return false;
		var inlineBoxCoreStyle = inlineBox.elementRenderer.coreStyle;
		if(inlineBoxCoreStyle.hasPreWhiteSpace == true || inlineBoxCoreStyle.hasNoWrapWhiteSpace == true) return false;
		return true;
	}
	,layout: function(isLastLine,parentInlineBox) {
		if(isLastLine == true) {
			this._addedWidth += this.unbreakableWidth;
			var unbreakableLength = this._unbreakableInlineBoxes.length;
			var _g = 0;
			while(_g < unbreakableLength) {
				var i = _g++;
				this._unbreakableInlineBoxes[i].lineBox = this;
				parentInlineBox.appendChild(this._unbreakableInlineBoxes[i]);
			}
		}
		this.removeTrailingSpaces(this.rootInlineBox);
		this.bounds.width = this.alignInlineBoxesHorizontally(this.rootInlineBox,isLastLine,this._addedWidth);
		this.updateInlineBoxesBounds(this.rootInlineBox);
		this.bounds.height = this.alignInlineBoxesVertically();
		if(this.isEmptyLineBox(this.rootInlineBox) == true) this.bounds.height = 0;
	}
	,removeTrailingSpaces: function(inlineBox) {
		var child = inlineBox.lastChild;
		while(child != null) {
			if(child.isEmbedded == false) {
				if(child.firstChild != null) {
					var canRemoveSpacesFurther = this.removeTrailingSpaces(child);
					if(canRemoveSpacesFurther == false) return false;
				}
			}
			var previousSibling = child.previousSibling;
			if(child.isSpace == true) {
				var inlineBoxCoreStyle = child.elementRenderer.coreStyle;
				if(inlineBoxCoreStyle.hasNormalWhiteSpace == true || inlineBoxCoreStyle.hasNoWrapWhiteSpace == true || inlineBoxCoreStyle.hasPreLineWhiteSpace == true) {
					child.parentNode.removeChild(child);
					this._addedWidth -= child.bounds.width;
					this._spacesNumber--;
				} else return false;
			} else return false;
			child = previousSibling;
		}
		return true;
	}
	,getTrailingSpacesWidth: function(inlineBox) {
		var child = inlineBox.lastChild;
		while(child != null) {
			if(child.isEmbedded == false) {
				if(child.firstChild != null) {
					var canAddSpacesWidthFurther = this.getTrailingSpacesWidth(child);
					if(canAddSpacesWidthFurther == false) return false;
				}
			}
			if(child.isSpace == true) {
				var inlineBoxCoreStyle = child.elementRenderer.coreStyle;
				if(inlineBoxCoreStyle.hasNormalWhiteSpace == true || inlineBoxCoreStyle.hasNoWrapWhiteSpace == true || inlineBoxCoreStyle.hasPreLineWhiteSpace == true) this._trailingSpaceWidth += child.bounds.width; else return false;
			} else return false;
			child = child.previousSibling;
		}
		return true;
	}
	,isEmptyLineBox: function(rootInlineBox) {
		var child = rootInlineBox.firstChild;
		while(child != null) {
			if(child.isText == true && child.isSpace == false) return false; else if(child.isEmbedded == true) return false; else if(child.marginLeft != 0 || child.marginRight != 0 || child.paddingLeft != 0 || child.paddingLeft != 0 || child.borderLeft != 0 || child.borderRight != 0) return false; else {
				var isEmpty = this.isEmptyLineBox(child);
				if(isEmpty == false) return false;
			}
			child = child.nextSibling;
		}
		return true;
	}
	,alignInlineBoxesHorizontally: function(rootInlineBox,isLastLine,concatenatedLength) {
		var remainingSpace = this.bounds.width - concatenatedLength;
		var x = 0;
		if(this._isFirstLine == true) {
			x += this._elementRenderer.coreStyle.usedValues.textIndent;
			remainingSpace -= this._elementRenderer.coreStyle.usedValues.textIndent;
		}
		if(this._elementRenderer.coreStyle.isLeftAligned == true) this.alignLeft(x,rootInlineBox); else {
			var _g = this._elementRenderer.coreStyle.getKeyword(this._elementRenderer.coreStyle.getComputedOrInitialProperty(46));
			switch(_g[1]) {
			case 12:
				x = this.bounds.width - x;
				this.alignRight(x,rootInlineBox);
				break;
			case 13:
				this.alignCenter(x,remainingSpace,rootInlineBox);
				break;
			case 14:
				if(isLastLine == true) this.alignLeft(x,rootInlineBox); else {
					var _g1 = this._elementRenderer.coreStyle.getKeyword(this._elementRenderer.coreStyle.getComputedOrInitialProperty(45));
					switch(_g1[1]) {
					case 7:case 9:
						this.alignLeft(x,rootInlineBox);
						break;
					default:
						concatenatedLength = this.bounds.width;
						var concatedWidthWithoutSpaces = this.getConcatenatedWidthWithoutSpaces(rootInlineBox);
						var spaceWidth = (concatenatedLength - concatedWidthWithoutSpaces) / this._spacesNumber;
						this.alignJustify(x,rootInlineBox,spaceWidth);
					}
				}
				break;
			default:
				throw "Illegal value for text-align style";
			}
		}
		return concatenatedLength;
	}
	,alignLeft: function(x,inlineBox) {
		x += inlineBox.paddingLeft + inlineBox.borderLeft + inlineBox.marginLeft;
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.firstChild != null) x = this.alignLeft(x,child); else {
				child.bounds.x = x + child.marginLeft;
				x += child.bounds.width + child.marginLeft + child.marginRight;
			}
			child = child.nextSibling;
		}
		x += inlineBox.paddingRight + inlineBox.borderRight + inlineBox.marginRight;
		return x;
	}
	,alignCenter: function(x,remainingSpace,inlineBox) {
		x += inlineBox.marginLeft + inlineBox.borderLeft + inlineBox.paddingLeft;
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.firstChild != null) x = this.alignCenter(x,remainingSpace,child);
			child.bounds.x = remainingSpace / 2 + x;
			x += child.bounds.width;
			child = child.nextSibling;
		}
		x += inlineBox.marginRight + inlineBox.borderRight + inlineBox.paddingRight;
		return x;
	}
	,alignRight: function(x,inlineBox) {
		x -= inlineBox.paddingRight + inlineBox.borderRight + inlineBox.marginRight;
		var child = inlineBox.lastChild;
		while(child != null) {
			if(child.lastChild != null) x = this.alignRight(x,child); else {
				child.bounds.x = x - child.bounds.width + child.marginLeft;
				x -= child.bounds.width + child.marginLeft + child.marginRight;
			}
			child = child.previousSibling;
		}
		x -= inlineBox.paddingLeft + inlineBox.borderLeft + inlineBox.marginLeft;
		return x;
	}
	,alignJustify: function(x,inlineBox,spacesWidth) {
		x += inlineBox.paddingLeft + inlineBox.borderLeft + inlineBox.marginLeft;
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.firstChild != null) x = this.alignJustify(x,child,spacesWidth); else if(child.isSpace == true) {
				child.bounds.x = x;
				x += spacesWidth;
			} else {
				child.bounds.x = x + child.marginLeft;
				x += child.bounds.width + child.marginLeft + child.marginRight;
			}
			child = child.nextSibling;
		}
		x += inlineBox.marginRight + inlineBox.borderRight + inlineBox.paddingRight;
		return x;
	}
	,getConcatenatedWidthWithoutSpaces: function(inlineBox) {
		var width = 0;
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.firstChild != null) width += this.getConcatenatedWidthWithoutSpaces(child); else if(child.isSpace == false) width += child.bounds.width;
			child = child.nextSibling;
		}
		return width;
	}
	,alignInlineBoxesVertically: function() {
		this.updateOffsetFromParentInlineBox(this.rootInlineBox);
		cocktail.core.linebox.LineBox._inlineBoxesBounds.x = 0;
		cocktail.core.linebox.LineBox._inlineBoxesBounds.y = 0;
		cocktail.core.linebox.LineBox._inlineBoxesBounds.width = 0;
		cocktail.core.linebox.LineBox._inlineBoxesBounds.height = 0;
		cocktail.core.linebox.LineBox._inlineBoxesBounds.height = this._elementRenderer.coreStyle.usedValues.lineHeight;
		this.updateOffsetFromLineBox(this.rootInlineBox,0,0);
		var minimumTop = this.getMinimumTop(this.rootInlineBox,0);
		this.applyMinimumTop(this.rootInlineBox,minimumTop);
		this.getLineBoxHeight(this.rootInlineBox,cocktail.core.linebox.LineBox._inlineBoxesBounds,0);
		var lineBoxHeight = cocktail.core.linebox.LineBox._inlineBoxesBounds.height;
		return lineBoxHeight;
	}
	,updateInlineBoxesBounds: function(inlineBox) {
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.isText == false && child.isEmbedded == false) {
				this.updateInlineBoxesBounds(child);
				this.updateInlineBoxBounds(child);
			}
			child = child.nextSibling;
		}
	}
	,updateInlineBoxBounds: function(inlineBox) {
		inlineBox.bounds.x = 50000;
		inlineBox.bounds.y = 50000;
		inlineBox.bounds.width = 0;
		inlineBox.bounds.height = 0;
		var child = inlineBox.firstChild;
		if(child == null) {
			inlineBox.bounds.x = 0;
			inlineBox.bounds.y = 0;
		}
		while(child != null) {
			cocktail.core.linebox.LineBox._childBounds.x = child.bounds.x - child.marginLeft;
			cocktail.core.linebox.LineBox._childBounds.y = child.bounds.y;
			cocktail.core.linebox.LineBox._childBounds.width = child.bounds.width + child.marginRight + child.marginLeft;
			cocktail.core.linebox.LineBox._childBounds.height = child.bounds.height;
			cocktail.core.geom.GeomUtils.addBounds(cocktail.core.linebox.LineBox._childBounds,inlineBox.bounds,null,null);
			child = child.nextSibling;
		}
		inlineBox.bounds.width += inlineBox.paddingLeft + inlineBox.paddingRight + inlineBox.borderLeft + inlineBox.borderRight;
		inlineBox.bounds.x -= inlineBox.paddingLeft + inlineBox.borderLeft;
	}
	,updateOffsetFromParentInlineBox: function(inlineBox) {
		var child = inlineBox.firstChild;
		while(child != null) {
			var childCoreStyle = child.elementRenderer.coreStyle;
			if(childCoreStyle.isBaselineAligned == true) {
				var childLeadedAscent = child.leadedAscent;
				if(child.isEmbedded == true) {
					childLeadedAscent = child.bounds.height + child.elementRenderer.coreStyle.usedValues.marginTop + child.elementRenderer.coreStyle.usedValues.marginBottom;
					if(child.elementRenderer.isBlockContainer == true && child.elementRenderer.coreStyle.isInlineBlock == true) {
						if(child.elementRenderer.childrenInline() == true) {
							var blockBox = child.elementRenderer;
							childLeadedAscent = blockBox.lineBoxes[blockBox.lineBoxes.length - 1].bounds.y + child.leadedAscent;
						}
					}
				}
				var yOffset = childLeadedAscent - inlineBox.leadedAscent;
				child.offsetFromParentInlineBox.y = -yOffset;
			} else {
				var _g = childCoreStyle.getComputedOrInitialProperty(48);
				switch(_g[1]) {
				case 4:
					var value = _g[2];
					switch(value[1]) {
					case 24:
						var yOffset1 = childCoreStyle.fontMetrics.ascent + child.bounds.height / 2 - (inlineBox.leadedAscent + inlineBox.elementRenderer.coreStyle.fontMetrics.xHeight / 2);
						child.offsetFromParentInlineBox.y = -yOffset1;
						break;
					case 26:
						break;
					case 23:
						break;
					case 20:
						break;
					case 21:
						break;
					case 22:case 25:
						child.offsetFromParentInlineBox.y = 0;
						break;
					default:
					}
					break;
				case 18:
					var value1 = _g[2];
					var offsetFromBaseline = childCoreStyle.fontMetrics.ascent - inlineBox.elementRenderer.coreStyle.fontMetrics.ascent;
					child.offsetFromParentInlineBox.y = -value1;
					break;
				case 2:
					var value2 = _g[2];
					break;
				default:
				}
			}
			if(child.isEmbedded == false) {
				if(child.firstChild != null) this.updateOffsetFromParentInlineBox(child);
			}
			child = child.nextSibling;
		}
	}
	,updateOffsetFromLineBox: function(inlineBox,lineBoxHeight,addedY) {
		var child = inlineBox.firstChild;
		while(child != null) {
			if(child.elementRenderer.coreStyle.isTopAligned) child.bounds.y = 0; else if(child.elementRenderer.coreStyle.isBottomAligned) child.bounds.y = lineBoxHeight - this.getAlignedSubTreeHeight(child,child.bounds.height,0,false); else child.bounds.y = addedY + child.offsetFromParentInlineBox.y;
			if(child.isEmbedded == false && child.isText == false) {
				child.bounds.y += addedY;
				if(child.firstChild != null) this.updateOffsetFromLineBox(child,lineBoxHeight,child.bounds.y);
			}
			child = child.nextSibling;
		}
	}
	,getMinimumTop: function(inlineBox,minimumTop) {
		var child = inlineBox.firstChild;
		while(child != null) {
			if((child.elementRenderer.coreStyle.isBottomAligned == true || child.elementRenderer.coreStyle.isTopAligned) == false) {
				if(child.bounds.y < minimumTop) minimumTop = child.bounds.y;
				if(child.isEmbedded == false) {
					if(child.firstChild != null) minimumTop = this.getMinimumTop(child,minimumTop);
				}
			}
			child = child.nextSibling;
		}
		return minimumTop;
	}
	,applyMinimumTop: function(inlineBox,minimumTop) {
		var child = inlineBox.firstChild;
		while(child != null) {
			if((child.elementRenderer.coreStyle.isBottomAligned == true || child.elementRenderer.coreStyle.isTopAligned) == false) {
				child.bounds.y -= minimumTop;
				if(child.isEmbedded == false) {
					if(child.firstChild != null) this.applyMinimumTop(child,minimumTop);
				}
			}
			child = child.nextSibling;
		}
	}
	,getLineBoxHeight: function(inlineBox,lineBoxBounds,addedY) {
		var child = inlineBox.firstChild;
		while(child != null) {
			if((child.elementRenderer.coreStyle.isBottomAligned == true || child.elementRenderer.coreStyle.isTopAligned) == true) {
				var alignedSubTreeHeight = this.getAlignedSubTreeHeight(child,child.bounds.height,0,true);
			} else {
				if(child.isEmbedded == true || child.isText == true) {
					cocktail.core.linebox.LineBox._childBounds.x = 0;
					cocktail.core.linebox.LineBox._childBounds.y = 0;
					cocktail.core.linebox.LineBox._childBounds.width = 0;
					cocktail.core.linebox.LineBox._childBounds.height = 0;
					cocktail.core.linebox.LineBox._childBounds.y = child.bounds.y + addedY;
					cocktail.core.linebox.LineBox._childBounds.height = child.bounds.height;
					cocktail.core.geom.GeomUtils.addBounds(cocktail.core.linebox.LineBox._childBounds,lineBoxBounds,null,null);
				}
				if(child.isEmbedded == false) {
					if(child.firstChild != null) this.getLineBoxHeight(child,lineBoxBounds,addedY + child.offsetFromParentInlineBox.y);
				}
			}
			child = child.nextSibling;
		}
	}
	,isTopOrBottomAligned: function(inlineBox) {
		return inlineBox.elementRenderer.coreStyle.isBottomAligned == true || inlineBox.elementRenderer.coreStyle.isTopAligned;
	}
	,isTopAligned: function(inlineBox) {
		return inlineBox.elementRenderer.coreStyle.isTopAligned;
	}
	,isBottomAligned: function(inlineBox) {
		return inlineBox.elementRenderer.coreStyle.isBottomAligned;
	}
	,getAlignedSubTreeHeight: function(inlineBox,alignedSubTreeHeight,addedY,includeChildTopAndBottomInlineBoxes) {
		return alignedSubTreeHeight;
	}
	,__class__: cocktail.core.linebox.LineBox
};
cocktail.core.linebox.SpaceInlineBox = function(elementRenderer,leadedAscent,leadedDescent,spaceWidth) {
	cocktail.core.linebox.InlineBox.call(this,elementRenderer,leadedAscent,leadedDescent);
	this.bounds.width = spaceWidth;
	this.bounds.height = leadedAscent + leadedDescent;
	this.isSpace = true;
	this.isText = true;
};
$hxClasses["cocktail.core.linebox.SpaceInlineBox"] = cocktail.core.linebox.SpaceInlineBox;
cocktail.core.linebox.SpaceInlineBox.__name__ = ["cocktail","core","linebox","SpaceInlineBox"];
cocktail.core.linebox.SpaceInlineBox.__super__ = cocktail.core.linebox.InlineBox;
cocktail.core.linebox.SpaceInlineBox.prototype = $extend(cocktail.core.linebox.InlineBox.prototype,{
	__class__: cocktail.core.linebox.SpaceInlineBox
});
cocktail.core.linebox.TextInlineBox = function(elementRenderer,leadedAscent,leadedDescent,text,fontMetrics,fontManager,fontFamily) {
	cocktail.core.linebox.InlineBox.call(this,elementRenderer,leadedAscent,leadedDescent);
	this.isText = true;
	this._text = text;
	this.initNativeTextElement(text,fontManager,elementRenderer.coreStyle,fontFamily);
	this.bounds.width = this._nativeText.get_width();
	this.bounds.height = leadedAscent + leadedDescent;
};
$hxClasses["cocktail.core.linebox.TextInlineBox"] = cocktail.core.linebox.TextInlineBox;
cocktail.core.linebox.TextInlineBox.__name__ = ["cocktail","core","linebox","TextInlineBox"];
cocktail.core.linebox.TextInlineBox.__super__ = cocktail.core.linebox.InlineBox;
cocktail.core.linebox.TextInlineBox.prototype = $extend(cocktail.core.linebox.InlineBox.prototype,{
	dispose: function() {
		cocktail.core.linebox.InlineBox.prototype.dispose.call(this);
		if(this._nativeText != null) {
			this._nativeText.dispose();
			this._nativeText = null;
		}
	}
	,initNativeTextElement: function(text,fontManager,style,fontFamily) {
		var nativeTextElement = fontManager.createNativeTextElement(text,style,fontFamily);
		this._nativeText = new cocktail.port.base.NativeTextBase(nativeTextElement);
	}
	,initTextBitmap: function() {
		cocktail.core.linebox.TextInlineBox._bitmapBounds.y = this.leadedAscent;
		cocktail.core.linebox.TextInlineBox._bitmapBounds.width = this.bounds.width;
		cocktail.core.linebox.TextInlineBox._bitmapBounds.height = this.bounds.height;
		if(cocktail.core.linebox.TextInlineBox._bitmapBounds.width != 0 && cocktail.core.linebox.TextInlineBox._bitmapBounds.height != 0) this.nativeTextBitmap = this._nativeText.getBitmap(cocktail.core.linebox.TextInlineBox._bitmapBounds);
	}
	,get_nativeTextBitmap: function() {
		if(this.nativeTextBitmap == null) this.initTextBitmap();
		return this.nativeTextBitmap;
	}
	,getTextWidth: function() {
		return this._nativeText.get_width();
	}
	,getTextHeight: function() {
		return this.leadedAscent + this.leadedDescent;
	}
	,__class__: cocktail.core.linebox.TextInlineBox
	,__properties__: {get_nativeTextBitmap:"get_nativeTextBitmap"}
});
cocktail.core.location = {};
cocktail.core.location.Location = function(document) {
	this._document = document;
};
$hxClasses["cocktail.core.location.Location"] = cocktail.core.location.Location;
cocktail.core.location.Location.__name__ = ["cocktail","core","location","Location"];
cocktail.core.location.Location.prototype = {
	dispose: function() {
		this._document = null;
		this._url = null;
	}
	,set_href: function(value) {
		this.href = value;
		this._url = cocktail.core.url.URL.fromString(this.href);
		if(this.onLocationChanged != null) this.onLocationChanged();
		return value;
	}
	,get_protocol: function() {
		if(this._url == null) return null;
		return this._url.scheme;
	}
	,get_host: function() {
		if(this._url == null) return null;
		return this._url.host;
	}
	,get_hostname: function() {
		if(this._url == null) return null;
		return this._url.authority;
	}
	,get_port: function() {
		if(this._url == null) return null;
		return this._url.port;
	}
	,get_pathname: function() {
		if(this._url == null) return null;
		return this._url.path;
	}
	,get_search: function() {
		if(this._url == null) return null;
		return this._url.query;
	}
	,get_hash: function() {
		if(this._url == null) return null;
		return this._url.fragment;
	}
	,__class__: cocktail.core.location.Location
	,__properties__: {get_search:"get_search",get_pathname:"get_pathname",get_port:"get_port",get_hostname:"get_hostname",get_host:"get_host",get_protocol:"get_protocol",set_href:"set_href"}
};
cocktail.core.multitouch = {};
cocktail.core.multitouch.MultiTouchManager = function() {
	this._touches = new Array();
};
$hxClasses["cocktail.core.multitouch.MultiTouchManager"] = cocktail.core.multitouch.MultiTouchManager;
cocktail.core.multitouch.MultiTouchManager.__name__ = ["cocktail","core","multitouch","MultiTouchManager"];
cocktail.core.multitouch.MultiTouchManager.prototype = {
	dispose: function() {
		this._touches = null;
	}
	,setUpTouchEvent: function(touchEvent,target) {
		var touch = touchEvent.touches.item(0);
		var _g = touchEvent.type;
		switch(_g) {
		case "touchstart":
			this.registerTouch(touch,touchEvent,target);
			break;
		case "touchend":
			this.unregisterTouch(touch,touchEvent);
			break;
		case "touchmove":
			this.updateTouch(touch,touchEvent);
			break;
		}
	}
	,registerTouch: function(touch,touchEvent,target) {
		touch.target = target;
		this.updatePagePosition(touch);
		this._touches.push(touch);
		this.initTouchEvent(touchEvent,this.getTouchesByTarget(target),new cocktail.core.event.TouchList([touch]));
	}
	,unregisterTouch: function(touch,touchEvent) {
		var storedTouch = this.getTouchByIdentifier(touch.identifier);
		this.updateStoredTouch(storedTouch,touch);
		this.initTouchEvent(touchEvent,this.getTouchesByTarget(touch.target),new cocktail.core.event.TouchList([touch]));
		HxOverrides.remove(this._touches,storedTouch);
	}
	,updateTouch: function(touch,touchEvent) {
		var storedTouch = this.getTouchByIdentifier(touch.identifier);
		this.updateStoredTouch(storedTouch,touch);
		this.initTouchEvent(touchEvent,this.getTouchesByTarget(touch.target),new cocktail.core.event.TouchList([touch]));
	}
	,updateStoredTouch: function(storedTouch,touch) {
		storedTouch.clientX = touch.clientX;
		storedTouch.clientY = touch.clientY;
		storedTouch.screenX = touch.screenX;
		storedTouch.screenY = touch.screenY;
		this.updatePagePosition(storedTouch);
	}
	,updatePagePosition: function(touch) {
	}
	,initTouchEvent: function(touchEvent,targetTouches,changedTouches) {
		touchEvent.initTouchEvent(touchEvent.type,true,true,null,0.0,new cocktail.core.event.TouchList(this._touches),targetTouches,changedTouches,false,false,false,false);
	}
	,getTouchesByTarget: function(target) {
		var targetTouches = new Array();
		var length = this._touches.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var touch = this._touches[i];
			if(touch.target == target) targetTouches.push(touch);
		}
		return new cocktail.core.event.TouchList(targetTouches);
	}
	,getTouchByIdentifier: function(identifier) {
		var length = this._touches.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var touch = this._touches[i];
			if(touch.identifier == identifier) return touch;
		}
		return null;
	}
	,__class__: cocktail.core.multitouch.MultiTouchManager
};
cocktail.core.parser = {};
cocktail.core.parser.DOMParser = function() {
};
$hxClasses["cocktail.core.parser.DOMParser"] = cocktail.core.parser.DOMParser;
cocktail.core.parser.DOMParser.__name__ = ["cocktail","core","parser","DOMParser"];
cocktail.core.parser.DOMParser.parse = function(html,ownerDocument) {
	var node = cocktail.core.parser.DOMParser.doSetInnerHTML(haxe.xml.Parser.parse(html).firstElement(),ownerDocument);
	return node;
};
cocktail.core.parser.DOMParser.serialize = function(node) {
	var xml = cocktail.core.parser.DOMParser.doGetInnerHTML(node,Xml.createElement(node.get_nodeName()));
	var _g1 = 0;
	var _g = node.attributes.get_length();
	while(_g1 < _g) {
		var i = _g1++;
		var attribute = node.attributes.item(i);
		if(attribute.specified == true) xml.set(attribute.name,attribute.get_value());
	}
	return xml.toString();
};
cocktail.core.parser.DOMParser.doSetInnerHTML = function(xml,ownerDocument) {
	switch(xml.nodeType) {
	case Xml.PCData:
		return ownerDocument.createTextNode(xml.get_nodeValue());
	case Xml.Comment:
		return ownerDocument.createComment(xml.get_nodeValue());
	case Xml.Element:
		var htmlElement = ownerDocument.createElement(xml.get_nodeName());
		var $it0 = xml.iterator();
		while( $it0.hasNext() ) {
			var child = $it0.next();
			switch(child.nodeType) {
			case Xml.PCData:
				if(child.get_nodeValue() == "") continue;
				break;
			}
			var childNode = cocktail.core.parser.DOMParser.doSetInnerHTML(child,ownerDocument);
			htmlElement.appendChild(childNode);
		}
		var attributes = xml.attributes();
		while( attributes.hasNext() ) {
			var attribute = attributes.next();
			var value = xml.get(attribute);
			htmlElement.setAttribute(attribute,value);
		}
		return htmlElement;
	}
	return null;
};
cocktail.core.parser.DOMParser.doGetInnerHTML = function(node,xml) {
	var length = node.childNodes.length;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var child = node.childNodes[i];
		var _g1 = child.get_nodeType();
		switch(_g1) {
		case 1:
			var childXml = Xml.createElement(child.get_nodeName());
			var childAttributes = child.attributes;
			var childAttributesLength = childAttributes.get_length();
			var _g2 = 0;
			while(_g2 < childAttributesLength) {
				var j = _g2++;
				var attribute = childAttributes.item(j);
				if(attribute.specified == true) childXml.set(attribute.name,attribute.get_value());
			}
			if(child.style.length > 0) childXml.set("style",child.style.get_cssText());
			xml.addChild(cocktail.core.parser.DOMParser.doGetInnerHTML(child,childXml));
			if(childXml.firstChild() == null && child.isVoidElement() == false) childXml.addChild(Xml.createPCData(""));
			break;
		case 3:
			var text = Xml.createPCData(child.get_nodeValue());
			xml.addChild(text);
			break;
		case 8:
			var comment = Xml.createComment(child.get_nodeValue());
			xml.addChild(comment);
			break;
		}
	}
	return xml;
};
cocktail.core.parser.DOMParser.prototype = {
	__class__: cocktail.core.parser.DOMParser
};
cocktail.core.parser.TextToken = $hxClasses["cocktail.core.parser.TextToken"] = { __ename__ : ["cocktail","core","parser","TextToken"], __constructs__ : ["word","space","tab","lineFeed"] };
cocktail.core.parser.TextToken.word = function(value) { var $x = ["word",0,value]; $x.__enum__ = cocktail.core.parser.TextToken; $x.toString = $estr; return $x; };
cocktail.core.parser.TextToken.space = ["space",1];
cocktail.core.parser.TextToken.space.toString = $estr;
cocktail.core.parser.TextToken.space.__enum__ = cocktail.core.parser.TextToken;
cocktail.core.parser.TextToken.tab = ["tab",2];
cocktail.core.parser.TextToken.tab.toString = $estr;
cocktail.core.parser.TextToken.tab.__enum__ = cocktail.core.parser.TextToken;
cocktail.core.parser.TextToken.lineFeed = ["lineFeed",3];
cocktail.core.parser.TextToken.lineFeed.toString = $estr;
cocktail.core.parser.TextToken.lineFeed.__enum__ = cocktail.core.parser.TextToken;
cocktail.core.parser.PlainTextParser = function() {
};
$hxClasses["cocktail.core.parser.PlainTextParser"] = cocktail.core.parser.PlainTextParser;
cocktail.core.parser.PlainTextParser.__name__ = ["cocktail","core","parser","PlainTextParser"];
cocktail.core.parser.PlainTextParser.parse = function(text) {
	var textTokens = new Array();
	var textToken = null;
	var lastCharacterIsSpace = false;
	var i = 0;
	while(i < text.length) {
		if(text.charAt(i) == "\\") {
			if(i < text.length - 1) {
				if(text.charAt(i + 1) == "n") {
					if(textToken != null) {
						textTokens.push(cocktail.core.parser.TextToken.word(textToken));
						textToken = null;
					}
					textTokens.push(cocktail.core.parser.TextToken.lineFeed);
					i++;
				} else if(text.charAt(i + 1) == "t") {
					if(textToken != null) {
						textTokens.push(cocktail.core.parser.TextToken.word(textToken));
						textToken = null;
					}
					textTokens.push(cocktail.core.parser.TextToken.tab);
					i++;
				}
			}
		} else if(text.charCodeAt(i) == 32) {
			if(textToken != null) {
				textTokens.push(cocktail.core.parser.TextToken.word(textToken));
				textToken = null;
			}
			textTokens.push(cocktail.core.parser.TextToken.space);
			lastCharacterIsSpace = true;
		} else {
			lastCharacterIsSpace = false;
			if(textToken == null) textToken = "";
			textToken += text.charAt(i);
		}
		i++;
	}
	if(textToken != null) textTokens.push(cocktail.core.parser.TextToken.word(textToken));
	return textTokens;
};
cocktail.core.parser.PlainTextParser.applyWhiteSpaceProcessing = function(text,whiteSpace) {
	switch(whiteSpace[1]) {
	case 0:case 8:
		var hasLineFeed = text.indexOf("\n") != -1;
		if(hasLineFeed == true) {
			text = cocktail.core.parser.PlainTextParser.removeControlCharactersSurroundingLineFeed(text);
			text = cocktail.core.parser.PlainTextParser.convertLineFeedsToSpaces(text);
		}
		var hasTab = text.indexOf("\t") != -1;
		if(hasTab == true) text = cocktail.core.parser.PlainTextParser.convertTabToSpaces(text);
		var hasSpace = text.indexOf(" ") != -1;
		if(hasSpace == true) text = cocktail.core.parser.PlainTextParser.concatenateSpaces(text);
		break;
	case 10:
		text = cocktail.core.parser.PlainTextParser.removeControlCharactersSurroundingLineFeed(text);
		text = cocktail.core.parser.PlainTextParser.convertTabToSpaces(text);
		text = cocktail.core.parser.PlainTextParser.concatenateSpaces(text);
		break;
	case 7:case 9:
		break;
	default:
	}
	return text;
};
cocktail.core.parser.PlainTextParser.removeControlCharactersSurroundingLineFeed = function(sourceText) {
	var state = 0;
	var position = 0;
	var c = sourceText.charCodeAt(position);
	var outputText = "";
	var buffer = "";
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 32:case 13:
				buffer += sourceText.charAt(position);
				state = 1;
				break;
			case 10:
				outputText += sourceText.charAt(position);
				state = 2;
				break;
			default:
				outputText += sourceText.charAt(position);
			}
			break;
		case 1:
			switch(c) {
			case 10:
				buffer = "";
				outputText += sourceText.charAt(position);
				state = 2;
				break;
			case 9:case 32:case 13:
				buffer += sourceText.charAt(position);
				break;
			default:
				outputText += buffer;
				buffer = "";
				outputText += sourceText.charAt(position);
				state = 0;
			}
			break;
		case 2:
			switch(c) {
			case 9:case 32:case 13:
				break;
			case 10:
				outputText += sourceText.charAt(position);
				break;
			default:
				outputText += sourceText.charAt(position);
				state = 0;
			}
			break;
		}
		c = StringTools.fastCodeAt(sourceText,++position);
	}
	outputText += buffer;
	return outputText;
};
cocktail.core.parser.PlainTextParser.concatenateSpaces = function(sourceText) {
	var state = 0;
	var position = 0;
	var c = sourceText.charCodeAt(position);
	var outputText = "";
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 32:
				outputText += sourceText.charAt(position);
				state = 3;
				break;
			default:
				outputText += sourceText.charAt(position);
			}
			break;
		case 3:
			switch(c) {
			case 32:
				break;
			default:
				outputText += sourceText.charAt(position);
				state = 0;
			}
			break;
		}
		c = StringTools.fastCodeAt(sourceText,++position);
	}
	return outputText;
};
cocktail.core.parser.PlainTextParser.convertLineFeedsToSpaces = function(sourceText) {
	var er = new EReg("\n","g");
	return er.replace(sourceText," ");
};
cocktail.core.parser.PlainTextParser.convertTabToSpaces = function(sourceText) {
	var er = new EReg("\t","g");
	return er.replace(sourceText," ");
};
cocktail.core.parser.PlainTextParser.applyTextTransform = function(text,textTransform) {
	switch(textTransform[1]) {
	case 16:
		text = text.toUpperCase();
		break;
	case 17:
		text = text.toLowerCase();
		break;
	case 15:
		text = cocktail.core.parser.PlainTextParser.capitalizeText(text);
		break;
	case 18:
		break;
	default:
	}
	return text;
};
cocktail.core.parser.PlainTextParser.capitalizeText = function(sourceText) {
	var state = 4;
	var position = 0;
	var c = sourceText.charCodeAt(position);
	var outputText = "";
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 32:
				outputText += sourceText.charAt(position);
				state = 4;
				break;
			default:
				outputText += sourceText.charAt(position);
			}
			break;
		case 4:
			switch(c) {
			case 32:
				outputText += sourceText.charAt(position);
				break;
			default:
				outputText += sourceText.charAt(position).toUpperCase();
				state = 0;
			}
			break;
		}
		c = StringTools.fastCodeAt(sourceText,++position);
	}
	return outputText;
};
cocktail.core.parser.PlainTextParser.prototype = {
	__class__: cocktail.core.parser.PlainTextParser
};
cocktail.core.renderer = {};
cocktail.core.renderer.ElementRenderer = function(domNode) {
	cocktail.core.ds.FastNode.call(this);
	this.domNode = domNode;
	this.initCoreStyle();
	this._hasOwnLayer = false;
	this._wasAbsolutelyPositioned = false;
	this._needsLayerRendererUpdate = true;
	this.bounds = new cocktail.core.geom.RectangleVO();
	this.globalBounds = new cocktail.core.geom.RectangleVO();
	this.staticOrigin = new cocktail.core.geom.PointVO(0.0,0.0);
	this.hitTestingBounds = new cocktail.core.geom.RectangleVO();
	this.inlineBoxes = new Array();
	this.isBlockContainer = false;
	this.isReplaced = false;
	this.isText = false;
	this.hasLineBoxes = false;
};
$hxClasses["cocktail.core.renderer.ElementRenderer"] = cocktail.core.renderer.ElementRenderer;
cocktail.core.renderer.ElementRenderer.__name__ = ["cocktail","core","renderer","ElementRenderer"];
cocktail.core.renderer.ElementRenderer.__super__ = cocktail.core.ds.FastNode;
cocktail.core.renderer.ElementRenderer.prototype = $extend(cocktail.core.ds.FastNode.prototype,{
	dispose: function() {
		this.domNode = null;
		this.coreStyle = null;
		this.bounds = null;
		this.globalBounds = null;
		this.staticOrigin = null;
		this.hitTestingBounds = null;
		this.layerRenderer = null;
		var length = this.inlineBoxes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this.inlineBoxes[i].dispose();
		}
		this.inlineBoxes = null;
	}
	,initCoreStyle: function() {
		this.coreStyle = this.domNode.coreStyle;
	}
	,appendChild: function(newChild) {
		cocktail.core.ds.FastNode.prototype.appendChild.call(this,newChild);
		newChild.addedToRenderingTree();
		this.invalidate();
	}
	,removeChild: function(oldChild) {
		oldChild.removedFromRenderingTree();
		cocktail.core.ds.FastNode.prototype.removeChild.call(this,oldChild);
		this.invalidate();
	}
	,insertBefore: function(newChild,refChild) {
		cocktail.core.ds.FastNode.prototype.insertBefore.call(this,newChild,refChild);
		if(refChild == null) return;
		newChild.addedToRenderingTree();
		this.invalidate();
	}
	,updateHitTestingBounds: function() {
		this.hitTestingBounds.x = this.globalBounds.x;
		this.hitTestingBounds.y = this.globalBounds.y;
		this.hitTestingBounds.width = this.globalBounds.width;
		this.hitTestingBounds.height = this.globalBounds.height;
		if((this.coreStyle.isInline == true || this.isText == true) && this.isReplaced == false) {
			this.hitTestingBounds.x += this.bounds.x;
			this.hitTestingBounds.y += this.bounds.y;
		}
		var scrollOffset = this.layerRenderer.scrollOffset;
		this.hitTestingBounds.x -= scrollOffset.x;
		this.hitTestingBounds.y -= scrollOffset.y;
		var matrix = this.layerRenderer.matrix;
		this.hitTestingBounds.x += matrix.e;
		this.hitTestingBounds.y += matrix.f;
		if(this._hasOwnLayer == true) {
			this.hitTestingBounds.x += this.layerRenderer.scrollLeft;
			this.hitTestingBounds.y += this.layerRenderer.scrollTop;
		}
		cocktail.core.geom.GeomUtils.intersectBounds(this.layerRenderer.clipRect,this.hitTestingBounds,this.hitTestingBounds);
		var child = this.firstChild;
		while(child != null) {
			child.updateHitTestingBounds();
			child = child.nextSibling;
		}
	}
	,render: function(parentGraphicContext,clipRect,scrollOffset) {
	}
	,updateText: function() {
		var child = this.firstChild;
		while(child != null) {
			child.updateText();
			child = child.nextSibling;
		}
	}
	,updateTextDecorations: function(inheritUnderline,inheritOverline,inheritLineThrough,inheritBlink) {
		{
			var _g = this.coreStyle.getComputedOrInitialProperty(86);
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				switch(value[1]) {
				case 84:
					inheritUnderline = true;
					break;
				case 85:
					inheritOverline = true;
					break;
				case 86:
					inheritLineThrough = true;
					break;
				case 87:
					inheritBlink = true;
					break;
				default:
				}
				break;
			case 13:
				var value1 = _g[2];
				var _g2 = 0;
				var _g1 = value1.length;
				while(_g2 < _g1) {
					var i = _g2++;
					{
						var _g3 = value1[i];
						switch(_g3[1]) {
						case 4:
							var value2 = _g3[2];
							switch(value2[1]) {
							case 84:
								inheritUnderline = true;
								break;
							case 85:
								inheritOverline = true;
								break;
							case 86:
								inheritLineThrough = true;
								break;
							case 87:
								inheritBlink = true;
								break;
							default:
							}
							break;
						default:
						}
					}
				}
				break;
			default:
			}
		}
		var child = this.firstChild;
		while(child != null) {
			if(child.coreStyle.isFloat == true || child.coreStyle.isAbsolutelyPositioned == true || child.coreStyle.isInlineBlock == true) child.updateTextDecorations(false,false,false,false); else child.updateTextDecorations(inheritUnderline,inheritOverline,inheritLineThrough,inheritBlink);
			child = child.nextSibling;
		}
	}
	,invalidateLayerRenderer: function() {
		this._needsLayerRendererUpdate = true;
		var _g = this.domNode.get_nodeType();
		switch(_g) {
		case 1:case 3:
			var htmlDocument = this.domNode.ownerDocument;
			htmlDocument.invalidationManager.invalidateLayerTree();
			break;
		}
	}
	,layout: function(forceLayout,layoutState) {
	}
	,setGlobalOrigins: function(addedX,addedY,addedPositionedX,addedPositionedY) {
		if(this.isPositioned() == true) {
			addedPositionedX = this.globalBounds.x;
			addedPositionedY = this.globalBounds.y;
		}
		if(this.isBlockContainer == true) {
			addedX = this.globalBounds.x + this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.borderLeftWidth;
			addedY = this.globalBounds.y + this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.borderTopWidth;
		}
		var child = this.firstChild;
		while(child != null) {
			if(child.isAbsolutelyPositioned()) this.setAbsolutelyPositionedGlobalOrigins(child,addedX,addedY,addedPositionedX,addedPositionedY); else {
				child.globalBounds.x = addedX;
				child.globalBounds.y = addedY;
				if(child.isInlineLevel() == false || child.isReplaced == true) {
					child.globalBounds.x += child.bounds.x;
					child.globalBounds.y += child.bounds.y;
				} else if(child.isBlockContainer == true) {
					child.globalBounds.x += child.bounds.x;
					child.globalBounds.y += child.bounds.y;
				}
			}
			child.globalBounds.width = child.bounds.width;
			child.globalBounds.height = child.bounds.height;
			if(child.firstChild != null) child.setGlobalOrigins(addedX,addedY,addedPositionedX,addedPositionedY);
			child = child.nextSibling;
		}
	}
	,setAbsolutelyPositionedGlobalOrigins: function(elementRenderer,addedX,addedY,addedPositionedX,addedPositionedY) {
		var elementRendererCoreStyle = elementRenderer.coreStyle;
		if(elementRendererCoreStyle.isFixedPositioned) {
			if(elementRendererCoreStyle.hasAutoLeft == true && elementRendererCoreStyle.hasAutoRight == true) elementRenderer.globalBounds.x = addedX + elementRenderer.staticOrigin.x; else elementRenderer.globalBounds.x = elementRenderer.bounds.x;
			if(elementRendererCoreStyle.hasAutoTop == true && elementRendererCoreStyle.hasAutoBottom == true) elementRenderer.globalBounds.y = addedY + elementRenderer.staticOrigin.y; else elementRenderer.globalBounds.y = elementRenderer.bounds.y;
		} else {
			if(elementRendererCoreStyle.hasAutoLeft == true && elementRendererCoreStyle.hasAutoRight == true) elementRenderer.globalBounds.x = addedX + elementRenderer.staticOrigin.x; else elementRenderer.globalBounds.x = addedPositionedX + elementRenderer.bounds.x;
			if(elementRendererCoreStyle.hasAutoTop == true && elementRendererCoreStyle.hasAutoBottom == true) elementRenderer.globalBounds.y = addedY + elementRenderer.staticOrigin.y; else elementRenderer.globalBounds.y = addedPositionedY + elementRenderer.bounds.y;
		}
	}
	,getCollapsedTopMargin: function(onlyIfFirstAdjoiningMargin) {
		return 0.0;
	}
	,getCollapsedBottomMargin: function(onlyIfFirstAdjoiningMargin) {
		return 0.0;
	}
	,getNextAdjoiningMargins: function(adjoiningMargins,startWithTopMargin,isFirst) {
	}
	,getPreviousAdjoiningMargins: function(adjoiningMargins,startWithTopMargin,isFirst) {
	}
	,collapseBottomMarginWithLastChildBottomMargin: function() {
		return false;
	}
	,updateLayerRenderer: function() {
		if(this._needsLayerRendererUpdate == true) {
			this._needsLayerRendererUpdate = false;
			if(this.layerRenderer == null) {
				this.attach();
				return;
			} else if(this._hasOwnLayer != this.createOwnLayer()) {
				this.detach();
				this.attach();
				return;
			} else if(this.createOwnLayer() == true) this.parentNode.layerRenderer.insertBefore(this.layerRenderer,this.getNextLayerRenderer(this.parentNode.layerRenderer.rootElementRenderer,this));
		}
		var child = this.firstChild;
		while(child != null) {
			child.updateLayerRenderer();
			child = child.nextSibling;
		}
	}
	,attach: function() {
		this.attachLayer();
		var child = this.firstChild;
		while(child != null) {
			child.attach();
			child = child.nextSibling;
		}
	}
	,detach: function() {
		var child = this.firstChild;
		while(child != null) {
			child.detach();
			child = child.nextSibling;
		}
		if(this.layerRenderer != null) this.detachLayer();
	}
	,updateAnonymousBlock: function() {
	}
	,updateInlineBoxes: function() {
		var child = this.firstChild;
		while(child != null) {
			child.updateInlineBoxes();
			child = child.nextSibling;
		}
	}
	,addedToRenderingTree: function() {
		this.containingBlock = this.getContainingBlock();
		this.registerWithContaininingBlock();
		this.invalidateLayerRenderer();
	}
	,removedFromRenderingTree: function() {
		this.detach();
		this.unregisterWithContainingBlock();
		this.containingBlock = null;
	}
	,attachLayer: function() {
		if(this.parentNode != null) this.createLayer(this.parentNode.layerRenderer);
	}
	,detachLayer: function() {
		if(this._hasOwnLayer == true) {
			this.parentNode.layerRenderer.removeChild(this.layerRenderer);
			this._hasOwnLayer = false;
			this.layerRenderer.dispose();
		}
		this.layerRenderer = null;
	}
	,registerWithContaininingBlock: function() {
		if(this.isAbsolutelyPositioned() == true) {
			this.containingBlock.addAbsolutelyPositionedChildren(this);
			this._wasAbsolutelyPositioned = true;
		}
	}
	,unregisterWithContainingBlock: function() {
		if(this._wasAbsolutelyPositioned == true) {
			this.containingBlock.removeAbsolutelyPositionedChild(this);
			this._wasAbsolutelyPositioned = false;
		}
	}
	,getLeadedAscent: function() {
		var fontMetrics = this.coreStyle.fontMetrics;
		var ascent = fontMetrics.ascent;
		var descent = fontMetrics.descent;
		var lineHeight = this.coreStyle.usedValues.lineHeight;
		var leading = lineHeight - (ascent + descent);
		var leadedAscent = ascent + leading / 2;
		var leadedDescent = descent + leading / 2;
		return leadedAscent;
	}
	,getLeadedDescent: function() {
		var fontMetrics = this.coreStyle.fontMetrics;
		var ascent = fontMetrics.ascent;
		var descent = fontMetrics.descent;
		var lineHeight = this.coreStyle.usedValues.lineHeight;
		var leading = lineHeight - (ascent + descent);
		var leadedAscent = ascent + leading / 2;
		var leadedDescent = descent + leading / 2;
		return leadedDescent;
	}
	,establishesNewBlockFormattingContext: function() {
		return false;
	}
	,isScrollBar: function() {
		return false;
	}
	,canHaveClearance: function() {
		return false;
	}
	,isFloat: function() {
		return false;
	}
	,isPositioned: function() {
		return false;
	}
	,isAbsolutelyPositioned: function() {
		return false;
	}
	,isInlineLevel: function() {
		return false;
	}
	,isRelativePositioned: function() {
		return false;
	}
	,isTransparent: function() {
		return false;
	}
	,childrenInline: function() {
		return false;
	}
	,isAnonymousBlockBox: function() {
		return false;
	}
	,isTransformed: function() {
		return false;
	}
	,hasCSSTransform: function() {
		return false;
	}
	,isVisible: function() {
		return true;
	}
	,createOwnLayer: function() {
		return false;
	}
	,createLayer: function(parentLayer) {
		if(this.createOwnLayer() == true) {
			this.doCreateLayer();
			parentLayer.insertBefore(this.layerRenderer,this.getNextLayerRenderer(parentLayer.rootElementRenderer,this));
			this._hasOwnLayer = true;
		} else this.layerRenderer = parentLayer;
	}
	,doCreateLayer: function() {
		this.layerRenderer = new cocktail.core.layer.LayerRenderer(this);
	}
	,getNextLayerRenderer: function(rootElementRenderer,referenceElementRenderer) {
		var nextElementRendererWithOwnLayerRenderer = this.getNextElementRendererWithOwnLayerRenderer(rootElementRenderer,referenceElementRenderer);
		if(nextElementRendererWithOwnLayerRenderer == null) return null; else if(nextElementRendererWithOwnLayerRenderer == referenceElementRenderer) return null; else return nextElementRendererWithOwnLayerRenderer.layerRenderer;
	}
	,getNextElementRendererWithOwnLayerRenderer: function(rootElementRenderer,referenceElementRenderer) {
		var foundSelf = false;
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			if(child == referenceElementRenderer) foundSelf = true; else if(child.createOwnLayer() == true && child.layerRenderer != null) {
				if(foundSelf == true) return child;
			} else if(child.firstChild != null) {
				var nextElementRendererWithOwnLayerRenderer = this.getNextElementRendererWithOwnLayerRenderer(child,referenceElementRenderer);
				if(nextElementRendererWithOwnLayerRenderer != null) {
					if(nextElementRendererWithOwnLayerRenderer == referenceElementRenderer) foundSelf = true; else return nextElementRendererWithOwnLayerRenderer;
				}
			}
			child = child.nextSibling;
		}
		if(foundSelf == true) return referenceElementRenderer; else return null;
	}
	,getContainingBlock: function() {
		if(this.isAbsolutelyPositioned() == true) {
			if(this.coreStyle.isFixedPositioned == true) return this.getInitialContainingBlock(); else return this.getFirstPositionedAncestor();
		} else return this.getFirstBlockContainer();
	}
	,getFirstPositionedAncestor: function() {
		var parent = this.parentNode;
		while(parent.isPositioned() == false) {
			if(parent.parentNode == null) break;
			parent = parent.parentNode;
		}
		return parent;
	}
	,getInitialContainingBlock: function() {
		return this.domNode.ownerDocument.documentElement.elementRenderer;
	}
	,getFirstBlockContainer: function() {
		var parent = this.parentNode;
		while(parent.isBlockContainer == false) parent = parent.parentNode;
		return parent;
	}
	,getInlineBoxesBounds: function(inLineBoxes,bounds) {
		bounds.x = 50000;
		bounds.y = 50000;
		bounds.width = 0;
		bounds.height = 0;
		var length = inLineBoxes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			cocktail.core.geom.GeomUtils.addBounds(inLineBoxes[i].bounds,bounds,null,null);
		}
	}
	,doGetChildrenBounds: function(rootElementRenderer,bounds) {
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			cocktail.core.geom.GeomUtils.addBounds(child.bounds,bounds,null,null);
			if(child.firstChild != null) this.doGetChildrenBounds(child,bounds);
			child = child.nextSibling;
		}
	}
	,invalidate: function() {
	}
	,invalidateStyle: function(styleIndex) {
	}
	,invalidateRendering: function() {
	}
	,set_scrollLeft: function(value) {
		if(this._hasOwnLayer == true) this.layerRenderer.set_scrollLeft(value);
		return value;
	}
	,get_scrollLeft: function() {
		if(this._hasOwnLayer == true) return this.layerRenderer.scrollLeft;
		return 0;
	}
	,set_scrollTop: function(value) {
		if(this._hasOwnLayer == true) this.layerRenderer.set_scrollTop(value);
		return value;
	}
	,get_scrollTop: function() {
		if(this._hasOwnLayer == true) return this.layerRenderer.scrollTop;
		return 0;
	}
	,get_previousNormalFlowSibling: function() {
		var previousElementRendererSibling = this.previousSibling;
		while(previousElementRendererSibling != null) {
			if(previousElementRendererSibling.isFloat() == false) {
				if(previousElementRendererSibling.isAbsolutelyPositioned() == false) return previousElementRendererSibling;
			}
			previousElementRendererSibling = previousElementRendererSibling.previousSibling;
		}
		return null;
	}
	,get_nextNormalFlowSibling: function() {
		var nextElementRendererSibling = this.nextSibling;
		while(nextElementRendererSibling != null) {
			if(nextElementRendererSibling.isFloat() == false) {
				if(nextElementRendererSibling.isAbsolutelyPositioned() == false) return nextElementRendererSibling;
			}
			nextElementRendererSibling = nextElementRendererSibling.nextSibling;
		}
		return null;
	}
	,get_firstNormalFlowChild: function() {
		var firstElementRendererChild = this.firstChild;
		if(firstElementRendererChild != null) {
			if(firstElementRendererChild.isFloat() == false) {
				if(firstElementRendererChild.isAbsolutelyPositioned() == false) return firstElementRendererChild;
			}
			return firstElementRendererChild.get_nextNormalFlowSibling();
		}
		return null;
	}
	,get_lastNormalFlowChild: function() {
		var lastElementRendererChild = this.lastChild;
		if(lastElementRendererChild != null) {
			if(lastElementRendererChild.isFloat() == false) {
				if(lastElementRendererChild.isAbsolutelyPositioned() == false) return lastElementRendererChild;
			}
			return lastElementRendererChild.get_previousNormalFlowSibling();
		}
		return null;
	}
	,get_scrollWidth: function() {
		if(this._hasOwnLayer == true) {
			var scrollableWidth = this.layerRenderer.scrollableBounds.width;
			if(scrollableWidth > this.bounds.width) return scrollableWidth;
		}
		return this.bounds.width;
	}
	,get_scrollHeight: function() {
		if(this._hasOwnLayer == true) {
			var scrollableHeight = this.layerRenderer.scrollableBounds.height;
			if(scrollableHeight > this.bounds.height) return scrollableHeight;
		}
		return this.bounds.height;
	}
	,__class__: cocktail.core.renderer.ElementRenderer
	,__properties__: {get_lastNormalFlowChild:"get_lastNormalFlowChild",get_firstNormalFlowChild:"get_firstNormalFlowChild",get_nextNormalFlowSibling:"get_nextNormalFlowSibling",get_previousNormalFlowSibling:"get_previousNormalFlowSibling",get_scrollHeight:"get_scrollHeight",get_scrollWidth:"get_scrollWidth",set_scrollTop:"set_scrollTop",get_scrollTop:"get_scrollTop",set_scrollLeft:"set_scrollLeft",get_scrollLeft:"get_scrollLeft"}
});
cocktail.core.renderer.InvalidatingElementRenderer = function(domNode) {
	cocktail.core.renderer.ElementRenderer.call(this,domNode);
	this._needsLayout = true;
	this._childrenNeedLayout = true;
	this._positionedChildrenNeedLayout = true;
};
$hxClasses["cocktail.core.renderer.InvalidatingElementRenderer"] = cocktail.core.renderer.InvalidatingElementRenderer;
cocktail.core.renderer.InvalidatingElementRenderer.__name__ = ["cocktail","core","renderer","InvalidatingElementRenderer"];
cocktail.core.renderer.InvalidatingElementRenderer.__super__ = cocktail.core.renderer.ElementRenderer;
cocktail.core.renderer.InvalidatingElementRenderer.prototype = $extend(cocktail.core.renderer.ElementRenderer.prototype,{
	addedToRenderingTree: function() {
		cocktail.core.renderer.ElementRenderer.prototype.addedToRenderingTree.call(this);
		this.invalidateLayout();
	}
	,invalidate: function() {
		this._childrenNeedLayout = true;
		this._positionedChildrenNeedLayout = true;
		this.invalidateLayoutAndRendering();
	}
	,invalidateRendering: function() {
		if(this.layerRenderer != null) this.layerRenderer.invalidateRendering();
	}
	,invalidateStyle: function(styleIndex) {
		switch(styleIndex) {
		case 22:case 23:case 21:case 24:
			if(this.isAbsolutelyPositioned() == true) {
				this.invalidateLayoutAndRendering();
				this.invalidateContainingBlock(styleIndex);
			} else this.invalidateRendering();
			break;
		case 40:case 37:case 34:case 38:case 36:case 35:case 43:case 42:case 45:
			this.invalidateText();
			this.invalidateLayoutAndRendering();
			this.invalidateContainingBlock(styleIndex);
			break;
		case 53:case 49:
			this.invalidateRendering();
			break;
		case 25:case 31:case 26:case 30:case 28:case 27:case 29:
			this.invalidateRendering();
			break;
		default:
			this.invalidateLayoutAndRendering();
			this.invalidateContainingBlock(styleIndex);
		}
	}
	,childInvalidated: function() {
		this.invalidate();
	}
	,positionedChildInvalidated: function() {
		this.invalidate();
	}
	,invalidateContainingBlock: function(styleIndex) {
		if(this.containingBlock == null) return;
		if(this.isPositioned() == true && this.isRelativePositioned() == false) this.containingBlock.invalidatedChildStyle(styleIndex); else this.containingBlock.invalidatedPositionedChildStyle(styleIndex);
	}
	,invalidatedStyle: function(styleIndex) {
		switch(styleIndex) {
		case 22:case 23:case 21:case 24:
			if(this.isPositioned() == true && this.isRelativePositioned() == false) {
				this.invalidateLayoutAndRendering();
				this.invalidateContainingBlock(styleIndex);
			} else this.invalidateRendering();
			break;
		case 40:case 37:case 34:case 38:case 36:case 35:case 43:case 42:case 45:
			this.invalidateText();
			this.invalidateLayoutAndRendering();
			this.invalidateContainingBlock(styleIndex);
			break;
		case 53:case 49:
			this.invalidateRendering();
			break;
		case 25:case 31:case 26:case 30:case 28:case 27:case 29:
			this.invalidateRendering();
			break;
		default:
			this.invalidateLayout();
			this.invalidateContainingBlock(styleIndex);
		}
	}
	,invalidatedChildStyle: function(styleIndex) {
		switch(styleIndex) {
		case 25:case 31:case 26:case 30:case 28:case 27:case 29:
			break;
		default:
			this._childrenNeedLayout = true;
		}
	}
	,invalidatedPositionedChildStyle: function(styleIndex) {
		switch(styleIndex) {
		case 25:case 31:case 26:case 30:case 28:case 27:case 29:
			break;
		default:
			this._positionedChildrenNeedLayout = true;
		}
	}
	,invalidateLayout: function() {
		this._needsLayout = true;
		var htmlDocument = this.domNode.ownerDocument;
		if(htmlDocument != null) htmlDocument.invalidationManager.invalidateLayout(false);
	}
	,invalidateLayoutAndRendering: function() {
		this._needsLayout = true;
		var htmlDocument = this.domNode.ownerDocument;
		htmlDocument.invalidationManager.invalidateLayout(false);
		if(this.layerRenderer != null) this.layerRenderer.invalidateRendering();
	}
	,invalidateText: function() {
		var child = this.firstChild;
		while(child != null) {
			if(child.isText == true) child.invalidate();
			child = child.nextSibling;
		}
	}
	,__class__: cocktail.core.renderer.InvalidatingElementRenderer
});
cocktail.core.renderer.BoxRenderer = function(domNode) {
	cocktail.core.renderer.InvalidatingElementRenderer.call(this,domNode);
	this._containerBlockData = new cocktail.core.layout.ContainingBlockVO(0.0,false,0.0,false);
	this._windowData = new cocktail.core.layout.ContainingBlockVO(0.0,false,0.0,false);
	this._backgroundAndBorderBounds = new cocktail.core.geom.RectangleVO();
};
$hxClasses["cocktail.core.renderer.BoxRenderer"] = cocktail.core.renderer.BoxRenderer;
cocktail.core.renderer.BoxRenderer.__name__ = ["cocktail","core","renderer","BoxRenderer"];
cocktail.core.renderer.BoxRenderer.__super__ = cocktail.core.renderer.InvalidatingElementRenderer;
cocktail.core.renderer.BoxRenderer.prototype = $extend(cocktail.core.renderer.InvalidatingElementRenderer.prototype,{
	updateInlineBoxes: function() {
		this.inlineBoxes = new Array();
		var inlineBox = new cocktail.core.linebox.EmbeddedInlineBox(this,this.getLeadedAscent(),this.getLeadedDescent());
		this.inlineBoxes.push(inlineBox);
		cocktail.core.renderer.InvalidatingElementRenderer.prototype.updateInlineBoxes.call(this);
	}
	,render: function(parentGraphicContext,clipRect,scrollOffset) {
		if(this.coreStyle.isVisible == true) {
			cocktail.core.renderer.BoxRenderer._intersectBounds.x = this.hitTestingBounds.x;
			cocktail.core.renderer.BoxRenderer._intersectBounds.y = this.hitTestingBounds.y;
			cocktail.core.renderer.BoxRenderer._intersectBounds.width = this.hitTestingBounds.width;
			cocktail.core.renderer.BoxRenderer._intersectBounds.height = this.hitTestingBounds.height;
			cocktail.core.geom.GeomUtils.intersectBounds(cocktail.core.renderer.BoxRenderer._intersectBounds,clipRect,cocktail.core.renderer.BoxRenderer._intersectBounds);
			if(cocktail.core.renderer.BoxRenderer._intersectBounds.width != 0 && cocktail.core.renderer.BoxRenderer._intersectBounds.height != 0) this.renderSelf(parentGraphicContext,clipRect,scrollOffset);
		}
		if(this.firstChild != null) this.renderChildren(parentGraphicContext,clipRect,scrollOffset);
	}
	,renderSelf: function(graphicContext,clipRect,scrollOffset) {
		if(this.coreStyle.hasBackgroundImage == true || this.coreStyle.hasBackgroundColor == true) this.renderBackground(graphicContext,clipRect,scrollOffset);
		this.renderBorder(graphicContext,clipRect,scrollOffset);
		this.renderOutline(graphicContext,clipRect,scrollOffset);
	}
	,renderBackground: function(graphicContext,clipRect,scrollOffset) {
		var backgroundBounds = this.getBackgroundAndBordersBounds(scrollOffset);
		cocktail.core.graphics.BackgroundDrawer.render(graphicContext,backgroundBounds,this.coreStyle,this,clipRect);
	}
	,renderBorder: function(graphicsContext,clipRect,scrollOffset) {
		var borderBounds = this.getBackgroundAndBordersBounds(scrollOffset);
		cocktail.core.graphics.BorderDrawer.draw(graphicsContext,borderBounds,this.coreStyle,clipRect);
	}
	,renderOutline: function(graphicsContext,clipRect,scrollOffset) {
		var outlineBounds = this.getOutlineBounds(scrollOffset);
		cocktail.core.graphics.BorderDrawer.drawOutline(graphicsContext,outlineBounds,this.coreStyle,clipRect);
	}
	,renderChildren: function(graphicContext,clipRect,scrollOffset) {
	}
	,layout: function(forceLayout,layoutState) {
		this.layoutSelfIfNeeded(forceLayout);
	}
	,layoutSelfIfNeeded: function(forceLayout) {
		if(this._needsLayout == false && forceLayout == false) return;
		var containingBlockData = this.containingBlock.getContainerBlockData();
		if(containingBlockData.isHeightAuto == true) {
			if(this.coreStyle.isAbsolutelyPositioned == false) {
				var _g = this.coreStyle.getTransitionablePropertyValue(16);
				switch(_g[1]) {
				case 2:
					var value = _g[2];
					containingBlockData.height = this.getHeightOfFirstParentWithNotAutoHeight();
					break;
				default:
				}
			}
		}
		if(this.coreStyle.isAbsolutelyPositioned == true) {
			if(this.containingBlock.isBlockContainer == true) {
				var containingBlockUsedValues = this.containingBlock.coreStyle.usedValues;
				containingBlockData.height += containingBlockUsedValues.paddingTop + containingBlockUsedValues.paddingBottom;
				containingBlockData.width += containingBlockUsedValues.paddingLeft + containingBlockUsedValues.paddingRight;
			}
		}
		if(this.coreStyle.isBlock == true) {
			if(this.childrenInline() == true) this.updateUsedTextIndent(containingBlockData.width);
		}
		this.computeBoxModelStyles(containingBlockData);
		var usedValues = this.coreStyle.usedValues;
		this.bounds.width = usedValues.width + usedValues.paddingLeft + usedValues.paddingRight + usedValues.borderLeftWidth + usedValues.borderRightWidth;
		this.bounds.height = usedValues.height + usedValues.paddingTop + usedValues.paddingBottom + usedValues.borderTopWidth + usedValues.borderBottomWidth;
		this._needsLayout = false;
	}
	,updateUsedTextIndent: function(containingBlockWidth) {
		{
			var _g = this.coreStyle.getTransitionablePropertyValue(47);
			switch(_g[1]) {
			case 18:
				var value = _g[2];
				this.coreStyle.usedValues.textIndent = value;
				break;
			case 2:
				var value1 = _g[2];
				this.coreStyle.usedValues.textIndent = containingBlockWidth * (value1 * 0.01);
				break;
			default:
			}
		}
	}
	,getHeightOfFirstParentWithNotAutoHeight: function() {
		var parent = this.parentNode;
		while(parent != null) {
			if(parent.getContainerBlockData().isHeightAuto == false) return parent.coreStyle.usedValues.height;
			parent = parent.parentNode;
		}
		return 0;
	}
	,computeBoxModelStyles: function(containingBlockDimensions) {
		var htmlDocument = this.domNode.ownerDocument;
		var boxComputer = htmlDocument.layoutManager.getBoxStylesComputer(this);
		boxComputer.measure(this.coreStyle,containingBlockDimensions);
	}
	,getCollapsedTopMargin: function(onlyIfFirstAdjoiningMargin) {
		return this.doGetCollapsedMargin(true,onlyIfFirstAdjoiningMargin);
	}
	,getCollapsedBottomMargin: function(onlyIfFirstAdjoiningMargin) {
		return this.doGetCollapsedMargin(false,onlyIfFirstAdjoiningMargin);
	}
	,doGetCollapsedMargin: function(isTopMargin,onlyIfFirstAdjoiningMargin) {
		this.layoutSelfIfNeeded(false);
		var previousAdjoiningMargins = new Array();
		this.getPreviousAdjoiningMargins(previousAdjoiningMargins,isTopMargin,true);
		var nextAdjoiningMargins = new Array();
		this.getNextAdjoiningMargins(nextAdjoiningMargins,isTopMargin,true);
		if(nextAdjoiningMargins.length == 0 && previousAdjoiningMargins.length == 0) {
			if(isTopMargin == true) return this.coreStyle.usedValues.marginTop; else return this.coreStyle.usedValues.marginBottom;
		} else if(onlyIfFirstAdjoiningMargin == false || previousAdjoiningMargins.length == 0) {
			var adjoiningMargins = nextAdjoiningMargins.concat(previousAdjoiningMargins);
			if(isTopMargin == true) adjoiningMargins.push(this.coreStyle.usedValues.marginTop); else adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
			return this.getCollapsedMargin(adjoiningMargins);
		} else return 0;
	}
	,getNextAdjoiningMargins: function(adjoiningMargins,startWithTopMargin,isFirst) {
		this.layoutSelfIfNeeded(false);
		if(startWithTopMargin == true) {
			if(this.collapseTopMarginWithFirstChildTopMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
				this.get_firstNormalFlowChild().getNextAdjoiningMargins(adjoiningMargins,true,false);
			} else if(this.collapseTopMarginWithBottomMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
				this.getNextAdjoiningMargins(adjoiningMargins,false,false);
			} else if(this.collapseTopMarginWithParentTopMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
			} else if(this.collapseTopMarginWithPreviousSiblingBottomMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
			}
		} else if(this.collapseBottomMarginWithNextSiblingTopMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
			this.get_nextNormalFlowSibling().getNextAdjoiningMargins(adjoiningMargins,true,false);
		} else if(this.collapseBottomMarginWithParentBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
			this.parentNode.getNextAdjoiningMargins(adjoiningMargins,false,false);
		} else if(this.collapseBottomMarginWithLastChildBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
		} else if(this.collapseTopMarginWithBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
		}
	}
	,getPreviousAdjoiningMargins: function(adjoiningMargins,startWithTopMargin,isFirst) {
		this.layoutSelfIfNeeded(false);
		if(startWithTopMargin == true) {
			if(this.collapseTopMarginWithPreviousSiblingBottomMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
				this.get_previousNormalFlowSibling().getPreviousAdjoiningMargins(adjoiningMargins,false,false);
			} else if(this.collapseTopMarginWithParentTopMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
				this.parentNode.getPreviousAdjoiningMargins(adjoiningMargins,true,false);
			} else if(this.collapseTopMarginWithBottomMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
			} else if(this.collapseTopMarginWithFirstChildTopMargin() == true) {
				if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginTop);
			}
		} else if(this.collapseBottomMarginWithLastChildBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
			this.get_lastNormalFlowChild().getPreviousAdjoiningMargins(adjoiningMargins,false,false);
		} else if(this.collapseTopMarginWithBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
			this.getPreviousAdjoiningMargins(adjoiningMargins,true,false);
		} else if(this.collapseBottomMarginWithParentBottomMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
		} else if(this.collapseBottomMarginWithNextSiblingTopMargin() == true) {
			if(isFirst == false) adjoiningMargins.push(this.coreStyle.usedValues.marginBottom);
		}
	}
	,getCollapsedMargin: function(adjoiningMargins) {
		var maximumPositiveMargin = 0.0;
		var maximumNegativeMargin = 0.0;
		var length = adjoiningMargins.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var adjoiningMargin = adjoiningMargins[i];
			if(adjoiningMargin > maximumPositiveMargin) maximumPositiveMargin = adjoiningMargin; else if(adjoiningMargin < maximumNegativeMargin) maximumNegativeMargin = adjoiningMargin;
		}
		return maximumPositiveMargin - Math.abs(maximumNegativeMargin);
	}
	,collapseTopMarginWithParentTopMargin: function() {
		if(this.parentNode == null) return false;
		if(this.get_previousNormalFlowSibling() != null) return false;
		if(this.parentNode.establishesNewBlockFormattingContext() == true) return false;
		if(this.parentNode.coreStyle.usedValues.paddingTop != 0) return false;
		if(this.parentNode.coreStyle.usedValues.borderTopWidth != 0) return false;
		return true;
	}
	,collapseBottomMarginWithParentBottomMargin: function() {
		if(this.parentNode == null) return false;
		if(this.get_nextNormalFlowSibling() != null) return false;
		if(this.parentNode.establishesNewBlockFormattingContext() == true) return false;
		if(this.parentNode.coreStyle.usedValues.paddingBottom != 0) return false;
		if(this.parentNode.coreStyle.usedValues.borderBottomWidth != 0) return false;
		return true;
	}
	,collapseTopMarginWithPreviousSiblingBottomMargin: function() {
		if(this.get_previousNormalFlowSibling() == null) return false;
		return true;
	}
	,collapseBottomMarginWithNextSiblingTopMargin: function() {
		if(this.get_nextNormalFlowSibling() == null) return false;
		return true;
	}
	,collapseTopMarginWithFirstChildTopMargin: function() {
		return false;
	}
	,collapseTopMarginWithBottomMargin: function() {
		if(this.get_firstNormalFlowChild() != null) {
			if(this.hasZeroHeightChildren() == false) return false;
		}
		if(this.coreStyle.usedValues.paddingTop != 0 || this.coreStyle.usedValues.paddingBottom != 0) return false;
		if(this.coreStyle.usedValues.borderTopWidth != 0 || this.coreStyle.usedValues.borderBottomWidth != 0) return false;
		if(this.bounds.height != 0) return false;
		if(this.establishesNewBlockFormattingContext() == true) return false;
		return true;
	}
	,hasZeroHeightChildren: function() {
		return false;
	}
	,isFloat: function() {
		return this.coreStyle.isFloat;
	}
	,canHaveClearance: function() {
		return this.coreStyle.canHaveClearance;
	}
	,isPositioned: function() {
		return this.coreStyle.isPositioned;
	}
	,isAbsolutelyPositioned: function() {
		return this.coreStyle.isAbsolutelyPositioned;
	}
	,isRelativePositioned: function() {
		return this.coreStyle.isRelativePositioned;
	}
	,isInlineLevel: function() {
		return this.coreStyle.isInlineLevel;
	}
	,createOwnLayer: function() {
		if(this.coreStyle.isPositioned == true) return true; else if(this.coreStyle.isTransparent == true) return true; else if(this.coreStyle.isTransformed == true) return true;
		return false;
	}
	,isTransformed: function() {
		return this.coreStyle.isTransformed;
	}
	,hasCSSTransform: function() {
		return this.coreStyle.hasCSSTransform;
	}
	,isVisible: function() {
		return this.coreStyle.isVisible;
	}
	,isTransparent: function() {
		return this.coreStyle.isTransparent;
	}
	,getBackgroundAndBordersBounds: function(scrollOffset) {
		this._backgroundAndBorderBounds.x = this.globalBounds.x - scrollOffset.x;
		this._backgroundAndBorderBounds.y = this.globalBounds.y - scrollOffset.y;
		this._backgroundAndBorderBounds.width = this.globalBounds.width;
		this._backgroundAndBorderBounds.height = this.globalBounds.height;
		return this._backgroundAndBorderBounds;
	}
	,getOutlineBounds: function(scrollOffset) {
		var outlineBounds = this.getBackgroundAndBordersBounds(scrollOffset);
		outlineBounds.x -= this.coreStyle.usedValues.outlineWidth;
		outlineBounds.y -= this.coreStyle.usedValues.outlineWidth;
		outlineBounds.width += this.coreStyle.usedValues.outlineWidth * 2;
		outlineBounds.height += this.coreStyle.usedValues.outlineWidth * 2;
		return outlineBounds;
	}
	,getContainerBlockData: function() {
		this._containerBlockData.width = this.coreStyle.usedValues.width;
		this._containerBlockData.isWidthAuto = this.coreStyle.hasAutoWidth;
		this._containerBlockData.height = this.coreStyle.usedValues.height;
		this._containerBlockData.isHeightAuto = this.coreStyle.hasAutoHeight;
		return this._containerBlockData;
	}
	,getWindowData: function() {
		var htmlDocuement = this.domNode.ownerDocument;
		var $window = htmlDocuement.window;
		var width = $window.get_innerWidth();
		var height = $window.get_innerHeight();
		this._windowData.width = $window.get_innerWidth();
		this._windowData.height = $window.get_innerHeight();
		this._windowData.isHeightAuto = false;
		this._windowData.isWidthAuto = false;
		return this._windowData;
	}
	,__class__: cocktail.core.renderer.BoxRenderer
});
cocktail.core.renderer.FlowBoxRenderer = function(node) {
	cocktail.core.renderer.BoxRenderer.call(this,node);
	this._absolutelyPositionedChildren = new Array();
	this._childStaticOrigin = new cocktail.core.geom.PointVO(0,0);
};
$hxClasses["cocktail.core.renderer.FlowBoxRenderer"] = cocktail.core.renderer.FlowBoxRenderer;
cocktail.core.renderer.FlowBoxRenderer.__name__ = ["cocktail","core","renderer","FlowBoxRenderer"];
cocktail.core.renderer.FlowBoxRenderer.__super__ = cocktail.core.renderer.BoxRenderer;
cocktail.core.renderer.FlowBoxRenderer.prototype = $extend(cocktail.core.renderer.BoxRenderer.prototype,{
	renderInlineChildren: function(rootRenderer,referenceLayer,graphicContext,clipRect,scrollOffset) {
		var child = rootRenderer.firstChild;
		while(child != null) {
			if(child.layerRenderer == referenceLayer) {
				if(child.coreStyle.isFloat == false) {
					child.render(graphicContext,clipRect,scrollOffset);
					if(child.firstChild != null && child.establishesNewBlockFormattingContext() == false) this.renderInlineChildren(child,referenceLayer,graphicContext,clipRect,scrollOffset);
				}
			}
			child = child.nextSibling;
		}
	}
	,addAbsolutelyPositionedChildren: function(element) {
		this._absolutelyPositionedChildren.push(element);
	}
	,removeAbsolutelyPositionedChild: function(element) {
		HxOverrides.remove(this._absolutelyPositionedChildren,element);
	}
	,layout: function(forceLayout,layoutState) {
		cocktail.core.renderer.BoxRenderer.prototype.layout.call(this,forceLayout,layoutState);
		if(this.firstChild != null) this.layoutChildren(layoutState);
		if(this.isPositioned() == true) {
			if(this._absolutelyPositionedChildren.length > 0) this.layoutAbsolutelyPositionedChildren(layoutState);
		}
	}
	,layoutChildren: function(layoutState) {
	}
	,layoutAbsolutelyPositionedChildren: function(layoutState) {
		var containerBlockData = this.getContainerBlockData();
		var windowData = this.getWindowData();
		var length = this._absolutelyPositionedChildren.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this._absolutelyPositionedChildren[i].layout(true,layoutState);
			this.layoutPositionedChild(this._absolutelyPositionedChildren[i],containerBlockData,windowData);
		}
	}
	,layoutPositionedChild: function(elementRenderer,firstPositionedAncestorData,viewportData) {
		var coreStyle = elementRenderer.coreStyle;
		if(coreStyle.isFixedPositioned == true) this.doLayoutPositionedChild(elementRenderer,viewportData,false); else this.doLayoutPositionedChild(elementRenderer,firstPositionedAncestorData,true);
	}
	,doLayoutPositionedChild: function(elementRenderer,containingBlockData,isAbsolutelyPositioned) {
		var elementCoreStyle = elementRenderer.coreStyle;
		if(elementCoreStyle.hasAutoLeft == false) elementRenderer.bounds.x = this.getLeftOffset(elementRenderer,isAbsolutelyPositioned); else if(elementCoreStyle.hasAutoRight == false) elementRenderer.bounds.x = this.getRightOffset(elementRenderer,containingBlockData.width,isAbsolutelyPositioned); else elementRenderer.staticOrigin.x = this.getStaticPosition(elementRenderer).x;
		if(elementCoreStyle.hasAutoTop == false) elementRenderer.bounds.y = this.getTopOffset(elementRenderer,isAbsolutelyPositioned); else if(elementCoreStyle.hasAutoBottom == false) elementRenderer.bounds.y = this.getBottomOffset(elementRenderer,containingBlockData.height,isAbsolutelyPositioned); else elementRenderer.staticOrigin.y = this.getStaticPosition(elementRenderer).y;
	}
	,getLeftOffset: function(elementRenderer,isAbsolutelyPositioned) {
		var usedValues = elementRenderer.coreStyle.usedValues;
		var leftOffset = usedValues.left + usedValues.marginLeft;
		if(isAbsolutelyPositioned == true) leftOffset -= this.coreStyle.usedValues.paddingLeft - this.coreStyle.usedValues.borderLeftWidth;
		return leftOffset;
	}
	,getRightOffset: function(elementRenderer,containingHTMLElementWidth,isAbsolutelyPositioned) {
		var usedValues = elementRenderer.coreStyle.usedValues;
		var rightOffset = containingHTMLElementWidth - usedValues.width - usedValues.paddingLeft - usedValues.paddingRight - usedValues.borderLeftWidth - usedValues.borderRightWidth - usedValues.right - usedValues.marginRight;
		if(isAbsolutelyPositioned == true) rightOffset += this.coreStyle.usedValues.paddingRight + this.coreStyle.usedValues.borderRightWidth;
		return rightOffset;
	}
	,getTopOffset: function(elementRenderer,isAbsolutelyPositioned) {
		var usedValues = elementRenderer.coreStyle.usedValues;
		var topOffset = usedValues.top + usedValues.marginTop;
		if(isAbsolutelyPositioned == true) topOffset -= this.coreStyle.usedValues.paddingTop - this.coreStyle.usedValues.borderTopWidth;
		return topOffset;
	}
	,getBottomOffset: function(elementRenderer,containingHTMLElementHeight,isAbsolutelyPositioned) {
		var usedValues = elementRenderer.coreStyle.usedValues;
		var bottomOffset = containingHTMLElementHeight - usedValues.height - usedValues.paddingTop - usedValues.paddingBottom - usedValues.bottom - usedValues.marginBottom;
		if(isAbsolutelyPositioned == true) bottomOffset += this.coreStyle.usedValues.paddingBottom + this.coreStyle.usedValues.borderBottomWidth;
		return bottomOffset;
	}
	,getStaticPosition: function(elementRenderer) {
		var staticContainingBlock = elementRenderer.parentNode;
		while(staticContainingBlock != null) {
			if(staticContainingBlock.isBlockContainer == true) break;
			staticContainingBlock = staticContainingBlock.parentNode;
		}
		if(staticContainingBlock.childrenInline() == false) {
			var previousNormalFlowSibling = elementRenderer.get_previousNormalFlowSibling();
			if(previousNormalFlowSibling == null) {
				this._childStaticOrigin.x = elementRenderer.coreStyle.usedValues.marginLeft;
				this._childStaticOrigin.y = elementRenderer.coreStyle.usedValues.marginTop;
			} else {
				this._childStaticOrigin.x = elementRenderer.coreStyle.usedValues.marginLeft;
				this._childStaticOrigin.y = previousNormalFlowSibling.bounds.y + previousNormalFlowSibling.bounds.height + previousNormalFlowSibling.coreStyle.usedValues.marginBottom;
				this._childStaticOrigin.y += elementRenderer.coreStyle.usedValues.marginTop;
			}
		} else {
			var previousNormalFlowSibling1 = elementRenderer.get_previousNormalFlowSibling();
			if(previousNormalFlowSibling1 == null) {
				var parent = elementRenderer.parentNode;
				if(parent.isBlockContainer == true) {
					this._childStaticOrigin.x = elementRenderer.coreStyle.usedValues.marginLeft;
					this._childStaticOrigin.y = elementRenderer.coreStyle.usedValues.marginTop;
				} else {
					var lastInlineBox = parent.inlineBoxes[parent.inlineBoxes.length - 1];
					this._childStaticOrigin = this.getPositionAfterInlineBox(lastInlineBox,elementRenderer,this._childStaticOrigin);
				}
			} else {
				var lastInlineBox1 = previousNormalFlowSibling1.inlineBoxes[previousNormalFlowSibling1.inlineBoxes.length - 1];
				this._childStaticOrigin = this.getPositionAfterInlineBox(lastInlineBox1,elementRenderer,this._childStaticOrigin);
			}
		}
		return this._childStaticOrigin;
	}
	,getPositionAfterInlineBox: function(inlineBox,elementRenderer,staticOrigin) {
		if(inlineBox.lineBox == null) {
			staticOrigin.x = elementRenderer.coreStyle.usedValues.marginLeft;
			staticOrigin.y = elementRenderer.coreStyle.usedValues.marginTop;
		} else {
			staticOrigin.x = inlineBox.bounds.x + inlineBox.lineBox.bounds.x + inlineBox.bounds.width + inlineBox.marginLeft + inlineBox.marginRight;
			staticOrigin.x += elementRenderer.coreStyle.usedValues.marginLeft;
			staticOrigin.y = inlineBox.bounds.y + inlineBox.lineBox.bounds.y;
			staticOrigin.y += elementRenderer.coreStyle.usedValues.marginTop;
		}
		return staticOrigin;
	}
	,__class__: cocktail.core.renderer.FlowBoxRenderer
});
cocktail.core.renderer.BlockBoxRenderer = function(node) {
	cocktail.core.renderer.FlowBoxRenderer.call(this,node);
	this._lineBoxPosition = new cocktail.core.geom.PointVO(0,0);
	this._childPosition = new cocktail.core.geom.PointVO(0,0);
	this.lineBoxes = new Array();
	this.floatsManager = new cocktail.core.floats.FloatsManager();
	this._inlineBoxContainingBlockBounds = new cocktail.core.geom.RectangleVO();
	this._blockFormattingBounds = new cocktail.core.geom.RectangleVO();
	this._floatedElementsBounds = new cocktail.core.geom.RectangleVO();
	this._childBlockFormattingBounds = new cocktail.core.geom.RectangleVO();
	this._offsetFromBlockFormattingRoot = new cocktail.core.geom.PointVO(0,0);
	this.isBlockContainer = true;
};
$hxClasses["cocktail.core.renderer.BlockBoxRenderer"] = cocktail.core.renderer.BlockBoxRenderer;
cocktail.core.renderer.BlockBoxRenderer.__name__ = ["cocktail","core","renderer","BlockBoxRenderer"];
cocktail.core.renderer.BlockBoxRenderer.__super__ = cocktail.core.renderer.FlowBoxRenderer;
cocktail.core.renderer.BlockBoxRenderer.prototype = $extend(cocktail.core.renderer.FlowBoxRenderer.prototype,{
	updateAnonymousBlock: function() {
		var shouldMakeChildrenNonInline = false;
		if(this.get_firstNormalFlowChild() != null) {
			var childrenInline = this.childrenInline();
			var child = this.firstChild;
			while(child != null) {
				if(child.isAbsolutelyPositioned() == false) {
					if(child.isFloat() == false) {
						if(child.isAnonymousBlockBox() == false) {
							if(child.isInlineLevel() != childrenInline) {
								shouldMakeChildrenNonInline = true;
								break;
							}
						}
					}
				}
				child = child.nextSibling;
			}
		}
		if(shouldMakeChildrenNonInline == true) this.makeChildrenNonInline();
		var child1 = this.firstChild;
		while(child1 != null) {
			child1.updateAnonymousBlock();
			child1 = child1.nextSibling;
		}
	}
	,makeChildrenNonInline: function() {
		var newChildNodes = new Array();
		var lastCreatedAnonymousBlock = null;
		var child = this.lastChild;
		while(child != null) {
			var previousSibling = child.previousSibling;
			if(child.isInlineLevel() == true) {
				if(lastCreatedAnonymousBlock != null) lastCreatedAnonymousBlock.insertBefore(child,lastCreatedAnonymousBlock.firstChild); else {
					lastCreatedAnonymousBlock = this.createAnonymousBlock(child);
					newChildNodes.push(lastCreatedAnonymousBlock);
				}
			} else {
				lastCreatedAnonymousBlock = null;
				newChildNodes.push(child);
			}
			child = previousSibling;
		}
		newChildNodes.reverse();
		var length = newChildNodes.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this.appendChild(newChildNodes[i]);
		}
	}
	,createAnonymousBlock: function(child) {
		var anonymousBlock = new cocktail.core.renderer.AnonymousBlockBoxRenderer(this.domNode.ownerDocument);
		anonymousBlock.appendChild(child);
		anonymousBlock.coreStyle = anonymousBlock.domNode.coreStyle;
		var initialStyleDeclaration = cocktail.core.css.InitialStyleDeclaration.getInstance();
		anonymousBlock.coreStyle.specifiedValues = initialStyleDeclaration;
		anonymousBlock.coreStyle.computedValues = initialStyleDeclaration.initialComputedStyleDeclaration;
		anonymousBlock.coreStyle.applyHiddenBordersWidth();
		anonymousBlock.coreStyle.applyNoneOutlineWidth();
		var htmlDocument = this.domNode.ownerDocument;
		anonymousBlock.coreStyle.updateCoreStyleAttribute(htmlDocument.cascadeManager,true);
		anonymousBlock.coreStyle.setUsedLineHeight();
		return anonymousBlock;
	}
	,renderChildren: function(graphicContext,clipRect,scrollOffset) {
		cocktail.core.renderer.FlowBoxRenderer.prototype.renderChildren.call(this,graphicContext,clipRect,scrollOffset);
		if(this.createOwnLayer() == true || this.coreStyle.isInlineBlock == true || this.coreStyle.isFloat == true) {
			if(this.lineBoxes.length == 0) {
				this.renderBlockContainerChildren(this,this.layerRenderer,graphicContext,clipRect,scrollOffset);
				this.renderBlockReplacedChildren(this,this.layerRenderer,graphicContext,clipRect,scrollOffset);
			}
			this.renderFloatedChildren(this,this.layerRenderer,graphicContext,clipRect,scrollOffset);
			this.renderLineBoxes(this,this.layerRenderer,graphicContext,clipRect,scrollOffset);
		}
	}
	,renderLineBoxes: function(rootRenderer,referenceLayer,graphicContext,clipRect,scrollOffset) {
		var canHaveLineBoxes = false;
		if(rootRenderer.isBlockContainer == true) {
			if(rootRenderer.hasLineBoxes == true) canHaveLineBoxes = true;
		}
		if(canHaveLineBoxes == true) this.renderInlineChildren(rootRenderer,referenceLayer,graphicContext,clipRect,scrollOffset); else {
			var child = rootRenderer.firstChild;
			while(child != null) {
				if(child.layerRenderer == referenceLayer) {
					if(child.isReplaced == false) {
						if(child.coreStyle.isFloat == false) this.renderLineBoxes(child,referenceLayer,graphicContext,clipRect,scrollOffset);
					}
				}
				child = child.nextSibling;
			}
		}
	}
	,renderBlockReplacedChildren: function(rootRenderer,referenceLayer,graphicContext,clipRect,scrollOffset) {
		var child = rootRenderer.firstChild;
		while(child != null) {
			if(child.layerRenderer == referenceLayer) {
				if(child.coreStyle.isFloat == false) {
					if(child.isReplaced == false && child.coreStyle.isBlock == true) this.renderBlockReplacedChildren(child,referenceLayer,graphicContext,clipRect,scrollOffset); else if(child.coreStyle.isBlock == true) child.render(graphicContext,clipRect,scrollOffset);
				}
			}
			child = child.nextSibling;
		}
	}
	,renderBlockContainerChildren: function(rootElementRenderer,referenceLayer,graphicContext,clipRect,scrollOffset) {
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			if(child.layerRenderer == referenceLayer) {
				if(child.coreStyle.isInlineLevel == false) {
					if(child.isReplaced == false && child.isText == false) {
						if(child.coreStyle.isFloat == false) {
							child.render(graphicContext,clipRect,scrollOffset);
							this.renderBlockContainerChildren(child,referenceLayer,graphicContext,clipRect,scrollOffset);
						}
					}
				}
			}
			child = child.nextSibling;
		}
	}
	,renderFloatedChildren: function(rootElementRenderer,referenceLayer,graphicContext,clipRect,scrollOffset) {
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			if(child.layerRenderer == referenceLayer) {
				if(child.coreStyle.isFloat == true) child.render(graphicContext,clipRect,scrollOffset); else this.renderFloatedChildren(child,referenceLayer,graphicContext,clipRect,scrollOffset);
			}
			child = child.nextSibling;
		}
	}
	,layoutChildren: function(layoutState) {
		this.updateFloatedAndClearElements();
		this.doLayoutChildren(layoutState);
		if(this.establishesNewBlockFormattingContext() == true) {
			if(this.establishesNewBlockFormattingContextOnlyBecauseOfOverflow() == false) this.applyShrinkToFitIfNeeded(layoutState);
		}
		this.applyContentHeightIfNeeded();
	}
	,doLayoutChildren: function(layoutState) {
		if(this.childrenInline() == false) this.layoutBlockChildrenAndFloats(layoutState); else {
			this.layoutInlineChildrenAndFloats(layoutState);
			this.updateInlineChildrenBounds(this);
		}
	}
	,updateFloatedAndClearElements: function() {
		if(this.establishesNewBlockFormattingContext() == true) {
			this.floatsManager.init();
			this._offsetFromBlockFormattingRoot.x = 0;
			this._offsetFromBlockFormattingRoot.y = 0;
		} else {
			var blockFormattingContextRoot = this.getNearestBlockFormattingContextRoot();
			this._offsetFromBlockFormattingRoot = this.getBlockBoxesOffset(this,blockFormattingContextRoot);
			this._offsetFromBlockFormattingRoot.x += this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.borderLeftWidth;
			this._offsetFromBlockFormattingRoot.y += this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.borderTopWidth;
			this.floatsManager.floats = blockFormattingContextRoot.floatsManager.floats;
			this.floatsManager.childrenWithClearance = blockFormattingContextRoot.floatsManager.childrenWithClearance;
		}
	}
	,applyShrinkToFitIfNeeded: function(layoutState) {
		if((this.coreStyle.hasAutoWidth == true || layoutState != cocktail.core.layout.LayoutStateValue.NORMAL) && this.isAutoWidthAbsolutelyPositionedWithNotAutoLeftAndRight() == false) {
			this.doLayoutChildren(cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_MINIMUM_WIDTH);
			this.getBlockFormattingBounds();
			var preferedMinimumWidth = this._blockFormattingBounds.width;
			if(this.coreStyle.hasAutoWidth == false) {
				if(this.bounds.width > preferedMinimumWidth) preferedMinimumWidth = this.bounds.width;
			}
			this.doLayoutChildren(cocktail.core.layout.LayoutStateValue.SHRINK_TO_FIT_PREFERED_WIDTH);
			this.getBlockFormattingBounds();
			var preferedWidth = this._blockFormattingBounds.width;
			if(this.coreStyle.hasAutoWidth == false) {
				if(this.bounds.width > preferedWidth) preferedWidth = this.bounds.width;
			}
			var availableWidth = this.containingBlock.coreStyle.usedValues.width;
			var shrinkToFitWidth = Math.min(Math.max(preferedMinimumWidth,availableWidth),preferedWidth);
			if(this.coreStyle.hasMaxWidth == true) {
				if(shrinkToFitWidth > this.coreStyle.usedValues.maxWidth) shrinkToFitWidth = this.coreStyle.usedValues.maxWidth;
			}
			if(shrinkToFitWidth < this.coreStyle.usedValues.minWidth) shrinkToFitWidth = this.coreStyle.usedValues.minWidth;
			this.coreStyle.usedValues.width = shrinkToFitWidth;
			this.bounds.width = shrinkToFitWidth + this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.paddingRight + this.coreStyle.usedValues.borderLeftWidth + this.coreStyle.usedValues.borderRightWidth;
			this.doLayoutChildren(cocktail.core.layout.LayoutStateValue.NORMAL);
		}
	}
	,getBlockFormattingBounds: function() {
		this._blockFormattingBounds.x = 50000;
		this._blockFormattingBounds.y = 50000;
		this._blockFormattingBounds.width = 0;
		this._blockFormattingBounds.height = 0;
		this.doGetBlockFormattingBounds(this,this._blockFormattingBounds,0,0);
	}
	,doGetBlockFormattingBounds: function(rootElementRenderer,blockFormattingBounds,xOffset,yOffset) {
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			if(child.isFloat() == false) {
				if(child.isAbsolutelyPositioned() == false) {
					this._childBlockFormattingBounds.x = child.bounds.x + xOffset;
					this._childBlockFormattingBounds.y = child.bounds.y + yOffset;
					this._childBlockFormattingBounds.width = child.bounds.width;
					this._childBlockFormattingBounds.height = child.bounds.height;
					if(child.isText == false) {
						this._childBlockFormattingBounds.x -= child.coreStyle.usedValues.marginLeft;
						this._childBlockFormattingBounds.y -= child.coreStyle.usedValues.marginTop;
						this._childBlockFormattingBounds.width += child.coreStyle.usedValues.marginRight + child.coreStyle.usedValues.marginLeft;
						this._childBlockFormattingBounds.height += child.coreStyle.usedValues.marginBottom + child.coreStyle.usedValues.marginTop;
					}
					if(child.isText == false || child.parentNode.isBlockContainer == true) cocktail.core.geom.GeomUtils.addBounds(this._childBlockFormattingBounds,blockFormattingBounds,null,null);
					if(child.establishesNewBlockFormattingContext() == false && child.firstChild != null) this.doGetBlockFormattingBounds(child,blockFormattingBounds,xOffset + child.bounds.x,yOffset + child.bounds.y);
				}
			}
			child = child.nextSibling;
		}
	}
	,getFloatedElementsBounds: function() {
		this._floatedElementsBounds.x = 50000;
		this._floatedElementsBounds.y = 50000;
		this._floatedElementsBounds.width = 0;
		this._floatedElementsBounds.height = 0;
		if(this.floatsManager.floats.left.length == 0 && this.floatsManager.floats.right.length == 0) {
			this._floatedElementsBounds.x = 0;
			this._floatedElementsBounds.y = 0;
			return;
		}
		this.doGetFloatedElementsBounds(this.floatsManager.floats.left,this._floatedElementsBounds);
		this.doGetFloatedElementsBounds(this.floatsManager.floats.right,this._floatedElementsBounds);
	}
	,doGetFloatedElementsBounds: function(floats,floatedElementsBounds) {
		var _g1 = 0;
		var _g = floats.length;
		while(_g1 < _g) {
			var i = _g1++;
			cocktail.core.geom.GeomUtils.addBounds(floats[i].bounds,floatedElementsBounds,null,null);
		}
	}
	,applyContentHeightIfNeeded: function() {
		if(this.coreStyle.hasAutoHeight == true && this.isAutoHeightAbsolutelyPositionedWithNotAutoTopAndBottom() == false) {
			var childrenHeight = 0;
			if(this.childrenInline() == false) {
				childrenHeight = this._childPosition.y;
				if(this.collapseBottomMarginWithLastChildBottomMargin() == true) childrenHeight -= this.getCollapsedBottomMargin(false);
			} else childrenHeight = this._lineBoxPosition.y;
			if(this.establishesNewBlockFormattingContext() == true) {
				this.getFloatedElementsBounds();
				if(this._floatedElementsBounds.y + this._floatedElementsBounds.height > childrenHeight) childrenHeight = this._floatedElementsBounds.y + this._floatedElementsBounds.height;
			}
			if(this.coreStyle.hasMaxHeight == true) {
				if(childrenHeight > this.coreStyle.usedValues.maxHeight) childrenHeight = this.coreStyle.usedValues.maxHeight;
			}
			if(childrenHeight < this.coreStyle.usedValues.minHeight) childrenHeight = this.coreStyle.usedValues.minHeight;
			this.coreStyle.usedValues.height = childrenHeight;
			this.bounds.height = childrenHeight + this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.paddingBottom + this.coreStyle.usedValues.borderTopWidth + this.coreStyle.usedValues.borderBottomWidth;
		}
	}
	,isAutoHeightAbsolutelyPositionedWithNotAutoTopAndBottom: function() {
		if(this.isPositioned() == true && this.isRelativePositioned() == false) return this.coreStyle.hasAutoTop == false && this.coreStyle.hasAutoBottom == false;
		return false;
	}
	,isAutoWidthAbsolutelyPositionedWithNotAutoLeftAndRight: function() {
		if(this.isPositioned() == true && this.isRelativePositioned() == false) return this.coreStyle.hasAutoLeft == false && this.coreStyle.hasAutoRight == false;
		return false;
	}
	,layoutBlockChildrenAndFloats: function(layoutState) {
		this._childPosition.x = 0;
		this._childPosition.y = 0;
		var child = this.firstChild;
		while(child != null) {
			if(child.isPositioned() == false || child.isRelativePositioned() == true) {
				var childHasClearance = false;
				if(child.canHaveClearance() == true) {
					var hypotheticalChildYPosition = this._childPosition.y + child.getCollapsedTopMargin(true);
					if(this.floatsManager.hasClearance(child,hypotheticalChildYPosition + this._offsetFromBlockFormattingRoot.y) == true) {
						this.registerClearElement(child);
						var clearance = this.floatsManager.getClearance(child,hypotheticalChildYPosition + this._offsetFromBlockFormattingRoot.y);
						this._childPosition.y += clearance;
						childHasClearance = true;
					}
				}
				if(child.isFloat() == false) {
					if(child.establishesNewBlockFormattingContext() == false && child.isBlockContainer == true) {
						if(childHasClearance == false) this._childPosition.y += child.getCollapsedTopMargin(true);
						child.bounds.x = child.coreStyle.usedValues.marginLeft;
						child.bounds.y = this._childPosition.y;
						child.layout(true,layoutState);
					} else {
						child.layout(true,layoutState);
						var childMarginWidth = child.bounds.width + child.coreStyle.usedValues.marginLeft + child.coreStyle.usedValues.marginRight;
						var childMarginHeight = child.bounds.height + child.getCollapsedTopMargin(true) + child.getCollapsedBottomMargin(true);
						var contentWidth = this.bounds.width - this.coreStyle.usedValues.paddingLeft - this.coreStyle.usedValues.paddingRight - this.coreStyle.usedValues.borderLeftWidth - this.coreStyle.usedValues.borderRightWidth;
						var firstYPosition = this._childPosition.y;
						if(this.floatsManager.get_hasFloats() == true) {
							firstYPosition = this.floatsManager.getFirstAvailableYPosition(this._childPosition.y + this._offsetFromBlockFormattingRoot.y,childMarginHeight,childMarginWidth,contentWidth,this._offsetFromBlockFormattingRoot.x);
							this._childPosition.y = firstYPosition - this._offsetFromBlockFormattingRoot.y;
						}
						if(childHasClearance == false) this._childPosition.y += child.getCollapsedTopMargin(true);
						child.bounds.y = this._childPosition.y;
						var leftFloatOffset = 0;
						if(this.floatsManager.get_hasFloats() == true) {
							var leftFloatOffset1 = this.floatsManager.getLeftFloatOffset(this._childPosition.y + this._offsetFromBlockFormattingRoot.y,childMarginHeight,this._offsetFromBlockFormattingRoot.x);
							leftFloatOffset1 -= this._offsetFromBlockFormattingRoot.x;
						}
						if(leftFloatOffset > child.coreStyle.usedValues.marginLeft) child.bounds.x = leftFloatOffset; else child.bounds.x = child.coreStyle.usedValues.marginLeft;
					}
					this._childPosition.y += child.bounds.height;
					this._childPosition.y += child.getCollapsedBottomMargin(true);
					if(child.collapseBottomMarginWithLastChildBottomMargin() == true) this._childPosition.y += child.get_lastNormalFlowChild().getCollapsedBottomMargin(true);
				} else {
					child.layout(true,layoutState);
					var childPosition = this._childPosition;
					var previousFlowSibling = child.get_previousNormalFlowSibling();
					var needToLayoutPreviousSibling = false;
					if(previousFlowSibling != null) {
						if(previousFlowSibling.isAnonymousBlockBox() == true) {
							if(previousFlowSibling.childrenInline() == true) {
								childPosition = new cocktail.core.geom.PointVO(this._childPosition.x,this._childPosition.y);
								var blockPreviousSibling = previousFlowSibling;
								var lastLineBox = blockPreviousSibling.lineBoxes[blockPreviousSibling.lineBoxes.length - 1];
								childPosition.y = lastLineBox.bounds.y + blockPreviousSibling.bounds.y;
								needToLayoutPreviousSibling = true;
							}
						}
					}
					this.registerFloatedElement(child,childPosition);
					if(needToLayoutPreviousSibling == true) previousFlowSibling.layout(true,layoutState);
				}
			}
			child = child.nextSibling;
		}
	}
	,registerClearElement: function(clearElement) {
		var blockFormattingContextRoot = this.getNearestBlockFormattingContextRoot();
		blockFormattingContextRoot.floatsManager.registerClear(clearElement);
	}
	,registerFloatedElement: function(floatedElement,childPosition) {
		var blockFormattingContextRoot = this.getNearestBlockFormattingContextRoot();
		var contentWidth = this.bounds.width - this.coreStyle.usedValues.paddingLeft - this.coreStyle.usedValues.paddingRight - this.coreStyle.usedValues.borderLeftWidth - this.coreStyle.usedValues.borderRightWidth;
		var floatBounds = blockFormattingContextRoot.floatsManager.registerFloat(floatedElement,childPosition.y + this._offsetFromBlockFormattingRoot.y,contentWidth,this._offsetFromBlockFormattingRoot.x);
		floatedElement.bounds.x = floatBounds.x + floatedElement.coreStyle.usedValues.marginLeft;
		floatedElement.bounds.y = floatBounds.y + floatedElement.coreStyle.usedValues.marginTop;
		floatedElement.bounds.x -= this._offsetFromBlockFormattingRoot.x;
		floatedElement.bounds.y -= this._offsetFromBlockFormattingRoot.y;
	}
	,layoutInlineChildrenAndFloats: function(layoutState) {
		this.lineBoxes = new Array();
		this.hasLineBoxes = false;
		this._lineBoxPosition.x = 0;
		this._lineBoxPosition.y = 0;
		var firstLineBox = this.createLineBox(this._lineBoxPosition,layoutState);
		var openedElementRendererStack = new Array();
		var inlineFormattingData = new cocktail.core.layout.InlineFormattingVO();
		inlineFormattingData.inlineBox = firstLineBox.rootInlineBox;
		inlineFormattingData.lineBox = firstLineBox;
		inlineFormattingData.openedElementRenderers = openedElementRendererStack;
		inlineFormattingData.lineBoxPosition = this._lineBoxPosition;
		var lastInlineBox = this.doLayoutInlineChildrenAndFloats(this,inlineFormattingData,layoutState);
		inlineFormattingData.lineBox.layout(true,lastInlineBox);
		this._lineBoxPosition.y += inlineFormattingData.lineBox.bounds.height;
	}
	,createLineBox: function(lineBoxPosition,layoutState) {
		var lineBox = new cocktail.core.linebox.LineBox(this,this.lineBoxes.length == 0,layoutState);
		lineBox.bounds.y = lineBoxPosition.y;
		this.setLineBoxPositionAndWidth(lineBox);
		this.lineBoxes.push(lineBox);
		this.hasLineBoxes = true;
		return lineBox;
	}
	,setLineBoxPositionAndWidth: function(lineBox) {
		var availableWidth = this.coreStyle.usedValues.width;
		if(this.floatsManager.get_hasFloats() == true) availableWidth = this.floatsManager.getRightFloatOffset(lineBox.bounds.y + this._offsetFromBlockFormattingRoot.y,this.coreStyle.usedValues.lineHeight,0,this._offsetFromBlockFormattingRoot.x,this.coreStyle.usedValues.width) - this.floatsManager.getLeftFloatOffset(lineBox.bounds.y + this._offsetFromBlockFormattingRoot.y,this.coreStyle.usedValues.lineHeight,this._offsetFromBlockFormattingRoot.x);
		lineBox.bounds.width = availableWidth;
		var leftFloatOffset = 0;
		if(this.floatsManager.get_hasFloats() == true) {
			leftFloatOffset = this.floatsManager.getLeftFloatOffset(lineBox.bounds.y + this._offsetFromBlockFormattingRoot.y,this.coreStyle.usedValues.lineHeight,this._offsetFromBlockFormattingRoot.x);
			leftFloatOffset -= this._offsetFromBlockFormattingRoot.x;
		}
		lineBox.bounds.x = leftFloatOffset;
	}
	,layoutLineBox: function(inlineFormattingData,layoutState) {
		var lineBox = inlineFormattingData.lineBox;
		var lineBoxPosition = inlineFormattingData.lineBoxPosition;
		var openedElementRenderers = inlineFormattingData.openedElementRenderers;
		lineBox.layout(false,null);
		lineBoxPosition.y += lineBox.bounds.height;
		var firstAvailableY = lineBoxPosition.y;
		if(this.floatsManager.get_hasFloats() == true) {
			firstAvailableY = this.floatsManager.getFirstAvailableYPosition(lineBoxPosition.y + this._offsetFromBlockFormattingRoot.y,this.coreStyle.usedValues.lineHeight,lineBox.unbreakableWidth,this.coreStyle.usedValues.width,this._offsetFromBlockFormattingRoot.x);
			firstAvailableY -= this._offsetFromBlockFormattingRoot.y;
		}
		lineBoxPosition.y = firstAvailableY;
		var newLineBox = this.createLineBox(lineBoxPosition,layoutState);
		var currentInlineBox = newLineBox.rootInlineBox;
		var length = openedElementRenderers.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var childInlineBox = new cocktail.core.linebox.InlineBox(openedElementRenderers[i],openedElementRenderers[i].getLeadedAscent(),openedElementRenderers[i].getLeadedDescent());
			childInlineBox.lineBox = newLineBox;
			openedElementRenderers[i].inlineBoxes.push(childInlineBox);
			currentInlineBox.appendChild(childInlineBox);
			currentInlineBox = childInlineBox;
		}
		inlineFormattingData.lineBox = newLineBox;
		inlineFormattingData.inlineBox = currentInlineBox;
	}
	,doLayoutInlineChildrenAndFloats: function(elementRenderer,inlineFormattingData,layoutState) {
		var child = elementRenderer.firstChild;
		while(child != null) {
			if(child.isPositioned() == false || child.isRelativePositioned() == true) {
				if(child.isFloat() == true) {
					child.layout(true,layoutState);
					if(child.canHaveClearance() == true) {
						var hypotheticalChildYPosition = inlineFormattingData.lineBoxPosition.y + child.coreStyle.usedValues.marginTop;
						if(this.floatsManager.hasClearance(child,hypotheticalChildYPosition + this._offsetFromBlockFormattingRoot.y) == true) {
							this.registerClearElement(child);
							var clearance = this.floatsManager.getClearance(child,hypotheticalChildYPosition + this._offsetFromBlockFormattingRoot.y);
							var clearedFloatPosition = new cocktail.core.geom.PointVO(0,0);
							clearedFloatPosition.y = inlineFormattingData.lineBoxPosition.y + clearance;
							this.registerFloatedElement(child,clearedFloatPosition);
						}
					} else {
						var floatMarginWidth = child.bounds.width + child.coreStyle.usedValues.marginLeft + child.coreStyle.usedValues.marginRight;
						if(inlineFormattingData.lineBox.widthCanFit(floatMarginWidth) == false) this.layoutLineBox(inlineFormattingData,layoutState);
						this.registerFloatedElement(child,inlineFormattingData.lineBoxPosition);
						this.setLineBoxPositionAndWidth(inlineFormattingData.lineBox);
					}
				} else if(child.isText == true) {
					var textLength = child.inlineBoxes.length;
					var _g = 0;
					while(_g < textLength) {
						var i = _g++;
						var lineIsFull = inlineFormattingData.lineBox.insert(child.inlineBoxes[i],inlineFormattingData.inlineBox,false);
						if(lineIsFull == true) {
							this.layoutLineBox(inlineFormattingData,layoutState);
							inlineFormattingData.lineBox.insert(child.inlineBoxes[i],inlineFormattingData.inlineBox,true);
						}
					}
				} else if(child.establishesNewBlockFormattingContext() == true || child.isReplaced == true) {
					child.layout(true,layoutState);
					var childInlineBox = child.inlineBoxes[0];
					childInlineBox.bounds.height = child.bounds.height;
					childInlineBox.bounds.width = child.bounds.width;
					childInlineBox.marginLeft = child.coreStyle.usedValues.marginLeft;
					childInlineBox.marginRight = child.coreStyle.usedValues.marginRight;
					var lineIsFull1 = inlineFormattingData.lineBox.insert(childInlineBox,inlineFormattingData.inlineBox,false);
					if(lineIsFull1 == true) {
						this.layoutLineBox(inlineFormattingData,layoutState);
						inlineFormattingData.lineBox.insert(childInlineBox,inlineFormattingData.inlineBox,true);
					}
				} else if(child.firstChild != null) {
					child.layout(true,cocktail.core.layout.LayoutStateValue.NORMAL);
					child.inlineBoxes = new Array();
					var childInlineBox1 = new cocktail.core.linebox.InlineBox(child,child.getLeadedAscent(),child.getLeadedDescent());
					childInlineBox1.lineBox = inlineFormattingData.lineBox;
					child.inlineBoxes.push(childInlineBox1);
					var childUsedValues = child.coreStyle.usedValues;
					childInlineBox1.marginLeft = childUsedValues.marginLeft;
					childInlineBox1.paddingLeft = childUsedValues.paddingLeft;
					childInlineBox1.borderLeft = childUsedValues.borderLeftWidth;
					inlineFormattingData.lineBox.addUnbreakableWidth(childUsedValues.marginLeft + childUsedValues.paddingLeft + childUsedValues.borderLeftWidth);
					inlineFormattingData.inlineBox.appendChild(childInlineBox1);
					inlineFormattingData.inlineBox = childInlineBox1;
					inlineFormattingData.openedElementRenderers.push(child);
					inlineFormattingData.inlineBox = this.doLayoutInlineChildrenAndFloats(child,inlineFormattingData,layoutState);
					inlineFormattingData.openedElementRenderers.pop();
					inlineFormattingData.inlineBox = inlineFormattingData.inlineBox.parentNode;
					var lastInLineBox = child.inlineBoxes[child.inlineBoxes.length - 1];
					lastInLineBox.marginRight = childUsedValues.marginRight;
					lastInLineBox.paddingRight = childUsedValues.paddingRight;
					inlineFormattingData.lineBox.addUnbreakableWidth(childUsedValues.marginRight + childUsedValues.paddingRight);
				}
			}
			child = child.nextSibling;
		}
		return inlineFormattingData.inlineBox;
	}
	,updateInlineChildrenBounds: function(elementRenderer) {
		var child = elementRenderer.firstChild;
		while(child != null) {
			if((child.isPositioned() == false || child.isRelativePositioned() == true) && child.isFloat() == false) {
				if(child.firstChild != null && child.establishesNewBlockFormattingContext() == false) this.updateInlineChildrenBounds(child);
				child.bounds.width = 0;
				child.bounds.height = 0;
				child.bounds.x = 50000;
				child.bounds.y = 50000;
				var inlineBoxesLength = child.inlineBoxes.length;
				if(inlineBoxesLength == 0) {
					child.bounds.x = 0;
					child.bounds.y = 0;
				}
				var _g = 0;
				while(_g < inlineBoxesLength) {
					var i = _g++;
					var inlineBox = child.inlineBoxes[i];
					this._inlineBoxContainingBlockBounds.width = inlineBox.bounds.width;
					this._inlineBoxContainingBlockBounds.height = inlineBox.bounds.height;
					if(inlineBox.lineBox != null) {
						this._inlineBoxContainingBlockBounds.x = inlineBox.bounds.x + inlineBox.lineBox.bounds.x;
						this._inlineBoxContainingBlockBounds.y = inlineBox.bounds.y + inlineBox.lineBox.bounds.y;
					}
					cocktail.core.geom.GeomUtils.addBounds(this._inlineBoxContainingBlockBounds,child.bounds,null,null);
				}
			}
			child = child.nextSibling;
		}
	}
	,collapseBottomMarginWithLastChildBottomMargin: function() {
		if(this.get_lastNormalFlowChild() == null) return false;
		if(this.get_lastNormalFlowChild().isBlockContainer == false) return false;
		if(this.establishesNewBlockFormattingContext() == true) return false;
		if(this.coreStyle.usedValues.paddingBottom != 0 || this.get_lastNormalFlowChild().coreStyle.usedValues.paddingBottom != 0) return false;
		if(this.coreStyle.usedValues.borderBottomWidth != 0 || this.get_lastNormalFlowChild().coreStyle.usedValues.borderBottomWidth != 0) return false;
		return true;
	}
	,collapseTopMarginWithFirstChildTopMargin: function() {
		if(this.get_firstNormalFlowChild() == null) return false;
		if(this.get_firstNormalFlowChild().isBlockContainer == false) return false;
		if(this.establishesNewBlockFormattingContext() == true) return false;
		if(this.coreStyle.usedValues.paddingTop != 0 || this.get_firstNormalFlowChild().coreStyle.usedValues.paddingTop != 0) return false;
		if(this.coreStyle.usedValues.borderTopWidth != 0 || this.get_firstNormalFlowChild().coreStyle.usedValues.borderTopWidth != 0) return false;
		return true;
	}
	,hasZeroHeightChildren: function() {
		if(this.childrenInline() == true) {
			var lineBoxesLength = this.lineBoxes.length;
			var _g = 0;
			while(_g < lineBoxesLength) {
				var i = _g++;
				if(this.lineBoxes[i].bounds.height > 0) return false;
			}
			if(this.hasNonZeroHeightInlineBox(this) == true) return false;
		} else return this.bounds.height == 0;
		return true;
	}
	,createOwnLayer: function() {
		var createOwnLayer = cocktail.core.renderer.FlowBoxRenderer.prototype.createOwnLayer.call(this);
		if(createOwnLayer == true) return true;
		return this.coreStyle.canAlwaysOverflow != true;
	}
	,establishesNewBlockFormattingContext: function() {
		if(this.coreStyle.isFloat == true) return true; else if(this.coreStyle.canAlwaysOverflow == false) return true; else if(this.coreStyle.isPositioned == true && this.coreStyle.isRelativePositioned == false) return true; else if(this.coreStyle.isInlineBlock == true) return true;
		return false;
	}
	,childrenInline: function() {
		var child = this.firstChild;
		while(child != null) {
			if(child.isInlineLevel() == true) {
				if(child.isFloat() == false) {
					if(child.isAbsolutelyPositioned() == false) return true;
				}
			}
			child = child.nextSibling;
		}
		return false;
	}
	,getBackgroundAndBordersBounds: function(scrollOffset) {
		var backgroundAndBordersBounds = cocktail.core.renderer.FlowBoxRenderer.prototype.getBackgroundAndBordersBounds.call(this,scrollOffset);
		if(this._hasOwnLayer == true) {
			backgroundAndBordersBounds.x += this.layerRenderer.scrollLeft;
			backgroundAndBordersBounds.y += this.layerRenderer.scrollTop;
		}
		return backgroundAndBordersBounds;
	}
	,hasNonZeroHeightInlineBox: function(rootElementRenderer) {
		var child = rootElementRenderer.firstChild;
		while(child != null) {
			var inlineBoxLength = child.inlineBoxes.length;
			var _g = 0;
			while(_g < inlineBoxLength) {
				var i = _g++;
				var inlineBox = child.inlineBoxes[i];
				if(inlineBox.isText == true && inlineBox.isSpace == false) return true; else if(inlineBox.isEmbedded == true) return true;
			}
			this.hasNonZeroHeightInlineBox(child);
			child = child.nextSibling;
		}
		return false;
	}
	,establishesNewBlockFormattingContextOnlyBecauseOfOverflow: function() {
		if(this.coreStyle.isFloat == false && this.coreStyle.isAbsolutelyPositioned == false && this.coreStyle.isInlineBlock == false && this.coreStyle.canAlwaysOverflow == false) return true; else return false;
	}
	,getBlockBoxesOffset: function(target,source) {
		var offset = new cocktail.core.geom.PointVO(0,0);
		var parent = target;
		while(parent != null) {
			if(parent == source) return offset;
			offset.x += parent.bounds.x;
			offset.y += parent.bounds.y;
			parent = parent.parentNode;
		}
		return offset;
	}
	,getNearestBlockFormattingContextRoot: function() {
		var parent = this;
		while(parent != null) {
			if(parent.establishesNewBlockFormattingContext() == true) return parent;
			parent = parent.parentNode;
		}
		return parent;
	}
	,__class__: cocktail.core.renderer.BlockBoxRenderer
});
cocktail.core.renderer.AnonymousBlockBoxRenderer = function(document) {
	if(cocktail.core.renderer.AnonymousBlockBoxRenderer._node == null) cocktail.core.renderer.AnonymousBlockBoxRenderer._node = document.createElement("DIV");
	cocktail.core.renderer.BlockBoxRenderer.call(this,cocktail.core.renderer.AnonymousBlockBoxRenderer._node);
};
$hxClasses["cocktail.core.renderer.AnonymousBlockBoxRenderer"] = cocktail.core.renderer.AnonymousBlockBoxRenderer;
cocktail.core.renderer.AnonymousBlockBoxRenderer.__name__ = ["cocktail","core","renderer","AnonymousBlockBoxRenderer"];
cocktail.core.renderer.AnonymousBlockBoxRenderer.__super__ = cocktail.core.renderer.BlockBoxRenderer;
cocktail.core.renderer.AnonymousBlockBoxRenderer.prototype = $extend(cocktail.core.renderer.BlockBoxRenderer.prototype,{
	removeChild: function(oldChild) {
		cocktail.core.renderer.BlockBoxRenderer.prototype.removeChild.call(this,oldChild);
		if(this.firstChild == null) this.parentNode.removeChild(this);
	}
	,isPositioned: function() {
		return false;
	}
	,isAnonymousBlockBox: function() {
		return true;
	}
	,createOwnLayer: function() {
		return false;
	}
	,isInlineLevel: function() {
		return false;
	}
	,__class__: cocktail.core.renderer.AnonymousBlockBoxRenderer
});
cocktail.core.renderer.BodyBoxRenderer = function(node) {
	cocktail.core.renderer.BlockBoxRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.BodyBoxRenderer"] = cocktail.core.renderer.BodyBoxRenderer;
cocktail.core.renderer.BodyBoxRenderer.__name__ = ["cocktail","core","renderer","BodyBoxRenderer"];
cocktail.core.renderer.BodyBoxRenderer.__super__ = cocktail.core.renderer.BlockBoxRenderer;
cocktail.core.renderer.BodyBoxRenderer.prototype = $extend(cocktail.core.renderer.BlockBoxRenderer.prototype,{
	layoutSelfIfNeeded: function(forceLayout) {
		if(this._needsLayout == false && forceLayout == false) return;
		cocktail.core.renderer.BlockBoxRenderer.prototype.layoutSelfIfNeeded.call(this,forceLayout);
		if(this.coreStyle.hasAutoHeight == true && (this.isPositioned() == false || this.isRelativePositioned() == true)) {
			var usedValues = this.coreStyle.usedValues;
			usedValues.height = this.containingBlock.getContainerBlockData().height - usedValues.marginTop - usedValues.marginBottom - usedValues.paddingTop - usedValues.paddingBottom - usedValues.borderTopWidth - usedValues.borderBottomWidth;
		}
	}
	,collapseTopMarginWithParentTopMargin: function() {
		return false;
	}
	,collapseBottomMarginWithParentBottomMargin: function() {
		return false;
	}
	,getContainerBlockData: function() {
		cocktail.core.renderer.BlockBoxRenderer.prototype.getContainerBlockData.call(this);
		if(this.coreStyle.hasAutoHeight == true && (this.isPositioned() == false || this.isRelativePositioned() == true)) this._containerBlockData.isHeightAuto = false;
		return this._containerBlockData;
	}
	,getBackgroundAndBordersBounds: function(scrollOffset) {
		var windowData = this.getWindowData();
		var width = windowData.width;
		var height = windowData.height;
		this.bounds.width = width;
		this.bounds.height = height;
		this.bounds.x = 0.0;
		this.bounds.y = 0.0;
		return this.bounds;
	}
	,__class__: cocktail.core.renderer.BodyBoxRenderer
});
cocktail.core.renderer.InputRenderer = function(node) {
	cocktail.core.renderer.BlockBoxRenderer.call(this,node);
	this.createNativeInput();
	this.setNativeInputCallbacks();
};
$hxClasses["cocktail.core.renderer.InputRenderer"] = cocktail.core.renderer.InputRenderer;
cocktail.core.renderer.InputRenderer.__name__ = ["cocktail","core","renderer","InputRenderer"];
cocktail.core.renderer.InputRenderer.__super__ = cocktail.core.renderer.BlockBoxRenderer;
cocktail.core.renderer.InputRenderer.prototype = $extend(cocktail.core.renderer.BlockBoxRenderer.prototype,{
	createNativeInput: function() {
	}
	,setNativeInputCallbacks: function() {
		var _g = this;
		this.nativeInput.onActivate = function() {
			_g.onActivate();
		};
		this.nativeInput.onInput = function() {
			_g.onInput();
		};
	}
	,focus: function() {
		this.nativeInput.focus();
	}
	,blur: function() {
		this.nativeInput.blur();
	}
	,createOwnLayer: function() {
		return true;
	}
	,doCreateLayer: function() {
		this.layerRenderer = new cocktail.core.layer.InputLayerRenderer(this);
	}
	,renderSelf: function(graphicContext,clipRect,scrollOffset) {
		cocktail.core.renderer.BlockBoxRenderer.prototype.renderSelf.call(this,graphicContext,clipRect,scrollOffset);
		this.updateNativeInputViewport(scrollOffset,clipRect);
	}
	,updateNativeInputViewport: function(scrollOffset,clipRect) {
		var globalBounds = this.globalBounds;
		var x = globalBounds.x + this.coreStyle.usedValues.borderLeftWidth - scrollOffset.x;
		var y = this.getViewportY(scrollOffset);
		var layerMatrix = this.layerRenderer.matrix;
		x += layerMatrix.e;
		y += layerMatrix.f;
		var width = globalBounds.width - this.coreStyle.usedValues.borderLeftWidth - this.coreStyle.usedValues.borderRightWidth;
		var height = globalBounds.height - this.coreStyle.usedValues.borderTopWidth - this.coreStyle.usedValues.borderBottomWidth;
		var viewport = new cocktail.core.geom.RectangleVO();
		viewport.x = x;
		viewport.y = y;
		viewport.width = width;
		viewport.height = height;
		this.nativeInput.set_viewport(viewport);
		this.nativeInput.set_clipRect(this.layerRenderer.clipRect);
	}
	,getViewportY: function(scrollOffset) {
		return this.globalBounds.y + this.coreStyle.usedValues.borderTopWidth + (this.globalBounds.height - this.coreStyle.usedValues.borderTopWidth - this.coreStyle.usedValues.borderBottomWidth) / 2 - this.coreStyle.fontMetrics.fontSize + this.coreStyle.fontMetrics.ascent / 2 - scrollOffset.y;
	}
	,get_value: function() {
		return this.nativeInput.get_value();
	}
	,set_value: function(value) {
		return this.nativeInput.set_value(value);
	}
	,set_maxLength: function(value) {
		return this.nativeInput.set_maxLength(value);
	}
	,set_disabled: function(value) {
		return this.nativeInput.set_disabled(value);
	}
	,set_readonly: function(value) {
		return this.nativeInput.set_readonly(value);
	}
	,get_checked: function() {
		return this.nativeInput.get_checked();
	}
	,set_checked: function(value) {
		return this.nativeInput.set_checked(value);
	}
	,get_intrinsicWidth: function() {
		return this.nativeInput.get_intrinsicWidth();
	}
	,get_intrinsicHeight: function() {
		return this.nativeInput.get_intrinsicHeight();
	}
	,__class__: cocktail.core.renderer.InputRenderer
	,__properties__: $extend(cocktail.core.renderer.BlockBoxRenderer.prototype.__properties__,{get_intrinsicHeight:"get_intrinsicHeight",get_intrinsicWidth:"get_intrinsicWidth",set_readonly:"set_readonly",set_disabled:"set_disabled",set_maxLength:"set_maxLength",set_checked:"set_checked",get_checked:"get_checked",set_value:"set_value",get_value:"get_value"})
});
cocktail.core.renderer.CheckboxRenderer = function(node) {
	cocktail.core.renderer.InputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.CheckboxRenderer"] = cocktail.core.renderer.CheckboxRenderer;
cocktail.core.renderer.CheckboxRenderer.__name__ = ["cocktail","core","renderer","CheckboxRenderer"];
cocktail.core.renderer.CheckboxRenderer.__super__ = cocktail.core.renderer.InputRenderer;
cocktail.core.renderer.CheckboxRenderer.prototype = $extend(cocktail.core.renderer.InputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeInput = new cocktail.port.base.NativeInputBase(this.domNode);
	}
	,__class__: cocktail.core.renderer.CheckboxRenderer
});
cocktail.core.renderer.EmbeddedBoxRenderer = function(node) {
	cocktail.core.renderer.BoxRenderer.call(this,node);
	this.isReplaced = true;
};
$hxClasses["cocktail.core.renderer.EmbeddedBoxRenderer"] = cocktail.core.renderer.EmbeddedBoxRenderer;
cocktail.core.renderer.EmbeddedBoxRenderer.__name__ = ["cocktail","core","renderer","EmbeddedBoxRenderer"];
cocktail.core.renderer.EmbeddedBoxRenderer.__super__ = cocktail.core.renderer.BoxRenderer;
cocktail.core.renderer.EmbeddedBoxRenderer.prototype = $extend(cocktail.core.renderer.BoxRenderer.prototype,{
	renderSelf: function(graphicContext,clipRect,scrollOffset) {
		cocktail.core.renderer.BoxRenderer.prototype.renderSelf.call(this,graphicContext,clipRect,scrollOffset);
		this.renderEmbeddedAsset(graphicContext,clipRect,scrollOffset);
	}
	,renderEmbeddedAsset: function(graphicContext,clipRect,scrollOffset) {
	}
	,__class__: cocktail.core.renderer.EmbeddedBoxRenderer
});
cocktail.core.renderer.ImageRenderer = function(domNode) {
	cocktail.core.renderer.EmbeddedBoxRenderer.call(this,domNode);
	this._paintBounds = new cocktail.core.geom.RectangleVO();
	this._destinationPoint = new cocktail.core.geom.PointVO(0.0,0.0);
};
$hxClasses["cocktail.core.renderer.ImageRenderer"] = cocktail.core.renderer.ImageRenderer;
cocktail.core.renderer.ImageRenderer.__name__ = ["cocktail","core","renderer","ImageRenderer"];
cocktail.core.renderer.ImageRenderer.__super__ = cocktail.core.renderer.EmbeddedBoxRenderer;
cocktail.core.renderer.ImageRenderer.prototype = $extend(cocktail.core.renderer.EmbeddedBoxRenderer.prototype,{
	renderEmbeddedAsset: function(graphicContext,clipRect,scrollOffset) {
		var src = this.domNode.getAttribute("src");
		if(src == null) return;
		var htmlDocument = this.domNode.ownerDocument;
		var resource = htmlDocument.resourceManager.getImageResource(src);
		if(resource.loaded == false || resource.loadedWithError == true) return;
		var usedValues = this.coreStyle.usedValues;
		this._paintBounds.x = this.globalBounds.x + usedValues.paddingLeft + usedValues.borderLeftWidth - scrollOffset.x;
		this._paintBounds.y = this.globalBounds.y + usedValues.paddingTop + usedValues.borderTopWidth - scrollOffset.y;
		this._paintBounds.width = usedValues.width;
		this._paintBounds.height = usedValues.height;
		this.paintResource(graphicContext,resource.nativeResource,this._paintBounds,resource.intrinsicWidth,resource.intrinsicHeight,clipRect);
	}
	,paintResource: function(graphicContext,nativeBitmapData,bounds,intrinsicWidth,intrinsicHeight,clipRect) {
		if(intrinsicWidth != bounds.width || intrinsicHeight != bounds.height) {
			var matrix = new cocktail.core.geom.Matrix();
			matrix.translate(bounds.x,bounds.y);
			matrix.scale(bounds.width / intrinsicWidth,bounds.height / intrinsicHeight);
			graphicContext.nativeLayer.graphics.drawImage(nativeBitmapData,matrix,bounds,clipRect);
		} else {
			var width = intrinsicWidth;
			var height = intrinsicHeight;
			this._destinationPoint.x = bounds.x;
			this._destinationPoint.y = bounds.y;
			bounds.width = width;
			bounds.height = height;
			bounds.x = 0.0;
			bounds.y = 0.0;
			graphicContext.nativeLayer.graphics.copyPixels(nativeBitmapData,bounds,this._destinationPoint,clipRect);
		}
	}
	,__class__: cocktail.core.renderer.ImageRenderer
});
cocktail.core.renderer.InitialBlockRenderer = function(node) {
	cocktail.core.renderer.BlockBoxRenderer.call(this,node);
	this.containingBlock = this;
};
$hxClasses["cocktail.core.renderer.InitialBlockRenderer"] = cocktail.core.renderer.InitialBlockRenderer;
cocktail.core.renderer.InitialBlockRenderer.__name__ = ["cocktail","core","renderer","InitialBlockRenderer"];
cocktail.core.renderer.InitialBlockRenderer.__super__ = cocktail.core.renderer.BlockBoxRenderer;
cocktail.core.renderer.InitialBlockRenderer.prototype = $extend(cocktail.core.renderer.BlockBoxRenderer.prototype,{
	attachLayer: function() {
		this.layerRenderer = new cocktail.core.layer.InitialLayerRenderer(this);
		this._hasOwnLayer = true;
	}
	,detachLayer: function() {
		this.layerRenderer.removedFromLayerTree();
		this._hasOwnLayer = false;
		this.layerRenderer.dispose();
		this.layerRenderer = null;
	}
	,registerWithContaininingBlock: function() {
	}
	,unregisterWithContainingBlock: function() {
	}
	,invalidateContainingBlock: function(styleIndex) {
	}
	,layoutSelfIfNeeded: function(forceLayout) {
		var viewportData = this.getWindowData();
		this.coreStyle.usedValues.width = viewportData.width;
		this.coreStyle.usedValues.height = viewportData.height;
		this.bounds.x = 0;
		this.bounds.y = 0;
		this.bounds.width = viewportData.width;
		this.bounds.height = viewportData.height;
		this.globalBounds.x = 0;
		this.globalBounds.y = 0;
		this.globalBounds.width = viewportData.width;
		this.globalBounds.height = viewportData.height;
	}
	,applyShrinkToFitIfNeeded: function(layoutState) {
	}
	,isPositioned: function() {
		return true;
	}
	,establishesNewBlockFormattingContext: function() {
		return true;
	}
	,createOwnLayer: function() {
		return true;
	}
	,getContainerBlockData: function() {
		return this.getWindowData();
	}
	,getContainingBlock: function() {
		return this;
	}
	,__class__: cocktail.core.renderer.InitialBlockRenderer
});
cocktail.core.renderer.InlineBoxRenderer = function(node) {
	cocktail.core.renderer.FlowBoxRenderer.call(this,node);
	this._renderRect = new cocktail.core.geom.RectangleVO();
};
$hxClasses["cocktail.core.renderer.InlineBoxRenderer"] = cocktail.core.renderer.InlineBoxRenderer;
cocktail.core.renderer.InlineBoxRenderer.__name__ = ["cocktail","core","renderer","InlineBoxRenderer"];
cocktail.core.renderer.InlineBoxRenderer.__super__ = cocktail.core.renderer.FlowBoxRenderer;
cocktail.core.renderer.InlineBoxRenderer.prototype = $extend(cocktail.core.renderer.FlowBoxRenderer.prototype,{
	render: function(graphicsContext,clipRect,scrollOffset) {
		var inlineBoxesLength = this.inlineBoxes.length;
		var _g = 0;
		while(_g < inlineBoxesLength) {
			var i = _g++;
			var inlineBox = this.inlineBoxes[i];
			this._renderRect.width = inlineBox.bounds.width;
			this._renderRect.height = inlineBox.bounds.height;
			this._renderRect.x = inlineBox.bounds.x + inlineBox.lineBox.bounds.x + this.globalBounds.x - scrollOffset.x;
			this._renderRect.y = inlineBox.bounds.y + inlineBox.lineBox.bounds.y + this.globalBounds.y - scrollOffset.y;
			if(this.coreStyle.hasBackgroundImage == true || this.coreStyle.hasBackgroundColor == true) cocktail.core.graphics.BackgroundDrawer.render(graphicsContext,this._renderRect,this.coreStyle,this,clipRect);
			cocktail.core.graphics.BorderDrawer.draw(graphicsContext,this._renderRect,this.coreStyle,clipRect);
		}
		if(this.firstChild != null) this.renderChildren(graphicsContext,clipRect,scrollOffset);
	}
	,updateInlineBoxes: function() {
		this.inlineBoxes = new Array();
		var child = this.firstChild;
		while(child != null) {
			child.updateInlineBoxes();
			child = child.nextSibling;
		}
	}
	,renderChildren: function(graphicContext,clipRect,scrollOffset) {
		cocktail.core.renderer.FlowBoxRenderer.prototype.renderChildren.call(this,graphicContext,clipRect,scrollOffset);
		if(this.createOwnLayer() == true) this.renderInlineChildren(this,this.layerRenderer,graphicContext,clipRect,scrollOffset);
	}
	,canHaveClearance: function() {
		return false;
	}
	,__class__: cocktail.core.renderer.InlineBoxRenderer
});
cocktail.core.renderer.InputButtonRenderer = function(node) {
	cocktail.core.renderer.InputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.InputButtonRenderer"] = cocktail.core.renderer.InputButtonRenderer;
cocktail.core.renderer.InputButtonRenderer.__name__ = ["cocktail","core","renderer","InputButtonRenderer"];
cocktail.core.renderer.InputButtonRenderer.__super__ = cocktail.core.renderer.InputRenderer;
cocktail.core.renderer.InputButtonRenderer.prototype = $extend(cocktail.core.renderer.InputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeInput = new cocktail.port.base.NativeInputBase(this.domNode);
	}
	,__class__: cocktail.core.renderer.InputButtonRenderer
});
cocktail.core.renderer.ObjectRenderer = function(node) {
	cocktail.core.renderer.EmbeddedBoxRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.ObjectRenderer"] = cocktail.core.renderer.ObjectRenderer;
cocktail.core.renderer.ObjectRenderer.__name__ = ["cocktail","core","renderer","ObjectRenderer"];
cocktail.core.renderer.ObjectRenderer.__super__ = cocktail.core.renderer.EmbeddedBoxRenderer;
cocktail.core.renderer.ObjectRenderer.prototype = $extend(cocktail.core.renderer.EmbeddedBoxRenderer.prototype,{
	createOwnLayer: function() {
		return true;
	}
	,doCreateLayer: function() {
		this.layerRenderer = new cocktail.core.layer.PluginLayerRenderer(this);
	}
	,renderEmbeddedAsset: function(graphicContext,clipRect,scrollOffset) {
		var htmlObjectElement = this.domNode;
		htmlObjectElement.plugin.updateViewport(this.globalBounds.x + this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.borderLeftWidth,this.globalBounds.y + this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.borderTopWidth,this.globalBounds.width,this.globalBounds.height);
	}
	,__class__: cocktail.core.renderer.ObjectRenderer
});
cocktail.core.renderer.TextInputRenderer = function(node) {
	cocktail.core.renderer.InputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.TextInputRenderer"] = cocktail.core.renderer.TextInputRenderer;
cocktail.core.renderer.TextInputRenderer.__name__ = ["cocktail","core","renderer","TextInputRenderer"];
cocktail.core.renderer.TextInputRenderer.__super__ = cocktail.core.renderer.InputRenderer;
cocktail.core.renderer.TextInputRenderer.prototype = $extend(cocktail.core.renderer.InputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeTextInput = new cocktail.port.base.NativeTextInputBase(this.domNode);
		this.nativeInput = this.nativeTextInput;
	}
	,renderSelf: function(graphicContext,clipRect,scrollOffset) {
		cocktail.core.renderer.InputRenderer.prototype.renderSelf.call(this,graphicContext,clipRect,scrollOffset);
		this.updateNativeTextInput(scrollOffset,clipRect);
	}
	,updateNativeTextInput: function(scrollOffset,clipRect) {
		this.nativeTextInput.set_fontFamily(cocktail.core.css.CSSValueConverter.getFontFamilyAsStringArray(this.coreStyle.getComputedOrInitialProperty(37))[0]);
		this.nativeTextInput.set_letterSpacing(this.coreStyle.usedValues.letterSpacing);
		this.nativeTextInput.set_fontSize(this.coreStyle.getAbsoluteLength(this.coreStyle.getTransitionablePropertyValue(34)));
		var bold = false;
		{
			var _g = this.coreStyle.getComputedOrInitialProperty(35);
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				switch(value[1]) {
				case 3:case 0:
					bold = false;
					break;
				case 2:case 1:
					bold = true;
					break;
				default:
					throw "Illegal keyword for bold style";
				}
				break;
			case 0:
				var value1 = _g[2];
				bold = value1 > 400;
				break;
			default:
				throw "Illegal value for bold style";
			}
		}
		this.nativeTextInput.set_bold(bold);
		this.nativeTextInput.set_italic(this.coreStyle.getKeyword(this.coreStyle.getComputedOrInitialProperty(36)) == cocktail.core.css.CSSKeywordValue.ITALIC);
		this.nativeTextInput.set_letterSpacing(this.coreStyle.usedValues.letterSpacing);
		this.nativeTextInput.set_color(this.coreStyle.usedValues.color.color);
	}
	,__class__: cocktail.core.renderer.TextInputRenderer
});
cocktail.core.renderer.PasswordInputRenderer = function(node) {
	cocktail.core.renderer.TextInputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.PasswordInputRenderer"] = cocktail.core.renderer.PasswordInputRenderer;
cocktail.core.renderer.PasswordInputRenderer.__name__ = ["cocktail","core","renderer","PasswordInputRenderer"];
cocktail.core.renderer.PasswordInputRenderer.__super__ = cocktail.core.renderer.TextInputRenderer;
cocktail.core.renderer.PasswordInputRenderer.prototype = $extend(cocktail.core.renderer.TextInputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeTextInput = new cocktail.port.base.NativeTextInputBase(this.domNode);
		this.nativeInput = this.nativeTextInput;
	}
	,__class__: cocktail.core.renderer.PasswordInputRenderer
});
cocktail.core.renderer.RadioRenderer = function(node) {
	cocktail.core.renderer.InputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.RadioRenderer"] = cocktail.core.renderer.RadioRenderer;
cocktail.core.renderer.RadioRenderer.__name__ = ["cocktail","core","renderer","RadioRenderer"];
cocktail.core.renderer.RadioRenderer.__super__ = cocktail.core.renderer.InputRenderer;
cocktail.core.renderer.RadioRenderer.prototype = $extend(cocktail.core.renderer.InputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeInput = new cocktail.port.base.NativeInputBase(this.domNode);
	}
	,__class__: cocktail.core.renderer.RadioRenderer
});
cocktail.core.renderer.TextAreaRenderer = function(node) {
	cocktail.core.renderer.TextInputRenderer.call(this,node);
};
$hxClasses["cocktail.core.renderer.TextAreaRenderer"] = cocktail.core.renderer.TextAreaRenderer;
cocktail.core.renderer.TextAreaRenderer.__name__ = ["cocktail","core","renderer","TextAreaRenderer"];
cocktail.core.renderer.TextAreaRenderer.__super__ = cocktail.core.renderer.TextInputRenderer;
cocktail.core.renderer.TextAreaRenderer.prototype = $extend(cocktail.core.renderer.TextInputRenderer.prototype,{
	createNativeInput: function() {
		this.nativeTextInput = new cocktail.port.base.NativeTextInputBase(this.domNode);
		this.nativeInput = this.nativeTextInput;
	}
	,getViewportY: function(scrollOffset) {
		return this.globalBounds.y + this.coreStyle.usedValues.borderTopWidth;
	}
	,renderChildren: function(graphicContext,clipRect,scrollOffset) {
	}
	,__class__: cocktail.core.renderer.TextAreaRenderer
});
cocktail.core.renderer.TextRenderer = function(node) {
	cocktail.core.renderer.InvalidatingElementRenderer.call(this,node);
	this._text = node;
	this._textNeedsRendering = true;
	this._textTokensNeedParsing = true;
	this._hasUnderline = false;
	this._hasOverline = false;
	this._hasLineThrough = false;
	this._hasBlink = false;
	this.isText = true;
};
$hxClasses["cocktail.core.renderer.TextRenderer"] = cocktail.core.renderer.TextRenderer;
cocktail.core.renderer.TextRenderer.__name__ = ["cocktail","core","renderer","TextRenderer"];
cocktail.core.renderer.TextRenderer.__super__ = cocktail.core.renderer.InvalidatingElementRenderer;
cocktail.core.renderer.TextRenderer.prototype = $extend(cocktail.core.renderer.InvalidatingElementRenderer.prototype,{
	initCoreStyle: function() {
		this.coreStyle = this.domNode.parentNode.coreStyle;
	}
	,updateText: function() {
		var child = this.firstChild;
		while(child != null) {
			child.updateText();
			child = child.nextSibling;
		}
		if(this._textNeedsRendering == true) {
			this.createTextLines();
			this._textNeedsRendering = false;
		}
	}
	,render: function(graphicContext,clipRect,scrollOffset) {
		if(this.coreStyle.isVisible == false) return;
		cocktail.core.renderer.TextRenderer._intersectBounds.x = this.hitTestingBounds.x;
		cocktail.core.renderer.TextRenderer._intersectBounds.y = this.hitTestingBounds.y;
		cocktail.core.renderer.TextRenderer._intersectBounds.width = this.hitTestingBounds.width;
		cocktail.core.renderer.TextRenderer._intersectBounds.height = this.hitTestingBounds.height;
		cocktail.core.geom.GeomUtils.intersectBounds(cocktail.core.renderer.TextRenderer._intersectBounds,clipRect,cocktail.core.renderer.TextRenderer._intersectBounds);
		if(cocktail.core.renderer.TextRenderer._intersectBounds.width == 0 || cocktail.core.renderer.TextRenderer._intersectBounds.height == 0) return;
		cocktail.core.graphics.TextDrawer.draw(graphicContext,this,this._hasUnderline,this._hasOverline,this._hasLineThrough,this._hasBlink,scrollOffset,clipRect);
	}
	,updateTextDecorations: function(inheritUnderline,inheritOverline,inheritLineThrough,inheritBlink) {
		this._hasUnderline = inheritUnderline;
		this._hasOverline = inheritOverline;
		this._hasLineThrough = inheritLineThrough;
		this._hasBlink = inheritBlink;
	}
	,invalidate: function() {
		this._textNeedsRendering = true;
	}
	,createTextLines: function() {
		if(this._textTokensNeedParsing == true) {
			var processedText = this._text.get_nodeValue();
			processedText = cocktail.core.parser.PlainTextParser.applyWhiteSpaceProcessing(processedText,this.coreStyle.getKeyword(this.coreStyle.getComputedOrInitialProperty(45)));
			processedText = cocktail.core.parser.PlainTextParser.applyTextTransform(processedText,this.coreStyle.getKeyword(this.coreStyle.getComputedOrInitialProperty(42)));
			this._textTokens = cocktail.core.parser.PlainTextParser.parse(processedText);
		}
		this.inlineBoxes = [];
		var fontMetrics = this.coreStyle.fontMetrics;
		var htmlDocument = this.domNode.ownerDocument;
		var fontManager = htmlDocument.fontManager;
		var fontFamily = fontManager.getNativeFontFamily(cocktail.core.css.CSSValueConverter.getFontFamilyAsStringArray(this.coreStyle.getComputedOrInitialProperty(37)));
		var letterSpacing = this.coreStyle.usedValues.letterSpacing;
		var wordSpacing = this.coreStyle.getAbsoluteLength(this.coreStyle.getTransitionablePropertyValue(44));
		var spaceWidth = fontMetrics.spaceWidth + letterSpacing + wordSpacing;
		var leadedAscent = this.getLeadedAscent();
		var leadedDescent = this.getLeadedDescent();
		var length = this._textTokens.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this.inlineBoxes.push(this.createInlineBoxFromTextToken(this._textTokens[i],leadedAscent,leadedDescent,fontMetrics,fontManager,fontFamily,spaceWidth));
		}
	}
	,createInlineBoxFromTextToken: function(textToken,leadedAscent,leadedDescent,fontMetrics,fontManager,fontFamily,spaceWidth) {
		switch(textToken[1]) {
		case 0:
			var value = textToken[2];
			return new cocktail.core.linebox.TextInlineBox(this,leadedAscent,leadedDescent,value,fontMetrics,fontManager,fontFamily);
		case 1:
			return new cocktail.core.linebox.SpaceInlineBox(this,leadedAscent,leadedDescent,spaceWidth);
		case 2:
			return new cocktail.core.linebox.TextInlineBox(this,leadedAscent,leadedDescent,"",fontMetrics,fontManager,fontFamily);
		case 3:
			return new cocktail.core.linebox.TextInlineBox(this,leadedAscent,leadedDescent,"",fontMetrics,fontManager,fontFamily);
		}
	}
	,isFloat: function() {
		return false;
	}
	,isPositioned: function() {
		return false;
	}
	,isInlineLevel: function() {
		return true;
	}
	,__class__: cocktail.core.renderer.TextRenderer
});
cocktail.core.renderer.VideoRenderer = function(domNode) {
	cocktail.core.renderer.ImageRenderer.call(this,domNode);
	this._posterBounds = new cocktail.core.geom.RectangleVO();
	this._videoBounds = new cocktail.core.geom.RectangleVO();
};
$hxClasses["cocktail.core.renderer.VideoRenderer"] = cocktail.core.renderer.VideoRenderer;
cocktail.core.renderer.VideoRenderer.__name__ = ["cocktail","core","renderer","VideoRenderer"];
cocktail.core.renderer.VideoRenderer.__super__ = cocktail.core.renderer.ImageRenderer;
cocktail.core.renderer.VideoRenderer.prototype = $extend(cocktail.core.renderer.ImageRenderer.prototype,{
	createOwnLayer: function() {
		return true;
	}
	,doCreateLayer: function() {
		this.layerRenderer = new cocktail.core.layer.VideoLayerRenderer(this);
	}
	,renderEmbeddedAsset: function(graphicContext,clipRect,scrollOffset) {
		var htmlVideoElement = this.domNode;
		if(htmlVideoElement.shouldRenderPosterFrame() == true) this.renderPosterFrame(htmlVideoElement,graphicContext,clipRect,scrollOffset); else this.renderVideo(htmlVideoElement,graphicContext,scrollOffset);
	}
	,renderVideo: function(htmlVideoElement,graphicContext,scrollOffset) {
		cocktail.core.geom.GeomUtils.getCenteredBounds(this.coreStyle.usedValues.width,this.coreStyle.usedValues.height,htmlVideoElement.get_videoWidth(),htmlVideoElement.get_videoHeight(),this._videoBounds);
		var nativeVideo = htmlVideoElement.nativeMedia;
		var videoViewport = nativeVideo.get_viewport();
		videoViewport.x = this.globalBounds.x + this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.borderLeftWidth + this._videoBounds.x - scrollOffset.x;
		videoViewport.y = this.globalBounds.y + this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.borderTopWidth + this._videoBounds.y - scrollOffset.y;
		videoViewport.width = this._videoBounds.width;
		videoViewport.height = this._videoBounds.height;
		nativeVideo.set_alpha(this.layerRenderer.alpha);
		nativeVideo.set_matrix(this.layerRenderer.matrix);
		nativeVideo.set_viewport(videoViewport);
	}
	,renderPosterFrame: function(htmlVideoElement,graphicContext,clipRect,scrollOffset) {
		var htmlDocument = this.domNode.ownerDocument;
		var resource = htmlDocument.resourceManager.getImageResource(this.domNode.getAttribute("poster"));
		if(resource.loaded == false || resource.loadedWithError == true) return;
		cocktail.core.geom.GeomUtils.getCenteredBounds(this.coreStyle.usedValues.width,this.coreStyle.usedValues.height,resource.intrinsicWidth,resource.intrinsicHeight,this._posterBounds);
		var x = this.globalBounds.x + this.coreStyle.usedValues.paddingLeft + this.coreStyle.usedValues.borderLeftWidth + this._posterBounds.x - scrollOffset.x;
		var y = this.globalBounds.y + this.coreStyle.usedValues.paddingTop + this.coreStyle.usedValues.borderTopWidth + this._posterBounds.y - scrollOffset.y;
		var width = this._posterBounds.width;
		var height = this._posterBounds.height;
		var paintBounds = new cocktail.core.geom.RectangleVO();
		paintBounds.x = x;
		paintBounds.y = y;
		paintBounds.width = width;
		paintBounds.height = height;
		this.paintResource(graphicContext,resource.nativeResource,paintBounds,resource.intrinsicWidth,resource.intrinsicHeight,clipRect);
	}
	,__class__: cocktail.core.renderer.VideoRenderer
});
cocktail.core.resource = {};
cocktail.core.resource.ResourceManager = function(document) {
	this._document = document;
	this._resources = new haxe.ds.StringMap();
	this._binaryResources = new haxe.ds.StringMap();
};
$hxClasses["cocktail.core.resource.ResourceManager"] = cocktail.core.resource.ResourceManager;
cocktail.core.resource.ResourceManager.__name__ = ["cocktail","core","resource","ResourceManager"];
cocktail.core.resource.ResourceManager.prototype = {
	dispose: function() {
		this._document = null;
		this._resources = null;
		this._binaryResources = null;
	}
	,getImageResource: function(url) {
		var resource = this._resources.get(url);
		if(resource == null) {
			resource = new cocktail.port.base.ResourceBase(url);
			this._resources.set(url,resource);
		}
		return resource;
	}
	,removeImageResource: function(url) {
		this._resources.remove(url);
	}
	,getBinaryResource: function(url) {
		var resource = this._binaryResources.get(url);
		if(resource == null) {
			resource = new cocktail.port.base.NativeHttpBase(this._document.timer);
			resource.load(url,"GET",null,null,cocktail.core.http.DataFormatValue.BINARY);
			this._binaryResources.set(url,resource);
		}
		return resource;
	}
	,removeBinaryResource: function(url) {
		this._binaryResources.remove(url);
	}
	,__class__: cocktail.core.resource.ResourceManager
};
cocktail.core.stacking = {};
cocktail.core.stacking.StackingContext = function(layerRenderer) {
	cocktail.core.ds.FastNode.call(this);
	this.layerRenderer = layerRenderer;
};
$hxClasses["cocktail.core.stacking.StackingContext"] = cocktail.core.stacking.StackingContext;
cocktail.core.stacking.StackingContext.__name__ = ["cocktail","core","stacking","StackingContext"];
cocktail.core.stacking.StackingContext.__super__ = cocktail.core.ds.FastNode;
cocktail.core.stacking.StackingContext.prototype = $extend(cocktail.core.ds.FastNode.prototype,{
	render: function(dirtyRect) {
		this.layerRenderer.render(dirtyRect);
		var child = this.firstChild;
		var hasRenderedAutoAndZeroLayers = false;
		while(child != null) {
			{
				var _g = child.layerRenderer.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
				switch(_g[1]) {
				case 0:
					var value = _g[2];
					if(value == 0) {
					} else {
						if(value > 0 && hasRenderedAutoAndZeroLayers == false) {
							this.renderChildrenInSameStackingContext(this.layerRenderer,dirtyRect);
							hasRenderedAutoAndZeroLayers = true;
						}
						child.render(dirtyRect);
					}
					break;
				default:
				}
			}
			child = child.nextSibling;
		}
		if(hasRenderedAutoAndZeroLayers == false) this.renderChildrenInSameStackingContext(this.layerRenderer,dirtyRect);
	}
	,renderChildrenInSameStackingContext: function(rootLayer,dirtyRect) {
		var child = rootLayer.firstChild;
		while(child != null) {
			if(child.hasOwnStackingContext == false) {
				child.render(dirtyRect);
				this.renderChildrenInSameStackingContext(child,dirtyRect);
			} else {
				var _g = child.rootElementRenderer.coreStyle.getComputedOrInitialProperty(4);
				switch(_g[1]) {
				case 0:
					var value = _g[2];
					if(value == 0) child.stackingContext.render(dirtyRect);
					break;
				default:
				}
			}
			child = child.nextSibling;
		}
	}
	,__class__: cocktail.core.stacking.StackingContext
});
cocktail.core.timer = {};
cocktail.core.timer.Timer = function() {
	this._pendingCallbacks = new Array();
	this._pendingCount = 0;
	this._platformTimer = new cocktail.port.base.PlatformTimerBase($bind(this,this.onUpdate));
};
$hxClasses["cocktail.core.timer.Timer"] = cocktail.core.timer.Timer;
cocktail.core.timer.Timer.__name__ = ["cocktail","core","timer","Timer"];
cocktail.core.timer.Timer.prototype = {
	dispose: function() {
		this._pendingCallbacks = null;
		this._platformTimer.dispose();
	}
	,delay: function(timerCallback,delay) {
		if(delay == null) delay = 0;
		this._pendingCount++;
		var callbackTime = this.getTimer() + delay;
		var length = this._pendingCallbacks.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var pendingCallback = this._pendingCallbacks[i];
			if(pendingCallback.called == true) {
				pendingCallback.called = false;
				pendingCallback.callbackTime = callbackTime;
				pendingCallback.timerCallback = timerCallback;
				return;
			}
		}
		var newTimerCallback = new cocktail.core.timer.TimerCallbackVO();
		newTimerCallback.called = false;
		newTimerCallback.callbackTime = callbackTime;
		newTimerCallback.timerCallback = timerCallback;
		this._pendingCallbacks.push(newTimerCallback);
	}
	,getTimer: function() {
		return this._platformTimer.getTimer();
	}
	,onUpdate: function() {
		if(this._pendingCount > 0) {
			var time = this.getTimer();
			var length = this._pendingCallbacks.length;
			var _g = 0;
			while(_g < length) {
				var i = _g++;
				var pendingCallback = this._pendingCallbacks[i];
				if(pendingCallback.callbackTime < time && pendingCallback.called == false) {
					pendingCallback.timerCallback(time);
					pendingCallback.called = true;
					this._pendingCount--;
				}
			}
		}
	}
	,__class__: cocktail.core.timer.Timer
};
cocktail.core.timer.TimerCallbackVO = function() {
	this.callbackTime = 0;
	this.called = false;
};
$hxClasses["cocktail.core.timer.TimerCallbackVO"] = cocktail.core.timer.TimerCallbackVO;
cocktail.core.timer.TimerCallbackVO.__name__ = ["cocktail","core","timer","TimerCallbackVO"];
cocktail.core.timer.TimerCallbackVO.prototype = {
	__class__: cocktail.core.timer.TimerCallbackVO
};
cocktail.core.transition = {};
cocktail.core.transition.Transition = function(propertyIndex,target,transitionDuration,transitionDelay,transitionTimingFunction,startValue,endValue,onComplete,onUpdate) {
	this.transitionDelay = transitionDelay;
	this.transitionDuration = transitionDuration;
	this.transitionTimingFunction = transitionTimingFunction;
	this.startValue = startValue;
	this.endValue = endValue;
	this.target = target;
	this.propertyIndex = propertyIndex;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
	this._elapsedTime = 0;
	this._cubicBezier = new cocktail.core.geom.CubicBezier();
};
$hxClasses["cocktail.core.transition.Transition"] = cocktail.core.transition.Transition;
cocktail.core.transition.Transition.__name__ = ["cocktail","core","transition","Transition"];
cocktail.core.transition.Transition.prototype = {
	updateTime: function(delta) {
		this._elapsedTime += delta;
	}
	,dispose: function() {
		this.onComplete = null;
		this.onUpdate = null;
		this.transitionTimingFunction = null;
	}
	,revert: function() {
		this._elapsedTime = this.transitionDuration + this.transitionDelay - this._elapsedTime;
		var oldEndValue = this.endValue;
		this.endValue = this.startValue;
		this.startValue = oldEndValue;
	}
	,get_complete: function() {
		if(this._elapsedTime >= this.transitionDelay + this.transitionDuration) return true;
		return false;
	}
	,get_currentValue: function() {
		var transitionTime = this._elapsedTime - this.transitionDelay;
		if(transitionTime < 0) return this.startValue;
		var completePercent = transitionTime / this.transitionDuration;
		{
			var _g = this.transitionTimingFunction;
			switch(_g[1]) {
			case 4:
				var value = _g[2];
				switch(value[1]) {
				case 49:
					this._cubicBezier.init(0.25,0.1,0.25,1.0);
					return (this.endValue - this.startValue) * this._cubicBezier.bezierY(completePercent) + this.startValue;
				case 51:
					this._cubicBezier.init(0.25,0.1,0.25,1.0);
					return (this.endValue - this.startValue) * this._cubicBezier.bezierY(completePercent) + this.startValue;
				case 52:
					this._cubicBezier.init(0.25,0.1,0.25,1.0);
					return (this.endValue - this.startValue) * this._cubicBezier.bezierY(completePercent) + this.startValue;
				case 53:
					this._cubicBezier.init(0.25,0.1,0.25,1.0);
					return (this.endValue - this.startValue) * this._cubicBezier.bezierY(completePercent) + this.startValue;
				case 54:
					return this.endValue - this.startValue + this.startValue;
				case 55:
					return (this.endValue - this.startValue) * 0 + this.startValue;
				case 50:
					return (this.endValue - this.startValue) * completePercent + this.startValue;
				default:
					throw "Illegal keyword value for transition timing function style";
				}
				break;
			case 20:
				var y2 = _g[5];
				var x2 = _g[4];
				var y1 = _g[3];
				var x1 = _g[2];
				this._cubicBezier.init(x1,y1,x2,y2);
				return (this.endValue - this.startValue) * this._cubicBezier.bezierY(completePercent) + this.startValue;
			case 19:
				var intervalChange = _g[3];
				var intervalNumbers = _g[2];
				return (this.endValue - this.startValue) * completePercent + this.startValue;
			default:
				throw "Illegal value for transition timing function style";
			}
		}
	}
	,__class__: cocktail.core.transition.Transition
	,__properties__: {get_complete:"get_complete",get_currentValue:"get_currentValue"}
};
cocktail.core.transition.PendingTransitionVO = function() {
};
$hxClasses["cocktail.core.transition.PendingTransitionVO"] = cocktail.core.transition.PendingTransitionVO;
cocktail.core.transition.PendingTransitionVO.__name__ = ["cocktail","core","transition","PendingTransitionVO"];
cocktail.core.transition.PendingTransitionVO.prototype = {
	__class__: cocktail.core.transition.PendingTransitionVO
};
cocktail.core.transition.TransitionManager = function(document) {
	this.initTransitions();
	this._document = document;
	this._currentTransitionsNumber = 0;
	this.hasTransitionsInProgress = false;
	this._lastTick = 0;
};
$hxClasses["cocktail.core.transition.TransitionManager"] = cocktail.core.transition.TransitionManager;
cocktail.core.transition.TransitionManager.__name__ = ["cocktail","core","transition","TransitionManager"];
cocktail.core.transition.TransitionManager.prototype = {
	dispose: function() {
		this._transitions = null;
		this._document = null;
	}
	,initTransitions: function() {
		this._transitions = new Array();
		var _g = 0;
		while(_g < 87) {
			var i = _g++;
			this._transitions[i] = new Array();
		}
	}
	,getTransition: function(propertyIndex,style) {
		var transitionsForProperty = this._transitions[propertyIndex];
		if(transitionsForProperty.length == 0) return null;
		var length = transitionsForProperty.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			if(transitionsForProperty[i].target == style) return transitionsForProperty[i];
		}
		return null;
	}
	,startTransition: function(target,propertyIndex,startValue,endValue,transitionDuration,transitionDelay,transitionTimingFunction,onComplete,onUpdate) {
		var transition = new cocktail.core.transition.Transition(propertyIndex,target,transitionDuration,transitionDelay,transitionTimingFunction,startValue,endValue,onComplete,onUpdate);
		var transitionsForProperty = this._transitions[propertyIndex];
		transitionsForProperty.push(transition);
		if(this._currentTransitionsNumber == 0) {
			this.startTransitionUpdate();
			this.hasTransitionsInProgress = true;
		}
		this._currentTransitionsNumber++;
	}
	,stopTransition: function(transition) {
		var propertyTransitions = this._transitions[transition.propertyIndex];
		HxOverrides.remove(propertyTransitions,transition);
		transition.dispose();
		this._currentTransitionsNumber--;
	}
	,getTransitionsForProperty: function(propertyIndex) {
		return this._transitions[propertyIndex];
	}
	,startTransitionUpdate: function() {
		this._lastTick = this._document.timer.getTimer();
		this._document.timer.delay($bind(this,this.onTransitionTick));
	}
	,onTransitionTick: function(timeStamp) {
		var interval = timeStamp - this._lastTick;
		this._lastTick = timeStamp;
		var transitionsLength = this._transitions.length;
		var _g = 0;
		while(_g < transitionsLength) {
			var i = _g++;
			var completedTransitions = new Array();
			var transitionsForProperty = this._transitions[i];
			var length = transitionsForProperty.length;
			var _g1 = 0;
			while(_g1 < length) {
				var j = _g1++;
				var transition = transitionsForProperty[j];
				transition.updateTime(interval);
				if(transition.get_complete() == true) {
					transition.onComplete(transition);
					completedTransitions.push(transition);
				} else transition.onUpdate(transition);
			}
			var completedTransitionsLength = completedTransitions.length;
			var _g11 = 0;
			while(_g11 < completedTransitionsLength) {
				var i1 = _g11++;
				this.stopTransition(completedTransitions[i1]);
			}
		}
		if(this._currentTransitionsNumber > 0) this._document.timer.delay($bind(this,this.onTransitionTick)); else this.hasTransitionsInProgress = false;
	}
	,__class__: cocktail.core.transition.TransitionManager
};
cocktail.core.transition.Transitioner = function(transitionManager) {
	this._transitionManager = transitionManager;
};
$hxClasses["cocktail.core.transition.Transitioner"] = cocktail.core.transition.Transitioner;
cocktail.core.transition.Transitioner.__name__ = ["cocktail","core","transition","Transitioner"];
cocktail.core.transition.Transitioner.prototype = {
	startPendingTransitions: function(style) {
		if(this._pendingTransitions == null) return false;
		var atLeastOneTransitionStarted = false;
		var length = this._pendingTransitions.length;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var transitionStarted = this.startTransitionIfNeeded(this._pendingTransitions[i],style);
			if(transitionStarted == true) atLeastOneTransitionStarted = true;
		}
		this._pendingTransitions = [];
		return atLeastOneTransitionStarted;
	}
	,registerPendingTransition: function(propertyIndex,startValue) {
		var pendingTransition = new cocktail.core.transition.PendingTransitionVO();
		pendingTransition.propertyIndex = propertyIndex;
		pendingTransition.startValue = startValue;
		if(this._pendingTransitions == null) this._pendingTransitions = new Array();
		this._pendingTransitions.push(pendingTransition);
	}
	,revertTransitionIfNeeded: function(currentTransition,currentValue,style) {
		if(currentTransition.startValue != currentValue) return false;
		var indexInTransitionProperty = this.getIndexOfPropertyInTransitionProperty(currentTransition.propertyIndex,style.getComputedOrInitialProperty(57));
		if(indexInTransitionProperty == -1) return false;
		var transitionDelays = this.getAsFloatArray(style.getComputedOrInitialProperty(56));
		var transitionDelay = transitionDelays[this.getRepeatedIndex(indexInTransitionProperty,transitionDelays.length)];
		if(currentTransition.transitionDelay != transitionDelay) return false;
		var transitionDurations = this.getAsFloatArray(style.getComputedOrInitialProperty(55));
		var transitionDuration = transitionDurations[this.getRepeatedIndex(indexInTransitionProperty,transitionDurations.length)];
		if(currentTransition.transitionDuration != transitionDuration) return false;
		var transitionTimingFunctionAsArray = this.getTransitionTimingFunctionsAsArray(style.getComputedOrInitialProperty(58));
		var transitionTimingFunction = transitionTimingFunctionAsArray[this.getRepeatedIndex(indexInTransitionProperty,transitionTimingFunctionAsArray.length)];
		if(currentTransition.transitionTimingFunction != transitionTimingFunction) return false;
		currentTransition.revert();
		return true;
	}
	,startTransitionIfNeeded: function(pendingTransition,style) {
		var usedValues = style.usedValues;
		var indexInTransitionProperty = this.getIndexOfPropertyInTransitionProperty(pendingTransition.propertyIndex,style.getComputedOrInitialProperty(57));
		if(indexInTransitionProperty == -1) return false;
		var combinedDuration = 0.0;
		var transitionDelays = this.getAsFloatArray(style.getComputedOrInitialProperty(56));
		var transitionDurations = this.getAsFloatArray(style.getComputedOrInitialProperty(55));
		var transitionDelay = transitionDelays[this.getRepeatedIndex(indexInTransitionProperty,transitionDelays.length)];
		var transitionDuration = transitionDurations[this.getRepeatedIndex(indexInTransitionProperty,transitionDurations.length)];
		combinedDuration = transitionDuration + transitionDelay;
		if(combinedDuration <= 0) return false;
		var transitionTimingFunctionAsArray = this.getTransitionTimingFunctionsAsArray(style.getComputedOrInitialProperty(58));
		var transitionTimingFunction = transitionTimingFunctionAsArray[this.getRepeatedIndex(indexInTransitionProperty,transitionTimingFunctionAsArray.length)];
		var transition = this._transitionManager.getTransition(pendingTransition.propertyIndex,style);
		if(transition != null) return false;
		var endValue = this.getEndValue(style,pendingTransition.propertyIndex);
		this._transitionManager.startTransition(style,pendingTransition.propertyIndex,pendingTransition.startValue,endValue,transitionDuration,transitionDelay,transitionTimingFunction,$bind(this,this.onTransitionComplete),$bind(this,this.onTransitionUpdate));
		return true;
	}
	,getIndexOfPropertyInTransitionProperty: function(propertyIndex,transitionProperty) {
		switch(transitionProperty[1]) {
		case 4:
			var value = transitionProperty[2];
			switch(value[1]) {
			case 18:
				return -1;
			case 48:
				return 0;
			default:
				throw "Illegal keyword value for transition property";
			}
			break;
		case 3:
			var value1 = transitionProperty[2];
			if(value1 != cocktail.core.css.CSSConstants.getPropertyNameFromIndex(propertyIndex)) return -1; else return 0;
			break;
		case 15:
			var value2 = transitionProperty[2];
			var foundFlag = false;
			var _g1 = 0;
			var _g = value2.length;
			while(_g1 < _g) {
				var i = _g1++;
				{
					var _g2 = value2[i];
					switch(_g2[1]) {
					case 3:
						var value3 = _g2[2];
						if(value3 == cocktail.core.css.CSSConstants.getPropertyNameFromIndex(propertyIndex)) return i;
						break;
					default:
						throw "Illegal value for transition property";
					}
				}
			}
			return -1;
		default:
			throw "Illegal values for transition property style";
		}
	}
	,getEndValue: function(style,propertyIndex) {
		switch(propertyIndex) {
		case 53:
			{
				var _g = style.getTransitionablePropertyValue(53);
				switch(_g[1]) {
				case 1:
					var value = _g[2];
					return value;
				case 18:
					var value1 = _g[2];
					return value1;
				default:
					return 0;
				}
			}
			break;
		default:
			return Reflect.field(style.usedValues,cocktail.core.css.CSSConstants.getPropertyNameFromIndex(propertyIndex));
		}
	}
	,getTransitionTimingFunctionsAsArray: function(transitionTimingFunction) {
		switch(transitionTimingFunction[1]) {
		case 4:
			var value = transitionTimingFunction[2];
			return [transitionTimingFunction];
		case 15:
			var value1 = transitionTimingFunction[2];
			return value1;
		default:
			return null;
		}
	}
	,getAsFloatArray: function(value) {
		var floats = new Array();
		switch(value[1]) {
		case 15:
			var value1 = value[2];
			var _g1 = 0;
			var _g = value1.length;
			while(_g1 < _g) {
				var i = _g1++;
				floats.push(this.getTransitionDelayOrDurationAsFloat(value1[i]));
			}
			break;
		default:
			floats.push(this.getTransitionDelayOrDurationAsFloat(value));
		}
		return floats;
	}
	,getTransitionDelayOrDurationAsFloat: function(value) {
		switch(value[1]) {
		case 0:
			var value1 = value[2];
			return value1;
		case 9:
			var value2 = value[2];
			switch(value2[1]) {
			case 1:
				var value3 = value2[2];
				return value3;
			case 0:
				var value4 = value2[2];
				return value4 * 1000;
			}
			break;
		default:
		}
		return 0.0;
	}
	,getRepeatedIndex: function(index,length) {
		if(index < length) return index; else if(length == 1) return 0;
		return length % index;
	}
	,onTransitionComplete: function(transition) {
		this.onTransitionCompleteCallback(transition);
	}
	,onTransitionUpdate: function(transition) {
		this.onTransitionUpdateCallback(transition);
	}
	,__class__: cocktail.core.transition.Transitioner
};
cocktail.core.url = {};
cocktail.core.url.URL = function() {
};
$hxClasses["cocktail.core.url.URL"] = cocktail.core.url.URL;
cocktail.core.url.URL.__name__ = ["cocktail","core","url","URL"];
cocktail.core.url.URL.fromString = function(stringUrl) {
	var r = new EReg("^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?://)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\\d*))?)(((/(?:[^?#](?![^?#/]*\\.[^?#/.]+(?:[?#]|$)))*/?)?([^?#/]*))(?:\\?([^#]*))?(?:#(.*))?)","");
	r.match(stringUrl);
	var url = new cocktail.core.url.URL();
	var _g1 = 0;
	var _g = cocktail.core.url.URL._parts.length;
	while(_g1 < _g) {
		var i = _g1++;
		Reflect.setField(url,cocktail.core.url.URL._parts[i],r.matched(i));
	}
	if(cocktail.core.url.URL.isRelative(url) == true) {
		if(url.directory == null && url.host != null) {
			url.file = url.host;
			url.host = null;
		}
	}
	return url;
};
cocktail.core.url.URL.toString = function(url) {
	var result = "";
	if(url.scheme != null) result += url.scheme + "://";
	if(url.user != null) result += url.user + ":";
	if(url.password != null) result += url.password + "@";
	if(url.host != null) result += url.host;
	if(url.port != null) result += ":" + url.port;
	if(url.directory != null) result += url.directory;
	if(url.file != null) result += url.file;
	if(url.query != null) result += "?" + url.query;
	if(url.fragment != null) result += "#" + url.fragment;
	return result;
};
cocktail.core.url.URL.appendURL = function(url,appendedURL) {
	if(cocktail.core.url.URL.isRelative(url) == true) return cocktail.core.url.URL.appendToRelativeURL(url,appendedURL); else return cocktail.core.url.URL.appendToAbsoluteURL(url,appendedURL);
};
cocktail.core.url.URL.isRelative = function(url) {
	return url.scheme == null;
};
cocktail.core.url.URL.appendToRelativeURL = function(url,appendedURL) {
	if(url.directory == null || url.host == null) return cocktail.core.url.URL.cloneURL(appendedURL);
	var resultURL = new cocktail.core.url.URL();
	resultURL.host = url.host;
	resultURL.directory = url.directory;
	if(appendedURL.host != null) resultURL.directory += appendedURL.host;
	if(appendedURL.directory != null) {
		var directory = appendedURL.directory;
		if(appendedURL.host == null) resultURL.directory += HxOverrides.substr(directory,1,null); else resultURL.directory += directory;
		resultURL.directory += HxOverrides.substr(appendedURL.directory,1,null);
	}
	if(appendedURL.file != null) resultURL.file = appendedURL.file;
	resultURL.path = resultURL.directory + resultURL.file;
	if(appendedURL.query != null) resultURL.query = appendedURL.query;
	if(appendedURL.fragment != null) resultURL.fragment = appendedURL.fragment;
	return resultURL;
};
cocktail.core.url.URL.appendToAbsoluteURL = function(url,appendedURL) {
	var resultURL = new cocktail.core.url.URL();
	if(url.scheme != null) resultURL.scheme = url.scheme;
	if(url.host != null) resultURL.host = url.host;
	var directory = "";
	if(url.directory != null) directory = url.directory;
	if(appendedURL.host != null) appendedURL.directory += appendedURL.host;
	if(appendedURL.directory != null) directory += appendedURL.directory;
	resultURL.directory = directory;
	if(appendedURL.file != null) resultURL.file = appendedURL.file;
	resultURL.path = resultURL.directory + resultURL.file;
	if(appendedURL.query != null) resultURL.query = appendedURL.query;
	if(appendedURL.fragment != null) resultURL.fragment = appendedURL.fragment;
	return resultURL;
};
cocktail.core.url.URL.cloneURL = function(url) {
	var clonedURL = new cocktail.core.url.URL();
	clonedURL.url = url.url;
	clonedURL.source = url.source;
	clonedURL.scheme = url.scheme;
	clonedURL.authority = url.authority;
	clonedURL.userInfo = url.userInfo;
	clonedURL.password = url.password;
	clonedURL.host = url.host;
	clonedURL.port = url.port;
	clonedURL.relative = url.relative;
	clonedURL.path = url.path;
	clonedURL.directory = url.directory;
	clonedURL.file = url.file;
	clonedURL.query = url.query;
	clonedURL.fragment = url.fragment;
	return clonedURL;
};
cocktail.core.url.URL.prototype = {
	__class__: cocktail.core.url.URL
};
cocktail.core.window = {};
cocktail.core.window.Window = function(htmlDocument,platform) {
	cocktail.core.event.EventCallback.call(this);
	this.platform = platform;
	this.init(htmlDocument,platform);
};
$hxClasses["cocktail.core.window.Window"] = cocktail.core.window.Window;
cocktail.core.window.Window.__name__ = ["cocktail","core","window","Window"];
cocktail.core.window.Window.__super__ = cocktail.core.event.EventCallback;
cocktail.core.window.Window.prototype = $extend(cocktail.core.event.EventCallback.prototype,{
	dispose: function() {
		this.document = null;
		this.history.dispose();
		this.history = null;
		this.platform.dispose();
		this.platform = null;
	}
	,init: function(htmlDocument,platform) {
		this.document = htmlDocument;
		this.history = new cocktail.core.history.History(htmlDocument);
	}
	,open: function(url,name) {
		if(name == null) name = "_blank";
		this.document.navigateToURL(url,name);
	}
	,get_innerHeight: function() {
		return Math.floor(this.platform.get_viewportHeight());
	}
	,get_innerWidth: function() {
		return Math.floor(this.platform.get_viewportWidth());
	}
	,__class__: cocktail.core.window.Window
	,__properties__: $extend(cocktail.core.event.EventCallback.prototype.__properties__,{get_innerWidth:"get_innerWidth",get_innerHeight:"get_innerHeight"})
});
cocktail.plugin = {};
cocktail.plugin.Plugin = function(node,elementAttributes,params,loadComplete,loadError) {
	this.viewport = new cocktail.core.geom.RectangleVO();
	this._node = node;
	this._loadComplete = loadComplete;
	this._loadError = loadError;
	this._elementAttributes = elementAttributes;
	this._params = params;
};
$hxClasses["cocktail.plugin.Plugin"] = cocktail.plugin.Plugin;
cocktail.plugin.Plugin.__name__ = ["cocktail","plugin","Plugin"];
cocktail.plugin.Plugin.prototype = {
	updateViewport: function(x,y,width,height) {
	}
	,dispose: function() {
	}
	,isCompositedPlugin: function() {
		return false;
	}
	,attach: function(graphicsContext) {
	}
	,detach: function(graphicsContext) {
	}
	,__class__: cocktail.plugin.Plugin
};
cocktail.plugin.swf = {};
cocktail.plugin.swf.SWFPlugin = function(node,elementAttributes,params,loadComplete,loadError) {
	cocktail.plugin.Plugin.call(this,node,elementAttributes,params,loadComplete,loadError);
};
$hxClasses["cocktail.plugin.swf.SWFPlugin"] = cocktail.plugin.swf.SWFPlugin;
cocktail.plugin.swf.SWFPlugin.__name__ = ["cocktail","plugin","swf","SWFPlugin"];
cocktail.plugin.swf.SWFPlugin.__super__ = cocktail.plugin.Plugin;
cocktail.plugin.swf.SWFPlugin.prototype = $extend(cocktail.plugin.Plugin.prototype,{
	__class__: cocktail.plugin.swf.SWFPlugin
});
cocktail.port = {};
cocktail.port.base = {};
cocktail.port.base.FontBuilderBase = function() {
};
$hxClasses["cocktail.port.base.FontBuilderBase"] = cocktail.port.base.FontBuilderBase;
cocktail.port.base.FontBuilderBase.__name__ = ["cocktail","port","base","FontBuilderBase"];
cocktail.port.base.FontBuilderBase.prototype = {
	dispose: function() {
	}
	,getFontMetrics: function(fontFamily,fontSize) {
		return new cocktail.core.font.FontMetricsVO(12.0,12.0,12.0,12.0,3.0,3.0,3.0,5.0);
	}
	,createNativeTextElement: function(text,style,fontFamily) {
		return null;
	}
	,getNativeFontFamily: function(fontFamily) {
		return null;
	}
	,__class__: cocktail.port.base.FontBuilderBase
};
cocktail.port.base.GraphicsSurfaceBase = function() {
	this._useTransparency = false;
	this._useTransformations = false;
	this._alpha = 0.0;
};
$hxClasses["cocktail.port.base.GraphicsSurfaceBase"] = cocktail.port.base.GraphicsSurfaceBase;
cocktail.port.base.GraphicsSurfaceBase.__name__ = ["cocktail","port","base","GraphicsSurfaceBase"];
cocktail.port.base.GraphicsSurfaceBase.prototype = {
	initBitmapData: function(width,height) {
	}
	,dispose: function() {
	}
	,clear: function(x,y,width,height) {
	}
	,beginTransparency: function(alpha) {
		this._useTransparency = true;
		this._alpha = alpha;
	}
	,copyRect: function(rect,x,y) {
	}
	,endTransparency: function() {
		this._useTransparency = false;
	}
	,beginTransformations: function(matrix) {
		this._useTransformations = true;
		this._matrix = matrix;
	}
	,endTransformations: function() {
		this._matrix = null;
		this._useTransformations = false;
	}
	,drawImage: function(bitmapData,matrix,sourceRect,clipRect) {
	}
	,copyPixels: function(bitmapData,sourceRect,destPoint,clipRect) {
	}
	,fillRect: function(rect,color,clipRect) {
	}
	,__class__: cocktail.port.base.GraphicsSurfaceBase
};
cocktail.port.base.KeyboardListenerBase = function(platform) {
	this._platform = platform;
	this.setNativeListeners();
};
$hxClasses["cocktail.port.base.KeyboardListenerBase"] = cocktail.port.base.KeyboardListenerBase;
cocktail.port.base.KeyboardListenerBase.__name__ = ["cocktail","port","base","KeyboardListenerBase"];
cocktail.port.base.KeyboardListenerBase.prototype = {
	dispose: function() {
		this.removeNativeListeners();
		this._platform = null;
	}
	,onNativeKeyDown: function(event) {
		if(this.onKeyDown != null) this.onKeyDown(this.getKeyData(event));
	}
	,onNativeKeyUp: function(event) {
		if(this.onKeyUp != null) this.onKeyUp(this.getKeyData(event));
	}
	,setNativeListeners: function() {
	}
	,removeNativeListeners: function() {
	}
	,getKeyData: function(event) {
		return null;
	}
	,__class__: cocktail.port.base.KeyboardListenerBase
};
cocktail.port.base.MouseListenerBase = function(platform) {
	this._platform = platform;
	this.setNativeListeners();
};
$hxClasses["cocktail.port.base.MouseListenerBase"] = cocktail.port.base.MouseListenerBase;
cocktail.port.base.MouseListenerBase.__name__ = ["cocktail","port","base","MouseListenerBase"];
cocktail.port.base.MouseListenerBase.prototype = {
	dispose: function() {
		this.removeNativeListeners();
		this._platform = null;
	}
	,setMouseCursor: function(cursor) {
	}
	,onNativeMouseDown: function(event) {
		if(this.onMouseDown != null) this.onMouseDown(this.getMouseEvent(event));
	}
	,onNativeMouseUp: function(event) {
		if(this.onMouseUp != null) this.onMouseUp(this.getMouseEvent(event));
	}
	,onNativeMouseMove: function(event) {
		if(this.onMouseMove != null) this.onMouseMove(this.getMouseEvent(event));
	}
	,onNativeMouseWheel: function(event) {
		if(this.onMouseWheel != null) this.onMouseWheel(this.getWheelEvent(event));
	}
	,onNativeMouseLeave: function(event) {
		if(this.onMouseLeave != null) this.onMouseLeave(this.getEvent(event));
	}
	,setNativeListeners: function() {
	}
	,removeNativeListeners: function() {
	}
	,getMouseEvent: function(event) {
		return null;
	}
	,getWheelEvent: function(event) {
		return null;
	}
	,getEvent: function(event) {
		return null;
	}
	,__class__: cocktail.port.base.MouseListenerBase
};
cocktail.port.base.NativeHttpBase = function(timer) {
	cocktail.core.event.EventTarget.call(this);
	this._timer = timer;
};
$hxClasses["cocktail.port.base.NativeHttpBase"] = cocktail.port.base.NativeHttpBase;
cocktail.port.base.NativeHttpBase.__name__ = ["cocktail","port","base","NativeHttpBase"];
cocktail.port.base.NativeHttpBase.__super__ = cocktail.core.event.EventTarget;
cocktail.port.base.NativeHttpBase.prototype = $extend(cocktail.core.event.EventTarget.prototype,{
	load: function(url,method,data,authorRequestHeaders,dataFormat) {
		this.status = 0;
		this.total = 0;
		this.loaded = 0;
		this.responseHeaders = new haxe.ds.StringMap();
		this.responseHeadersLoaded = false;
		this.response = null;
		this.error = false;
		this.complete = false;
		this._closed = false;
		this._url = url;
		this.doLoad(url,method,data,authorRequestHeaders,dataFormat);
		this._timer.delay($bind(this,this.onLoadProgress),50);
	}
	,close: function() {
		this._closed = true;
	}
	,doLoad: function(url,method,data,authorRequestHeaders,dataFormat) {
	}
	,onLoadProgress: function(time) {
		if(this.error == true) {
			var errorEvent = new cocktail.core.event.Event();
			errorEvent.initEvent("error",false,false);
			this.dispatchEvent(errorEvent);
		} else if(this.complete == true) {
			var loadEvent = new cocktail.core.event.Event();
			loadEvent.initEvent("load",false,false);
			this.dispatchEvent(loadEvent);
		} else if(this._closed == false) {
			var progressEvent = new cocktail.core.event.ProgressEvent();
			progressEvent.initProgressEvent("progress",false,false,false,this.get_loaded(),this.get_total());
			this.dispatchEvent(progressEvent);
			this._timer.delay($bind(this,this.onLoadProgress),50);
		}
	}
	,get_total: function() {
		return -1;
	}
	,get_loaded: function() {
		return -1;
	}
	,__class__: cocktail.port.base.NativeHttpBase
	,__properties__: {get_loaded:"get_loaded",get_total:"get_total"}
});
cocktail.port.base.NativeInputBase = function(node) {
	this._node = node;
};
$hxClasses["cocktail.port.base.NativeInputBase"] = cocktail.port.base.NativeInputBase;
cocktail.port.base.NativeInputBase.__name__ = ["cocktail","port","base","NativeInputBase"];
cocktail.port.base.NativeInputBase.prototype = {
	attach: function(graphicContext) {
	}
	,detach: function(graphicContext) {
	}
	,focus: function() {
	}
	,blur: function() {
	}
	,dispose: function() {
	}
	,get_viewport: function() {
		return this.viewport;
	}
	,set_viewport: function(value) {
		return this.viewport = value;
	}
	,get_clipRect: function() {
		return this.clipRect;
	}
	,set_clipRect: function(value) {
		return this.clipRect = value;
	}
	,get_value: function() {
		return this.value;
	}
	,set_value: function(textValue) {
		return this.value = textValue;
	}
	,get_checked: function() {
		return this.checked;
	}
	,set_checked: function(value) {
		return this.checked = value;
	}
	,set_maxLength: function(value) {
		return this.maxLength = value;
	}
	,set_disabled: function(value) {
		return this.disabled = value;
	}
	,set_readonly: function(value) {
		return this.readonly = value;
	}
	,get_intrinsicWidth: function() {
		return 0;
	}
	,get_intrinsicHeight: function() {
		return 0;
	}
	,__class__: cocktail.port.base.NativeInputBase
	,__properties__: {set_clipRect:"set_clipRect",get_clipRect:"get_clipRect",set_viewport:"set_viewport",get_viewport:"get_viewport",get_intrinsicHeight:"get_intrinsicHeight",get_intrinsicWidth:"get_intrinsicWidth",set_readonly:"set_readonly",set_disabled:"set_disabled",set_maxLength:"set_maxLength",set_checked:"set_checked",get_checked:"get_checked",set_value:"set_value",get_value:"get_value"}
};
cocktail.port.base.NativeLayerBase = function() {
	this.graphics = new cocktail.port.base.GraphicsSurfaceBase();
};
$hxClasses["cocktail.port.base.NativeLayerBase"] = cocktail.port.base.NativeLayerBase;
cocktail.port.base.NativeLayerBase.__name__ = ["cocktail","port","base","NativeLayerBase"];
cocktail.port.base.NativeLayerBase.prototype = {
	dispose: function() {
		this.graphics.dispose();
		this.graphics = null;
	}
	,attach: function(platformLayer,index) {
	}
	,detach: function(platformLayer) {
	}
	,initBitmapData: function(width,height) {
	}
	,__class__: cocktail.port.base.NativeLayerBase
};
cocktail.port.base.NativeMedia = function() {
	this.set_alpha(1.0);
	this.set_matrix(new cocktail.core.geom.Matrix());
	this.set_viewport(new cocktail.core.geom.RectangleVO());
};
$hxClasses["cocktail.port.base.NativeMedia"] = cocktail.port.base.NativeMedia;
cocktail.port.base.NativeMedia.__name__ = ["cocktail","port","base","NativeMedia"];
cocktail.port.base.NativeMedia.prototype = {
	play: function() {
	}
	,pause: function() {
	}
	,seek: function(time) {
	}
	,canPlayType: function(type) {
		return null;
	}
	,attach: function(graphicsContext) {
	}
	,detach: function(graphicsContext) {
	}
	,onNativeLoadedMetaData: function() {
		if(this.onLoadedMetaData != null) {
			var loaddedMetadataEvent = new cocktail.core.event.Event();
			loaddedMetadataEvent.initEvent("loadedmetadata",false,false);
			this.onLoadedMetaData(loaddedMetadataEvent);
		}
	}
	,get_bytesTotal: function() {
		return 0;
	}
	,get_bytesLoaded: function() {
		return 0;
	}
	,get_currentTime: function() {
		return 0;
	}
	,get_height: function() {
		return null;
	}
	,get_width: function() {
		return null;
	}
	,get_duration: function() {
		return 0;
	}
	,set_src: function(value) {
		return value;
	}
	,set_volume: function(value) {
		return value;
	}
	,get_viewport: function() {
		return this.viewport;
	}
	,set_viewport: function(value) {
		return this.viewport = value;
	}
	,get_matrix: function() {
		return this.matrix;
	}
	,set_matrix: function(value) {
		return this.matrix = value;
	}
	,get_alpha: function() {
		return this.alpha;
	}
	,set_alpha: function(value) {
		return this.alpha = value;
	}
	,__class__: cocktail.port.base.NativeMedia
	,__properties__: {set_alpha:"set_alpha",get_alpha:"get_alpha",set_matrix:"set_matrix",get_matrix:"get_matrix",set_viewport:"set_viewport",get_viewport:"get_viewport",get_bytesTotal:"get_bytesTotal",get_bytesLoaded:"get_bytesLoaded",get_currentTime:"get_currentTime",get_height:"get_height",get_width:"get_width",set_src:"set_src",set_volume:"set_volume",get_duration:"get_duration"}
};
cocktail.port.base.NativeTextBase = function(nativeTextElement) {
	this._nativeTextElement = nativeTextElement;
};
$hxClasses["cocktail.port.base.NativeTextBase"] = cocktail.port.base.NativeTextBase;
cocktail.port.base.NativeTextBase.__name__ = ["cocktail","port","base","NativeTextBase"];
cocktail.port.base.NativeTextBase.prototype = {
	dispose: function() {
		this._nativeTextElement = null;
	}
	,getBitmap: function(bounds) {
		return null;
	}
	,get_width: function() {
		return 0.0;
	}
	,__class__: cocktail.port.base.NativeTextBase
	,__properties__: {get_width:"get_width"}
};
cocktail.port.base.NativeTextInputBase = function(node) {
	cocktail.port.base.NativeInputBase.call(this,node);
};
$hxClasses["cocktail.port.base.NativeTextInputBase"] = cocktail.port.base.NativeTextInputBase;
cocktail.port.base.NativeTextInputBase.__name__ = ["cocktail","port","base","NativeTextInputBase"];
cocktail.port.base.NativeTextInputBase.__super__ = cocktail.port.base.NativeInputBase;
cocktail.port.base.NativeTextInputBase.prototype = $extend(cocktail.port.base.NativeInputBase.prototype,{
	set_italic: function(value) {
		return this.italic = value;
	}
	,get_italic: function() {
		return this.italic;
	}
	,get_bold: function() {
		return this.bold;
	}
	,set_bold: function(value) {
		return this.bold = value;
	}
	,set_color: function(value) {
		return this.color = value;
	}
	,get_color: function() {
		return this.color;
	}
	,set_fontFamily: function(value) {
		return this.fontFamily = value;
	}
	,get_fontFamily: function() {
		return this.fontFamily;
	}
	,set_fontSize: function(value) {
		return this.fontSize = value;
	}
	,get_fontSize: function() {
		return this.fontSize;
	}
	,set_letterSpacing: function(value) {
		return this.letterSpacing = value;
	}
	,get_letterSpacing: function() {
		return this.letterSpacing;
	}
	,get_intrinsicWidth: function() {
		return 150;
	}
	,get_intrinsicHeight: function() {
		return 30 | 0;
	}
	,__class__: cocktail.port.base.NativeTextInputBase
	,__properties__: $extend(cocktail.port.base.NativeInputBase.prototype.__properties__,{set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_letterSpacing:"set_letterSpacing",get_letterSpacing:"get_letterSpacing",set_fontFamily:"set_fontFamily",get_fontFamily:"get_fontFamily",set_color:"set_color",get_color:"get_color",set_bold:"set_bold",get_bold:"get_bold",set_italic:"set_italic",get_italic:"get_italic"})
});
cocktail.port.base.PlatformBase = function() {
	this.setNativeListeners();
	this.mouseListener = new cocktail.port.base.MouseListenerBase(this);
	this.keyboardListener = new cocktail.port.base.KeyboardListenerBase(this);
	this.touchListener = new cocktail.port.base.TouchListenerBase(this);
};
$hxClasses["cocktail.port.base.PlatformBase"] = cocktail.port.base.PlatformBase;
cocktail.port.base.PlatformBase.__name__ = ["cocktail","port","base","PlatformBase"];
cocktail.port.base.PlatformBase.prototype = {
	dispose: function() {
		this.removeNativeListeners();
		this.mouseListener.dispose();
		this.mouseListener = null;
		this.keyboardListener.dispose();
		this.keyboardListener = null;
		this.touchListener.dispose();
		this.touchListener = null;
	}
	,open: function(url,name) {
	}
	,enterFullscreen: function() {
	}
	,exitFullscreen: function() {
	}
	,fullScreenEnabled: function() {
		return false;
	}
	,fullscreen: function() {
		return false;
	}
	,getRootPlatformLayer: function() {
		return null;
	}
	,getTopPlatformLayer: function() {
		return null;
	}
	,getNativeViewportHeight: function() {
		return -1;
	}
	,getNativeViewportWidth: function() {
		return -1;
	}
	,getNativeViewportX: function() {
		return -1;
	}
	,getNativeViewportY: function() {
		return -1;
	}
	,onViewportUpdate: function() {
	}
	,onNativeResize: function(event) {
		if(this.onResize != null) this.onResize(this.getUIEvent(event));
	}
	,onNativeFullScreenChange: function(event) {
		if(this.onFullScreenChange != null) this.onFullScreenChange(this.getEvent(event));
	}
	,onNativeOrientationChange: function(event) {
		if(this.onOrientationChange != null) this.onOrientationChange(this.getEvent(event));
	}
	,triggerResizeEvent: function() {
		var resizeEvent = new cocktail.core.event.UIEvent();
		resizeEvent.initUIEvent("resize",false,false,null,0.0);
		if(this.onResize != null) this.onResize(resizeEvent);
	}
	,setNativeListeners: function() {
	}
	,removeNativeListeners: function() {
	}
	,getUIEvent: function(event) {
		return null;
	}
	,getEvent: function(event) {
		return null;
	}
	,set_viewport: function(value) {
		this.viewport = value;
		this.onViewportUpdate();
		this.triggerResizeEvent();
		return this.viewport = value;
	}
	,get_viewportHeight: function() {
		if(this.viewport != null) return this.viewport.height; else return this.getNativeViewportHeight();
	}
	,get_viewportWidth: function() {
		if(this.viewport != null) return this.viewport.width; else return this.getNativeViewportWidth();
	}
	,get_viewportX: function() {
		if(this.viewport != null) return this.viewport.x; else return this.getNativeViewportX();
	}
	,get_viewportY: function() {
		if(this.viewport != null) return this.viewport.y; else return this.getNativeViewportY();
	}
	,__class__: cocktail.port.base.PlatformBase
	,__properties__: {set_viewport:"set_viewport",get_viewportY:"get_viewportY",get_viewportX:"get_viewportX",get_viewportWidth:"get_viewportWidth",get_viewportHeight:"get_viewportHeight"}
};
cocktail.port.base.PlatformTimerBase = function(updateCallback) {
};
$hxClasses["cocktail.port.base.PlatformTimerBase"] = cocktail.port.base.PlatformTimerBase;
cocktail.port.base.PlatformTimerBase.__name__ = ["cocktail","port","base","PlatformTimerBase"];
cocktail.port.base.PlatformTimerBase.prototype = {
	dispose: function() {
	}
	,getTimer: function() {
		return -1;
	}
	,__class__: cocktail.port.base.PlatformTimerBase
};
cocktail.port.base.ResourceBase = function(url) {
	cocktail.core.event.EventTarget.call(this);
	this.loaded = false;
	this.loadedWithError = false;
	this.load(url);
};
$hxClasses["cocktail.port.base.ResourceBase"] = cocktail.port.base.ResourceBase;
cocktail.port.base.ResourceBase.__name__ = ["cocktail","port","base","ResourceBase"];
cocktail.port.base.ResourceBase.__super__ = cocktail.core.event.EventTarget;
cocktail.port.base.ResourceBase.prototype = $extend(cocktail.core.event.EventTarget.prototype,{
	load: function(url) {
	}
	,onLoadComplete: function() {
		this.loaded = true;
		var loadEvent = new cocktail.core.event.UIEvent();
		loadEvent.initUIEvent("load",false,false,null,0.0);
		this.dispatchEvent(loadEvent);
	}
	,onLoadError: function() {
		this.loadedWithError = true;
		var errorEvent = new cocktail.core.event.UIEvent();
		errorEvent.initUIEvent("error",false,false,null,0.0);
		this.dispatchEvent(errorEvent);
	}
	,__class__: cocktail.port.base.ResourceBase
});
cocktail.port.base.TouchListenerBase = function(platform) {
	this._platform = platform;
	this.setNativeListeners();
};
$hxClasses["cocktail.port.base.TouchListenerBase"] = cocktail.port.base.TouchListenerBase;
cocktail.port.base.TouchListenerBase.__name__ = ["cocktail","port","base","TouchListenerBase"];
cocktail.port.base.TouchListenerBase.prototype = {
	dispose: function() {
		this.removeNativeListeners();
		this._platform = null;
	}
	,onNativeTouchStart: function(event) {
		if(this.onTouchStart != null) this.onTouchStart(this.getTouchEvent(event));
	}
	,onNativeTouchEnd: function(event) {
		if(this.onTouchEnd != null) this.onTouchEnd(this.getTouchEvent(event));
	}
	,onNativeTouchMove: function(event) {
		if(this.onTouchMove != null) this.onTouchMove(this.getTouchEvent(event));
	}
	,setNativeListeners: function() {
	}
	,removeNativeListeners: function() {
	}
	,getTouchEvent: function(event) {
		return null;
	}
	,__class__: cocktail.port.base.TouchListenerBase
};
var format = {};
format.SVG = function(content) {
	this.data = new format.svg.SVGData(Xml.parse(content));
};
$hxClasses["format.SVG"] = format.SVG;
format.SVG.__name__ = ["format","SVG"];
format.SVG.prototype = {
	render: function(graphics,x,y,width,height) {
		if(height == null) height = -1;
		if(width == null) width = -1;
		if(y == null) y = 0;
		if(x == null) x = 0;
		var matrix = new openfl.geom.Matrix();
		matrix.identity();
		matrix.translate(x,y);
		if(width > -1 && height > -1) matrix.scale(width / this.data.width,height / this.data.height);
		var renderer = new format.svg.SVGRenderer(this.data);
		renderer.render(graphics,matrix);
	}
	,__class__: format.SVG
};
format.gfx = {};
format.gfx.Gfx = function() {
};
$hxClasses["format.gfx.Gfx"] = format.gfx.Gfx;
format.gfx.Gfx.__name__ = ["format","gfx","Gfx"];
format.gfx.Gfx.prototype = {
	geometryOnly: function() {
		return false;
	}
	,size: function(inWidth,inHeight) {
	}
	,beginGradientFill: function(grad) {
	}
	,beginFill: function(color,alpha) {
	}
	,endFill: function() {
	}
	,lineStyle: function(style) {
	}
	,endLineStyle: function() {
	}
	,moveTo: function(inX,inY) {
	}
	,lineTo: function(inX,inY) {
	}
	,curveTo: function(inCX,inCY,inX,inY) {
	}
	,renderText: function(text) {
	}
	,eof: function() {
	}
	,__class__: format.gfx.Gfx
};
format.gfx.Gfx2Haxe = function() {
	format.gfx.Gfx.call(this);
	this.commands = [];
};
$hxClasses["format.gfx.Gfx2Haxe"] = format.gfx.Gfx2Haxe;
format.gfx.Gfx2Haxe.__name__ = ["format","gfx","Gfx2Haxe"];
format.gfx.Gfx2Haxe.__super__ = format.gfx.Gfx;
format.gfx.Gfx2Haxe.prototype = $extend(format.gfx.Gfx.prototype,{
	f2a: function(f) {
		if(Math.abs(f) < 0.000001) return "0";
		if(Math.abs(1 - f) < 0.000001) return "1";
		return f + "";
	}
	,newMatrix: function(m) {
		return "new Matrix(" + this.f2a(m.a) + "," + this.f2a(m.b) + "," + this.f2a(m.c) + "," + this.f2a(m.d) + "," + this.f2a(m.tx) + "," + this.f2a(m.ty) + ")";
	}
	,beginGradientFill: function(grad) {
		this.commands.push("g.beginGradientFill(" + Std.string(grad.type) + "," + Std.string(grad.colors) + "," + Std.string(grad.alphas) + "," + Std.string(grad.ratios) + "," + this.newMatrix(grad.matrix) + "," + Std.string(grad.spread) + "," + Std.string(grad.interp) + "," + grad.focus + ");");
	}
	,beginFill: function(color,alpha) {
		this.commands.push("g.beginFill(" + color + "," + this.f2a(alpha) + ");");
	}
	,endFill: function() {
		this.commands.push("g.endFill();");
	}
	,lineStyle: function(style) {
		this.commands.push("g.lineStyle(" + this.f2a(style.thickness) + "," + style.color + "," + this.f2a(style.alpha) + "," + (style.pixelHinting == null?"null":"" + style.pixelHinting) + "," + Std.string(style.scaleMode) + "," + Std.string(style.capsStyle) + "," + Std.string(style.jointStyle) + "," + this.f2a(style.miterLimit));
	}
	,endLineStyle: function() {
		this.commands.push("g.lineStyle();");
	}
	,moveTo: function(inX,inY) {
		this.commands.push("g.moveTo(" + inX + "," + inY + ");");
	}
	,lineTo: function(inX,inY) {
		this.commands.push("g.lineTo(" + inX + "," + inY + ");");
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		this.commands.push("g.curveTo(" + inCX + "," + inCY + "," + inX + "," + inY + ");");
	}
	,__class__: format.gfx.Gfx2Haxe
});
openfl.display.CapsStyle = $hxClasses["openfl.display.CapsStyle"] = { __ename__ : ["openfl","display","CapsStyle"], __constructs__ : ["NONE","ROUND","SQUARE"] };
openfl.display.CapsStyle.NONE = ["NONE",0];
openfl.display.CapsStyle.NONE.toString = $estr;
openfl.display.CapsStyle.NONE.__enum__ = openfl.display.CapsStyle;
openfl.display.CapsStyle.ROUND = ["ROUND",1];
openfl.display.CapsStyle.ROUND.toString = $estr;
openfl.display.CapsStyle.ROUND.__enum__ = openfl.display.CapsStyle;
openfl.display.CapsStyle.SQUARE = ["SQUARE",2];
openfl.display.CapsStyle.SQUARE.toString = $estr;
openfl.display.CapsStyle.SQUARE.__enum__ = openfl.display.CapsStyle;
openfl.display.InterpolationMethod = $hxClasses["openfl.display.InterpolationMethod"] = { __ename__ : ["openfl","display","InterpolationMethod"], __constructs__ : ["RGB","LINEAR_RGB"] };
openfl.display.InterpolationMethod.RGB = ["RGB",0];
openfl.display.InterpolationMethod.RGB.toString = $estr;
openfl.display.InterpolationMethod.RGB.__enum__ = openfl.display.InterpolationMethod;
openfl.display.InterpolationMethod.LINEAR_RGB = ["LINEAR_RGB",1];
openfl.display.InterpolationMethod.LINEAR_RGB.toString = $estr;
openfl.display.InterpolationMethod.LINEAR_RGB.__enum__ = openfl.display.InterpolationMethod;
openfl.display.JointStyle = $hxClasses["openfl.display.JointStyle"] = { __ename__ : ["openfl","display","JointStyle"], __constructs__ : ["MITER","ROUND","BEVEL"] };
openfl.display.JointStyle.MITER = ["MITER",0];
openfl.display.JointStyle.MITER.toString = $estr;
openfl.display.JointStyle.MITER.__enum__ = openfl.display.JointStyle;
openfl.display.JointStyle.ROUND = ["ROUND",1];
openfl.display.JointStyle.ROUND.toString = $estr;
openfl.display.JointStyle.ROUND.__enum__ = openfl.display.JointStyle;
openfl.display.JointStyle.BEVEL = ["BEVEL",2];
openfl.display.JointStyle.BEVEL.toString = $estr;
openfl.display.JointStyle.BEVEL.__enum__ = openfl.display.JointStyle;
openfl.display.LineScaleMode = $hxClasses["openfl.display.LineScaleMode"] = { __ename__ : ["openfl","display","LineScaleMode"], __constructs__ : ["HORIZONTAL","NONE","NORMAL","VERTICAL"] };
openfl.display.LineScaleMode.HORIZONTAL = ["HORIZONTAL",0];
openfl.display.LineScaleMode.HORIZONTAL.toString = $estr;
openfl.display.LineScaleMode.HORIZONTAL.__enum__ = openfl.display.LineScaleMode;
openfl.display.LineScaleMode.NONE = ["NONE",1];
openfl.display.LineScaleMode.NONE.toString = $estr;
openfl.display.LineScaleMode.NONE.__enum__ = openfl.display.LineScaleMode;
openfl.display.LineScaleMode.NORMAL = ["NORMAL",2];
openfl.display.LineScaleMode.NORMAL.toString = $estr;
openfl.display.LineScaleMode.NORMAL.__enum__ = openfl.display.LineScaleMode;
openfl.display.LineScaleMode.VERTICAL = ["VERTICAL",3];
openfl.display.LineScaleMode.VERTICAL.toString = $estr;
openfl.display.LineScaleMode.VERTICAL.__enum__ = openfl.display.LineScaleMode;
openfl.display.SpreadMethod = $hxClasses["openfl.display.SpreadMethod"] = { __ename__ : ["openfl","display","SpreadMethod"], __constructs__ : ["REPEAT","REFLECT","PAD"] };
openfl.display.SpreadMethod.REPEAT = ["REPEAT",0];
openfl.display.SpreadMethod.REPEAT.toString = $estr;
openfl.display.SpreadMethod.REPEAT.__enum__ = openfl.display.SpreadMethod;
openfl.display.SpreadMethod.REFLECT = ["REFLECT",1];
openfl.display.SpreadMethod.REFLECT.toString = $estr;
openfl.display.SpreadMethod.REFLECT.__enum__ = openfl.display.SpreadMethod;
openfl.display.SpreadMethod.PAD = ["PAD",2];
openfl.display.SpreadMethod.PAD.toString = $estr;
openfl.display.SpreadMethod.PAD.__enum__ = openfl.display.SpreadMethod;
format.gfx.GfxBytes = function(inBuffer,inFlags) {
	if(inFlags == null) inFlags = 0;
	format.gfx.Gfx.call(this);
	if(inBuffer == null) this.buffer = new openfl.utils.ByteArray(); else this.buffer = inBuffer;
};
$hxClasses["format.gfx.GfxBytes"] = format.gfx.GfxBytes;
format.gfx.GfxBytes.__name__ = ["format","gfx","GfxBytes"];
format.gfx.GfxBytes.fromString = function(inString) {
	if(format.gfx.GfxBytes.baseCoder == null) format.gfx.GfxBytes.baseCoder = new haxe.crypto.BaseCode(haxe.io.Bytes.ofString(format.gfx.GfxBytes.base64));
	var bytes = new openfl.utils.ByteArray();
	bytes.writeUTF(inString);
	return new format.gfx.GfxBytes(bytes);
};
format.gfx.GfxBytes.__super__ = format.gfx.Gfx;
format.gfx.GfxBytes.prototype = $extend(format.gfx.Gfx.prototype,{
	toString: function() {
		return "";
	}
	,eof: function() {
		this.buffer.writeByte(0);
	}
	,iterate: function(inGfx) {
		this.buffer.position = 0;
		while(true) {
			var _g = this.buffer.readByte();
			switch(_g) {
			case 0:
				return;
			case 1:
				var w = this.buffer.readFloat();
				var h = this.buffer.readFloat();
				inGfx.size(w,h);
				break;
			case 10:
				var col = this.readRGB();
				var alpha = this.buffer.readFloat();
				inGfx.beginFill(col,alpha);
				break;
			case 11:
				var grad = new format.gfx.Gradient();
				grad.type = Type.createEnumIndex(openfl.display.GradientType,this.buffer.readByte());
				var len = this.buffer.readByte();
				var _g1 = 0;
				while(_g1 < len) {
					var i = _g1++;
					grad.colors.push(this.readRGB());
					grad.alphas.push(this.buffer.readByte() / 255.0);
					grad.ratios.push(this.buffer.readByte());
				}
				grad.matrix.a = this.buffer.readFloat();
				grad.matrix.b = this.buffer.readFloat();
				grad.matrix.c = this.buffer.readFloat();
				grad.matrix.d = this.buffer.readFloat();
				grad.matrix.tx = this.buffer.readFloat();
				grad.matrix.ty = this.buffer.readFloat();
				grad.spread = format.gfx.GfxBytes.spreadMethods[this.buffer.readByte()];
				grad.interp = format.gfx.GfxBytes.interpolationMethods[this.buffer.readByte()];
				grad.focus = this.buffer.readFloat();
				inGfx.beginGradientFill(grad);
				break;
			case 12:
				inGfx.endFill();
				break;
			case 20:
				var style = new format.gfx.LineStyle();
				style.thickness = this.buffer.readFloat();
				style.color = this.readRGB();
				style.alpha = this.buffer.readFloat();
				style.pixelHinting = this.buffer.readByte() > 0;
				style.scaleMode = format.gfx.GfxBytes.scaleModes[this.buffer.readByte()];
				style.capsStyle = format.gfx.GfxBytes.capsStyles[this.buffer.readByte()];
				style.jointStyle = format.gfx.GfxBytes.jointStyles[this.buffer.readByte()];
				style.miterLimit = this.buffer.readFloat();
				inGfx.lineStyle(style);
				break;
			case 21:
				inGfx.endLineStyle();
				break;
			case 30:
				var x = this.buffer.readFloat();
				var y = this.buffer.readFloat();
				inGfx.moveTo(x,y);
				break;
			case 31:
				var x1 = this.buffer.readFloat();
				var y1 = this.buffer.readFloat();
				inGfx.lineTo(x1,y1);
				break;
			case 32:
				var cx = this.buffer.readFloat();
				var cy = this.buffer.readFloat();
				var x2 = this.buffer.readFloat();
				var y2 = this.buffer.readFloat();
				inGfx.curveTo(cx,cy,x2,y2);
				break;
			default:
				throw "Unknown gfx buffer format.";
			}
		}
	}
	,size: function(inWidth,inHeight) {
		this.buffer.writeByte(1);
		this.buffer.writeFloat(inWidth);
		this.buffer.writeFloat(inHeight);
	}
	,pushClipped: function(inVal) {
		this.buffer.writeByte(inVal < 0?0:inVal > 255.0?255:inVal | 0);
	}
	,writeRGB: function(inVal) {
		this.buffer.writeByte(inVal >> 16 & 255);
		this.buffer.writeByte(inVal >> 8 & 255);
		this.buffer.writeByte(inVal & 255);
	}
	,readRGB: function() {
		var r = this.buffer.readByte();
		var g = this.buffer.readByte();
		var b = this.buffer.readByte();
		return r << 16 | g << 8 | b;
	}
	,beginGradientFill: function(grad) {
		this.buffer.writeByte(11);
		this.buffer.writeByte(grad.type[1]);
		this.buffer.writeByte(grad.colors.length);
		var _g1 = 0;
		var _g = grad.colors.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.writeRGB((function($this) {
				var $r;
				var $int = grad.colors[i];
				$r = $int < 0?4294967296.0 + $int:$int + 0.0;
				return $r;
			}(this)) | 0);
			this.pushClipped(grad.alphas[i] * 255.0);
			this.pushClipped(grad.ratios[i]);
		}
		this.buffer.writeFloat(grad.matrix.a);
		this.buffer.writeFloat(grad.matrix.b);
		this.buffer.writeFloat(grad.matrix.c);
		this.buffer.writeFloat(grad.matrix.d);
		this.buffer.writeFloat(grad.matrix.tx);
		this.buffer.writeFloat(grad.matrix.ty);
		this.buffer.writeByte(grad.spread[1]);
		this.buffer.writeByte(grad.interp[1]);
		this.buffer.writeFloat(grad.focus);
	}
	,beginFill: function(color,alpha) {
		this.buffer.writeByte(10);
		this.writeRGB(color);
		this.buffer.writeFloat(alpha);
	}
	,endFill: function() {
		this.buffer.writeByte(12);
	}
	,lineStyle: function(style) {
		this.buffer.writeByte(20);
		this.buffer.writeFloat(style.thickness);
		this.writeRGB(style.color);
		this.buffer.writeFloat(style.alpha);
		this.buffer.writeByte(style.pixelHinting?1:0);
		this.buffer.writeByte(style.scaleMode[1]);
		this.buffer.writeByte(style.capsStyle[1]);
		this.buffer.writeByte(style.jointStyle[1]);
		this.buffer.writeFloat(style.miterLimit);
	}
	,endLineStyle: function() {
		this.buffer.writeByte(21);
	}
	,moveTo: function(inX,inY) {
		this.buffer.writeByte(30);
		this.buffer.writeFloat(inX);
		this.buffer.writeFloat(inY);
	}
	,lineTo: function(inX,inY) {
		this.buffer.writeByte(31);
		this.buffer.writeFloat(inX);
		this.buffer.writeFloat(inY);
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		this.buffer.writeByte(32);
		this.buffer.writeFloat(inCX);
		this.buffer.writeFloat(inCY);
		this.buffer.writeFloat(inX);
		this.buffer.writeFloat(inY);
	}
	,__class__: format.gfx.GfxBytes
});
format.gfx.GfxExtent = function() {
	format.gfx.Gfx.call(this);
	this.extent = null;
};
$hxClasses["format.gfx.GfxExtent"] = format.gfx.GfxExtent;
format.gfx.GfxExtent.__name__ = ["format","gfx","GfxExtent"];
format.gfx.GfxExtent.__super__ = format.gfx.Gfx;
format.gfx.GfxExtent.prototype = $extend(format.gfx.Gfx.prototype,{
	addExtent: function(inX,inY) {
		if(this.extent == null) {
			this.extent = new openfl.geom.Rectangle(inX,inY,0,0);
			return;
		}
		if(inX < this.extent.get_left()) this.extent.set_left(inX);
		if(inX > this.extent.get_right()) this.extent.set_right(inX);
		if(inY < this.extent.get_top()) this.extent.set_top(inY);
		if(inY > this.extent.get_bottom()) this.extent.set_bottom(inY);
	}
	,geometryOnly: function() {
		return true;
	}
	,moveTo: function(inX,inY) {
		this.addExtent(inX,inY);
	}
	,lineTo: function(inX,inY) {
		this.addExtent(inX,inY);
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		this.addExtent(inCX,inCY);
		this.addExtent(inX,inY);
	}
	,__class__: format.gfx.GfxExtent
});
format.gfx.GfxGraphics = function(inGraphics) {
	format.gfx.Gfx.call(this);
	this.graphics = inGraphics;
};
$hxClasses["format.gfx.GfxGraphics"] = format.gfx.GfxGraphics;
format.gfx.GfxGraphics.__name__ = ["format","gfx","GfxGraphics"];
format.gfx.GfxGraphics.__super__ = format.gfx.Gfx;
format.gfx.GfxGraphics.prototype = $extend(format.gfx.Gfx.prototype,{
	beginGradientFill: function(grad) {
		this.graphics.beginGradientFill(grad.type,grad.colors,grad.alphas,grad.ratios,grad.matrix,grad.spread,grad.interp,grad.focus);
	}
	,beginFill: function(color,alpha) {
		this.graphics.beginFill(color,alpha);
	}
	,endFill: function() {
		this.graphics.endFill();
	}
	,lineStyle: function(style) {
		this.graphics.lineStyle(style.thickness,style.color,style.alpha,style.pixelHinting,style.scaleMode,style.capsStyle,style.jointStyle,style.miterLimit);
	}
	,endLineStyle: function() {
		this.graphics.lineStyle();
	}
	,moveTo: function(inX,inY) {
		this.graphics.moveTo(inX,inY);
	}
	,lineTo: function(inX,inY) {
		this.graphics.lineTo(inX,inY);
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		this.graphics.curveTo(inCX,inCY,inX,inY);
	}
	,__class__: format.gfx.GfxGraphics
});
format.gfx.GfxTextFinder = function() {
	format.gfx.Gfx.call(this);
};
$hxClasses["format.gfx.GfxTextFinder"] = format.gfx.GfxTextFinder;
format.gfx.GfxTextFinder.__name__ = ["format","gfx","GfxTextFinder"];
format.gfx.GfxTextFinder.__super__ = format.gfx.Gfx;
format.gfx.GfxTextFinder.prototype = $extend(format.gfx.Gfx.prototype,{
	geometryOnly: function() {
		return true;
	}
	,renderText: function(inText) {
		if(this.text == null) this.text = inText;
	}
	,__class__: format.gfx.GfxTextFinder
});
format.gfx.Gradient = function() {
	this.type = openfl.display.GradientType.LINEAR;
	this.colors = [];
	this.alphas = [];
	this.ratios = [];
	this.matrix = new openfl.geom.Matrix();
	this.spread = openfl.display.SpreadMethod.PAD;
	this.interp = openfl.display.InterpolationMethod.RGB;
	this.focus = 0.0;
};
$hxClasses["format.gfx.Gradient"] = format.gfx.Gradient;
format.gfx.Gradient.__name__ = ["format","gfx","Gradient"];
format.gfx.Gradient.prototype = {
	__class__: format.gfx.Gradient
};
format.gfx.LineStyle = function() {
	this.thickness = 1.0;
	this.color = 0;
	this.alpha = 1.0;
	this.pixelHinting = false;
	this.scaleMode = openfl.display.LineScaleMode.NORMAL;
	this.capsStyle = openfl.display.CapsStyle.ROUND;
	this.jointStyle = openfl.display.JointStyle.ROUND;
	this.miterLimit = 3.0;
};
$hxClasses["format.gfx.LineStyle"] = format.gfx.LineStyle;
format.gfx.LineStyle.__name__ = ["format","gfx","LineStyle"];
format.gfx.LineStyle.prototype = {
	__class__: format.gfx.LineStyle
};
format.svg = {};
format.svg.FillType = $hxClasses["format.svg.FillType"] = { __ename__ : ["format","svg","FillType"], __constructs__ : ["FillGrad","FillSolid","FillNone"] };
format.svg.FillType.FillGrad = function(grad) { var $x = ["FillGrad",0,grad]; $x.__enum__ = format.svg.FillType; $x.toString = $estr; return $x; };
format.svg.FillType.FillSolid = function(colour) { var $x = ["FillSolid",1,colour]; $x.__enum__ = format.svg.FillType; $x.toString = $estr; return $x; };
format.svg.FillType.FillNone = ["FillNone",2];
format.svg.FillType.FillNone.toString = $estr;
format.svg.FillType.FillNone.__enum__ = format.svg.FillType;
format.svg.Grad = function(inType) {
	format.gfx.Gradient.call(this);
	this.type = inType;
	this.radius = 0.0;
	this.gradMatrix = new openfl.geom.Matrix();
	this.x1 = 0.0;
	this.y1 = 0.0;
	this.x2 = 0.0;
	this.y2 = 0.0;
};
$hxClasses["format.svg.Grad"] = format.svg.Grad;
format.svg.Grad.__name__ = ["format","svg","Grad"];
format.svg.Grad.__super__ = format.gfx.Gradient;
format.svg.Grad.prototype = $extend(format.gfx.Gradient.prototype,{
	updateMatrix: function(inMatrix) {
		var dx = this.x2 - this.x1;
		var dy = this.y2 - this.y1;
		var theta = Math.atan2(dy,dx);
		var len = Math.sqrt(dx * dx + dy * dy);
		var mtx = new openfl.geom.Matrix();
		if(this.type == openfl.display.GradientType.LINEAR) {
			mtx.createGradientBox(1.0,1.0);
			mtx.scale(len,len);
		} else {
			if(this.radius != 0.0) this.focus = len / this.radius;
			mtx.createGradientBox(1.0,1.0);
			mtx.translate(-0.5,-0.5);
			mtx.scale(this.radius * 2,this.radius * 2);
		}
		mtx.rotate(theta);
		mtx.translate(this.x1,this.y1);
		mtx.concat(this.gradMatrix);
		mtx.concat(inMatrix);
		this.matrix = mtx;
	}
	,__class__: format.svg.Grad
});
format.svg.Group = function() {
	this.name = "";
	this.children = [];
};
$hxClasses["format.svg.Group"] = format.svg.Group;
format.svg.Group.__name__ = ["format","svg","Group"];
format.svg.Group.prototype = {
	hasGroup: function(inName) {
		return this.findGroup(inName) != null;
	}
	,findGroup: function(inName) {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			switch(child[1]) {
			case 1:
				var group = child[2];
				if(group.name == inName) return group;
				break;
			default:
			}
		}
		return null;
	}
	,__class__: format.svg.Group
};
format.svg.DisplayElement = $hxClasses["format.svg.DisplayElement"] = { __ename__ : ["format","svg","DisplayElement"], __constructs__ : ["DisplayPath","DisplayGroup","DisplayText"] };
format.svg.DisplayElement.DisplayPath = function(path) { var $x = ["DisplayPath",0,path]; $x.__enum__ = format.svg.DisplayElement; $x.toString = $estr; return $x; };
format.svg.DisplayElement.DisplayGroup = function(group) { var $x = ["DisplayGroup",1,group]; $x.__enum__ = format.svg.DisplayElement; $x.toString = $estr; return $x; };
format.svg.DisplayElement.DisplayText = function(text) { var $x = ["DisplayText",2,text]; $x.__enum__ = format.svg.DisplayElement; $x.toString = $estr; return $x; };
format.svg.Path = function() {
};
$hxClasses["format.svg.Path"] = format.svg.Path;
format.svg.Path.__name__ = ["format","svg","Path"];
format.svg.Path.prototype = {
	__class__: format.svg.Path
};
format.svg.PathParser = function() {
	if(format.svg.PathParser.sCommandArgs == null) {
		format.svg.PathParser.sCommandArgs = [];
		var _g = 0;
		while(_g < 128) {
			var i = _g++;
			format.svg.PathParser.sCommandArgs[i] = this.commandArgs(i);
		}
	}
};
$hxClasses["format.svg.PathParser"] = format.svg.PathParser;
format.svg.PathParser.__name__ = ["format","svg","PathParser"];
format.svg.PathParser.prototype = {
	parse: function(pathToParse,inConvertCubics) {
		this.lastMoveX = this.lastMoveY = 0;
		var pos = 0;
		var args = new Array();
		var segments = new Array();
		var current_command_pos = 0;
		var current_command = -1;
		var current_args = -1;
		this.prev = null;
		var len = pathToParse.length;
		var finished = false;
		while(pos <= len) {
			var code;
			if(pos == len) code = 32; else code = HxOverrides.cca(pathToParse,pos);
			var command;
			if(code > 0 && code < 128) command = format.svg.PathParser.sCommandArgs[code]; else command = format.svg.PathParser.UNKNOWN;
			if(command == format.svg.PathParser.UNKNOWN) throw "failed parsing path near '" + HxOverrides.substr(pathToParse,pos,null) + "'";
			if(command == format.svg.PathParser.SEPARATOR) pos++; else if(command <= format.svg.PathParser.FLOAT) {
				var end = pos + 1;
				var e_pos = -1;
				var seen_dot = command == format.svg.PathParser.FLOAT_DOT;
				if(command == format.svg.PathParser.FLOAT_EXP) {
					e_pos = 0;
					seen_dot = true;
				}
				while(end < pathToParse.length) {
					var ch = HxOverrides.cca(pathToParse,end);
					var code1;
					if(ch < 0 || ch > 127) code1 = format.svg.PathParser.UNKNOWN; else code1 = format.svg.PathParser.sCommandArgs[ch];
					if(code1 > format.svg.PathParser.FLOAT) break;
					if(code1 == format.svg.PathParser.FLOAT_DOT && seen_dot) break;
					if(e_pos >= 0) {
						if(code1 == format.svg.PathParser.FLOAT_SIGN) {
							if(e_pos != 0) break;
						} else if(code1 != format.svg.PathParser.FLOAT) break;
						e_pos++;
					} else if(code1 == format.svg.PathParser.FLOAT_EXP) {
						if(e_pos >= 0) break;
						e_pos = 0;
						seen_dot = true;
					} else if(code1 == format.svg.PathParser.FLOAT_SIGN) break;
					end++;
				}
				if(current_command < 0) {
				} else {
					var f = Std.parseFloat(HxOverrides.substr(pathToParse,pos,end - pos));
					args.push(f);
				}
				pos = end;
			} else {
				current_command = code;
				current_args = command;
				finished = false;
				current_command_pos = pos;
				args = [];
				pos++;
			}
			var px = 0.0;
			var py = 0.0;
			if(current_command >= 0) {
				if(current_args == args.length) {
					if(inConvertCubics && this.prev != null) {
						px = this.prev.prevX();
						py = this.prev.prevY();
					}
					this.prev = this.createCommand(current_command,args);
					if(this.prev == null) throw "Unknown command " + String.fromCharCode(current_command) + " near '" + HxOverrides.substr(pathToParse,current_command_pos,null) + "'";
					if(inConvertCubics && this.prev.getType() == 4) {
						var cubic = this.prev;
						var quads = cubic.toQuadratics(px,py);
						var _g = 0;
						while(_g < quads.length) {
							var q = quads[_g];
							++_g;
							segments.push(q);
						}
					} else segments.push(this.prev);
					finished = true;
					if(current_args == 0) {
						current_args = -1;
						current_command = -1;
					} else if(current_command == 77) current_command = 76; else if(current_command == 109) current_command = 108;
					current_command_pos = pos;
					args = [];
				}
			}
		}
		if(current_command >= 0 && !finished) throw "Unfinished command (" + args.length + "/" + current_args + ") near '" + HxOverrides.substr(pathToParse,current_command_pos,null) + "'";
		return segments;
	}
	,commandArgs: function(inCode) {
		if(inCode == 10) return format.svg.PathParser.SEPARATOR;
		var str = String.fromCharCode(inCode).toUpperCase();
		if(str >= "0" && str <= "9") return format.svg.PathParser.FLOAT;
		switch(str) {
		case "Z":
			return 0;
		case "H":case "V":
			return 1;
		case "M":case "L":case "T":
			return 2;
		case "S":case "Q":
			return 4;
		case "C":
			return 6;
		case "A":
			return 7;
		case "\t":case "\n":case " ":case "\r":case ",":
			return format.svg.PathParser.SEPARATOR;
		case "-":
			return format.svg.PathParser.FLOAT_SIGN;
		case "+":
			return format.svg.PathParser.FLOAT_SIGN;
		case "E":case "e":
			return format.svg.PathParser.FLOAT_EXP;
		case ".":
			return format.svg.PathParser.FLOAT_DOT;
		}
		return format.svg.PathParser.UNKNOWN;
	}
	,prevX: function() {
		if(this.prev != null) return this.prev.prevX(); else return 0;
	}
	,prevY: function() {
		if(this.prev != null) return this.prev.prevY(); else return 0;
	}
	,prevCX: function() {
		if(this.prev != null) return this.prev.prevCX(); else return 0;
	}
	,prevCY: function() {
		if(this.prev != null) return this.prev.prevCY(); else return 0;
	}
	,createCommand: function(code,a) {
		switch(code) {
		case 77:
			this.lastMoveX = a[0];
			this.lastMoveY = a[1];
			return new format.svg.MoveSegment(this.lastMoveX,this.lastMoveY);
		case 109:
			this.lastMoveX = a[0] + this.prevX();
			this.lastMoveY = a[1] + this.prevY();
			return new format.svg.MoveSegment(this.lastMoveX,this.lastMoveY);
		case 76:
			return new format.svg.DrawSegment(a[0],a[1]);
		case 108:
			return new format.svg.DrawSegment(a[0] + this.prevX(),a[1] + this.prevY());
		case 72:
			return new format.svg.DrawSegment(a[0],this.prevY());
		case 104:
			return new format.svg.DrawSegment(a[0] + this.prevX(),this.prevY());
		case 86:
			return new format.svg.DrawSegment(this.prevX(),a[0]);
		case 118:
			return new format.svg.DrawSegment(this.prevX(),a[0] + this.prevY());
		case 67:
			return new format.svg.CubicSegment(a[0],a[1],a[2],a[3],a[4],a[5]);
		case 99:
			var rx = this.prevX();
			var ry = this.prevY();
			return new format.svg.CubicSegment(a[0] + rx,a[1] + ry,a[2] + rx,a[3] + ry,a[4] + rx,a[5] + ry);
		case 83:
			var rx1 = this.prevX();
			var ry1 = this.prevY();
			return new format.svg.CubicSegment(rx1 * 2 - this.prevCX(),ry1 * 2 - this.prevCY(),a[0],a[1],a[2],a[3]);
		case 115:
			var rx2 = this.prevX();
			var ry2 = this.prevY();
			return new format.svg.CubicSegment(rx2 * 2 - this.prevCX(),ry2 * 2 - this.prevCY(),a[0] + rx2,a[1] + ry2,a[2] + rx2,a[3] + ry2);
		case 81:
			return new format.svg.QuadraticSegment(a[0],a[1],a[2],a[3]);
		case 113:
			var rx3 = this.prevX();
			var ry3 = this.prevY();
			return new format.svg.QuadraticSegment(a[0] + rx3,a[1] + ry3,a[2] + rx3,a[3] + ry3);
		case 84:
			var rx4 = this.prevX();
			var ry4 = this.prevY();
			return new format.svg.QuadraticSegment(rx4 * 2 - this.prevCX(),rx4 * 2 - this.prevCY(),a[2],a[3]);
		case 116:
			var rx5 = this.prevX();
			var ry5 = this.prevY();
			return new format.svg.QuadraticSegment(rx5 * 2 - this.prevCX(),ry5 * 2 - this.prevCY(),a[0] + rx5,a[1] + ry5);
		case 65:
			return new format.svg.ArcSegment(this.prevX(),this.prevY(),a[0],a[1],a[2],a[3] != 0.,a[4] != 0.,a[5],a[6]);
		case 97:
			var rx6 = this.prevX();
			var ry6 = this.prevY();
			return new format.svg.ArcSegment(rx6,ry6,a[0],a[1],a[2],a[3] != 0.,a[4] != 0.,a[5] + rx6,a[6] + ry6);
		case 90:
			return new format.svg.DrawSegment(this.lastMoveX,this.lastMoveY);
		case 122:
			return new format.svg.DrawSegment(this.lastMoveX,this.lastMoveY);
		}
		return null;
	}
	,__class__: format.svg.PathParser
};
format.svg.PathSegment = function(inX,inY) {
	this.x = inX;
	this.y = inY;
};
$hxClasses["format.svg.PathSegment"] = format.svg.PathSegment;
format.svg.PathSegment.__name__ = ["format","svg","PathSegment"];
format.svg.PathSegment.prototype = {
	getType: function() {
		return 0;
	}
	,prevX: function() {
		return this.x;
	}
	,prevY: function() {
		return this.y;
	}
	,prevCX: function() {
		return this.x;
	}
	,prevCY: function() {
		return this.y;
	}
	,toGfx: function(inGfx,ioContext) {
		ioContext.setLast(this.x,this.y);
		ioContext.firstX = ioContext.lastX;
		ioContext.firstY = ioContext.lastY;
		inGfx.moveTo(ioContext.lastX,ioContext.lastY);
	}
	,__class__: format.svg.PathSegment
};
format.svg.MoveSegment = function(inX,inY) {
	format.svg.PathSegment.call(this,inX,inY);
};
$hxClasses["format.svg.MoveSegment"] = format.svg.MoveSegment;
format.svg.MoveSegment.__name__ = ["format","svg","MoveSegment"];
format.svg.MoveSegment.__super__ = format.svg.PathSegment;
format.svg.MoveSegment.prototype = $extend(format.svg.PathSegment.prototype,{
	getType: function() {
		return 1;
	}
	,__class__: format.svg.MoveSegment
});
format.svg.DrawSegment = function(inX,inY) {
	format.svg.PathSegment.call(this,inX,inY);
};
$hxClasses["format.svg.DrawSegment"] = format.svg.DrawSegment;
format.svg.DrawSegment.__name__ = ["format","svg","DrawSegment"];
format.svg.DrawSegment.__super__ = format.svg.PathSegment;
format.svg.DrawSegment.prototype = $extend(format.svg.PathSegment.prototype,{
	toGfx: function(inGfx,ioContext) {
		ioContext.setLast(this.x,this.y);
		inGfx.lineTo(ioContext.lastX,ioContext.lastY);
	}
	,getType: function() {
		return 2;
	}
	,__class__: format.svg.DrawSegment
});
format.svg.QuadraticSegment = function(inCX,inCY,inX,inY) {
	format.svg.PathSegment.call(this,inX,inY);
	this.cx = inCX;
	this.cy = inCY;
};
$hxClasses["format.svg.QuadraticSegment"] = format.svg.QuadraticSegment;
format.svg.QuadraticSegment.__name__ = ["format","svg","QuadraticSegment"];
format.svg.QuadraticSegment.__super__ = format.svg.PathSegment;
format.svg.QuadraticSegment.prototype = $extend(format.svg.PathSegment.prototype,{
	prevCX: function() {
		return this.cx;
	}
	,prevCY: function() {
		return this.cy;
	}
	,toGfx: function(inGfx,ioContext) {
		ioContext.setLast(this.x,this.y);
		inGfx.curveTo(ioContext.transX(this.cx,this.cy),ioContext.transY(this.cx,this.cy),ioContext.lastX,ioContext.lastY);
	}
	,getType: function() {
		return 3;
	}
	,__class__: format.svg.QuadraticSegment
});
format.svg.CubicSegment = function(inCX1,inCY1,inCX2,inCY2,inX,inY) {
	format.svg.PathSegment.call(this,inX,inY);
	this.cx1 = inCX1;
	this.cy1 = inCY1;
	this.cx2 = inCX2;
	this.cy2 = inCY2;
};
$hxClasses["format.svg.CubicSegment"] = format.svg.CubicSegment;
format.svg.CubicSegment.__name__ = ["format","svg","CubicSegment"];
format.svg.CubicSegment.__super__ = format.svg.PathSegment;
format.svg.CubicSegment.prototype = $extend(format.svg.PathSegment.prototype,{
	prevCX: function() {
		return this.cx2;
	}
	,prevCY: function() {
		return this.cy2;
	}
	,Interp: function(a,b,frac) {
		return a + (b - a) * frac;
	}
	,toGfx: function(inGfx,ioContext) {
		var tx0 = ioContext.lastX;
		var ty0 = ioContext.lastY;
		var tx1 = ioContext.transX(this.cx1,this.cy1);
		var ty1 = ioContext.transY(this.cx1,this.cy1);
		var tx2 = ioContext.transX(this.cx2,this.cy2);
		var ty2 = ioContext.transY(this.cx2,this.cy2);
		ioContext.setLast(this.x,this.y);
		var tx3 = ioContext.lastX;
		var ty3 = ioContext.lastY;
		var pa_x = this.Interp(tx0,tx1,0.75);
		var pa_y = this.Interp(ty0,ty1,0.75);
		var pb_x = this.Interp(tx3,tx2,0.75);
		var pb_y = this.Interp(ty3,ty2,0.75);
		var dx = (tx3 - tx0) / 16;
		var dy = (ty3 - ty0) / 16;
		var pcx_1 = this.Interp(tx0,tx1,0.375);
		var pcy_1 = this.Interp(ty0,ty1,0.375);
		var pcx_2 = this.Interp(pa_x,pb_x,0.375) - dx;
		var pcy_2 = this.Interp(pa_y,pb_y,0.375) - dy;
		var pcx_3 = this.Interp(pb_x,pa_x,0.375) + dx;
		var pcy_3 = this.Interp(pb_y,pa_y,0.375) + dy;
		var pcx_4 = this.Interp(tx3,tx2,0.375);
		var pcy_4 = this.Interp(ty3,ty2,0.375);
		var pax_1 = (pcx_1 + pcx_2) * 0.5;
		var pay_1 = (pcy_1 + pcy_2) * 0.5;
		var pax_2 = (pa_x + pb_x) * 0.5;
		var pay_2 = (pa_y + pb_y) * 0.5;
		var pax_3 = (pcx_3 + pcx_4) * 0.5;
		var pay_3 = (pcy_3 + pcy_4) * 0.5;
		inGfx.curveTo(pcx_1,pcy_1,pax_1,pay_1);
		inGfx.curveTo(pcx_2,pcy_2,pax_2,pay_2);
		inGfx.curveTo(pcx_3,pcy_3,pax_3,pay_3);
		inGfx.curveTo(pcx_4,pcy_4,tx3,ty3);
	}
	,toQuadratics: function(tx0,ty0) {
		var result = new Array();
		var pa_x = this.Interp(tx0,this.cx1,0.75);
		var pa_y = this.Interp(ty0,this.cy1,0.75);
		var pb_x = this.Interp(this.x,this.cx2,0.75);
		var pb_y = this.Interp(this.y,this.cy2,0.75);
		var dx = (this.x - tx0) / 16;
		var dy = (this.y - ty0) / 16;
		var pcx_1 = this.Interp(tx0,this.cx1,0.375);
		var pcy_1 = this.Interp(ty0,this.cy1,0.375);
		var pcx_2 = this.Interp(pa_x,pb_x,0.375) - dx;
		var pcy_2 = this.Interp(pa_y,pb_y,0.375) - dy;
		var pcx_3 = this.Interp(pb_x,pa_x,0.375) + dx;
		var pcy_3 = this.Interp(pb_y,pa_y,0.375) + dy;
		var pcx_4 = this.Interp(this.x,this.cx2,0.375);
		var pcy_4 = this.Interp(this.y,this.cy2,0.375);
		var pax_1 = (pcx_1 + pcx_2) * 0.5;
		var pay_1 = (pcy_1 + pcy_2) * 0.5;
		var pax_2 = (pa_x + pb_x) * 0.5;
		var pay_2 = (pa_y + pb_y) * 0.5;
		var pax_3 = (pcx_3 + pcx_4) * 0.5;
		var pay_3 = (pcy_3 + pcy_4) * 0.5;
		result.push(new format.svg.QuadraticSegment(pcx_1,pcy_1,pax_1,pay_1));
		result.push(new format.svg.QuadraticSegment(pcx_2,pcy_2,pax_2,pay_2));
		result.push(new format.svg.QuadraticSegment(pcx_3,pcy_3,pax_3,pay_3));
		result.push(new format.svg.QuadraticSegment(pcx_4,pcy_4,this.x,this.y));
		return result;
	}
	,getType: function() {
		return 4;
	}
	,__class__: format.svg.CubicSegment
});
format.svg.ArcSegment = function(inX1,inY1,inRX,inRY,inRotation,inLargeArc,inSweep,x,y) {
	this.x1 = inX1;
	this.y1 = inY1;
	format.svg.PathSegment.call(this,x,y);
	this.rx = inRX;
	this.ry = inRY;
	this.phi = inRotation;
	this.fA = inLargeArc;
	this.fS = inSweep;
};
$hxClasses["format.svg.ArcSegment"] = format.svg.ArcSegment;
format.svg.ArcSegment.__name__ = ["format","svg","ArcSegment"];
format.svg.ArcSegment.__super__ = format.svg.PathSegment;
format.svg.ArcSegment.prototype = $extend(format.svg.PathSegment.prototype,{
	toGfx: function(inGfx,ioContext) {
		if(this.x1 == this.x && this.y1 == this.y) return;
		ioContext.setLast(this.x,this.y);
		if(this.rx == 0 || this.ry == 0) {
			inGfx.lineTo(ioContext.lastX,ioContext.lastY);
			return;
		}
		if(this.rx < 0) this.rx = -this.rx;
		if(this.ry < 0) this.ry = -this.ry;
		var p = this.phi * Math.PI / 180.0;
		var cos = Math.cos(p);
		var sin = Math.sin(p);
		var dx = (this.x1 - this.x) * 0.5;
		var dy = (this.y1 - this.y) * 0.5;
		var x1_ = cos * dx + sin * dy;
		var y1_ = -sin * dx + cos * dy;
		var rx2 = this.rx * this.rx;
		var ry2 = this.ry * this.ry;
		var x1_2 = x1_ * x1_;
		var y1_2 = y1_ * y1_;
		var s = (rx2 * ry2 - rx2 * y1_2 - ry2 * x1_2) / (rx2 * y1_2 + ry2 * x1_2);
		if(s < 0) s = 0; else if(this.fA == this.fS) s = -Math.sqrt(s); else s = Math.sqrt(s);
		var cx_ = s * this.rx * y1_ / this.ry;
		var cy_ = -s * this.ry * x1_ / this.rx;
		var xm = (this.x1 + this.x) * 0.5;
		var ym = (this.y1 + this.y) * 0.5;
		var cx = cos * cx_ - sin * cy_ + xm;
		var cy = sin * cx_ + cos * cy_ + ym;
		var theta = Math.atan2((y1_ - cy_) / this.ry,(x1_ - cx_) / this.rx);
		var dtheta = Math.atan2((-y1_ - cy_) / this.ry,(-x1_ - cx_) / this.rx) - theta;
		if(this.fS && dtheta < 0) dtheta += 2.0 * Math.PI; else if(!this.fS && dtheta > 0) dtheta -= 2.0 * Math.PI;
		var m = ioContext.matrix;
		var Txc;
		var Txs;
		var Tx0;
		var Tyc;
		var Tys;
		var Ty0;
		if(m != null) {
			Txc = m.a * this.rx;
			Txs = m.c * this.ry;
			Tx0 = m.a * cx + m.c * cy + m.tx;
			Tyc = m.b * this.rx;
			Tys = m.d * this.ry;
			Ty0 = m.b * cx + m.d * cy + m.ty;
		} else {
			Txc = this.rx;
			Txs = 0;
			Tx0 = cx + m.tx;
			Tyc = 0;
			Tys = this.ry;
			Ty0 = cy + m.ty;
		}
		var len = Math.abs(dtheta) * Math.sqrt(Txc * Txc + Txs * Txs + Tyc * Tyc + Tys * Tys);
		len *= 5;
		var steps = Math.round(len);
		if(steps > 1) {
			dtheta /= steps;
			var _g1 = 1;
			var _g = steps - 1;
			while(_g1 < _g) {
				var i = _g1++;
				var c = Math.cos(theta);
				var s1 = Math.sin(theta);
				theta += dtheta;
				inGfx.lineTo(Txc * c + Txs * s1 + Tx0,Tyc * c + Tys * s1 + Ty0);
			}
		}
		inGfx.lineTo(ioContext.lastX,ioContext.lastY);
	}
	,getType: function() {
		return 5;
	}
	,__class__: format.svg.ArcSegment
});
format.svg.RenderContext = function(inMatrix,inRect,inW,inH) {
	this.matrix = inMatrix;
	this.rect = inRect;
	if(inW != null) this.rectW = inW; else if(inRect != null) this.rectW = inRect.width; else this.rectW = 1;
	if(inH != null) this.rectH = inH; else if(inRect != null) this.rectH = inRect.height; else this.rectH = 1;
	this.firstX = 0;
	this.firstY = 0;
	this.lastX = 0;
	this.lastY = 0;
};
$hxClasses["format.svg.RenderContext"] = format.svg.RenderContext;
format.svg.RenderContext.__name__ = ["format","svg","RenderContext"];
format.svg.RenderContext.prototype = {
	transX: function(inX,inY) {
		if(this.rect != null && inX > this.rect.x) {
			if(inX > this.rect.get_right()) inX += this.rectW - this.rect.width; else inX = this.rect.x + this.rectW * (inX - this.rect.x) / this.rect.width;
		}
		return inX * this.matrix.a + inY * this.matrix.c + this.matrix.tx;
	}
	,transY: function(inX,inY) {
		if(this.rect != null && inY > this.rect.y) {
			if(inY > this.rect.get_right()) inY += this.rectH - this.rect.height; else inY = this.rect.y + this.rectH * (inY - this.rect.y) / this.rect.height;
		}
		return inX * this.matrix.b + inY * this.matrix.d + this.matrix.ty;
	}
	,setLast: function(inX,inY) {
		this.lastX = this.transX(inX,inY);
		this.lastY = this.transY(inX,inY);
	}
	,__class__: format.svg.RenderContext
};
format.svg.SVGData = function(inXML,inConvertCubics) {
	if(inConvertCubics == null) inConvertCubics = false;
	format.svg.Group.call(this);
	var svg = inXML.firstElement();
	if(svg == null || svg.get_nodeName() != "svg" && svg.get_nodeName() != "svg:svg") throw "Not an SVG file (" + (svg == null?"null":svg.get_nodeName()) + ")";
	this.mGrads = new haxe.ds.StringMap();
	this.mPathParser = new format.svg.PathParser();
	this.mConvertCubics = inConvertCubics;
	this.width = this.getFloatStyle("width",svg,null,0.0);
	this.height = this.getFloatStyle("height",svg,null,0.0);
	if(this.width == 0 && this.height == 0) this.width = this.height = 400; else if(this.width == 0) this.width = this.height; else if(this.height == 0) this.height = this.width;
	this.loadGroup(this,svg,new openfl.geom.Matrix(),null);
};
$hxClasses["format.svg.SVGData"] = format.svg.SVGData;
format.svg.SVGData.__name__ = ["format","svg","SVGData"];
format.svg.SVGData.__super__ = format.svg.Group;
format.svg.SVGData.prototype = $extend(format.svg.Group.prototype,{
	applyTransform: function(ioMatrix,inTrans) {
		var scale = 1.0;
		if(format.svg.SVGData.mTranslateMatch.match(inTrans)) ioMatrix.translate(Std.parseFloat(format.svg.SVGData.mTranslateMatch.matched(1)),Std.parseFloat(format.svg.SVGData.mTranslateMatch.matched(2))); else if(format.svg.SVGData.mScaleMatch.match(inTrans)) {
			var s = Std.parseFloat(format.svg.SVGData.mScaleMatch.matched(1));
			ioMatrix.scale(s,s);
			scale = s;
		} else if(format.svg.SVGData.mMatrixMatch.match(inTrans)) {
			var m = new openfl.geom.Matrix(Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(1)),Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(2)),Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(3)),Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(4)),Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(5)),Std.parseFloat(format.svg.SVGData.mMatrixMatch.matched(6)));
			m.concat(ioMatrix);
			ioMatrix.a = m.a;
			ioMatrix.b = m.b;
			ioMatrix.c = m.c;
			ioMatrix.d = m.d;
			ioMatrix.tx = m.tx;
			ioMatrix.ty = m.ty;
			scale = Math.sqrt(ioMatrix.a * ioMatrix.a + ioMatrix.c * ioMatrix.c);
		} else haxe.Log.trace("Warning, unknown transform:" + inTrans,{ fileName : "SVGData.hx", lineNumber : 117, className : "format.svg.SVGData", methodName : "applyTransform"});
		return scale;
	}
	,dumpGroup: function(g,indent) {
		haxe.Log.trace(indent + "Group:" + g.name,{ fileName : "SVGData.hx", lineNumber : 128, className : "format.svg.SVGData", methodName : "dumpGroup"});
		indent += "  ";
		var _g = 0;
		var _g1 = g.children;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			switch(e[1]) {
			case 0:
				var path = e[2];
				haxe.Log.trace(indent + "Path" + "  " + Std.string(path.matrix),{ fileName : "SVGData.hx", lineNumber : 135, className : "format.svg.SVGData", methodName : "dumpGroup"});
				break;
			case 1:
				var group = e[2];
				this.dumpGroup(group,indent + "   ");
				break;
			case 2:
				var text = e[2];
				haxe.Log.trace(indent + "Text " + text.text,{ fileName : "SVGData.hx", lineNumber : 137, className : "format.svg.SVGData", methodName : "dumpGroup"});
				break;
			}
		}
	}
	,getColorStyle: function(inKey,inNode,inStyles,inDefault) {
		var s = this.getStyle(inKey,inNode,inStyles,"");
		if(s == "") return inDefault;
		if(s.charAt(0) == "#") return Std.parseInt("0x" + HxOverrides.substr(s,1,null));
		return Std.parseInt(s);
	}
	,getFillStyle: function(inKey,inNode,inStyles) {
		var s = this.getStyle(inKey,inNode,inStyles,"");
		if(s == "") return format.svg.SVGData.defaultFill;
		if(s.charAt(0) == "#") return format.svg.FillType.FillSolid(Std.parseInt("0x" + HxOverrides.substr(s,1,null)));
		if(s == "none") return format.svg.FillType.FillNone;
		if(format.svg.SVGData.mURLMatch.match(s)) {
			var url = format.svg.SVGData.mURLMatch.matched(1);
			if(this.mGrads.exists(url)) return format.svg.FillType.FillGrad(this.mGrads.get(url));
			throw "Unknown url:" + url;
		}
		throw "Unknown fill string:" + s;
		return format.svg.FillType.FillNone;
	}
	,getFloat: function(inXML,inName,inDef) {
		if(inDef == null) inDef = 0.0;
		if(inXML.exists(inName)) return Std.parseFloat(inXML.get(inName));
		return inDef;
	}
	,getFloatStyle: function(inKey,inNode,inStyles,inDefault) {
		var s = this.getStyle(inKey,inNode,inStyles,"");
		if(s == "") return inDefault;
		return Std.parseFloat(s);
	}
	,getStrokeStyle: function(inKey,inNode,inStyles,inDefault) {
		var s = this.getStyle(inKey,inNode,inStyles,"");
		if(s == "") return inDefault;
		if(s == "none") return null;
		if(s.charAt(0) == "#") return Std.parseInt("0x" + HxOverrides.substr(s,1,null));
		return Std.parseInt(s);
	}
	,getStyle: function(inKey,inNode,inStyles,inDefault) {
		if(inNode != null && inNode.exists(inKey)) return inNode.get(inKey);
		if(inStyles != null && inStyles.exists(inKey)) return inStyles.get(inKey);
		return inDefault;
	}
	,getStyles: function(inNode,inPrevStyles) {
		if(!inNode.exists("style")) return inPrevStyles;
		var styles = new haxe.ds.StringMap();
		if(inPrevStyles != null) {
			var $it0 = inPrevStyles.keys();
			while( $it0.hasNext() ) {
				var s = $it0.next();
				styles.set(s,inPrevStyles.get(s));
			}
		}
		var style = inNode.get("style");
		var strings = format.svg.SVGData.mStyleSplit.split(style);
		var _g = 0;
		while(_g < strings.length) {
			var s1 = strings[_g];
			++_g;
			if(format.svg.SVGData.mStyleValue.match(s1)) styles.set(format.svg.SVGData.mStyleValue.matched(1),format.svg.SVGData.mStyleValue.matched(2));
		}
		return styles;
	}
	,loadDefs: function(inXML) {
		var _g = 0;
		while(_g < 2) {
			var pass = _g++;
			var $it0 = inXML.elements();
			while( $it0.hasNext() ) {
				var def = $it0.next();
				var name = def.get_nodeName();
				if(HxOverrides.substr(name,0,4) == "svg:") name = HxOverrides.substr(name,4,null);
				if(name == "linearGradient") this.loadGradient(def,openfl.display.GradientType.LINEAR,pass == 1); else if(name == "radialGradient") this.loadGradient(def,openfl.display.GradientType.RADIAL,pass == 1);
			}
		}
	}
	,loadGradient: function(inGrad,inType,inCrossLink) {
		var name = inGrad.get("id");
		var grad = new format.svg.Grad(inType);
		if(inCrossLink && inGrad.exists("xlink:href")) {
			var xlink = inGrad.get("xlink:href");
			if(xlink.charAt(0) != "#") throw "xlink - unkown syntax : " + xlink;
			var base = this.mGrads.get(HxOverrides.substr(xlink,1,null));
			if(base != null) {
				grad.colors = base.colors;
				grad.alphas = base.alphas;
				grad.ratios = base.ratios;
				grad.gradMatrix = base.gradMatrix.clone();
				grad.spread = base.spread;
				grad.interp = base.interp;
				grad.radius = base.radius;
			} else throw "Unknown xlink : " + xlink;
		}
		if(inGrad.exists("x1")) {
			grad.x1 = this.getFloat(inGrad,"x1");
			grad.y1 = this.getFloat(inGrad,"y1");
			grad.x2 = this.getFloat(inGrad,"x2");
			grad.y2 = this.getFloat(inGrad,"y2");
		} else {
			grad.x1 = this.getFloat(inGrad,"cx");
			grad.y1 = this.getFloat(inGrad,"cy");
			grad.x2 = this.getFloat(inGrad,"fx",grad.x1);
			grad.y2 = this.getFloat(inGrad,"fy",grad.y1);
		}
		grad.radius = this.getFloat(inGrad,"r");
		if(inGrad.exists("gradientTransform")) this.applyTransform(grad.gradMatrix,inGrad.get("gradientTransform"));
		var $it0 = inGrad.elements();
		while( $it0.hasNext() ) {
			var stop = $it0.next();
			var styles = this.getStyles(stop,null);
			grad.colors.push(this.getColorStyle("stop-color",stop,styles,0));
			grad.alphas.push(this.getFloatStyle("stop-opacity",stop,styles,1.0));
			grad.ratios.push(Std["int"](Std.parseFloat(stop.get("offset")) * 255.0));
		}
		this.mGrads.set(name,grad);
	}
	,loadGroup: function(g,inG,matrix,inStyles) {
		if(inG.exists("transform")) {
			matrix = matrix.clone();
			this.applyTransform(matrix,inG.get("transform"));
		}
		if(inG.exists("inkscape:label")) g.name = inG.get("inkscape:label"); else if(inG.exists("id")) g.name = inG.get("id");
		var styles = this.getStyles(inG,inStyles);
		var $it0 = inG.elements();
		while( $it0.hasNext() ) {
			var el = $it0.next();
			var name = el.get_nodeName();
			if(HxOverrides.substr(name,0,4) == "svg:") name = HxOverrides.substr(name,4,null);
			if(name == "defs") this.loadDefs(el); else if(name == "g") {
				if(!(el.exists("display") && el.get("display") == "none")) g.children.push(format.svg.DisplayElement.DisplayGroup(this.loadGroup(new format.svg.Group(),el,matrix,styles)));
			} else if(name == "path" || name == "line" || name == "polyline") g.children.push(format.svg.DisplayElement.DisplayPath(this.loadPath(el,matrix,styles,false,false))); else if(name == "rect") g.children.push(format.svg.DisplayElement.DisplayPath(this.loadPath(el,matrix,styles,true,false))); else if(name == "polygon") g.children.push(format.svg.DisplayElement.DisplayPath(this.loadPath(el,matrix,styles,false,false))); else if(name == "ellipse") g.children.push(format.svg.DisplayElement.DisplayPath(this.loadPath(el,matrix,styles,false,true))); else if(name == "circle") g.children.push(format.svg.DisplayElement.DisplayPath(this.loadPath(el,matrix,styles,false,true,true))); else if(name == "text") g.children.push(format.svg.DisplayElement.DisplayText(this.loadText(el,matrix,styles))); else if(name == "linearGradient") this.loadGradient(el,openfl.display.GradientType.LINEAR,true); else if(name == "radialGradient") this.loadGradient(el,openfl.display.GradientType.RADIAL,true); else {
			}
		}
		return g;
	}
	,loadPath: function(inPath,matrix,inStyles,inIsRect,inIsEllipse,inIsCircle) {
		if(inIsCircle == null) inIsCircle = false;
		if(inPath.exists("transform")) {
			matrix = matrix.clone();
			this.applyTransform(matrix,inPath.get("transform"));
		}
		var styles = this.getStyles(inPath,inStyles);
		var name;
		if(inPath.exists("id")) name = inPath.get("id"); else name = "";
		var path = new format.svg.Path();
		path.fill = this.getFillStyle("fill",inPath,styles);
		path.alpha = this.getFloatStyle("opacity",inPath,styles,1.0);
		path.fill_alpha = this.getFloatStyle("fill-opacity",inPath,styles,1.0);
		path.stroke_alpha = this.getFloatStyle("stroke-opacity",inPath,styles,1.0);
		path.stroke_colour = this.getStrokeStyle("stroke",inPath,styles,null);
		path.stroke_width = this.getFloatStyle("stroke-width",inPath,styles,1.0);
		path.stroke_caps = openfl.display.CapsStyle.ROUND;
		path.joint_style = openfl.display.JointStyle.ROUND;
		path.miter_limit = this.getFloatStyle("stroke-miterlimit",inPath,styles,3.0);
		path.segments = [];
		path.matrix = matrix;
		path.name = name;
		if(inIsRect) {
			var x;
			if(inPath.exists("x")) x = Std.parseFloat(inPath.get("x")); else x = 0;
			var y;
			if(inPath.exists("y")) y = Std.parseFloat(inPath.get("y")); else y = 0;
			var w = Std.parseFloat(inPath.get("width"));
			var h = Std.parseFloat(inPath.get("height"));
			var rx;
			if(inPath.exists("rx")) rx = Std.parseFloat(inPath.get("rx")); else rx = 0.0;
			var ry;
			if(inPath.exists("ry")) ry = Std.parseFloat(inPath.get("ry")); else ry = 0.0;
			if(rx == 0 || ry == 0) {
				path.segments.push(new format.svg.MoveSegment(x,y));
				path.segments.push(new format.svg.DrawSegment(x + w,y));
				path.segments.push(new format.svg.DrawSegment(x + w,y + h));
				path.segments.push(new format.svg.DrawSegment(x,y + h));
				path.segments.push(new format.svg.DrawSegment(x,y));
			} else {
				path.segments.push(new format.svg.MoveSegment(x,y + ry));
				path.segments.push(new format.svg.QuadraticSegment(x,y,x + rx,y));
				path.segments.push(new format.svg.DrawSegment(x + w - rx,y));
				path.segments.push(new format.svg.QuadraticSegment(x + w,y,x + w,y + rx));
				path.segments.push(new format.svg.DrawSegment(x + w,y + h - ry));
				path.segments.push(new format.svg.QuadraticSegment(x + w,y + h,x + w - rx,y + h));
				path.segments.push(new format.svg.DrawSegment(x + rx,y + h));
				path.segments.push(new format.svg.QuadraticSegment(x,y + h,x,y + h - ry));
				path.segments.push(new format.svg.DrawSegment(x,y + ry));
			}
		} else if(inIsEllipse) {
			var x1;
			if(inPath.exists("cx")) x1 = Std.parseFloat(inPath.get("cx")); else x1 = 0;
			var y1;
			if(inPath.exists("cy")) y1 = Std.parseFloat(inPath.get("cy")); else y1 = 0;
			var r;
			if(inIsCircle && inPath.exists("r")) r = Std.parseFloat(inPath.get("r")); else r = 0.0;
			var w1;
			if(inIsCircle) w1 = r; else if(inPath.exists("rx")) w1 = Std.parseFloat(inPath.get("rx")); else w1 = 0.0;
			var w_ = w1 * format.svg.SVGData.SIN45;
			var cw_ = w1 * format.svg.SVGData.TAN22;
			var h1;
			if(inIsCircle) h1 = r; else if(inPath.exists("ry")) h1 = Std.parseFloat(inPath.get("ry")); else h1 = 0.0;
			var h_ = h1 * format.svg.SVGData.SIN45;
			var ch_ = h1 * format.svg.SVGData.TAN22;
			path.segments.push(new format.svg.MoveSegment(x1 + w1,y1));
			path.segments.push(new format.svg.QuadraticSegment(x1 + w1,y1 + ch_,x1 + w_,y1 + h_));
			path.segments.push(new format.svg.QuadraticSegment(x1 + cw_,y1 + h1,x1,y1 + h1));
			path.segments.push(new format.svg.QuadraticSegment(x1 - cw_,y1 + h1,x1 - w_,y1 + h_));
			path.segments.push(new format.svg.QuadraticSegment(x1 - w1,y1 + ch_,x1 - w1,y1));
			path.segments.push(new format.svg.QuadraticSegment(x1 - w1,y1 - ch_,x1 - w_,y1 - h_));
			path.segments.push(new format.svg.QuadraticSegment(x1 - cw_,y1 - h1,x1,y1 - h1));
			path.segments.push(new format.svg.QuadraticSegment(x1 + cw_,y1 - h1,x1 + w_,y1 - h_));
			path.segments.push(new format.svg.QuadraticSegment(x1 + w1,y1 - ch_,x1 + w1,y1));
		} else {
			var d;
			if(inPath.exists("points")) d = "M" + inPath.get("points") + "z"; else if(inPath.exists("x1")) d = "M" + inPath.get("x1") + "," + inPath.get("y1") + " " + inPath.get("x2") + "," + inPath.get("y2") + "z"; else d = inPath.get("d");
			var _g = 0;
			var _g1 = this.mPathParser.parse(d,this.mConvertCubics);
			while(_g < _g1.length) {
				var segment = _g1[_g];
				++_g;
				path.segments.push(segment);
			}
		}
		return path;
	}
	,loadText: function(inText,matrix,inStyles) {
		if(inText.exists("transform")) {
			matrix = matrix.clone();
			this.applyTransform(matrix,inText.get("transform"));
		}
		var styles = this.getStyles(inText,inStyles);
		var text = new format.svg.Text();
		text.matrix = matrix;
		if(inText.exists("id")) text.name = inText.get("id"); else text.name = "";
		text.x = this.getFloat(inText,"x",0.0);
		text.y = this.getFloat(inText,"y",0.0);
		text.fill = this.getFillStyle("fill",inText,styles);
		text.fill_alpha = this.getFloatStyle("fill-opacity",inText,styles,1.0);
		text.stroke_alpha = this.getFloatStyle("stroke-opacity",inText,styles,1.0);
		text.stroke_colour = this.getStrokeStyle("stroke",inText,styles,null);
		text.stroke_width = this.getFloatStyle("stroke-width",inText,styles,1.0);
		text.font_family = this.getStyle("font-family",inText,styles,"");
		text.font_size = this.getFloatStyle("font-size",inText,styles,12);
		text.letter_spacing = this.getFloatStyle("letter-spacing",inText,styles,0);
		text.kerning = this.getFloatStyle("kerning",inText,styles,0);
		var string = "";
		var $it0 = inText.elements();
		while( $it0.hasNext() ) {
			var el = $it0.next();
			string += el.toString();
		}
		text.text = string;
		return text;
	}
	,__class__: format.svg.SVGData
});
format.svg.SVGRenderer = function(inSvg,inLayer) {
	this.mSvg = inSvg;
	this.width = this.mSvg.width;
	this.height = this.mSvg.height;
	this.mRoot = this.mSvg;
	if(inLayer != null) {
		this.mRoot = this.mSvg.findGroup(inLayer);
		if(this.mRoot == null) throw "Could not find SVG group: " + inLayer;
	}
};
$hxClasses["format.svg.SVGRenderer"] = format.svg.SVGRenderer;
format.svg.SVGRenderer.__name__ = ["format","svg","SVGRenderer"];
format.svg.SVGRenderer.toHaxe = function(inXML,inFilter) {
	return new format.svg.SVGRenderer(new format.svg.SVGData(inXML,true)).iterate(new format.gfx.Gfx2Haxe(),inFilter).commands;
};
format.svg.SVGRenderer.toBytes = function(inXML,inFilter) {
	return new format.svg.SVGRenderer(new format.svg.SVGData(inXML,true)).iterate(new format.gfx.GfxBytes(),inFilter);
};
format.svg.SVGRenderer.prototype = {
	iterate: function(inGfx,inFilter) {
		this.mGfx = inGfx;
		this.mMatrix = new openfl.geom.Matrix();
		this.mFilter = inFilter;
		this.mGroupPath = [];
		this.mGfx.size(this.width,this.height);
		this.iterateGroup(this.mRoot,true);
		this.mGfx.eof();
		return inGfx;
	}
	,hasGroup: function(inName) {
		return this.mRoot.hasGroup(inName);
	}
	,iterateText: function(inText) {
		if(this.mFilter != null && !this.mFilter(inText.name,this.mGroupPath)) return;
		this.mGfx.renderText(inText);
	}
	,iteratePath: function(inPath) {
		if(this.mFilter != null && !this.mFilter(inPath.name,this.mGroupPath)) return;
		if(inPath.segments.length == 0 || this.mGfx == null) return;
		var px = 0.0;
		var py = 0.0;
		var m = inPath.matrix.clone();
		m.concat(this.mMatrix);
		var context = new format.svg.RenderContext(m,this.mScaleRect,this.mScaleW,this.mScaleH);
		var geomOnly = this.mGfx.geometryOnly();
		if(!geomOnly) {
			inPath.segments[0].toGfx(this.mGfx,context);
			{
				var _g = inPath.fill;
				switch(_g[1]) {
				case 0:
					var grad = _g[2];
					grad.updateMatrix(m);
					this.mGfx.beginGradientFill(grad);
					break;
				case 1:
					var colour = _g[2];
					this.mGfx.beginFill(colour,inPath.fill_alpha * inPath.alpha);
					break;
				case 2:
					break;
				}
			}
			if(inPath.stroke_colour == null) {
			} else {
				var style = new format.gfx.LineStyle();
				var scale = Math.sqrt(m.a * m.a + m.c * m.c);
				style.thickness = inPath.stroke_width * scale;
				style.alpha = inPath.stroke_alpha * inPath.alpha;
				style.color = inPath.stroke_colour;
				style.capsStyle = inPath.stroke_caps;
				style.jointStyle = inPath.joint_style;
				style.miterLimit = inPath.miter_limit;
				this.mGfx.lineStyle(style);
			}
		}
		var _g1 = 0;
		var _g11 = inPath.segments;
		while(_g1 < _g11.length) {
			var segment = _g11[_g1];
			++_g1;
			segment.toGfx(this.mGfx,context);
		}
		this.mGfx.endFill();
		this.mGfx.endLineStyle();
	}
	,iterateGroup: function(inGroup,inIgnoreDot) {
		if(inIgnoreDot && inGroup.name != null && HxOverrides.substr(inGroup.name,0,1) == ".") return;
		this.mGroupPath.push(inGroup.name);
		var _g = 0;
		var _g1 = inGroup.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			switch(child[1]) {
			case 1:
				var group = child[2];
				this.iterateGroup(group,inIgnoreDot);
				break;
			case 0:
				var path = child[2];
				this.iteratePath(path);
				break;
			case 2:
				var text = child[2];
				this.iterateText(text);
				break;
			}
		}
		this.mGroupPath.pop();
	}
	,render: function(inGfx,inMatrix,inFilter,inScaleRect,inScaleW,inScaleH) {
		this.mGfx = new format.gfx.GfxGraphics(inGfx);
		if(inMatrix == null) this.mMatrix = new openfl.geom.Matrix(); else this.mMatrix = inMatrix.clone();
		this.mScaleRect = inScaleRect;
		this.mScaleW = inScaleW;
		this.mScaleH = inScaleH;
		this.mFilter = inFilter;
		this.mGroupPath = [];
		this.iterateGroup(this.mRoot,inFilter == null);
	}
	,renderRect: function(inGfx,inFilter,scaleRect,inBounds,inRect) {
		var matrix = new openfl.geom.Matrix();
		matrix.tx = inRect.x - inBounds.x;
		matrix.ty = inRect.y - inBounds.y;
		if(scaleRect != null) {
			var extraX = inRect.width - (inBounds.width - scaleRect.width);
			var extraY = inRect.height - (inBounds.height - scaleRect.height);
			this.render(inGfx,matrix,inFilter,scaleRect,extraX,extraY);
		} else this.render(inGfx,matrix,inFilter);
	}
	,renderRect0: function(inGfx,inFilter,scaleRect,inBounds,inRect) {
		var matrix = new openfl.geom.Matrix();
		matrix.tx = -inBounds.x;
		matrix.ty = -inBounds.y;
		if(scaleRect != null) {
			var extraX = inRect.width - (inBounds.width - scaleRect.width);
			var extraY = inRect.height - (inBounds.height - scaleRect.height);
			this.render(inGfx,matrix,inFilter,scaleRect,extraX,extraY);
		} else this.render(inGfx,matrix,inFilter);
	}
	,getExtent: function(inMatrix,inFilter,inIgnoreDot) {
		if(inIgnoreDot == null) inIgnoreDot = inFilter == null;
		var gfx = new format.gfx.GfxExtent();
		this.mGfx = gfx;
		if(inMatrix == null) this.mMatrix = new openfl.geom.Matrix(); else this.mMatrix = inMatrix.clone();
		this.mFilter = inFilter;
		this.mGroupPath = [];
		this.iterateGroup(this.mRoot,inIgnoreDot);
		return gfx.extent;
	}
	,findText: function(inFilter) {
		this.mFilter = inFilter;
		this.mGroupPath = [];
		var finder = new format.gfx.GfxTextFinder();
		this.mGfx = finder;
		this.iterateGroup(this.mRoot,false);
		return finder.text;
	}
	,getMatchingRect: function(inMatch) {
		return this.getExtent(null,function(_,groups) {
			return groups[1] != null && inMatch.match(groups[1]);
		},false);
	}
	,renderObject: function(inObj,inGfx,inMatrix,inFilter,inScale9) {
		this.render(inGfx,inMatrix,inFilter,inScale9);
		var rect = this.getExtent(inMatrix,function(_,groups) {
			return groups[1] == ".scale9";
		});
	}
	,renderSprite: function(inObj,inMatrix,inFilter,inScale9) {
		this.renderObject(inObj,inObj.get_graphics(),inMatrix,inFilter,inScale9);
	}
	,createShape: function(inMatrix,inFilter,inScale9) {
		var shape = new openfl.display.Shape();
		this.renderObject(shape,shape.get_graphics(),inMatrix,inFilter,inScale9);
		return shape;
	}
	,namedShape: function(inName) {
		return this.createShape(null,function(name,_) {
			return name == inName;
		});
	}
	,renderBitmap: function(inRect,inScale) {
		if(inScale == null) inScale = 1.0;
		this.mMatrix = new openfl.geom.Matrix(inScale,0,0,inScale,-inRect.x * inScale,-inRect.y * inScale);
		var w = Std["int"](Math.ceil(inRect == null?this.width:inRect.width * inScale));
		var h = Std["int"](Math.ceil(inRect == null?this.width:inRect.height * inScale));
		var bmp = new openfl.display.BitmapData(w,h,true,0);
		var shape = new openfl.display.Shape();
		this.mGfx = new format.gfx.GfxGraphics(shape.get_graphics());
		this.mGroupPath = [];
		this.iterateGroup(this.mRoot,true);
		bmp.draw(shape);
		this.mGfx = null;
		return bmp;
	}
	,__class__: format.svg.SVGRenderer
};
format.svg.Text = function() {
};
$hxClasses["format.svg.Text"] = format.svg.Text;
format.svg.Text.__name__ = ["format","svg","Text"];
format.svg.Text.prototype = {
	__class__: format.svg.Text
};
haxe.StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe.StackItem.CFunction = ["CFunction",0];
haxe.StackItem.CFunction.toString = $estr;
haxe.StackItem.CFunction.__enum__ = haxe.StackItem;
haxe.StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; };
haxe.StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; };
haxe.StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; };
haxe.StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; };
haxe.CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe.CallStack;
haxe.CallStack.__name__ = ["haxe","CallStack"];
haxe.CallStack.exceptionStack = function() {
	return [];
};
haxe.CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe.CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe.CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		if(m == null) b.b += "null"; else b.b += "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe.CallStack.itemToString(b,s1);
			b.b += " (";
		}
		if(file == null) b.b += "null"; else b.b += "" + file;
		b.b += " line ";
		if(line == null) b.b += "null"; else b.b += "" + line;
		if(s1 != null) b.b += ")";
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		if(cname == null) b.b += "null"; else b.b += "" + cname;
		b.b += ".";
		if(meth == null) b.b += "null"; else b.b += "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		if(n == null) b.b += "null"; else b.b += "" + n;
		break;
	}
};
haxe.Log = function() { };
$hxClasses["haxe.Log"] = haxe.Log;
haxe.Log.__name__ = ["haxe","Log"];
haxe.Log.trace = function(v,infos) {
	js.Boot.__trace(v,infos);
};
haxe.Resource = function() { };
$hxClasses["haxe.Resource"] = haxe.Resource;
haxe.Resource.__name__ = ["haxe","Resource"];
haxe.Resource.listNames = function() {
	var names = new Array();
	var _g = 0;
	var _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		names.push(x.name);
	}
	return names;
};
haxe.Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe.crypto.Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe.Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return haxe.io.Bytes.ofString(x.str);
			return haxe.crypto.Base64.decode(x.data);
		}
	}
	return null;
};
haxe.Serializer = function() {
	this.buf = new StringBuf();
	this.cache = new Array();
	this.useCache = haxe.Serializer.USE_CACHE;
	this.useEnumIndex = haxe.Serializer.USE_ENUM_INDEX;
	this.shash = new haxe.ds.StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe.Serializer;
haxe.Serializer.__name__ = ["haxe","Serializer"];
haxe.Serializer.run = function(v) {
	var s = new haxe.Serializer();
	s.serialize(v);
	return s.toString();
};
haxe.Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.get(s);
		if(x != null) {
			this.buf.b += "R";
			if(x == null) this.buf.b += "null"; else this.buf.b += "" + x;
			return;
		}
		this.shash.set(s,this.scount++);
		this.buf.b += "y";
		s = encodeURIComponent(s);
		if(s.length == null) this.buf.b += "null"; else this.buf.b += "" + s.length;
		this.buf.b += ":";
		if(s == null) this.buf.b += "null"; else this.buf.b += "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				if(i == null) this.buf.b += "null"; else this.buf.b += "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				if(v1 == null) this.buf.b += "null"; else this.buf.b += "" + v1;
				break;
			case 2:
				var v2 = v;
				if(Math.isNaN(v2)) this.buf.b += "k"; else if(!Math.isFinite(v2)) if(v2 < 0) this.buf.b += "m"; else this.buf.b += "p"; else {
					this.buf.b += "d";
					if(v2 == null) this.buf.b += "null"; else this.buf.b += "" + v2;
				}
				break;
			case 3:
				if(v) this.buf.b += "t"; else this.buf.b += "f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var $it0 = v3.iterator();
					while( $it0.hasNext() ) {
						var i1 = $it0.next();
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					this.buf.add(HxOverrides.dateStr(d));
					break;
				case haxe.ds.StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it1 = v4.keys();
					while( $it1.hasNext() ) {
						var k = $it1.next();
						this.serializeString(k);
						this.serialize(v4.get(k));
					}
					this.buf.b += "h";
					break;
				case haxe.ds.IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it2 = v5.keys();
					while( $it2.hasNext() ) {
						var k1 = $it2.next();
						this.buf.b += ":";
						if(k1 == null) this.buf.b += "null"; else this.buf.b += "" + k1;
						this.serialize(v5.get(k1));
					}
					this.buf.b += "h";
					break;
				case haxe.ds.ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it3 = v6.keys();
					while( $it3.hasNext() ) {
						var k2 = $it3.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe.io.Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf = new StringBuf();
					var b64 = haxe.Serializer.BASE64;
					while(i2 < max) {
						var b1 = v7.get(i2++);
						var b2 = v7.get(i2++);
						var b3 = v7.get(i2++);
						charsBuf.add(b64.charAt(b1 >> 2));
						charsBuf.add(b64.charAt((b1 << 4 | b2 >> 4) & 63));
						charsBuf.add(b64.charAt((b2 << 2 | b3 >> 6) & 63));
						charsBuf.add(b64.charAt(b3 & 63));
					}
					if(i2 == max) {
						var b11 = v7.get(i2++);
						var b21 = v7.get(i2++);
						charsBuf.add(b64.charAt(b11 >> 2));
						charsBuf.add(b64.charAt((b11 << 4 | b21 >> 4) & 63));
						charsBuf.add(b64.charAt(b21 << 2 & 63));
					} else if(i2 == max + 1) {
						var b12 = v7.get(i2++);
						charsBuf.add(b64.charAt(b12 >> 2));
						charsBuf.add(b64.charAt(b12 << 4 & 63));
					}
					var chars = charsBuf.b;
					this.buf.b += "s";
					if(chars.length == null) this.buf.b += "null"; else this.buf.b += "" + chars.length;
					this.buf.b += ":";
					if(chars == null) this.buf.b += "null"; else this.buf.b += "" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(this.useCache && this.serializeRef(v)) return;
				this.buf.b += "o";
				this.serializeFields(v);
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				if(this.useEnumIndex) this.buf.b += "j"; else this.buf.b += "w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw "Cannot serialize function";
				break;
			default:
				throw "Cannot serialize " + Std.string(v);
			}
		}
	}
	,__class__: haxe.Serializer
};
haxe._Template = {};
haxe._Template.TemplateExpr = $hxClasses["haxe._Template.TemplateExpr"] = { __ename__ : ["haxe","_Template","TemplateExpr"], __constructs__ : ["OpVar","OpExpr","OpIf","OpStr","OpBlock","OpForeach","OpMacro"] };
haxe._Template.TemplateExpr.OpVar = function(v) { var $x = ["OpVar",0,v]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpExpr = function(expr) { var $x = ["OpExpr",1,expr]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpIf = function(expr,eif,eelse) { var $x = ["OpIf",2,expr,eif,eelse]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpStr = function(str) { var $x = ["OpStr",3,str]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpBlock = function(l) { var $x = ["OpBlock",4,l]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpForeach = function(expr,loop) { var $x = ["OpForeach",5,expr,loop]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe._Template.TemplateExpr.OpMacro = function(name,params) { var $x = ["OpMacro",6,name,params]; $x.__enum__ = haxe._Template.TemplateExpr; $x.toString = $estr; return $x; };
haxe.Template = function(str) {
	var tokens = this.parseTokens(str);
	this.expr = this.parseBlock(tokens);
	if(!tokens.isEmpty()) throw "Unexpected '" + Std.string(tokens.first().s) + "'";
};
$hxClasses["haxe.Template"] = haxe.Template;
haxe.Template.__name__ = ["haxe","Template"];
haxe.Template.prototype = {
	execute: function(context,macros) {
		if(macros == null) this.macros = { }; else this.macros = macros;
		this.context = context;
		this.stack = new List();
		this.buf = new StringBuf();
		this.run(this.expr);
		return this.buf.b;
	}
	,resolve: function(v) {
		if(Object.prototype.hasOwnProperty.call(this.context,v)) return Reflect.field(this.context,v);
		var $it0 = this.stack.iterator();
		while( $it0.hasNext() ) {
			var ctx = $it0.next();
			if(Object.prototype.hasOwnProperty.call(ctx,v)) return Reflect.field(ctx,v);
		}
		if(v == "__current__") return this.context;
		return Reflect.field(haxe.Template.globals,v);
	}
	,parseTokens: function(data) {
		var tokens = new List();
		while(haxe.Template.splitter.match(data)) {
			var p = haxe.Template.splitter.matchedPos();
			if(p.pos > 0) tokens.add({ p : HxOverrides.substr(data,0,p.pos), s : true, l : null});
			if(HxOverrides.cca(data,p.pos) == 58) {
				tokens.add({ p : HxOverrides.substr(data,p.pos + 2,p.len - 4), s : false, l : null});
				data = haxe.Template.splitter.matchedRight();
				continue;
			}
			var parp = p.pos + p.len;
			var npar = 1;
			var params = [];
			var part = "";
			while(true) {
				var c = HxOverrides.cca(data,parp);
				parp++;
				if(c == 40) npar++; else if(c == 41) {
					npar--;
					if(npar <= 0) break;
				} else if(c == null) throw "Unclosed macro parenthesis";
				if(c == 44 && npar == 1) {
					params.push(part);
					part = "";
				} else part += String.fromCharCode(c);
			}
			params.push(part);
			tokens.add({ p : haxe.Template.splitter.matched(2), s : false, l : params});
			data = HxOverrides.substr(data,parp,data.length - parp);
		}
		if(data.length > 0) tokens.add({ p : data, s : true, l : null});
		return tokens;
	}
	,parseBlock: function(tokens) {
		var l = new List();
		while(true) {
			var t = tokens.first();
			if(t == null) break;
			if(!t.s && (t.p == "end" || t.p == "else" || HxOverrides.substr(t.p,0,7) == "elseif ")) break;
			l.add(this.parse(tokens));
		}
		if(l.length == 1) return l.first();
		return haxe._Template.TemplateExpr.OpBlock(l);
	}
	,parse: function(tokens) {
		var t = tokens.pop();
		var p = t.p;
		if(t.s) return haxe._Template.TemplateExpr.OpStr(p);
		if(t.l != null) {
			var pe = new List();
			var _g = 0;
			var _g1 = t.l;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				pe.add(this.parseBlock(this.parseTokens(p1)));
			}
			return haxe._Template.TemplateExpr.OpMacro(p,pe);
		}
		if(HxOverrides.substr(p,0,3) == "if ") {
			p = HxOverrides.substr(p,3,p.length - 3);
			var e = this.parseExpr(p);
			var eif = this.parseBlock(tokens);
			var t1 = tokens.first();
			var eelse;
			if(t1 == null) throw "Unclosed 'if'";
			if(t1.p == "end") {
				tokens.pop();
				eelse = null;
			} else if(t1.p == "else") {
				tokens.pop();
				eelse = this.parseBlock(tokens);
				t1 = tokens.pop();
				if(t1 == null || t1.p != "end") throw "Unclosed 'else'";
			} else {
				t1.p = HxOverrides.substr(t1.p,4,t1.p.length - 4);
				eelse = this.parse(tokens);
			}
			return haxe._Template.TemplateExpr.OpIf(e,eif,eelse);
		}
		if(HxOverrides.substr(p,0,8) == "foreach ") {
			p = HxOverrides.substr(p,8,p.length - 8);
			var e1 = this.parseExpr(p);
			var efor = this.parseBlock(tokens);
			var t2 = tokens.pop();
			if(t2 == null || t2.p != "end") throw "Unclosed 'foreach'";
			return haxe._Template.TemplateExpr.OpForeach(e1,efor);
		}
		if(haxe.Template.expr_splitter.match(p)) return haxe._Template.TemplateExpr.OpExpr(this.parseExpr(p));
		return haxe._Template.TemplateExpr.OpVar(p);
	}
	,parseExpr: function(data) {
		var l = new List();
		var expr = data;
		while(haxe.Template.expr_splitter.match(data)) {
			var p = haxe.Template.expr_splitter.matchedPos();
			var k = p.pos + p.len;
			if(p.pos != 0) l.add({ p : HxOverrides.substr(data,0,p.pos), s : true});
			var p1 = haxe.Template.expr_splitter.matched(0);
			l.add({ p : p1, s : p1.indexOf("\"") >= 0});
			data = haxe.Template.expr_splitter.matchedRight();
		}
		if(data.length != 0) l.add({ p : data, s : true});
		var e;
		try {
			e = this.makeExpr(l);
			if(!l.isEmpty()) throw l.first().p;
		} catch( s ) {
			if( js.Boot.__instanceof(s,String) ) {
				throw "Unexpected '" + s + "' in " + expr;
			} else throw(s);
		}
		return function() {
			try {
				return e();
			} catch( exc ) {
				throw "Error : " + Std.string(exc) + " in " + expr;
			}
		};
	}
	,makeConst: function(v) {
		haxe.Template.expr_trim.match(v);
		v = haxe.Template.expr_trim.matched(1);
		if(HxOverrides.cca(v,0) == 34) {
			var str = HxOverrides.substr(v,1,v.length - 2);
			return function() {
				return str;
			};
		}
		if(haxe.Template.expr_int.match(v)) {
			var i = Std.parseInt(v);
			return function() {
				return i;
			};
		}
		if(haxe.Template.expr_float.match(v)) {
			var f = Std.parseFloat(v);
			return function() {
				return f;
			};
		}
		var me = this;
		return function() {
			return me.resolve(v);
		};
	}
	,makePath: function(e,l) {
		var p = l.first();
		if(p == null || p.p != ".") return e;
		l.pop();
		var field = l.pop();
		if(field == null || !field.s) throw field.p;
		var f = field.p;
		haxe.Template.expr_trim.match(f);
		f = haxe.Template.expr_trim.matched(1);
		return this.makePath(function() {
			return Reflect.field(e(),f);
		},l);
	}
	,makeExpr: function(l) {
		return this.makePath(this.makeExpr2(l),l);
	}
	,makeExpr2: function(l) {
		var p = l.pop();
		if(p == null) throw "<eof>";
		if(p.s) return this.makeConst(p.p);
		var _g = p.p;
		switch(_g) {
		case "(":
			var e1 = this.makeExpr(l);
			var p1 = l.pop();
			if(p1 == null || p1.s) throw p1.p;
			if(p1.p == ")") return e1;
			var e2 = this.makeExpr(l);
			var p2 = l.pop();
			if(p2 == null || p2.p != ")") throw p2.p;
			var _g1 = p1.p;
			switch(_g1) {
			case "+":
				return function() {
					return e1() + e2();
				};
			case "-":
				return function() {
					return e1() - e2();
				};
			case "*":
				return function() {
					return e1() * e2();
				};
			case "/":
				return function() {
					return e1() / e2();
				};
			case ">":
				return function() {
					return e1() > e2();
				};
			case "<":
				return function() {
					return e1() < e2();
				};
			case ">=":
				return function() {
					return e1() >= e2();
				};
			case "<=":
				return function() {
					return e1() <= e2();
				};
			case "==":
				return function() {
					return e1() == e2();
				};
			case "!=":
				return function() {
					return e1() != e2();
				};
			case "&&":
				return function() {
					return e1() && e2();
				};
			case "||":
				return function() {
					return e1() || e2();
				};
			default:
				throw "Unknown operation " + p1.p;
			}
			break;
		case "!":
			var e = this.makeExpr(l);
			return function() {
				var v = e();
				return v == null || v == false;
			};
		case "-":
			var e3 = this.makeExpr(l);
			return function() {
				return -e3();
			};
		}
		throw p.p;
	}
	,run: function(e) {
		switch(e[1]) {
		case 0:
			var v = e[2];
			this.buf.add(Std.string(this.resolve(v)));
			break;
		case 1:
			var e1 = e[2];
			this.buf.add(Std.string(e1()));
			break;
		case 2:
			var eelse = e[4];
			var eif = e[3];
			var e2 = e[2];
			var v1 = e2();
			if(v1 == null || v1 == false) {
				if(eelse != null) this.run(eelse);
			} else this.run(eif);
			break;
		case 3:
			var str = e[2];
			if(str == null) this.buf.b += "null"; else this.buf.b += "" + str;
			break;
		case 4:
			var l = e[2];
			var $it0 = l.iterator();
			while( $it0.hasNext() ) {
				var e3 = $it0.next();
				this.run(e3);
			}
			break;
		case 5:
			var loop = e[3];
			var e4 = e[2];
			var v2 = e4();
			try {
				var x = $iterator(v2)();
				if(x.hasNext == null) throw null;
				v2 = x;
			} catch( e5 ) {
				try {
					if(v2.hasNext == null) throw null;
				} catch( e6 ) {
					throw "Cannot iter on " + Std.string(v2);
				}
			}
			this.stack.push(this.context);
			var v3 = v2;
			while( v3.hasNext() ) {
				var ctx = v3.next();
				this.context = ctx;
				this.run(loop);
			}
			this.context = this.stack.pop();
			break;
		case 6:
			var params = e[3];
			var m = e[2];
			var v4 = Reflect.field(this.macros,m);
			var pl = new Array();
			var old = this.buf;
			pl.push($bind(this,this.resolve));
			var $it1 = params.iterator();
			while( $it1.hasNext() ) {
				var p = $it1.next();
				switch(p[1]) {
				case 0:
					var v5 = p[2];
					pl.push(this.resolve(v5));
					break;
				default:
					this.buf = new StringBuf();
					this.run(p);
					pl.push(this.buf.b);
				}
			}
			this.buf = old;
			try {
				this.buf.add(Std.string(v4.apply(this.macros,pl)));
			} catch( e7 ) {
				var plstr;
				try {
					plstr = pl.join(",");
				} catch( e8 ) {
					plstr = "???";
				}
				var msg = "Macro call " + m + "(" + plstr + ") failed (" + Std.string(e7) + ")";
				throw msg;
			}
			break;
		}
	}
	,__class__: haxe.Template
};
haxe.Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe.Timer;
haxe.Timer.__name__ = ["haxe","Timer"];
haxe.Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe.Timer.prototype = {
	stop: function() {
		if(this.id == null) return;
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe.Timer
};
haxe.Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = new Array();
	this.cache = new Array();
	var r = haxe.Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe.Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe.Unserializer;
haxe.Unserializer.__name__ = ["haxe","Unserializer"];
haxe.Unserializer.initCodes = function() {
	var codes = new Array();
	var _g1 = 0;
	var _g = haxe.Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe.Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe.Unserializer.run = function(v) {
	return new haxe.Unserializer(v).unserialize();
};
haxe.Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw "Invalid object";
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw "Invalid object key";
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.get(this.pos++) != 58) throw "Invalid enum format";
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = new Array();
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.get(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			var p1 = this.pos;
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
			}
			return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
		case 121:
			var len = this.readDigits();
			if(this.get(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid string length";
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return Math.NaN;
		case 109:
			return Math.NEGATIVE_INFINITY;
		case 112:
			return Math.POSITIVE_INFINITY;
		case 97:
			var buf = this.buf;
			var a = new Array();
			this.cache.push(a);
			while(true) {
				var c1 = this.buf.charCodeAt(this.pos);
				if(c1 == 104) {
					this.pos++;
					break;
				}
				if(c1 == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw "Invalid reference";
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw "Invalid string reference";
			return this.scache[n2];
		case 120:
			throw this.unserialize();
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw "Class not found " + name;
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw "Enum not found " + name1;
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw "Enum not found " + name2;
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw "Unknown enum index " + name2 + "@" + index;
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe.ds.StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				h.set(s1,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe.ds.IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var c2 = this.get(this.pos++);
			while(c2 == 58) {
				var i = this.readDigits();
				h1.set(i,this.unserialize());
				c2 = this.get(this.pos++);
			}
			if(c2 != 104) throw "Invalid IntMap format";
			return h1;
		case 77:
			var h2 = new haxe.ds.ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			var s3 = HxOverrides.substr(this.buf,this.pos,19);
			d = HxOverrides.strDate(s3);
			this.cache.push(d);
			this.pos += 19;
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			if(this.get(this.pos++) != 58 || this.length - this.pos < len1) throw "Invalid bytes length";
			var codes = haxe.Unserializer.CODES;
			if(codes == null) {
				codes = haxe.Unserializer.initCodes();
				haxe.Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size;
			size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe.io.Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c21 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c11 << 2 | c21 >> 4);
				var c3 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c21 << 4 | c3 >> 2);
				var c4 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c3 << 6 | c4);
			}
			if(rest >= 2) {
				var c12 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c22 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c12 << 2 | c22 >> 4);
				if(rest == 3) {
					var c31 = codes[StringTools.fastCodeAt(buf5,i1++)];
					bytes.set(bpos++,c22 << 4 | c31 >> 2);
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw "Class not found " + name3;
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			if(this.get(this.pos++) != 103) throw "Invalid custom data";
			return o2;
		default:
		}
		this.pos--;
		throw "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos;
	}
	,__class__: haxe.Unserializer
};
haxe.io = {};
haxe.io.Bytes = function(length,b) {
	this.length = length;
	this.b = b;
};
$hxClasses["haxe.io.Bytes"] = haxe.io.Bytes;
haxe.io.Bytes.__name__ = ["haxe","io","Bytes"];
haxe.io.Bytes.alloc = function(length) {
	var a = new Array();
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		a.push(0);
	}
	return new haxe.io.Bytes(length,a);
};
haxe.io.Bytes.ofString = function(s) {
	var a = new Array();
	var i = 0;
	while(i < s.length) {
		var c = StringTools.fastCodeAt(s,i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | StringTools.fastCodeAt(s,i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe.io.Bytes(a.length,a);
};
haxe.io.Bytes.prototype = {
	get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe.io.Bytes
};
haxe.crypto = {};
haxe.crypto.Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe.crypto.Base64;
haxe.crypto.Base64.__name__ = ["haxe","crypto","Base64"];
haxe.crypto.Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe.crypto.BaseCode(haxe.crypto.Base64.BYTES).decodeBytes(haxe.io.Bytes.ofString(str));
};
haxe.crypto.BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw "BaseCode : base length must be a power of two.";
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe.crypto.BaseCode;
haxe.crypto.BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe.crypto.BaseCode.prototype = {
	initTable: function() {
		var tbl = new Array();
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe.io.Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.get(pin++)];
				if(i == -1) throw "BaseCode : invalid encoded char";
				buf |= i;
			}
			curbits -= 8;
			out.set(pout++,buf >> curbits & 255);
		}
		return out;
	}
	,__class__: haxe.crypto.BaseCode
};
haxe.ds = {};
haxe.ds.ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe.ds.ArraySort;
haxe.ds.ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe.ds.ArraySort.sort = function(a,cmp) {
	haxe.ds.ArraySort.rec(a,cmp,0,a.length);
};
haxe.ds.ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) return;
		var _g = from + 1;
		while(_g < to) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) haxe.ds.ArraySort.swap(a,j - 1,j); else break;
				j--;
			}
		}
		return;
	}
	haxe.ds.ArraySort.rec(a,cmp,from,middle);
	haxe.ds.ArraySort.rec(a,cmp,middle,to);
	haxe.ds.ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe.ds.ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) return;
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) haxe.ds.ArraySort.swap(a,pivot,from);
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe.ds.ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe.ds.ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe.ds.ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe.ds.ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe.ds.ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe.ds.ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) return;
	n = haxe.ds.ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) p2 += shift; else p2 = from + (shift - (to - p2));
		}
		a[p1] = val;
	}
};
haxe.ds.ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe.ds.ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) len = half; else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe.ds.ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else len = half;
	}
	return from;
};
haxe.ds.ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
haxe.ds.GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe.ds.GenericCell;
haxe.ds.GenericCell.__name__ = ["haxe","ds","GenericCell"];
haxe.ds.GenericCell.prototype = {
	__class__: haxe.ds.GenericCell
};
haxe.ds.GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe.ds.GenericStack;
haxe.ds.GenericStack.__name__ = ["haxe","ds","GenericStack"];
haxe.ds.GenericStack.prototype = {
	add: function(item) {
		this.head = new haxe.ds.GenericCell(item,this.head);
	}
	,pop: function() {
		var k = this.head;
		if(k == null) return null; else {
			this.head = k.next;
			return k.elt;
		}
	}
	,__class__: haxe.ds.GenericStack
};
haxe.ds.IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe.ds.IntMap;
haxe.ds.IntMap.__name__ = ["haxe","ds","IntMap"];
haxe.ds.IntMap.__interfaces__ = [IMap];
haxe.ds.IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe.ds.IntMap
};
haxe.ds.ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe.ds.ObjectMap;
haxe.ds.ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe.ds.ObjectMap.__interfaces__ = [IMap];
haxe.ds.ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe.ds.ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe.ds.ObjectMap
};
haxe.ds.StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe.ds.StringMap;
haxe.ds.StringMap.__name__ = ["haxe","ds","StringMap"];
haxe.ds.StringMap.__interfaces__ = [IMap];
haxe.ds.StringMap.prototype = {
	set: function(key,value) {
		this.h["$" + key] = value;
	}
	,get: function(key) {
		return this.h["$" + key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		key = "$" + key;
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key.substr(1));
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref["$" + i];
		}};
	}
	,__class__: haxe.ds.StringMap
};
haxe.io.BytesBuffer = function() {
	this.b = new Array();
};
$hxClasses["haxe.io.BytesBuffer"] = haxe.io.BytesBuffer;
haxe.io.BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe.io.BytesBuffer.prototype = {
	getBytes: function() {
		var bytes = new haxe.io.Bytes(this.b.length,this.b);
		this.b = null;
		return bytes;
	}
	,__class__: haxe.io.BytesBuffer
};
haxe.io.Input = function() { };
$hxClasses["haxe.io.Input"] = haxe.io.Input;
haxe.io.Input.__name__ = ["haxe","io","Input"];
haxe.io.Input.prototype = {
	readByte: function() {
		throw "Not implemented";
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) throw haxe.io.Error.OutsideBounds;
		while(k > 0) {
			b[pos] = this.readByte();
			pos++;
			k--;
		}
		return len;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,readString: function(len) {
		var b = haxe.io.Bytes.alloc(len);
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe.io.Input
};
haxe.io.BytesInput = function(b,pos,len) {
	if(pos == null) pos = 0;
	if(len == null) len = b.length - pos;
	if(pos < 0 || len < 0 || pos + len > b.length) throw haxe.io.Error.OutsideBounds;
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe.io.BytesInput;
haxe.io.BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe.io.BytesInput.__super__ = haxe.io.Input;
haxe.io.BytesInput.prototype = $extend(haxe.io.Input.prototype,{
	readByte: function() {
		if(this.len == 0) throw new haxe.io.Eof();
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) throw haxe.io.Error.OutsideBounds;
		if(this.len == 0 && len > 0) throw new haxe.io.Eof();
		if(this.len < len) len = this.len;
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe.io.BytesInput
});
haxe.io.Output = function() { };
$hxClasses["haxe.io.Output"] = haxe.io.Output;
haxe.io.Output.__name__ = ["haxe","io","Output"];
haxe.io.BytesOutput = function() {
	this.b = new haxe.io.BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe.io.BytesOutput;
haxe.io.BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe.io.BytesOutput.__super__ = haxe.io.Output;
haxe.io.BytesOutput.prototype = $extend(haxe.io.Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe.io.BytesOutput
});
haxe.io.Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe.io.Eof;
haxe.io.Eof.__name__ = ["haxe","io","Eof"];
haxe.io.Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe.io.Eof
};
haxe.io.Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe.io.Error.Blocked = ["Blocked",0];
haxe.io.Error.Blocked.toString = $estr;
haxe.io.Error.Blocked.__enum__ = haxe.io.Error;
haxe.io.Error.Overflow = ["Overflow",1];
haxe.io.Error.Overflow.toString = $estr;
haxe.io.Error.Overflow.__enum__ = haxe.io.Error;
haxe.io.Error.OutsideBounds = ["OutsideBounds",2];
haxe.io.Error.OutsideBounds.toString = $estr;
haxe.io.Error.OutsideBounds.__enum__ = haxe.io.Error;
haxe.io.Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe.io.Error; $x.toString = $estr; return $x; };
haxe.io.StringInput = function(s) {
	haxe.io.BytesInput.call(this,haxe.io.Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe.io.StringInput;
haxe.io.StringInput.__name__ = ["haxe","io","StringInput"];
haxe.io.StringInput.__super__ = haxe.io.BytesInput;
haxe.io.StringInput.prototype = $extend(haxe.io.BytesInput.prototype,{
	__class__: haxe.io.StringInput
});
haxe.macro = {};
haxe.macro.Constant = $hxClasses["haxe.macro.Constant"] = { __ename__ : ["haxe","macro","Constant"], __constructs__ : ["CInt","CFloat","CString","CIdent","CRegexp"] };
haxe.macro.Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; };
haxe.macro.Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; };
haxe.macro.Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; };
haxe.macro.Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; };
haxe.macro.Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",4,r,opt]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; };
haxe.macro.Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow"] };
haxe.macro.Binop.OpAdd = ["OpAdd",0];
haxe.macro.Binop.OpAdd.toString = $estr;
haxe.macro.Binop.OpAdd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMult = ["OpMult",1];
haxe.macro.Binop.OpMult.toString = $estr;
haxe.macro.Binop.OpMult.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpDiv = ["OpDiv",2];
haxe.macro.Binop.OpDiv.toString = $estr;
haxe.macro.Binop.OpDiv.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpSub = ["OpSub",3];
haxe.macro.Binop.OpSub.toString = $estr;
haxe.macro.Binop.OpSub.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssign = ["OpAssign",4];
haxe.macro.Binop.OpAssign.toString = $estr;
haxe.macro.Binop.OpAssign.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpEq = ["OpEq",5];
haxe.macro.Binop.OpEq.toString = $estr;
haxe.macro.Binop.OpEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpNotEq = ["OpNotEq",6];
haxe.macro.Binop.OpNotEq.toString = $estr;
haxe.macro.Binop.OpNotEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGt = ["OpGt",7];
haxe.macro.Binop.OpGt.toString = $estr;
haxe.macro.Binop.OpGt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGte = ["OpGte",8];
haxe.macro.Binop.OpGte.toString = $estr;
haxe.macro.Binop.OpGte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLt = ["OpLt",9];
haxe.macro.Binop.OpLt.toString = $estr;
haxe.macro.Binop.OpLt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLte = ["OpLte",10];
haxe.macro.Binop.OpLte.toString = $estr;
haxe.macro.Binop.OpLte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAnd = ["OpAnd",11];
haxe.macro.Binop.OpAnd.toString = $estr;
haxe.macro.Binop.OpAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpOr = ["OpOr",12];
haxe.macro.Binop.OpOr.toString = $estr;
haxe.macro.Binop.OpOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpXor = ["OpXor",13];
haxe.macro.Binop.OpXor.toString = $estr;
haxe.macro.Binop.OpXor.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe.macro.Binop.OpBoolAnd.toString = $estr;
haxe.macro.Binop.OpBoolAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolOr = ["OpBoolOr",15];
haxe.macro.Binop.OpBoolOr.toString = $estr;
haxe.macro.Binop.OpBoolOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShl = ["OpShl",16];
haxe.macro.Binop.OpShl.toString = $estr;
haxe.macro.Binop.OpShl.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShr = ["OpShr",17];
haxe.macro.Binop.OpShr.toString = $estr;
haxe.macro.Binop.OpShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpUShr = ["OpUShr",18];
haxe.macro.Binop.OpUShr.toString = $estr;
haxe.macro.Binop.OpUShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMod = ["OpMod",19];
haxe.macro.Binop.OpMod.toString = $estr;
haxe.macro.Binop.OpMod.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe.macro.Binop; $x.toString = $estr; return $x; };
haxe.macro.Binop.OpInterval = ["OpInterval",21];
haxe.macro.Binop.OpInterval.toString = $estr;
haxe.macro.Binop.OpInterval.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpArrow = ["OpArrow",22];
haxe.macro.Binop.OpArrow.toString = $estr;
haxe.macro.Binop.OpArrow.__enum__ = haxe.macro.Binop;
haxe.macro.Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] };
haxe.macro.Unop.OpIncrement = ["OpIncrement",0];
haxe.macro.Unop.OpIncrement.toString = $estr;
haxe.macro.Unop.OpIncrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpDecrement = ["OpDecrement",1];
haxe.macro.Unop.OpDecrement.toString = $estr;
haxe.macro.Unop.OpDecrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNot = ["OpNot",2];
haxe.macro.Unop.OpNot.toString = $estr;
haxe.macro.Unop.OpNot.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNeg = ["OpNeg",3];
haxe.macro.Unop.OpNeg.toString = $estr;
haxe.macro.Unop.OpNeg.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNegBits = ["OpNegBits",4];
haxe.macro.Unop.OpNegBits.toString = $estr;
haxe.macro.Unop.OpNegBits.__enum__ = haxe.macro.Unop;
haxe.macro.ExprDef = $hxClasses["haxe.macro.ExprDef"] = { __ename__ : ["haxe","macro","ExprDef"], __constructs__ : ["EConst","EArray","EBinop","EField","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType","EMeta"] };
haxe.macro.ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",4,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",5,fields]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",6,values]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ECall = function(e,params) { var $x = ["ECall",7,e,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ENew = function(t,params) { var $x = ["ENew",8,t,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",9,op,postFix,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EVars = function(vars) { var $x = ["EVars",10,vars]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EFunction = function(name,f) { var $x = ["EFunction",11,name,f]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EBlock = function(exprs) { var $x = ["EBlock",12,exprs]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EFor = function(it,expr) { var $x = ["EFor",13,it,expr]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EIn = function(e1,e2) { var $x = ["EIn",14,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",15,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",16,econd,e,normalWhile]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",17,e,cases,edef]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ETry = function(e,catches) { var $x = ["ETry",18,e,catches]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EReturn = function(e) { var $x = ["EReturn",19,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EBreak = ["EBreak",20];
haxe.macro.ExprDef.EBreak.toString = $estr;
haxe.macro.ExprDef.EBreak.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EContinue = ["EContinue",21];
haxe.macro.ExprDef.EContinue.toString = $estr;
haxe.macro.ExprDef.EContinue.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EUntyped = function(e) { var $x = ["EUntyped",22,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EThrow = function(e) { var $x = ["EThrow",23,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ECast = function(e,t) { var $x = ["ECast",24,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",25,e,isCall]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",26,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",27,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",28,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ExprDef.EMeta = function(s,e) { var $x = ["EMeta",29,s,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; };
haxe.macro.ComplexType = $hxClasses["haxe.macro.ComplexType"] = { __ename__ : ["haxe","macro","ComplexType"], __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] };
haxe.macro.ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; };
haxe.macro.Access = $hxClasses["haxe.macro.Access"] = { __ename__ : ["haxe","macro","Access"], __constructs__ : ["APublic","APrivate","AStatic","AOverride","ADynamic","AInline","AMacro"] };
haxe.macro.Access.APublic = ["APublic",0];
haxe.macro.Access.APublic.toString = $estr;
haxe.macro.Access.APublic.__enum__ = haxe.macro.Access;
haxe.macro.Access.APrivate = ["APrivate",1];
haxe.macro.Access.APrivate.toString = $estr;
haxe.macro.Access.APrivate.__enum__ = haxe.macro.Access;
haxe.macro.Access.AStatic = ["AStatic",2];
haxe.macro.Access.AStatic.toString = $estr;
haxe.macro.Access.AStatic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AOverride = ["AOverride",3];
haxe.macro.Access.AOverride.toString = $estr;
haxe.macro.Access.AOverride.__enum__ = haxe.macro.Access;
haxe.macro.Access.ADynamic = ["ADynamic",4];
haxe.macro.Access.ADynamic.toString = $estr;
haxe.macro.Access.ADynamic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AInline = ["AInline",5];
haxe.macro.Access.AInline.toString = $estr;
haxe.macro.Access.AInline.__enum__ = haxe.macro.Access;
haxe.macro.Access.AMacro = ["AMacro",6];
haxe.macro.Access.AMacro.toString = $estr;
haxe.macro.Access.AMacro.__enum__ = haxe.macro.Access;
haxe.macro.FieldType = $hxClasses["haxe.macro.FieldType"] = { __ename__ : ["haxe","macro","FieldType"], __constructs__ : ["FVar","FFun","FProp"] };
haxe.macro.FieldType.FVar = function(t,e) { var $x = ["FVar",0,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; };
haxe.macro.FieldType.FFun = function(f) { var $x = ["FFun",1,f]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; };
haxe.macro.FieldType.FProp = function(get,set,t,e) { var $x = ["FProp",2,get,set,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; };
haxe.macro.Type = $hxClasses["haxe.macro.Type"] = { __ename__ : ["haxe","macro","Type"], __constructs__ : ["TMono","TEnum","TInst","TType","TFun","TAnonymous","TDynamic","TLazy","TAbstract"] };
haxe.macro.Type.TMono = function(t) { var $x = ["TMono",0,t]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TEnum = function(t,params) { var $x = ["TEnum",1,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TInst = function(t,params) { var $x = ["TInst",2,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TType = function(t,params) { var $x = ["TType",3,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TFun = function(args,ret) { var $x = ["TFun",4,args,ret]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TAnonymous = function(a) { var $x = ["TAnonymous",5,a]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TDynamic = function(t) { var $x = ["TDynamic",6,t]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TLazy = function(f) { var $x = ["TLazy",7,f]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.macro.Type.TAbstract = function(t,params) { var $x = ["TAbstract",8,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; };
haxe.ui.toolkit = {};
haxe.ui.toolkit.core = {};
haxe.ui.toolkit.core.interfaces = {};
haxe.ui.toolkit.core.interfaces.IClonable = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IClonable"] = haxe.ui.toolkit.core.interfaces.IClonable;
haxe.ui.toolkit.core.interfaces.IClonable.__name__ = ["haxe","ui","toolkit","core","interfaces","IClonable"];
haxe.ui.toolkit.core.interfaces.IClonable.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IClonable
};
haxe.ui.toolkit.core.interfaces.IDrawable = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDrawable"] = haxe.ui.toolkit.core.interfaces.IDrawable;
haxe.ui.toolkit.core.interfaces.IDrawable.__name__ = ["haxe","ui","toolkit","core","interfaces","IDrawable"];
haxe.ui.toolkit.core.interfaces.IDrawable.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDrawable
};
haxe.ui.toolkit.core.interfaces.IEventDispatcher = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IEventDispatcher"] = haxe.ui.toolkit.core.interfaces.IEventDispatcher;
haxe.ui.toolkit.core.interfaces.IEventDispatcher.__name__ = ["haxe","ui","toolkit","core","interfaces","IEventDispatcher"];
haxe.ui.toolkit.core.interfaces.IEventDispatcher.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IEventDispatcher
};
haxe.ui.toolkit.core.interfaces.IDisplayObject = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDisplayObject"] = haxe.ui.toolkit.core.interfaces.IDisplayObject;
haxe.ui.toolkit.core.interfaces.IDisplayObject.__name__ = ["haxe","ui","toolkit","core","interfaces","IDisplayObject"];
haxe.ui.toolkit.core.interfaces.IDisplayObject.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IEventDispatcher];
haxe.ui.toolkit.core.interfaces.IDisplayObject.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDisplayObject
};
haxe.ui.toolkit.core.DisplayObject = function() {
	this._valign = "top";
	this._halign = "left";
	this._invalidating = false;
	this._ready = false;
	this._percentHeight = -1;
	this._percentWidth = -1;
	this._height = 0;
	this._width = 0;
	this._y = 0;
	this._x = 0;
	this._sprite = new openfl.display.Sprite();
	this._sprite.tabChildren = false;
	this.addEventListener(openfl.events.Event.ADDED_TO_STAGE,$bind(this,this._onAddedToStage),false,100);
};
$hxClasses["haxe.ui.toolkit.core.DisplayObject"] = haxe.ui.toolkit.core.DisplayObject;
haxe.ui.toolkit.core.DisplayObject.__name__ = ["haxe","ui","toolkit","core","DisplayObject"];
haxe.ui.toolkit.core.DisplayObject.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IDrawable,haxe.ui.toolkit.core.interfaces.IDisplayObject,haxe.ui.toolkit.core.interfaces.IEventDispatcher];
haxe.ui.toolkit.core.DisplayObject.prototype = {
	preInitialize: function() {
	}
	,initialize: function() {
	}
	,postInitialize: function() {
	}
	,_onAddedToStage: function(event) {
		this.removeEventListener(openfl.events.Event.ADDED_TO_STAGE,$bind(this,this._onAddedToStage));
		this.preInitialize();
		this._ready = true;
		this.initialize();
		this.postInitialize();
		this.invalidate(273);
		var event1 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "init");
		this.dispatchEvent(event1);
		var event2 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "ready");
		this.dispatchEvent(event2);
	}
	,get_parent: function() {
		return this._parent;
	}
	,set_parent: function(value) {
		this._parent = value;
		return value;
	}
	,get_root: function() {
		return this._root;
	}
	,set_root: function(value) {
		this._root = value;
		return value;
	}
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		this._id = value;
		return value;
	}
	,get_x: function() {
		return this._x;
	}
	,set_x: function(value) {
		this._x = value | 0;
		this._sprite.set_x(this._x);
		return value;
	}
	,get_y: function() {
		return this._y;
	}
	,set_y: function(value) {
		this._y = value | 0;
		this._sprite.set_y(this._y);
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		value = value | 0;
		if(this._width == value) return value;
		this._width = value;
		this._invalidating = false;
		this.invalidate(272);
		if(this._parent != null) this._parent.invalidate(1);
		var event = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "resize");
		this.dispatchEvent(event);
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		value = value | 0;
		if(this._height == value) return value;
		this._height = value;
		this._invalidating = false;
		this.invalidate(272);
		if(this._parent != null) this._parent.invalidate(1);
		var event = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "resize");
		this.dispatchEvent(event);
		return value;
	}
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) return value;
		this._percentWidth = value;
		this.invalidate();
		if(this._parent != null) this._parent.invalidate(1);
		return value;
	}
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) return value;
		this._percentHeight = value;
		this.invalidate();
		if(this._parent != null) this._parent.invalidate(1);
		return value;
	}
	,get_ready: function() {
		return this._ready;
	}
	,get_sprite: function() {
		return this._sprite;
	}
	,get_stageX: function() {
		var c;
		c = js.Boot.__cast(this , haxe.ui.toolkit.core.interfaces.IDisplayObject);
		var xpos = 0;
		while(c != null) {
			xpos += c.get_x();
			if(c.get_sprite().get_scrollRect() != null) xpos -= c.get_sprite().get_scrollRect().get_left();
			c = c.get_parent();
		}
		return xpos;
	}
	,get_stageY: function() {
		var c;
		c = js.Boot.__cast(this , haxe.ui.toolkit.core.interfaces.IDisplayObject);
		var ypos = 0;
		while(c != null) {
			ypos += c.get_y();
			if(c.get_sprite().get_scrollRect() != null) ypos -= c.get_sprite().get_scrollRect().get_top();
			c = c.get_parent();
		}
		return ypos;
	}
	,get_visible: function() {
		return this._sprite.get_visible();
	}
	,set_visible: function(value) {
		this._sprite.set_visible(value);
		if(this._parent != null) this._parent.invalidate(1);
		return value;
	}
	,get_horizontalAlign: function() {
		return this._halign;
	}
	,set_horizontalAlign: function(value) {
		this._halign = value;
		if(this._ready) this.get_parent().invalidate(1);
		return value;
	}
	,get_verticalAlign: function() {
		return this._valign;
	}
	,set_verticalAlign: function(value) {
		this._valign = value;
		if(this._ready) this.get_parent().invalidate(1);
		return value;
	}
	,hitTest: function(xpos,ypos) {
		var b = false;
		var sx = this.get_stageX();
		var sy = this.get_stageY();
		if(xpos > sx && xpos < sx + this.get_width() && ypos > sy && ypos < sy + this.get_height()) b = true;
		return b;
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		this._invalidating = true;
		if((type & 16) == 16 || (type & 4096) == 4096) this.paint();
		this._invalidating = false;
	}
	,dispose: function() {
		this.removeAllEventListeners();
	}
	,interceptEvent: function(event) {
		var uiEvent = new haxe.ui.toolkit.events.UIEvent("haxeui_" + event.type);
		if(js.Boot.__instanceof(event,openfl.events.MouseEvent)) {
			var mouseEvent = event;
			uiEvent.stageX = mouseEvent.stageX;
			uiEvent.stageY = mouseEvent.stageY;
		}
		this.dispatchEvent(uiEvent);
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		if(StringTools.startsWith(type,"haxeui_")) {
			var interceptEventType = HxOverrides.substr(type,"haxeui_".length,type.length);
			if(this._interceptMap == null) this._interceptMap = new haxe.ds.StringMap();
			if(this._interceptMap.exists(interceptEventType) == false) this._interceptMap.set(interceptEventType,0); else {
				var value = this._interceptMap.get(interceptEventType) + 1;
				this._interceptMap.set(interceptEventType,value);
			}
			if(this._interceptMap.get(interceptEventType) == 0) this.addEventListener(interceptEventType,$bind(this,this.interceptEvent),useCapture,priority,useWeakReference);
		}
		if(this._eventListeners == null) this._eventListeners = new haxe.ds.StringMap();
		var list = this._eventListeners.get(type);
		if(list == null) {
			list = new Array();
			this._eventListeners.set(type,list);
		}
		list.push(listener);
		this._sprite.addEventListener(type,listener,useCapture,priority,useWeakReference);
	}
	,dispatchEvent: function(event) {
		if(js.Boot.__instanceof(event,haxe.ui.toolkit.events.UIEvent)) (js.Boot.__cast(event , haxe.ui.toolkit.events.UIEvent)).displayObject = this;
		return this._sprite.dispatchEvent(event);
	}
	,hasEventListener: function(type) {
		return this._sprite.hasEventListener(type);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(StringTools.startsWith(type,"haxeui_")) {
			var interceptEventType = HxOverrides.substr(type,"haxeui_".length,type.length);
			if(this._interceptMap != null && this._interceptMap.exists(interceptEventType)) {
				var value = this._interceptMap.get(interceptEventType) - 1;
				this._interceptMap.set(interceptEventType,value);
				if(this._interceptMap.get(interceptEventType) <= 0) {
					this._interceptMap.remove(interceptEventType);
					this.removeEventListener(interceptEventType,$bind(this,this.interceptEvent),useCapture);
				}
			}
		}
		if(this._eventListeners != null && this._eventListeners.exists(type)) {
			var list = this._eventListeners.get(type);
			if(list != null) HxOverrides.remove(list,listener);
		}
		this._sprite.removeEventListener(type,listener,useCapture);
	}
	,willTrigger: function(type) {
		return this._sprite.willTrigger(type);
	}
	,get_graphics: function() {
		return this._sprite.get_graphics();
	}
	,paint: function() {
		this._sprite.get_graphics().clear();
		this._sprite.get_graphics().beginFill(13421772);
		this._sprite.get_graphics().lineStyle(1,8947848);
		this._sprite.get_graphics().drawRect(0,0,this._width,this._height);
		this._sprite.get_graphics().endFill();
	}
	,removeEventListenerType: function(eventType) {
		if(this._eventListeners != null) {
			var list = this._eventListeners.get(eventType);
			if(list != null) while(list.length != 0) this.removeEventListener(eventType,list.pop());
		}
	}
	,removeAllEventListeners: function() {
		if(this._eventListeners != null) {
			var $it0 = this._eventListeners.keys();
			while( $it0.hasNext() ) {
				var eventType = $it0.next();
				var list = this._eventListeners.get(eventType);
				while(list.length != 0) {
					this.removeEventListener(eventType,list.pop());
					list = this._eventListeners.get(eventType);
				}
			}
		}
	}
	,getListenerCount: function(type,listener) {
		var count = 0;
		if(this._eventListeners.exists(type)) {
			var list = this._eventListeners.get(type);
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				if(l == listener) count++;
			}
		}
		return count;
	}
	,removeEventFunction: function(arr,fn) {
		return HxOverrides.remove(arr,fn);
	}
	,_handleEvent: function(event) {
		var fnName = "on" + haxe.ui.toolkit.util.StringUtil.capitalizeFirstLetter(StringTools.replace(event.type,"haxeui_",""));
		var fn = Reflect.field(this,fnName);
		if(fn != null) {
			var fnEvent = new haxe.ui.toolkit.events.UIEvent("haxeui_" + event.type,event.get_component());
			fnEvent.data = event.data;
			fnEvent.displayObject = this;
			fn(fnEvent);
		}
	}
	,set_onInit: function(value) {
		this.onInit = value;
		this.addEventListener("haxeui_" + "init",$bind(this,this._handleEvent));
		return value;
	}
	,set_onResize: function(value) {
		this.onResize = value;
		this.addEventListener("haxeui_" + "resize",$bind(this,this._handleEvent));
		return value;
	}
	,set_onReady: function(value) {
		this.onReady = value;
		this.addEventListener("haxeui_" + "ready",$bind(this,this._handleEvent));
		return value;
	}
	,set_onClick: function(value) {
		this.onClick = value;
		this.addEventListener("haxeui_" + "click",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMouseDown: function(value) {
		this.onMouseDown = value;
		this.addEventListener("haxeui_" + "mouseDown",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMouseUp: function(value) {
		this.onMouseUp = value;
		this.addEventListener("haxeui_" + "mouseUp",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMouseOver: function(value) {
		this.onMouseOver = value;
		this.addEventListener("haxeui_" + "mouseOver",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMouseOut: function(value) {
		this.onMouseOut = value;
		this.addEventListener("haxeui_" + "mouseOut",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMouseMove: function(value) {
		this.onMouseMove = value;
		this.addEventListener("haxeui_" + "mouseMove",$bind(this,this._handleEvent));
		return value;
	}
	,set_onDoubleClick: function(value) {
		this.onDoubleClick = value;
		this.addEventListener("haxeui_" + "doubleClick",$bind(this,this._handleEvent));
		return value;
	}
	,set_onRollOver: function(value) {
		this.onRollOver = value;
		this.addEventListener("haxeui_" + "rollOver",$bind(this,this._handleEvent));
		return value;
	}
	,set_onRollOut: function(value) {
		this.onRollOut = value;
		this.addEventListener("haxeui_" + "rollOut",$bind(this,this._handleEvent));
		return value;
	}
	,set_onChange: function(value) {
		this.onChange = value;
		this.addEventListener("haxeui_" + "change",$bind(this,this._handleEvent));
		return value;
	}
	,set_onScroll: function(value) {
		this.onScroll = value;
		this.addEventListener("haxeui_" + "scroll",$bind(this,this._handleEvent));
		return value;
	}
	,set_onAdded: function(value) {
		this.onAdded = value;
		this.addEventListener("haxeui_" + "added",$bind(this,this._handleEvent));
		return value;
	}
	,set_onAddedToStage: function(value) {
		this.onAddedToStage = value;
		this.addEventListener("haxeui_" + "addedToStage",$bind(this,this._handleEvent));
		return value;
	}
	,set_onRemoved: function(value) {
		this.onRemoved = value;
		this.addEventListener("haxeui_" + "removed",$bind(this,this._handleEvent));
		return value;
	}
	,set_onRemovedFromStage: function(value) {
		this.onRemovedFromStage = value;
		this.addEventListener("haxeui_" + "removedFromStage",$bind(this,this._handleEvent));
		return value;
	}
	,set_onActivate: function(value) {
		this.onActivate = value;
		this.addEventListener("haxeui_" + "activate",$bind(this,this._handleEvent));
		return value;
	}
	,set_onDeactivate: function(value) {
		this.onDeactivate = value;
		this.addEventListener("haxeui_" + "deactivate",$bind(this,this._handleEvent));
		return value;
	}
	,set_onGlyphClick: function(value) {
		this.onGlyphClick = value;
		this.addEventListener("haxeui_" + "glyphClick",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMenuSelect: function(value) {
		this.onMenuSelect = value;
		this.addEventListener("haxeui_" + "menuSelect",$bind(this,this._handleEvent));
		return value;
	}
	,set_onMenuOpen: function(value) {
		this.onMenuOpen = value;
		this.addEventListener("haxeui_" + "menuOpen",$bind(this,this._handleEvent));
		return value;
	}
	,clone: function() {
		var c = this.self();
		c.set_id(this.get_id());
		c.set_x(this.get_x());
		c.set_y(this.get_y());
		c.set_width(this.get_width());
		c.set_height(this.get_height());
		c.set_percentWidth(this.get_percentWidth());
		c.set_percentHeight(this.get_percentHeight());
		c.set_horizontalAlign(this.get_horizontalAlign());
		c.set_verticalAlign(this.get_verticalAlign());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.DisplayObject();
	}
	,__class__: haxe.ui.toolkit.core.DisplayObject
	,__properties__: {set_onMenuOpen:"set_onMenuOpen",set_onMenuSelect:"set_onMenuSelect",set_onGlyphClick:"set_onGlyphClick",set_onDeactivate:"set_onDeactivate",set_onActivate:"set_onActivate",set_onRemovedFromStage:"set_onRemovedFromStage",set_onRemoved:"set_onRemoved",set_onAddedToStage:"set_onAddedToStage",set_onAdded:"set_onAdded",set_onScroll:"set_onScroll",set_onChange:"set_onChange",set_onRollOut:"set_onRollOut",set_onRollOver:"set_onRollOver",set_onDoubleClick:"set_onDoubleClick",set_onMouseMove:"set_onMouseMove",set_onMouseOut:"set_onMouseOut",set_onMouseOver:"set_onMouseOver",set_onMouseUp:"set_onMouseUp",set_onMouseDown:"set_onMouseDown",set_onClick:"set_onClick",set_onReady:"set_onReady",set_onResize:"set_onResize",set_onInit:"set_onInit",get_graphics:"get_graphics",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_visible:"set_visible",get_visible:"get_visible",get_stageY:"get_stageY",get_stageX:"get_stageX",get_sprite:"get_sprite",get_ready:"get_ready",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_id:"set_id",get_id:"get_id",set_root:"set_root",get_root:"get_root",set_parent:"set_parent",get_parent:"get_parent"}
};
haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer"] = haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer;
haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer.__name__ = ["haxe","ui","toolkit","core","interfaces","IDisplayObjectContainer"];
haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDisplayObject];
haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer
};
haxe.ui.toolkit.core.DisplayObjectContainer = function() {
	this._autoSize = false;
	haxe.ui.toolkit.core.DisplayObject.call(this);
	this._layout = new haxe.ui.toolkit.layout.DefaultLayout();
	this._children = new Array();
};
$hxClasses["haxe.ui.toolkit.core.DisplayObjectContainer"] = haxe.ui.toolkit.core.DisplayObjectContainer;
haxe.ui.toolkit.core.DisplayObjectContainer.__name__ = ["haxe","ui","toolkit","core","DisplayObjectContainer"];
haxe.ui.toolkit.core.DisplayObjectContainer.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer];
haxe.ui.toolkit.core.DisplayObjectContainer.__super__ = haxe.ui.toolkit.core.DisplayObject;
haxe.ui.toolkit.core.DisplayObjectContainer.prototype = $extend(haxe.ui.toolkit.core.DisplayObject.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.DisplayObject.prototype.initialize.call(this);
		this._layout.set_container(this);
		if(this._childrenToAdd != null) {
			var _g = 0;
			var _g1 = this._childrenToAdd;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				this.addChild(child);
			}
			this._childrenToAdd = null;
		}
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.DisplayObject.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256 || (type & 1) == 1) this._layout.refresh();
		this._invalidating = false;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidate(type,recursive);
			}
		}
	}
	,get_numChildren: function() {
		var arr = this._children;
		if(this._childrenToAdd != null) arr = arr.concat(this._childrenToAdd);
		return arr.length;
	}
	,get_children: function() {
		var arr = this._children;
		if(this._childrenToAdd != null) arr = arr.concat(this._childrenToAdd);
		return arr;
	}
	,indexOfChild: function(child) {
		var index = Lambda.indexOf(this.get_children(),child);
		return index;
	}
	,getChildAt: function(index) {
		return this.get_children()[index];
	}
	,addChildAt: function(child,index) {
		if(child == null) return null;
		if(this._ready == false) {
			if(this._childrenToAdd == null) this._childrenToAdd = new Array();
			this._childrenToAdd.splice(index,0,child);
			return child;
		}
		var childSprite = child.get_sprite();
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) (js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)).set_parent(this);
		child.set_root(this.get_root());
		this._children.splice(index,0,child);
		this._sprite.addChildAt(childSprite,index);
		this.invalidate(1);
		return child;
	}
	,addChild: function(child) {
		if(child == null) return null;
		if(this._ready == false) {
			if(this._childrenToAdd == null) this._childrenToAdd = new Array();
			this._childrenToAdd.push(child);
			return child;
		}
		var childSprite = child.get_sprite();
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) (js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)).set_parent(this);
		child.set_root(this.get_root());
		this._children.push(child);
		this._sprite.addChild(childSprite);
		this.invalidate(1);
		return child;
	}
	,removeChild: function(child,dispose) {
		if(dispose == null) dispose = true;
		if(child == null) return null;
		var childSprite = child.get_sprite();
		this._sprite.removeChild(childSprite);
		HxOverrides.remove(this._children,child);
		if(dispose == true) child.dispose();
		this.invalidate(1);
		if(this._childrenToAdd != null) {
			var success = HxOverrides.remove(this._childrenToAdd,child);
			if(dispose && success) child.dispose();
		}
		return child;
	}
	,removeChildAt: function(index,dispose) {
		if(dispose == null) dispose = true;
		return this.removeChild(this.getChildAt(index),dispose);
	}
	,removeAllChildren: function(dispose) {
		if(dispose == null) dispose = true;
		var arr = this.get_children();
		while(arr.length > 0) {
			var child = arr[0];
			this.removeChild(child,dispose);
		}
		while(this.get_sprite().get_numChildren() > 0) this.get_sprite().removeChildAt(0);
		this._childrenToAdd = null;
	}
	,contains: function(child) {
		if(child == null) return false;
		if(this._childrenToAdd != null) return Lambda.has(this._childrenToAdd,child);
		return this.get_sprite().contains(child.get_sprite());
	}
	,setChildIndex: function(child,index) {
		if(child != null) this.get_sprite().setChildIndex(child.get_sprite(),index);
		if(this._childrenToAdd != null) {
			HxOverrides.remove(this._childrenToAdd,child);
			this._childrenToAdd.splice(index,0,child);
		}
	}
	,findChildAs: function(type) {
		var match = null;
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js.Boot.__instanceof(child,type)) {
				match = child;
				break;
			}
		}
		return match;
	}
	,findChild: function(id,type,recursive) {
		if(recursive == null) recursive = false;
		var match = null;
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_id() == id) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g2 = 0;
			var _g11 = this.get_children();
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				if(js.Boot.__instanceof(child1,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) {
					var c;
					c = js.Boot.__cast(child1 , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer);
					var temp = c.findChild(id,type,recursive);
					if(temp != null) {
						match = temp;
						break;
					}
				}
			}
		}
		return match;
	}
	,findComponentUnderPoint: function(stageX,stageY) {
		var c = null;
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.hitTest(stageX,stageY) == true) {
				c = child;
				break;
			}
		}
		return c;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		this._layout = value;
		this._layout.set_container(this);
		if(this._ready) this.invalidate(1);
		return value;
	}
	,get_autoSize: function() {
		return this._autoSize;
	}
	,set_autoSize: function(value) {
		this._autoSize = value;
		if(this._ready) this.invalidate(1);
		return this._autoSize;
	}
	,dispose: function() {
		while(this.get_children().length > 0) {
			var _g = 0;
			var _g1 = this.get_children();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				try {
					this.removeChild(child);
				} catch( e ) {
					var stack = haxe.CallStack.exceptionStack();
					haxe.Log.trace("Problem removing component: " + Std.string(this) + ", " + Std.string(child) + "(" + Std.string(e) + "), callstack:",{ fileName : "DisplayObjectContainer.hx", lineNumber : 311, className : "haxe.ui.toolkit.core.DisplayObjectContainer", methodName : "dispose"});
					haxe.Log.trace(haxe.CallStack.toString(stack),{ fileName : "DisplayObjectContainer.hx", lineNumber : 312, className : "haxe.ui.toolkit.core.DisplayObjectContainer", methodName : "dispose"});
				}
			}
		}
		haxe.ui.toolkit.core.DisplayObject.prototype.dispose.call(this);
	}
	,set_root: function(value) {
		haxe.ui.toolkit.core.DisplayObject.prototype.set_root.call(this,value);
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_root(value);
		}
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.DisplayObject.prototype.clone.call(this);
		c.set_autoSize(this.get_autoSize());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.DisplayObjectContainer();
	}
	,__class__: haxe.ui.toolkit.core.DisplayObjectContainer
	,__properties__: $extend(haxe.ui.toolkit.core.DisplayObject.prototype.__properties__,{set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",get_children:"get_children",set_layout:"set_layout",get_layout:"get_layout",get_numChildren:"get_numChildren"})
});
haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject"] = haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject;
haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject.__name__ = ["haxe","ui","toolkit","core","interfaces","IStyleableDisplayObject"];
haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer];
haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject
};
haxe.ui.toolkit.core.StyleableDisplayObject = function() {
	this._lazyLoadStyles = true;
	haxe.ui.toolkit.core.DisplayObjectContainer.call(this);
};
$hxClasses["haxe.ui.toolkit.core.StyleableDisplayObject"] = haxe.ui.toolkit.core.StyleableDisplayObject;
haxe.ui.toolkit.core.StyleableDisplayObject.__name__ = ["haxe","ui","toolkit","core","StyleableDisplayObject"];
haxe.ui.toolkit.core.StyleableDisplayObject.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject];
haxe.ui.toolkit.core.StyleableDisplayObject.__super__ = haxe.ui.toolkit.core.DisplayObjectContainer;
haxe.ui.toolkit.core.StyleableDisplayObject.prototype = $extend(haxe.ui.toolkit.core.DisplayObjectContainer.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.core.DisplayObjectContainer.prototype.preInitialize.call(this);
		this.refreshStyle();
	}
	,paint: function() {
		if(this._width == 0 || this._height == 0 || this._ready == false) return;
		var rc = new openfl.geom.Rectangle(0,0,this._width,this._height);
		haxe.ui.toolkit.style.StyleHelper.paintStyle(this.get_graphics(),this._baseStyle,rc);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.DisplayObjectContainer.prototype.invalidate.call(this,type,recursive);
		if((type & 1048576) == 1048576) this.refreshStyle();
	}
	,set_id: function(value) {
		if(value == this.get_id()) return value;
		var v = haxe.ui.toolkit.core.DisplayObjectContainer.prototype.set_id.call(this,value);
		if(this._ready) {
			if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
			this._baseStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this);
			this.invalidate(16);
		}
		return v;
	}
	,set_layout: function(value) {
		value = haxe.ui.toolkit.core.DisplayObjectContainer.prototype.set_layout.call(this,value);
		if(this._baseStyle != null) {
			if(this.get_layout() != null) {
				if(this._baseStyle.get_paddingLeft() != -1) this.get_layout().get_padding().set_left(this._baseStyle.get_paddingLeft());
				if(this._baseStyle.get_paddingTop() != -1) this.get_layout().get_padding().set_top(this._baseStyle.get_paddingTop());
				if(this._baseStyle.get_paddingRight() != -1) this.get_layout().get_padding().set_right(this._baseStyle.get_paddingRight());
				if(this._baseStyle.get_paddingBottom() != -1) this.get_layout().get_padding().set_bottom(this._baseStyle.get_paddingBottom());
				if(this._baseStyle.get_spacingX() != -1) this._layout.set_spacingX(this._baseStyle.get_spacingX());
				if(this._baseStyle.get_spacingY() != -1) this._layout.set_spacingY(this._baseStyle.get_spacingY());
			}
		}
		return value;
	}
	,get_baseStyle: function() {
		if(this._baseStyle == null) {
			this._baseStyle = new haxe.ui.toolkit.style.Style();
			this._baseStyle.set_target(this);
		}
		return this._baseStyle;
	}
	,set_baseStyle: function(value) {
		this._baseStyle = value;
		this._baseStyle.set_target(this);
		return value;
	}
	,get_styleName: function() {
		return this._styleName;
	}
	,set_styleName: function(value) {
		this._styleName = value;
		if(this._ready) {
			if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
			this._baseStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this);
			this.invalidate(16);
		}
		return value;
	}
	,get_style: function() {
		if(this._inlineStyle == null) {
			this._inlineStyle = new haxe.ui.toolkit.style.Style();
			this._inlineStyle.set_target(this);
		}
		return this._inlineStyle;
	}
	,set_style: function(value) {
		this._inlineStyle = value;
		if(this._inlineStyle != null) this._inlineStyle.set_target(this);
		if(this._ready) {
			if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
			this._baseStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this);
			this.invalidate(16);
		}
		return value;
	}
	,storeStyle: function(id,value) {
		if(this._storedStyles == null) this._storedStyles = new haxe.ds.StringMap();
		this._storedStyles.set(id,value);
	}
	,retrieveStyle: function(id) {
		var style = null;
		if(this._lazyLoadStyles == false) {
			if(this._storedStyles == null) return null;
			style = this._storedStyles.get(id);
		} else if(this._ready) style = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this,id);
		return style;
	}
	,applyStyle: function() {
		if(this._baseStyle == null) return;
		if(this._inlineStyle != null) this._baseStyle.merge(this._inlineStyle);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_alpha() != -1) this._sprite.set_alpha(this._baseStyle.get_alpha()); else this._sprite.set_alpha(1);
			if(this._baseStyle.get_horizontalAlignment() != null) this.set_horizontalAlign(this._baseStyle.get_horizontalAlignment());
			if(this._baseStyle.get_verticalAlignment() != null) this.set_verticalAlign(this._baseStyle.get_verticalAlignment());
		}
		this.invalidate(16);
	}
	,buildStyles: function() {
	}
	,clearStyles: function() {
		this._storedStyles = new haxe.ds.StringMap();
	}
	,refreshStyle: function() {
		if(this._lazyLoadStyles == false) this.buildStyles();
		if(js.Boot.__instanceof(this,haxe.ui.toolkit.core.StateComponent)) {
			var state = (js.Boot.__cast(this , haxe.ui.toolkit.core.StateComponent)).get_state();
			if(state == null) state = "normal";
			this._baseStyle = this.retrieveStyle(state);
			if(this._baseStyle == null) this._baseStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this,(js.Boot.__cast(this , haxe.ui.toolkit.core.StateComponent)).get_state());
		} else this._baseStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this);
		this._baseStyle.merge(this._inlineStyle);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_width() != -1 && this.get_width() == 0) this.set_width(this._baseStyle.get_width());
			if(this._baseStyle.get_height() != -1 && this.get_height() == 0) this.set_height(this._baseStyle.get_height());
			if(this._baseStyle.get_percentWidth() != -1 && this.get_percentWidth() == -1) this.set_percentWidth(this._baseStyle.get_percentWidth());
			if(this._baseStyle.get_percentHeight() != -1 && this.get_percentHeight() == -1) this.set_percentHeight(this._baseStyle.get_percentHeight());
			if(this._baseStyle.get_autoSizeSet()) this.set_autoSize(this._baseStyle.get_autoSize());
			if(this.get_layout() != null) {
				if(this._baseStyle.get_paddingLeft() != -1) this.get_layout().get_padding().set_left(this._baseStyle.get_paddingLeft());
				if(this._baseStyle.get_paddingTop() != -1) this.get_layout().get_padding().set_top(this._baseStyle.get_paddingTop());
				if(this._baseStyle.get_paddingRight() != -1) this.get_layout().get_padding().set_right(this._baseStyle.get_paddingRight());
				if(this._baseStyle.get_paddingBottom() != -1) this.get_layout().get_padding().set_bottom(this._baseStyle.get_paddingBottom());
				if(this._baseStyle.get_spacingX() != -1) this._layout.set_spacingX(this._baseStyle.get_spacingX());
				if(this._baseStyle.get_spacingY() != -1) this._layout.set_spacingY(this._baseStyle.get_spacingY());
			}
		}
		this.applyStyle();
		null;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.DisplayObjectContainer.prototype.clone.call(this);
		c.set_styleName(this.get_styleName());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.StyleableDisplayObject();
	}
	,__class__: haxe.ui.toolkit.core.StyleableDisplayObject
	,__properties__: $extend(haxe.ui.toolkit.core.DisplayObjectContainer.prototype.__properties__,{set_style:"set_style",get_style:"get_style",set_styleName:"set_styleName",get_styleName:"get_styleName",set_baseStyle:"set_baseStyle",get_baseStyle:"get_baseStyle"})
});
haxe.ui.toolkit.core.interfaces.IComponent = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IComponent"] = haxe.ui.toolkit.core.interfaces.IComponent;
haxe.ui.toolkit.core.interfaces.IComponent.__name__ = ["haxe","ui","toolkit","core","interfaces","IComponent"];
haxe.ui.toolkit.core.interfaces.IComponent.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject];
haxe.ui.toolkit.core.interfaces.IComponent.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IComponent
};
haxe.ui.toolkit.core.Component = function() {
	this._disabled = false;
	this._clipContent = false;
	haxe.ui.toolkit.core.StyleableDisplayObject.call(this);
};
$hxClasses["haxe.ui.toolkit.core.Component"] = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.core.Component.__name__ = ["haxe","ui","toolkit","core","Component"];
haxe.ui.toolkit.core.Component.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IComponent];
haxe.ui.toolkit.core.Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) return;
	if(parent.get_id() != null) list.push(parent);
	var _g = 0;
	var _g1 = parent.get_children();
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe.ui.toolkit.core.Component.addNamedComponentsFrom(js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IComponent),list);
	}
};
haxe.ui.toolkit.core.Component.__super__ = haxe.ui.toolkit.core.StyleableDisplayObject;
haxe.ui.toolkit.core.Component.prototype = $extend(haxe.ui.toolkit.core.StyleableDisplayObject.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.StyleableDisplayObject.prototype.initialize.call(this);
		if(js.Boot.__instanceof(this,haxe.ui.toolkit.core.interfaces.IDraggable)) this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onComponentMouseDown));
		this.initScriplet();
	}
	,postInitialize: function() {
		if(this._disabled == true) this.set_disabled(true);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.StyleableDisplayObject.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256 && this._clipContent == true) this.get_sprite().set_scrollRect(new openfl.geom.Rectangle(0,0,this.get_width(),this.get_height()));
		this._invalidating = false;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value != null) {
			if(StringTools.startsWith(value,"@#")) value = HxOverrides.substr(value,2,value.length) + "_" + haxe.ui.toolkit.core.Client.get_instance().get_language(); else if(StringTools.startsWith(value,"asset://")) {
				var assetId = HxOverrides.substr(value,8,value.length);
				value = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(assetId);
				value = StringTools.replace(value,"\r","");
			}
			this._text = value;
		}
		return value;
	}
	,get_clipWidth: function() {
		if(this.get_sprite().get_scrollRect() == null) return this.get_width();
		return this.get_sprite().get_scrollRect().width;
	}
	,set_clipWidth: function(value) {
		this.get_sprite().set_scrollRect(new openfl.geom.Rectangle(0,0,value,this.get_clipHeight()));
		return value;
	}
	,get_clipHeight: function() {
		if(this.get_sprite().get_scrollRect() == null) return this.get_height();
		return this.get_sprite().get_scrollRect().height;
	}
	,set_clipHeight: function(value) {
		this.get_sprite().set_scrollRect(new openfl.geom.Rectangle(0,0,this.get_clipWidth(),value));
		return value;
	}
	,get_clipContent: function() {
		return this._clipContent;
	}
	,set_clipContent: function(value) {
		this._clipContent = value;
		if(this._clipContent == false) this.clearClip();
		this.invalidate(256);
		return value;
	}
	,clearClip: function() {
		this.get_sprite().set_scrollRect(null);
	}
	,get_disabled: function() {
		return this._disabled;
	}
	,set_disabled: function(value) {
		if(value == true) {
			if(this._cachedListeners == null) this._cachedListeners = new haxe.ds.StringMap();
			var $it0 = this._eventListeners.keys();
			while( $it0.hasNext() ) {
				var type = $it0.next();
				if(this.disablableEventType(type) == true) {
					var list = this._eventListeners.get(type);
					var cachedList = this._cachedListeners.get(type);
					if(cachedList == null) {
						cachedList = new Array();
						this._cachedListeners.set(type,cachedList);
					}
					var _g = 0;
					while(_g < list.length) {
						var listener = list[_g];
						++_g;
						cachedList.push(listener);
						this.removeEventListener(type,listener);
					}
				}
			}
		}
		this._disabled = value;
		var _g1 = 0;
		var _g11 = this.get_children();
		while(_g1 < _g11.length) {
			var child = _g11[_g1];
			++_g1;
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.Component)) (js.Boot.__cast(child , haxe.ui.toolkit.core.Component)).set_disabled(value);
		}
		if(value == false) {
			if(this._cachedListeners != null) {
				var $it1 = this._cachedListeners.keys();
				while( $it1.hasNext() ) {
					var type1 = $it1.next();
					var list1 = this._cachedListeners.get(type1);
					var _g2 = 0;
					while(_g2 < list1.length) {
						var listener1 = list1[_g2];
						++_g2;
						this.addEventListener(type1,listener1);
					}
					list1 = new Array();
				}
				this._cachedListeners = null;
			}
		}
		if(js.Boot.__instanceof(this,haxe.ui.toolkit.core.StateComponent)) {
			var stateComponent;
			stateComponent = js.Boot.__cast(this , haxe.ui.toolkit.core.StateComponent);
			if(value == true) {
				if(stateComponent.hasState("disabled")) stateComponent.set_state("disabled");
			} else if(stateComponent.hasState("normal")) stateComponent.set_state("normal");
		}
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(newValue) {
		this.set_text("" + Std.string(newValue));
		return newValue;
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		if(this._disabled == true && this.disablableEventType(type) == true) {
			if(this._cachedListeners == null) this._cachedListeners = new haxe.ds.StringMap();
			var list = this._cachedListeners.get(type);
			if(list == null) {
				list = new Array();
				this._cachedListeners.set(type,list);
			}
			list.push(listener);
			return;
		}
		haxe.ui.toolkit.core.StyleableDisplayObject.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this._disabled == true && this.disablableEventType(type) == true) {
			if(this._cachedListeners != null && this._cachedListeners.exists(type)) {
				var list = this._cachedListeners.get(type);
				if(list != null) {
					HxOverrides.remove(list,listener);
					if(list.length == 0) this._cachedListeners.remove(type);
				}
			}
		}
		haxe.ui.toolkit.core.StyleableDisplayObject.prototype.removeEventListener.call(this,type,listener,useCapture);
	}
	,disablableEventType: function(type) {
		return type == openfl.events.MouseEvent.MOUSE_DOWN || type == openfl.events.MouseEvent.MOUSE_MOVE || type == openfl.events.MouseEvent.MOUSE_OVER || type == openfl.events.MouseEvent.MOUSE_OUT || type == openfl.events.MouseEvent.MOUSE_UP || type == openfl.events.MouseEvent.MOUSE_WHEEL || type == openfl.events.MouseEvent.CLICK;
	}
	,_onComponentMouseDown: function(event) {
		if(js.Boot.__instanceof(this,haxe.ui.toolkit.core.interfaces.IDraggable)) {
			if((js.Boot.__cast(this , haxe.ui.toolkit.core.interfaces.IDraggable)).allowDrag(event) == false) return;
		}
		this.mouseDownPos = new openfl.geom.Point(event.stageX - this.get_stageX(),event.stageY - this.get_stageY());
		this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onComponentMouseMove));
		this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onComponentMouseUp));
	}
	,_onComponentMouseUp: function(event) {
		this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onComponentMouseMove));
		this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onComponentMouseUp));
	}
	,_onComponentMouseMove: function(event) {
		this.set_x(event.stageX - this.mouseDownPos.x);
		this.set_y(event.stageY - this.mouseDownPos.y);
	}
	,addScriptlet: function(scriptlet) {
		var found = false;
		var item = this;
		while(item != null) {
			if(item.get_scriptletSource() != null) {
				found = true;
				break;
			}
			item = item.get_parent();
		}
		if(found == false) item = this;
		if(item != null) {
			if(item.get_scriptletSource() == null) item.set_scriptletSource("");
			var _g = item;
			_g.set_scriptletSource(_g.get_scriptletSource() + scriptlet);
		}
	}
	,findInterp: function() {
		var found = false;
		var item = this;
		while(item != null) {
			if(item._interp != null) {
				found = true;
				break;
			}
			item = item.get_parent();
		}
		if(found == false) return null;
		return item._interp;
	}
	,executeScriptletExpr: function(expr) {
		try {
			var parser = new hscript.Parser();
			var line = parser.parseString(expr);
			this.findInterp().expr(line);
		} catch( e ) {
			haxe.Log.trace("Problem executing scriptlet: " + Std.string(e),{ fileName : "Component.hx", lineNumber : 322, className : "haxe.ui.toolkit.core.Component", methodName : "executeScriptletExpr"});
		}
	}
	,addScriptletEventHandler: function(event,scriptlet) {
		var _g = this;
		event = "haxeui_" + event;
		this.addEventListener(event,function(e) {
			_g.executeScriptletExpr(scriptlet);
		});
	}
	,get_scriptletSource: function() {
		return this._scriptletSource;
	}
	,set_scriptletSource: function(value) {
		this._scriptletSource = value;
		return value;
	}
	,initScriplet: function() {
		if(this._scriptletSource != null) try {
			var parser = new hscript.Parser();
			var program = parser.parseString(this._scriptletSource);
			this._interp = new haxe.ui.toolkit.hscript.ScriptInterp();
			var comps = this.get_namedComponents();
			var _g = 0;
			while(_g < comps.length) {
				var comp = comps[_g];
				++_g;
				var key = comp.get_id();
				this._interp.variables.set(key,comp);
			}
			this._interp.execute(program);
		} catch( e ) {
			haxe.Log.trace("Problem running script: " + Std.string(e),{ fileName : "Component.hx", lineNumber : 358, className : "haxe.ui.toolkit.core.Component", methodName : "initScriplet"});
		}
	}
	,get_namedComponents: function() {
		var list = new Array();
		haxe.ui.toolkit.core.Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StyleableDisplayObject.prototype.clone.call(this);
		c.set_text(this.get_text());
		c.set_disabled(this.get_disabled());
		c.userData = this.userData;
		c.set_value(this.get_value());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.Component();
	}
	,__class__: haxe.ui.toolkit.core.Component
	,__properties__: $extend(haxe.ui.toolkit.core.StyleableDisplayObject.prototype.__properties__,{get_namedComponents:"get_namedComponents",set_scriptletSource:"set_scriptletSource",get_scriptletSource:"get_scriptletSource",set_value:"set_value",get_value:"get_value",set_disabled:"set_disabled",get_disabled:"get_disabled",set_clipContent:"set_clipContent",get_clipContent:"get_clipContent",set_clipHeight:"set_clipHeight",get_clipHeight:"get_clipHeight",set_clipWidth:"set_clipWidth",get_clipWidth:"get_clipWidth",set_text:"set_text",get_text:"get_text"})
});
haxe.ui.toolkit.core.interfaces.IStateComponent = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IStateComponent"] = haxe.ui.toolkit.core.interfaces.IStateComponent;
haxe.ui.toolkit.core.interfaces.IStateComponent.__name__ = ["haxe","ui","toolkit","core","interfaces","IStateComponent"];
haxe.ui.toolkit.core.interfaces.IStateComponent.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IComponent];
haxe.ui.toolkit.core.interfaces.IStateComponent.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IStateComponent
};
haxe.ui.toolkit.core.StateComponent = function() {
	haxe.ui.toolkit.core.Component.call(this);
	this._states = new Array();
};
$hxClasses["haxe.ui.toolkit.core.StateComponent"] = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.core.StateComponent.__name__ = ["haxe","ui","toolkit","core","StateComponent"];
haxe.ui.toolkit.core.StateComponent.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IStateComponent];
haxe.ui.toolkit.core.StateComponent.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.core.StateComponent.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	buildStyles: function() {
		var _g = 0;
		var _g1 = this.get_states();
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var stateStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this,s);
			if(stateStyle != null) this.storeStyle(s,stateStyle);
		}
		null;
	}
	,addStates: function(stateNames,rebuildStyles) {
		if(rebuildStyles == null) rebuildStyles = true;
		var _g = 0;
		while(_g < stateNames.length) {
			var stateName = stateNames[_g];
			++_g;
			this.addState(stateName,false);
		}
		if(rebuildStyles == true && this._ready) {
			if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
		}
	}
	,addState: function(stateName,rebuildStyles) {
		if(rebuildStyles == null) rebuildStyles = true;
		if(this.hasState(stateName) == false) {
			this._states.push(stateName);
			if(rebuildStyles == true && this._ready) {
				if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
			}
		}
	}
	,get_state: function() {
		return this._state;
	}
	,set_state: function(value) {
		if(this._state != value) {
			this._state = value;
			if(this.retrieveStyle(this._state) != null) this.set_baseStyle(this.retrieveStyle(this._state)); else this.invalidate(4096);
		}
		return value;
	}
	,get_states: function() {
		return this._states;
	}
	,hasState: function(state) {
		if(this.get_states() == null) return false;
		return Lambda.indexOf(this.get_states(),state) != -1;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		c.set_state(this.get_state());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.StateComponent();
	}
	,__class__: haxe.ui.toolkit.core.StateComponent
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{get_states:"get_states",set_state:"set_state",get_state:"get_state"})
});
haxe.ui.toolkit.controls = {};
haxe.ui.toolkit.controls.TextInput = function() {
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.addStates(["normal","disabled"]);
	this._layout = new haxe.ui.toolkit.controls.TextInputLayout();
	this._textDisplay = new haxe.ui.toolkit.text.TextDisplay();
	this._textDisplay.set_interactive(true);
	this._textDisplay.set_autoSize(false);
	this._textDisplay.set_text("");
};
$hxClasses["haxe.ui.toolkit.controls.TextInput"] = haxe.ui.toolkit.controls.TextInput;
haxe.ui.toolkit.controls.TextInput.__name__ = ["haxe","ui","toolkit","controls","TextInput"];
haxe.ui.toolkit.controls.TextInput.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.TextInput.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.TextInput.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.preInitialize.call(this);
	}
	,initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.get_sprite().addChild(this._textDisplay.get_display());
		if(this.get_multiline() == true) {
			this._textDisplay.get_display().set_width(this._layout.get_innerWidth());
			this._textDisplay.get_display().set_height(this._layout.get_innerHeight());
		}
		this._textDisplay.get_display().addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onTextChange));
		this._textDisplay.get_display().addEventListener(openfl.events.Event.SCROLL,$bind(this,this._onTextScroll));
		this.checkScrolls();
		if(this._textPlaceHolder != null && this.contains(this._textPlaceHolder) == false) this.addChild(this._textPlaceHolder);
		if(this._textPlaceHolder != null) {
			if(this.get_text().length > 0) this._textPlaceHolder.set_visible(false);
			this._textPlaceHolder.set_textAlign(this._textDisplay.get_textAlign());
			this.setChildIndex(this._textPlaceHolder,0);
		}
	}
	,dispose: function() {
		this._textDisplay.get_display().removeEventListener(openfl.events.Event.CHANGE,$bind(this,this._onTextChange));
		this._textDisplay.get_display().removeEventListener(openfl.events.Event.SCROLL,$bind(this,this._onTextScroll));
		this.get_sprite().removeChild(this._textDisplay.get_display());
		if(this._textPlaceHolder != null && this.contains(this._textPlaceHolder)) this.removeChild(this._textPlaceHolder);
		haxe.ui.toolkit.core.StateComponent.prototype.dispose.call(this);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.StateComponent.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256) {
			this.checkScrolls();
			this._textDisplay.get_display().set_width(this.get_layout().get_innerWidth());
			this._textDisplay.get_display().set_height(this.get_layout().get_innerHeight());
		}
		this._invalidating = false;
	}
	,set_disabled: function(value) {
		haxe.ui.toolkit.core.StateComponent.prototype.set_disabled.call(this,value);
		if(value == true) this._textDisplay.set_interactive(false); else this._textDisplay.set_interactive(true);
		return value;
	}
	,_onTextChange: function(event) {
		haxe.Log.trace(event,{ fileName : "TextInput.hx", lineNumber : 108, className : "haxe.ui.toolkit.controls.TextInput", methodName : "_onTextChange"});
		this.checkScrolls();
		if(this._textPlaceHolder != null) this._textPlaceHolder.set_visible(this.get_text().length == 0);
	}
	,_onTextScroll: function(event) {
		this.checkScrolls();
	}
	,_onVScrollChange: function(event) {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
	}
	,_onHScrollChange: function(event) {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
	}
	,get_text: function() {
		return this._textDisplay.get_text();
	}
	,set_text: function(value) {
		value = haxe.ui.toolkit.core.StateComponent.prototype.set_text.call(this,value);
		this._textDisplay.set_text(value);
		return value;
	}
	,applyStyle: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.applyStyle.call(this);
		if(this._textDisplay != null) this._textDisplay.set_style(this._baseStyle);
	}
	,get_multiline: function() {
		return this._textDisplay.get_multiline();
	}
	,set_multiline: function(value) {
		this._textDisplay.set_wrapLines(value);
		this._textDisplay.set_multiline(value);
		return value;
	}
	,get_selectionBeginIndex: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		var n = 0;
		return n;
	}
	,get_selectionEndIndex: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		var n = 0;
		return n;
	}
	,get_selectedTextFormat: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		return tf.getTextFormat(this.get_selectionBeginIndex() - 1,this.get_selectionEndIndex());
	}
	,get_wrapLines: function() {
		return this._textDisplay.get_wrapLines();
	}
	,set_wrapLines: function(value) {
		this._textDisplay.set_wrapLines(value);
		return value;
	}
	,get_displayAsPassword: function() {
		return this._textDisplay.get_displayAsPassword();
	}
	,set_displayAsPassword: function(value) {
		this._textDisplay.set_displayAsPassword(value);
		return value;
	}
	,get_placeholderText: function() {
		if(this._textPlaceHolder == null) return null;
		return this._textPlaceHolder.get_text();
	}
	,set_placeholderText: function(value) {
		if(this._textPlaceHolder == null) {
			this._textPlaceHolder = new haxe.ui.toolkit.controls.Text();
			this._textPlaceHolder.set_autoSize(false);
			this._textPlaceHolder.set_id("placeholder");
		}
		this._textPlaceHolder.set_text(value);
		if(this._ready && this.contains(this._textPlaceHolder) == false && value != null) this.addChild(this._textPlaceHolder);
		if(value == null) {
			if(this.contains(this._textPlaceHolder)) this.removeChild(this._textPlaceHolder);
			this._textPlaceHolder = null;
		}
		if(this._textPlaceHolder != null) this._textPlaceHolder.set_visible(this.get_text().length == 0);
		return value;
	}
	,get_textAlign: function() {
		if(this._textDisplay == null) return null;
		return this._textDisplay.get_textAlign();
	}
	,set_textAlign: function(value) {
		if(this._textDisplay != null) this._textDisplay.set_textAlign(value);
		if(this._textPlaceHolder != null) this._textPlaceHolder.set_textAlign(value);
		return value;
	}
	,get_maxChars: function() {
		return this._textDisplay.get_maxChars();
	}
	,set_maxChars: function(value) {
		return this._textDisplay.set_maxChars(value);
	}
	,get_restrictChars: function() {
		return this._textDisplay.get_restrictChars();
	}
	,set_restrictChars: function(value) {
		return this._textDisplay.set_restrictChars(value);
	}
	,get_vscrollPos: function() {
		if(this._vscroll != null) return this._vscroll.get_pos();
		return 0;
	}
	,set_vscrollPos: function(value) {
		if(this._vscroll != null) this._vscroll.set_pos(value);
		return value;
	}
	,get_vscrollMin: function() {
		if(this._vscroll != null) return this._vscroll.get_min();
		return 0;
	}
	,get_vscrollMax: function() {
		if(this._vscroll != null) return this._vscroll.get_max();
		return 0;
	}
	,replaceSelectedText: function(s) {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
	}
	,focus: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		tf.get_stage().set_focus(tf);
	}
	,checkScrolls: function() {
		if(this.get_multiline() == false || this.get_ready() == false) return;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		c.set_multiline(this.get_multiline());
		c.set_wrapLines(this.get_wrapLines());
		c.set_displayAsPassword(this.get_displayAsPassword());
		c.set_placeholderText(this.get_placeholderText());
		c.set_textAlign(this.get_textAlign());
		c.set_maxChars(this.get_maxChars());
		c.set_restrictChars(this.get_restrictChars());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.TextInput();
	}
	,__class__: haxe.ui.toolkit.controls.TextInput
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{get_vscrollMax:"get_vscrollMax",get_vscrollMin:"get_vscrollMin",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_placeholderText:"set_placeholderText",get_placeholderText:"get_placeholderText",set_displayAsPassword:"set_displayAsPassword",get_displayAsPassword:"get_displayAsPassword",set_wrapLines:"set_wrapLines",get_wrapLines:"get_wrapLines",get_selectedTextFormat:"get_selectedTextFormat",get_selectionEndIndex:"get_selectionEndIndex",get_selectionBeginIndex:"get_selectionBeginIndex",set_multiline:"set_multiline",get_multiline:"get_multiline"})
});
haxe.ui.richtext = {};
haxe.ui.richtext.Code = function() {
	this._async = false;
	haxe.ui.toolkit.controls.TextInput.call(this);
	this.set_multiline(true);
	this.set_wrapLines(false);
	var tf;
	tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
	this._syntax = haxe.ui.richtext.syntax.CodeSyntax.getSyntax("");
};
$hxClasses["haxe.ui.richtext.Code"] = haxe.ui.richtext.Code;
haxe.ui.richtext.Code.__name__ = ["haxe","ui","richtext","Code"];
haxe.ui.richtext.Code.__super__ = haxe.ui.toolkit.controls.TextInput;
haxe.ui.richtext.Code.prototype = $extend(haxe.ui.toolkit.controls.TextInput.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.TextInput.prototype.initialize.call(this);
		this._textDisplay.get_display().addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onCodeChange));
		this._textDisplay.get_display().addEventListener(openfl.events.KeyboardEvent.KEY_DOWN,$bind(this,this._onCodeKeyDown));
		this.applyRules();
	}
	,dispose: function() {
		this._textDisplay.get_display().removeEventListener(openfl.events.Event.CHANGE,$bind(this,this._onCodeChange));
		this._textDisplay.get_display().removeEventListener(openfl.events.KeyboardEvent.KEY_DOWN,$bind(this,this._onCodeKeyDown));
		haxe.ui.toolkit.controls.TextInput.prototype.dispose.call(this);
	}
	,set_text: function(value) {
		if(value != null) {
			value = haxe.ui.toolkit.controls.TextInput.prototype.set_text.call(this,value);
			value = StringTools.replace(value,"\t","    ");
			haxe.ui.toolkit.controls.TextInput.prototype.set_text.call(this,value);
			this.applyRules();
		}
		return value;
	}
	,get_syntax: function() {
		return this._syntax.get_identifier();
	}
	,set_syntax: function(value) {
		this._syntax = haxe.ui.richtext.syntax.CodeSyntax.getSyntax(value);
		this.applyRules();
		return value;
	}
	,get_async: function() {
		return this._async;
	}
	,set_async: function(value) {
		this._async = value;
		return value;
	}
	,_onCodeChange: function(event) {
		this.applyRules();
	}
	,_onCodeKeyDown: function(event) {
		if(event.keyCode == 9 && event.ctrlKey == false && event.altKey == false && event.shiftKey == false) {
			this.replaceSelectedText("    ");
			this.applyRules();
		}
	}
	,applyRules: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		if(this._async == false) {
			var runner = new haxe.ui.richtext._Code.SyntaxHighlightRunner(tf,this._syntax);
			runner.set_needToExit(function() {
				return false;
			});
			runner.run();
		} else {
			if(this._caller != null) this._caller.cancel();
			this._caller = new haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller(new haxe.ui.richtext._Code.SyntaxHighlightRunner(tf,this._syntax));
			this._caller.start();
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.TextInput.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.richtext.Code();
	}
	,__class__: haxe.ui.richtext.Code
	,__properties__: $extend(haxe.ui.toolkit.controls.TextInput.prototype.__properties__,{set_async:"set_async",get_async:"get_async",set_syntax:"set_syntax",get_syntax:"get_syntax"})
});
haxe.ui.toolkit.util = {};
haxe.ui.toolkit.util.pseudothreads = {};
haxe.ui.toolkit.util.pseudothreads.IRunnable = function() { };
$hxClasses["haxe.ui.toolkit.util.pseudothreads.IRunnable"] = haxe.ui.toolkit.util.pseudothreads.IRunnable;
haxe.ui.toolkit.util.pseudothreads.IRunnable.__name__ = ["haxe","ui","toolkit","util","pseudothreads","IRunnable"];
haxe.ui.toolkit.util.pseudothreads.IRunnable.prototype = {
	__class__: haxe.ui.toolkit.util.pseudothreads.IRunnable
};
haxe.ui.toolkit.util.pseudothreads.Runner = function() {
	this._runningTimeShare = .6;
};
$hxClasses["haxe.ui.toolkit.util.pseudothreads.Runner"] = haxe.ui.toolkit.util.pseudothreads.Runner;
haxe.ui.toolkit.util.pseudothreads.Runner.__name__ = ["haxe","ui","toolkit","util","pseudothreads","Runner"];
haxe.ui.toolkit.util.pseudothreads.Runner.__interfaces__ = [haxe.ui.toolkit.util.pseudothreads.IRunnable];
haxe.ui.toolkit.util.pseudothreads.Runner.prototype = {
	run: function() {
	}
	,get_isComplete: function() {
		return this._isComplete;
	}
	,get_progress: function() {
		return this._progress;
	}
	,get_total: function() {
		return this._total;
	}
	,get_runningTimeShare: function() {
		return this._runningTimeShare;
	}
	,set_needToExit: function(value) {
		this._needToExit = value;
		return value;
	}
	,get_data: function() {
		return this._data;
	}
	,__class__: haxe.ui.toolkit.util.pseudothreads.Runner
	,__properties__: {get_data:"get_data",set_needToExit:"set_needToExit",get_runningTimeShare:"get_runningTimeShare",get_total:"get_total",get_progress:"get_progress",get_isComplete:"get_isComplete"}
};
haxe.ui.richtext._Code = {};
haxe.ui.richtext._Code.SyntaxHighlightRunner = function(tf,syntax,timeShare) {
	if(timeShare == null) timeShare = .9;
	this._ruleIndex = 0;
	this._matchIndex = 0;
	this._matchedSyntax = false;
	haxe.ui.toolkit.util.pseudothreads.Runner.call(this);
	this._tf = tf;
	this._syntax = syntax;
	this._runningTimeShare = timeShare;
	this._syntaxRules = new Array();
	var $it0 = (function($this) {
		var $r;
		var this1 = $this._syntax.get_rules();
		$r = this1.keys();
		return $r;
	}(this));
	while( $it0.hasNext() ) {
		var rule = $it0.next();
		this._syntaxRules.push(rule);
	}
	this._matches = new haxe.ds.StringMap();
	this._txt = tf.get_text();
	if(this._txt != "") tf.setTextFormat(this._syntax.get_defaultFormat(),0,this._txt.length);
};
$hxClasses["haxe.ui.richtext._Code.SyntaxHighlightRunner"] = haxe.ui.richtext._Code.SyntaxHighlightRunner;
haxe.ui.richtext._Code.SyntaxHighlightRunner.__name__ = ["haxe","ui","richtext","_Code","SyntaxHighlightRunner"];
haxe.ui.richtext._Code.SyntaxHighlightRunner.__super__ = haxe.ui.toolkit.util.pseudothreads.Runner;
haxe.ui.richtext._Code.SyntaxHighlightRunner.prototype = $extend(haxe.ui.toolkit.util.pseudothreads.Runner.prototype,{
	run: function() {
		if(this._matchedSyntax == false) {
			var _g1 = this._ruleIndex;
			var _g = this._syntaxRules.length;
			while(_g1 < _g) {
				var n = _g1++;
				if(this._needToExit() == true) {
					this._ruleIndex = n;
					return;
				}
				var rule = this._syntaxRules[n];
				var matches = [new Array()];
				this._matches.set(rule,matches[0]);
				var r = this._syntax.getCompiledRule(rule);
				r.map(this._txt,(function(matches) {
					return function(e) {
						var pos = e.matchedPos();
						matches[0].push(pos);
						return "";
					};
				})(matches));
			}
			this._ruleIndex = 0;
			this._matchedSyntax = true;
		}
		if(this._matchedSyntax == true) {
			var _g11 = this._ruleIndex;
			var _g2 = this._syntaxRules.length;
			while(_g11 < _g2) {
				var n1 = _g11++;
				if(this._needToExit() == true) {
					this._ruleIndex = n1;
					return;
				}
				var rule1 = this._syntaxRules[n1];
				var matches1 = this._matches.get(rule1);
				var _g3 = this._matchIndex;
				var _g21 = matches1.length;
				while(_g3 < _g21) {
					var m = _g3++;
					if(this._needToExit() == true) {
						this._ruleIndex = n1;
						this._matchIndex = m;
						return;
					}
					var match = matches1[m];
					this._tf.setTextFormat((function($this) {
						var $r;
						var this1 = $this._syntax.get_rules();
						$r = this1.get(rule1);
						return $r;
					}(this)),match.pos,match.pos + match.len);
				}
				this._matchIndex = 0;
			}
		}
		this._needToExit = null;
		this._isComplete = true;
	}
	,__class__: haxe.ui.richtext._Code.SyntaxHighlightRunner
});
haxe.ui.richtext.RTF = function() {
	haxe.ui.toolkit.controls.TextInput.call(this);
	this.set_multiline(true);
	var tf;
	tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
};
$hxClasses["haxe.ui.richtext.RTF"] = haxe.ui.richtext.RTF;
haxe.ui.richtext.RTF.__name__ = ["haxe","ui","richtext","RTF"];
haxe.ui.richtext.RTF.__super__ = haxe.ui.toolkit.controls.TextInput;
haxe.ui.richtext.RTF.prototype = $extend(haxe.ui.toolkit.controls.TextInput.prototype,{
	get_htmlText: function() {
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		return tf.get_htmlText();
	}
	,set_htmlText: function(value) {
		if(StringTools.startsWith(value,"asset://")) {
			var assetId = HxOverrides.substr(value,8,value.length);
			value = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(assetId);
			value = StringTools.replace(value,"\r","");
		}
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		tf.set_htmlText(value);
		return value;
	}
	,bold: function() {
		this.applyRTFStyle("bold");
	}
	,italic: function() {
		this.applyRTFStyle("italic");
	}
	,underline: function() {
		this.applyRTFStyle("underline");
	}
	,fontSize: function(size) {
		this.applyRTFStyle("fontSize",size);
	}
	,fontName: function(name) {
		this.applyRTFStyle("fontName",name);
	}
	,bullet: function() {
		this.applyRTFStyle("bullet");
	}
	,alignLeft: function() {
		this.applyRTFStyle("align","left");
	}
	,alignCenter: function() {
		this.applyRTFStyle("align","center");
	}
	,alignRight: function() {
		this.applyRTFStyle("align","right");
	}
	,alignJustify: function() {
		this.applyRTFStyle("align","justify");
	}
	,applyRTFStyle: function(what,value) {
		if(this.get_selectionBeginIndex() == 0 && this.get_selectionEndIndex() == 0) return;
		if(this.get_selectionBeginIndex() == this.get_selectionEndIndex()) return;
		var tf;
		tf = js.Boot.__cast(this._textDisplay.get_display() , openfl.text.TextField);
		var format = tf.getTextFormat(this.get_selectionBeginIndex(),this.get_selectionEndIndex());
		switch(what) {
		case "bold":
			format.bold = !format.bold;
			break;
		case "italic":
			format.italic = !format.italic;
			break;
		case "underline":
			format.underline = !format.underline;
			break;
		case "fontSize":
			format.size = js.Boot.__cast(value , Int);
			break;
		case "fontName":
			format.font = js.Boot.__cast(value , String);
			break;
		case "bullet":
			format.bullet = !format.bullet;
			break;
		case "align":
			var align = openfl.text.TextFormatAlign.LEFT;
			var textAlign;
			textAlign = js.Boot.__cast(value , String);
			if(textAlign == "center") align = openfl.text.TextFormatAlign.CENTER; else if(textAlign == "right") align = openfl.text.TextFormatAlign.RIGHT; else if(textAlign == "justify") align = openfl.text.TextFormatAlign.JUSTIFY;
			format.align = align;
			break;
		default:
		}
		tf.setTextFormat(format,this.get_selectionBeginIndex(),this.get_selectionEndIndex());
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.TextInput.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.richtext.RTF();
	}
	,__class__: haxe.ui.richtext.RTF
	,__properties__: $extend(haxe.ui.toolkit.controls.TextInput.prototype.__properties__,{set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
haxe.ui.toolkit.containers = {};
haxe.ui.toolkit.containers.Container = function() {
	haxe.ui.toolkit.core.Component.call(this);
};
$hxClasses["haxe.ui.toolkit.containers.Container"] = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.Container.__name__ = ["haxe","ui","toolkit","containers","Container"];
haxe.ui.toolkit.containers.Container.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.Container.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.containers.Container.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			c.addChild(child.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Container();
	}
	,__class__: haxe.ui.toolkit.containers.Container
});
haxe.ui.toolkit.containers.VBox = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this.set_layout(new haxe.ui.toolkit.layout.VerticalLayout());
};
$hxClasses["haxe.ui.toolkit.containers.VBox"] = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.containers.VBox.__name__ = ["haxe","ui","toolkit","containers","VBox"];
haxe.ui.toolkit.containers.VBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.VBox.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.VBox.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.VBox();
	}
	,__class__: haxe.ui.toolkit.containers.VBox
});
haxe.ui.richtext.RTFView = function() {
	this._systemFonts = false;
	haxe.ui.toolkit.containers.VBox.call(this);
	this._rtf = new haxe.ui.richtext.RTF();
	this._rtf.set_multiline(true);
	this._rtf.set_wrapLines(true);
	this._rtf.set_percentWidth(100);
	this._rtf.set_percentHeight(100);
};
$hxClasses["haxe.ui.richtext.RTFView"] = haxe.ui.richtext.RTFView;
haxe.ui.richtext.RTFView.__name__ = ["haxe","ui","richtext","RTFView"];
haxe.ui.richtext.RTFView.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.richtext.RTFView.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
		var hbox = new haxe.ui.toolkit.containers.HBox();
		this._fontNameList = new haxe.ui.toolkit.controls.selection.ListSelector();
		this._fontNameList.set_styleName("alternate");
		this._fontNameList.set_width(200);
		this._fontNameList.set_autoSize(false);
		this._fontNameList.set_text("_sans");
		if(this._systemFonts == true) {
		} else {
			this._fontNameList.get_dataSource().add({ text : "_sans"});
			this._fontNameList.get_dataSource().add({ text : "_serif"});
			this._fontNameList.get_dataSource().add({ text : "_typewriter"});
			this._fontNameList.get_dataSource().add({ text : "Arial"});
			this._fontNameList.get_dataSource().add({ text : "Courier"});
			this._fontNameList.get_dataSource().add({ text : "Courier New"});
			this._fontNameList.get_dataSource().add({ text : "Geneva"});
			this._fontNameList.get_dataSource().add({ text : "Georgia"});
			this._fontNameList.get_dataSource().add({ text : "Helvetica"});
			this._fontNameList.get_dataSource().add({ text : "Times New Roman"});
			this._fontNameList.get_dataSource().add({ text : "Times"});
			this._fontNameList.get_dataSource().add({ text : "Verdana"});
		}
		this._fontNameList.addEventListener("haxeui_" + "change",$bind(this,this._onFontNameChange));
		hbox.addChild(this._fontNameList);
		this._fontSizeList = new haxe.ui.toolkit.controls.selection.ListSelector();
		this._fontSizeList.set_styleName("alternate");
		this._fontSizeList.set_text("13");
		this._fontSizeList.get_dataSource().add({ text : 10});
		this._fontSizeList.get_dataSource().add({ text : 12});
		this._fontSizeList.get_dataSource().add({ text : 13});
		this._fontSizeList.get_dataSource().add({ text : 14});
		this._fontSizeList.get_dataSource().add({ text : 16});
		this._fontSizeList.get_dataSource().add({ text : 18});
		this._fontSizeList.get_dataSource().add({ text : 20});
		this._fontSizeList.get_dataSource().add({ text : 24});
		this._fontSizeList.get_dataSource().add({ text : 26});
		this._fontSizeList.get_dataSource().add({ text : 28});
		this._fontSizeList.get_dataSource().add({ text : 36});
		this._fontSizeList.get_dataSource().add({ text : 48});
		this._fontSizeList.get_dataSource().add({ text : 72});
		this._fontSizeList.addEventListener("haxeui_" + "change",$bind(this,this._onFontSizeChange));
		hbox.addChild(this._fontSizeList);
		var spacer = new haxe.ui.toolkit.controls.Spacer();
		spacer.set_width(10);
		hbox.addChild(spacer);
		this._boldButton = new haxe.ui.richtext.RTFToolButton();
		this._boldButton.set_styleName("alternate");
		this._boldButton.set_id("bold");
		this._boldButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onBoldClick));
		hbox.addChild(this._boldButton);
		this._italicButton = new haxe.ui.richtext.RTFToolButton();
		this._italicButton.set_styleName("alternate");
		this._italicButton.set_id("italic");
		this._italicButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onItalicClick));
		hbox.addChild(this._italicButton);
		this._underlineButton = new haxe.ui.richtext.RTFToolButton();
		this._underlineButton.set_styleName("alternate");
		this._underlineButton.set_id("underline");
		this._underlineButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onUnderlineClick));
		hbox.addChild(this._underlineButton);
		var spacer1 = new haxe.ui.toolkit.controls.Spacer();
		spacer1.set_width(10);
		hbox.addChild(spacer1);
		this._bulletButton = new haxe.ui.richtext.RTFToolButton();
		this._bulletButton.set_styleName("alternate");
		this._bulletButton.set_id("bullet");
		this._bulletButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onBulletClick));
		hbox.addChild(this._bulletButton);
		var spacer2 = new haxe.ui.toolkit.controls.Spacer();
		spacer2.set_width(10);
		hbox.addChild(spacer2);
		this._leftAlignButton = new haxe.ui.richtext.RTFToolButton();
		this._leftAlignButton.set_styleName("alternate");
		this._leftAlignButton.set_id("alignLeft");
		this._leftAlignButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onLeftAlignClick));
		hbox.addChild(this._leftAlignButton);
		this._centerAlignButton = new haxe.ui.richtext.RTFToolButton();
		this._centerAlignButton.set_styleName("alternate");
		this._centerAlignButton.set_id("alignCenter");
		this._centerAlignButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onCenterAlignClick));
		hbox.addChild(this._centerAlignButton);
		this._rightAlignButton = new haxe.ui.richtext.RTFToolButton();
		this._rightAlignButton.set_styleName("alternate");
		this._rightAlignButton.set_id("alignRight");
		this._rightAlignButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onRightAlignClick));
		hbox.addChild(this._rightAlignButton);
		this._justifyAlignButton = new haxe.ui.richtext.RTFToolButton();
		this._justifyAlignButton.set_styleName("alternate");
		this._justifyAlignButton.set_id("alignJustify");
		this._justifyAlignButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onJustifyAlignClick));
		hbox.addChild(this._justifyAlignButton);
		this.addChild(hbox);
		this.addChild(this._rtf);
	}
	,get_htmlText: function() {
		return this._rtf.get_htmlText();
	}
	,set_htmlText: function(value) {
		this._rtf.set_htmlText(value);
		return value;
	}
	,set_text: function(value) {
		this._rtf.set_text(value);
		return value;
	}
	,_onBoldClick: function(event) {
		this._rtf.bold();
	}
	,_onItalicClick: function(event) {
		this._rtf.italic();
	}
	,_onUnderlineClick: function(event) {
		this._rtf.underline();
	}
	,_onBulletClick: function(event) {
		this._rtf.bullet();
	}
	,_onFontNameChange: function(event) {
		this._rtf.fontName(this._fontNameList.get_text());
	}
	,_onFontSizeChange: function(event) {
		var size = Std.parseInt(this._fontSizeList.get_text());
		this._rtf.fontSize(size);
	}
	,_onLeftAlignClick: function(event) {
		this._rtf.alignLeft();
	}
	,_onCenterAlignClick: function(event) {
		this._rtf.alignCenter();
	}
	,_onRightAlignClick: function(event) {
		this._rtf.alignRight();
	}
	,_onJustifyAlignClick: function(event) {
		this._rtf.alignJustify();
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.richtext.RTFView();
	}
	,__class__: haxe.ui.richtext.RTFView
	,__properties__: $extend(haxe.ui.toolkit.containers.VBox.prototype.__properties__,{set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
haxe.ui.toolkit.core.interfaces.IFocusable = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IFocusable"] = haxe.ui.toolkit.core.interfaces.IFocusable;
haxe.ui.toolkit.core.interfaces.IFocusable.__name__ = ["haxe","ui","toolkit","core","interfaces","IFocusable"];
haxe.ui.toolkit.core.interfaces.IFocusable.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IFocusable
};
haxe.ui.toolkit.controls.Button = function() {
	this.dispatchChangeEvents = true;
	this._iconPosition = "left";
	this._allowSelection = true;
	this._selected = false;
	this._toggle = false;
	this._down = false;
	this._remainPressed = false;
	this._allowFocus = true;
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.get_sprite().buttonMode = true;
	this.get_sprite().set_useHandCursor(true);
	this.set_state("normal");
	this._layout = new haxe.ui.toolkit.layout.HorizontalLayout();
	this.set_autoSize(true);
	this._spacers = new Array();
	if(haxe.ui.toolkit.controls.Button._groups == null) haxe.ui.toolkit.controls.Button._groups = new haxe.ds.StringMap();
};
$hxClasses["haxe.ui.toolkit.controls.Button"] = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.Button.__name__ = ["haxe","ui","toolkit","controls","Button"];
haxe.ui.toolkit.controls.Button.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IFocusable];
haxe.ui.toolkit.controls.Button.optionInGroup = function(value,option) {
	var exists = false;
	var arr = haxe.ui.toolkit.controls.Button._groups.get(value);
	if(arr != null) {
		var _g = 0;
		while(_g < arr.length) {
			var test = arr[_g];
			++_g;
			if(test == option) {
				exists = true;
				break;
			}
		}
	}
	return exists;
};
haxe.ui.toolkit.controls.Button.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.Button.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	dispose: function() {
		if(this.get_group() != null) {
			var arr = haxe.ui.toolkit.controls.Button._groups.get(this._group);
			HxOverrides.remove(arr,this);
		}
		haxe.ui.toolkit.core.StateComponent.prototype.dispose.call(this);
	}
	,get_remainPressed: function() {
		return this._remainPressed;
	}
	,set_remainPressed: function(value) {
		this._remainPressed = value;
		return value;
	}
	,get_icon: function() {
		if(this._icon == null) return null;
		return this._icon.get_resource();
	}
	,set_icon: function(value) {
		if(value != null) {
			if(this._icon == null) {
				this._icon = new haxe.ui.toolkit.controls.Image();
				this._icon.set_id("icon");
			}
			if(this._icon.get_resource() != value) {
				this._icon.set_resource(value);
				this.organiseChildren();
			}
		} else if(this._icon != null) this._icon.set_visible(false);
		return value;
	}
	,organiseChildren: function() {
		if(this._ready == false) return;
		this.removeAllChildren(false);
		var _g = 0;
		var _g1 = this._spacers;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.dispose();
		}
		this._spacers = new Array();
		if(this._iconPosition == "left" || this._iconPosition == "right") this.set_layout(new haxe.ui.toolkit.layout.HorizontalLayout()); else if(this._iconPosition == "top" || this._iconPosition == "bottom") {
			if(this._label != null && this._icon != null && this._label.get_width() < this._icon.get_width()) {
				this._label.set_autoSize(false);
				this._label.set_width(this._icon.get_width());
			}
			this.set_layout(new haxe.ui.toolkit.layout.VerticalLayout());
			if(this._autoSize == false) {
				var spacer = new haxe.ui.toolkit.controls.Spacer();
				spacer.set_percentHeight(50);
				this.addChild(spacer);
				this._spacers.push(spacer);
			}
		} else this.set_layout(new haxe.ui.toolkit.layout.BoxLayout());
		if(this._icon != null) {
			this._icon.set_horizontalAlign("center");
			this._icon.set_verticalAlign("center");
		}
		if(this._label != null) {
			if(this.get_autoSize() == false) {
				this._label.set_percentWidth(100);
				this._label.set_autoSize(false);
				this._label.set_textAlign("center");
			} else {
				this._label.set_percentWidth(-1);
				this._label.set_textAlign("center");
			}
		}
		if(this._iconPosition == "left" || this._iconPosition == "top") {
			this.addChild(this._icon);
			this.addChild(this._label);
		} else if(this._iconPosition == "right" || this._iconPosition == "bottom") {
			this.addChild(this._label);
			if(this._autoSize == true && this._iconPosition == "right") {
				var spacer1 = new haxe.ui.toolkit.controls.Spacer();
				spacer1.set_percentWidth(100);
				this.addChild(spacer1);
				this._spacers.push(spacer1);
			}
			this.addChild(this._icon);
		} else {
			this.addChild(this._icon);
			this.addChild(this._label);
		}
		if(this._iconPosition == "top" || this._iconPosition == "bottom") {
			if(this._autoSize == false) {
				var spacer2 = new haxe.ui.toolkit.controls.Spacer();
				spacer2.set_percentHeight(50);
				this.addChild(spacer2);
				this._spacers.push(spacer2);
			}
		}
		if(this._iconPosition == "fill" && this._icon != null) {
			this._icon.set_stretch(true);
			this._icon.set_width(this.get_width());
			this._icon.set_height(this.get_height());
		}
		this.invalidate(1048576);
	}
	,preInitialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.preInitialize.call(this);
	}
	,initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_OVER,$bind(this,this._onMouseOver));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_OUT,$bind(this,this._onMouseOut));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onMouseDown));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onMouseUp));
		this.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onMouseClick));
		this.organiseChildren();
	}
	,set_disabled: function(value) {
		haxe.ui.toolkit.core.StateComponent.prototype.set_disabled.call(this,value);
		if(value == true) {
			this.get_sprite().buttonMode = false;
			this.get_sprite().set_useHandCursor(false);
		} else {
			this.get_sprite().buttonMode = true;
			this.get_sprite().set_useHandCursor(true);
		}
		return value;
	}
	,get_text: function() {
		if(this._label == null) return null;
		return this._label.get_text();
	}
	,set_text: function(value) {
		value = haxe.ui.toolkit.core.StateComponent.prototype.set_text.call(this,value);
		if(value != null) {
			if(this._label == null) {
				this._label = new haxe.ui.toolkit.controls.Text();
				this._label.set_id("label");
				this._label.set_multiline(this._multiline);
				this._label.set_wrapLines(this._multiline);
			}
			this._label.set_value(value);
			this.organiseChildren();
		} else if(this._label != null) this._label.set_visible(false);
		return value;
	}
	,_onMouseOver: function(event) {
		if(this._selected == false) {
			if(event.buttonDown == false || this._down == false) this.set_state("over"); else this.set_state("down");
		}
	}
	,_onMouseOut: function(event) {
		if(this._selected == false) {
			if(this._remainPressed == false || event.buttonDown == false) this.set_state("normal"); else {
			}
		}
	}
	,_onMouseDown: function(event) {
		if(this._allowSelection == true) {
			this._down = true;
			this.set_state("down");
			haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onMouseUp));
		}
	}
	,_onMouseUp: function(event) {
		if(this._allowSelection == true && this.get_toggle() == false) {
			this._down = false;
			if(this.hitTest(event.stageX,event.stageY)) this.set_state("over"); else this.set_state("normal");
			haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onMouseUp));
		}
	}
	,_onMouseClick: function(event) {
		if(this._icon != null && this._icon.hitTest(event.stageX,event.stageY)) this.dispatchEvent(new haxe.ui.toolkit.events.UIEvent("haxeui_" + "glyphClick"));
		if(this._toggle == true && this._allowSelection == true) {
			this.set_selected(!this.get_selected());
			if(this.get_selected() == false && this.hitTest(event.stageX,event.stageY)) this.set_state("over");
		}
	}
	,get_states: function() {
		return ["normal","over","down","disabled"];
	}
	,set_state: function(value) {
		haxe.ui.toolkit.core.StateComponent.prototype.set_state.call(this,value);
		if(value == "down") this._down = true;
		return value;
	}
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		return value;
	}
	,get_iconPosition: function() {
		return this._iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this._iconPosition != value) {
			this._iconPosition = value;
			this.organiseChildren();
		}
		return value;
	}
	,get_toggle: function() {
		return this._toggle;
	}
	,set_toggle: function(value) {
		this._toggle = value;
		return value;
	}
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(this._toggle == true && this._selected != value) {
			if(this._group != null && value == true) {
				var arr = haxe.ui.toolkit.controls.Button._groups.get(this._group);
				if(arr != null) {
					var _g = 0;
					while(_g < arr.length) {
						var button = arr[_g];
						++_g;
						if(button != this) button.set_selected(false);
					}
				}
			}
			this._selected = value;
			if(this.dispatchChangeEvents == true) {
				var event = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change");
				this.dispatchEvent(event);
			}
		}
		this._selected = value;
		if(this._selected == true) this.set_state("down"); else if(this.get_root() != null && this.hitTest(this.get_root().get_mousePosition().x,this.get_root().get_mousePosition().y) == true) this.set_state("over"); else this.set_state("normal");
		return value;
	}
	,get_group: function() {
		return this._group;
	}
	,set_group: function(value) {
		if(value != null) {
			var arr = haxe.ui.toolkit.controls.Button._groups.get(value);
			if(arr != null) HxOverrides.remove(arr,this);
		}
		this._group = value;
		if(value == null) return value;
		var arr1 = haxe.ui.toolkit.controls.Button._groups.get(value);
		if(arr1 == null) arr1 = new Array();
		if(haxe.ui.toolkit.controls.Button.optionInGroup(value,this) == false) arr1.push(this);
		haxe.ui.toolkit.controls.Button._groups.set(value,arr1);
		return value;
	}
	,get_allowSelection: function() {
		return this._allowSelection;
	}
	,set_allowSelection: function(value) {
		this._allowSelection = value;
		return value;
	}
	,get_multiline: function() {
		return this._multiline;
	}
	,set_multiline: function(value) {
		this._multiline = value;
		if(this._label != null) {
			this._label.set_multiline(this._multiline);
			this._label.set_wrapLines(this._multiline);
		}
		return value;
	}
	,applyStyle: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.applyStyle.call(this);
		if(this._label != null) {
			var labelStyle = new haxe.ui.toolkit.style.Style();
			if(this._baseStyle != null) {
				labelStyle.set_fontName(this._baseStyle.get_fontName());
				labelStyle.set_fontSize(this._baseStyle.get_fontSize());
				labelStyle.set_fontEmbedded(this._baseStyle.get_fontEmbedded());
				labelStyle.set_fontBold(this._baseStyle.get_fontBold());
				labelStyle.set_fontItalic(this._baseStyle.get_fontItalic());
				labelStyle.set_fontUnderline(this._baseStyle.get_fontUnderline());
				labelStyle.set_color(this._baseStyle.get_color());
				labelStyle.set_textAlign(this._baseStyle.get_textAlign());
			}
			this._label.set_baseStyle(labelStyle);
		}
		if(this._baseStyle != null) {
			if(this._baseStyle.get_icon() != null) this.set_icon(this._baseStyle.get_icon());
			if(this._baseStyle.get_iconPosition() != null) this.set_iconPosition(this._baseStyle.get_iconPosition());
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		c.set_remainPressed(this.get_remainPressed());
		c.set_icon(this.get_icon());
		c.set_allowFocus(this.get_allowFocus());
		c.set_iconPosition(this.get_iconPosition());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		c.set_group(this.get_group());
		c.set_allowSelection(this.get_allowSelection());
		c.set_multiline(this.get_multiline());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Button();
	}
	,__class__: haxe.ui.toolkit.controls.Button
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_multiline:"set_multiline",get_multiline:"get_multiline",set_allowSelection:"set_allowSelection",get_allowSelection:"get_allowSelection",set_group:"set_group",get_group:"get_group",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_icon:"set_icon",get_icon:"get_icon",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed"})
});
haxe.ui.richtext.RTFToolButton = function() {
	haxe.ui.toolkit.controls.Button.call(this);
};
$hxClasses["haxe.ui.richtext.RTFToolButton"] = haxe.ui.richtext.RTFToolButton;
haxe.ui.richtext.RTFToolButton.__name__ = ["haxe","ui","richtext","RTFToolButton"];
haxe.ui.richtext.RTFToolButton.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.richtext.RTFToolButton.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.richtext.RTFToolButton();
	}
	,__class__: haxe.ui.richtext.RTFToolButton
});
haxe.ui.richtext.syntax = {};
haxe.ui.richtext.syntax.CodeSyntax = function() {
	this._identifier = "";
	this._rules = new haxe.ds.StringMap();
	this._compiledRules = new haxe.ds.StringMap();
	this._defaultFormat = new openfl.text.TextFormat("_typewriter",13,0);
};
$hxClasses["haxe.ui.richtext.syntax.CodeSyntax"] = haxe.ui.richtext.syntax.CodeSyntax;
haxe.ui.richtext.syntax.CodeSyntax.__name__ = ["haxe","ui","richtext","syntax","CodeSyntax"];
haxe.ui.richtext.syntax.CodeSyntax.getSyntax = function(id) {
	var syntax = new haxe.ui.richtext.syntax.CodeSyntax();
	if(id == "haxe") syntax = new haxe.ui.richtext.syntax.HaxeSyntax(); else if(id == "xml") syntax = new haxe.ui.richtext.syntax.XMLSyntax(); else if(id == "css") syntax = new haxe.ui.richtext.syntax.CSSSyntax();
	return syntax;
};
haxe.ui.richtext.syntax.CodeSyntax.prototype = {
	addRule: function(regex,color,bold) {
		if(bold == null) bold = false;
		var f = new openfl.text.TextFormat(this._defaultFormat.font,this._defaultFormat.size,color);
		f.bold = bold;
		this._rules.set(regex,f);
	}
	,get_identifier: function() {
		return this._identifier;
	}
	,get_defaultFormat: function() {
		return this._defaultFormat;
	}
	,set_defaultFormat: function(value) {
		this._defaultFormat = value;
		return value;
	}
	,get_rules: function() {
		return this._rules;
	}
	,getCompiledRule: function(rule) {
		var r = this._compiledRules.get(rule);
		if(r == null) {
			r = new EReg(rule,"g");
			this._compiledRules.set(rule,r);
		}
		return r;
	}
	,__class__: haxe.ui.richtext.syntax.CodeSyntax
	,__properties__: {get_rules:"get_rules",set_defaultFormat:"set_defaultFormat",get_defaultFormat:"get_defaultFormat",get_identifier:"get_identifier"}
};
haxe.ui.richtext.syntax.CSSSyntax = function() {
	haxe.ui.richtext.syntax.CodeSyntax.call(this);
	this._identifier = "css";
	this.addRule("(#|\\w|.)(.*?){|}",255,true);
	this.addRule("(\\w*)\\:",3840511,true);
	this.addRule(":(.*?)\\;",8912896);
};
$hxClasses["haxe.ui.richtext.syntax.CSSSyntax"] = haxe.ui.richtext.syntax.CSSSyntax;
haxe.ui.richtext.syntax.CSSSyntax.__name__ = ["haxe","ui","richtext","syntax","CSSSyntax"];
haxe.ui.richtext.syntax.CSSSyntax.__super__ = haxe.ui.richtext.syntax.CodeSyntax;
haxe.ui.richtext.syntax.CSSSyntax.prototype = $extend(haxe.ui.richtext.syntax.CodeSyntax.prototype,{
	__class__: haxe.ui.richtext.syntax.CSSSyntax
});
haxe.ui.richtext.syntax.HaxeSyntax = function() {
	haxe.ui.richtext.syntax.CodeSyntax.call(this);
	this._identifier = "haxe";
	this.addRule("(class )|(extends )|(implements )|(function)|(package )|(import )|(var )|(null)|(if)|(while)|(trace)|(return)",255);
	this.addRule("(public )|(private )|(static )|(Void)|(Bool)|(Int)|(Dynamic)|(String)|(Float)",3840511);
	this.addRule("(?:#.*)",8947848);
	this.addRule("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)",34816);
};
$hxClasses["haxe.ui.richtext.syntax.HaxeSyntax"] = haxe.ui.richtext.syntax.HaxeSyntax;
haxe.ui.richtext.syntax.HaxeSyntax.__name__ = ["haxe","ui","richtext","syntax","HaxeSyntax"];
haxe.ui.richtext.syntax.HaxeSyntax.__super__ = haxe.ui.richtext.syntax.CodeSyntax;
haxe.ui.richtext.syntax.HaxeSyntax.prototype = $extend(haxe.ui.richtext.syntax.CodeSyntax.prototype,{
	__class__: haxe.ui.richtext.syntax.HaxeSyntax
});
haxe.ui.richtext.syntax.XMLSyntax = function() {
	haxe.ui.richtext.syntax.CodeSyntax.call(this);
	this._identifier = "xml";
	this.addRule("(<(.*?) |</(.*?)>|/>)",255,true);
	this.addRule("(\\w*)\\=",3840511,true);
	this.addRule("\"(.*?)\"",8912896);
};
$hxClasses["haxe.ui.richtext.syntax.XMLSyntax"] = haxe.ui.richtext.syntax.XMLSyntax;
haxe.ui.richtext.syntax.XMLSyntax.__name__ = ["haxe","ui","richtext","syntax","XMLSyntax"];
haxe.ui.richtext.syntax.XMLSyntax.__super__ = haxe.ui.richtext.syntax.CodeSyntax;
haxe.ui.richtext.syntax.XMLSyntax.prototype = $extend(haxe.ui.richtext.syntax.CodeSyntax.prototype,{
	__class__: haxe.ui.richtext.syntax.XMLSyntax
});
haxe.ui.toolkit.core.Controller = function(view,options) {
	if(js.Boot.__instanceof(view,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) this._view = js.Boot.__cast(view , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer); else if(js.Boot.__instanceof(view,Class)) {
		var cls;
		cls = js.Boot.__cast(view , Class);
		this._view = Type.createInstance(cls,[]);
	} else if(view != null) options = view;
	if(this._view == null) this._view = new haxe.ui.toolkit.core.Component();
	if(options != null) {
		var _g = 0;
		var _g1 = Reflect.fields(options);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(Reflect.getProperty(this._view,"set_" + f) != null) Reflect.setProperty(this._view,f,Reflect.field(options,f));
		}
	}
	this.refereshNamedComponents();
};
$hxClasses["haxe.ui.toolkit.core.Controller"] = haxe.ui.toolkit.core.Controller;
haxe.ui.toolkit.core.Controller.__name__ = ["haxe","ui","toolkit","core","Controller"];
haxe.ui.toolkit.core.Controller.prototype = {
	addChild: function(child,options) {
		var childObject = null;
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IDisplayObject)) childObject = js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObject); else if(js.Boot.__instanceof(child,Class)) {
			var cls;
			cls = js.Boot.__cast(child , Class);
			childObject = Type.createInstance(cls,[]);
		} else if(child != null) options = child;
		if(childObject == null) childObject = new haxe.ui.toolkit.core.Component();
		if(options != null) {
			var _g = 0;
			var _g1 = Reflect.fields(options);
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(Reflect.getProperty(childObject,"set_" + f) != null) Reflect.setProperty(childObject,f,Reflect.field(options,f));
			}
		}
		var retVal = this._view.addChild(childObject);
		this.refereshNamedComponents();
		return retVal;
	}
	,attachEvent: function(id,type,listener) {
		var c = this.getComponent(id);
		if(c != null) c.addEventListener(type,listener);
	}
	,detachEvent: function(id,type,listener) {
		var c = this.getComponent(id);
		if(c != null) c.removeEventListener(type,listener);
	}
	,detachEvents: function(id,type) {
		var c = this.getComponent(id);
		if(c != null) c.removeEventListenerType(type);
	}
	,getComponent: function(id) {
		return this.getComponentAs(id,haxe.ui.toolkit.core.Component);
	}
	,getComponentAs: function(id,type) {
		var c = this._namedComponents.get(id);
		if(c == null) return null;
		return c;
	}
	,refereshNamedComponents: function() {
		this._namedComponents = new haxe.ds.StringMap();
		this.addNamedComponentsFrom(this._view);
	}
	,addNamedComponentsFrom: function(parent) {
		if(parent == null) return;
		if(parent != null && parent.get_id() != null) this._namedComponents.set(parent.get_id(),parent);
		var _g = 0;
		var _g1 = parent.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.addNamedComponentsFrom(js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer));
		}
	}
	,get_view: function() {
		return this._view;
	}
	,get_root: function() {
		if(this._view == null) return null;
		return this._view.get_root();
	}
	,get_popup: function() {
		var popup = null;
		if(Std["is"](this.get_view().get_parent(),haxe.ui.toolkit.controls.popups.PopupContent)) popup = (js.Boot.__cast(this.get_view().get_parent() , haxe.ui.toolkit.controls.popups.PopupContent)).popup;
		return popup;
	}
	,get_namedComponents: function() {
		return this._namedComponents;
	}
	,showPopup: function(text,title,config,fn) {
		if(config == null) config = 1;
		return this.showSimplePopup(text,title,config,fn);
	}
	,showSimplePopup: function(text,title,config,fn) {
		if(config == null) config = 1;
		return haxe.ui.toolkit.core.PopupManager.get_instance().showSimple(text,title,config,fn);
	}
	,showCustomPopup: function(content,title,config,fn) {
		if(config == null) config = 1;
		var display = null;
		if(js.Boot.__instanceof(content,haxe.ui.toolkit.core.interfaces.IDisplayObject)) display = js.Boot.__cast(content , haxe.ui.toolkit.core.interfaces.IDisplayObject); else if(typeof(content) == "string") display = haxe.ui.toolkit.core.Toolkit.processXmlResource(js.Boot.__cast(content , String));
		if(display == null) return null;
		return haxe.ui.toolkit.core.PopupManager.get_instance().showCustom(display,title,config,fn);
	}
	,showListPopup: function(items,selectedIndex,title,fn) {
		if(selectedIndex == null) selectedIndex = -1;
		return haxe.ui.toolkit.core.PopupManager.get_instance().showList(items,selectedIndex,title,fn);
	}
	,showBusyPopup: function(text,delay,title,config,fn) {
		if(delay == null) delay = -1;
		return haxe.ui.toolkit.core.PopupManager.get_instance().showBusy(text,delay,title,config,fn);
	}
	,showCalendarPopup: function(title,fn) {
		return haxe.ui.toolkit.core.PopupManager.get_instance().showCalendar(title,fn);
	}
	,__class__: haxe.ui.toolkit.core.Controller
	,__properties__: {get_namedComponents:"get_namedComponents",get_popup:"get_popup",get_root:"get_root",get_view:"get_view"}
};
haxe.ui.toolkit.core.XMLController = function(xmlResourceId) {
	haxe.ui.toolkit.core.Controller.call(this,haxe.ui.toolkit.core.Toolkit.processXml(Xml.parse(haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(xmlResourceId))));
};
$hxClasses["haxe.ui.toolkit.core.XMLController"] = haxe.ui.toolkit.core.XMLController;
haxe.ui.toolkit.core.XMLController.__name__ = ["haxe","ui","toolkit","core","XMLController"];
haxe.ui.toolkit.core.XMLController.__super__ = haxe.ui.toolkit.core.Controller;
haxe.ui.toolkit.core.XMLController.prototype = $extend(haxe.ui.toolkit.core.Controller.prototype,{
	__class__: haxe.ui.toolkit.core.XMLController
});
haxe.ui.showcase.MainController = function() {
	this._loadResources = false;
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"ui/main.xml");
	this._loadResources = haxe.ui.showcase.util.Prefs.get_showSources() == "yes";
	this.theme = this.getComponentAs("theme",haxe.ui.toolkit.controls.selection.ListSelector);
	var themeName = "Default";
	if(haxe.ui.showcase.util.Prefs.get_theme() == "default") themeName = "Default Theme"; else if(haxe.ui.showcase.util.Prefs.get_theme() == "gradient") themeName = "Gradient Theme";
	this.theme.set_text(themeName);
	this.theme.set_onChange(function(e) {
		haxe.ui.showcase.util.Prefs.set_theme(_g.theme.get_selectedItems()[0].get_data().id);
		_g.showSimplePopup("The theme has been changed. You must restart (or refresh) the application to use the new theme.");
	});
	this.attachEvent("menuApplication",haxe.ui.toolkit.events.MenuEvent.SELECT,function(e1) {
		var _g1 = e1.menuItem.get_id();
		switch(_g1) {
		case "menuSettings":
			_g.popupSettings();
			break;
		case "menuAbout":
			_g.popupAbout();
			break;
		default:
		}
	});
	this.attachEvent("menuView",haxe.ui.toolkit.events.MenuEvent.SELECT,function(e2) {
		var controller = e2.menuItem.userData;
		var name = e2.menuItem.get_id();
		_g.showView(controller);
	});
	this._groups = new haxe.ds.StringMap();
	this.buildMenu();
	this.loadViews();
	var views = this.getComponentAs("views",haxe.ui.toolkit.containers.Accordion);
	views.addEventListener("haxeui_" + "change",$bind(this,this._onViewsChange));
};
$hxClasses["haxe.ui.showcase.MainController"] = haxe.ui.showcase.MainController;
haxe.ui.showcase.MainController.__name__ = ["haxe","ui","showcase","MainController"];
haxe.ui.showcase.MainController.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.MainController.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	buildMenu: function() {
		var menuView = this.getComponentAs("menuView",haxe.ui.toolkit.controls.MenuButton);
		var menu = new haxe.ui.toolkit.controls.Menu();
		menuView.addChild(menu);
		var groupMenus = new haxe.ds.StringMap();
		var xml = haxe.ui.toolkit.resources.ResourceManager.get_instance().getXML("data/views.xml");
		var a = haxe.ui.showcase.util.XPathUtil.getXPathNodes(xml,"/views/view");
		var _g = 0;
		while(_g < a.length) {
			var item = a[_g];
			++_g;
			var group = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"group/text()");
			var name = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"name/text()");
			var controller = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"controller/text()");
			var groupMenu = groupMenus.get(group);
			if(groupMenu == null) {
				groupMenu = new haxe.ui.toolkit.controls.Menu();
				groupMenu.set_text(group);
				menu.addChild(groupMenu);
				groupMenus.set(group,groupMenu);
			}
			var item1 = new haxe.ui.toolkit.controls.MenuItem();
			item1.set_text(name);
			item1.userData = controller;
			item1.set_id(name);
			groupMenu.addChild(item1);
		}
	}
	,loadViews: function() {
		var views = this.getComponentAs("views",haxe.ui.toolkit.containers.Accordion);
		var xml = haxe.ui.toolkit.resources.ResourceManager.get_instance().getXML("data/views.xml");
		var a = haxe.ui.showcase.util.XPathUtil.getXPathNodes(xml,"/views/view");
		var _g = 0;
		while(_g < a.length) {
			var item = a[_g];
			++_g;
			var group = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"group/text()");
			var name = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"name/text()");
			var icon = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"icon/text()");
			var controller = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"controller/text()");
			var resources = haxe.ui.showcase.util.XPathUtil.getXPathNodes(item,"resources/resource");
			var _g1 = 0;
			while(_g1 < resources.length) {
				var r = resources[_g1];
				++_g1;
				var resType = haxe.ui.showcase.util.XPathUtil.getXPathValue(r,"@type");
				var res = haxe.ui.showcase.util.XPathUtil.getXPathValue(r,"text()");
			}
			var list = this._groups.get(group);
			if(list == null) {
				var vbox = new haxe.ui.toolkit.containers.VBox();
				vbox.set_percentWidth(vbox.set_percentHeight(100));
				vbox.set_text(group);
				list = new haxe.ui.toolkit.containers.ListView();
				if(haxe.ui.showcase.util.Prefs.get_theme() == "gradient") list.set_showVScroll(false);
				list.set_percentWidth(list.set_percentHeight(100));
				list.addEventListener("haxeui_" + "change",$bind(this,this._onViewItemChange));
				vbox.addChild(list);
				this._groups.set(group,list);
				views.addChild(vbox);
			}
			list.get_dataSource().add({ text : name, controller : controller, icon : icon});
		}
	}
	,_onViewsChange: function(event) {
		var $it0 = this._groups.iterator();
		while( $it0.hasNext() ) {
			var list = $it0.next();
			list.set_selectedIndex(-1);
		}
		var tabs = this.getComponentAs("tabs",haxe.ui.toolkit.containers.TabView);
		tabs.removeAllTabs();
		var views = this.getComponentAs("views",haxe.ui.toolkit.containers.Accordion);
		if(views.get_selectedButton() == null) return;
		var xml = haxe.ui.toolkit.resources.ResourceManager.get_instance().getXML("data/views.xml");
		var xpath = "/views/view/group[text() = '" + views.get_selectedButton().get_text() + "']";
		var a = haxe.ui.showcase.util.XPathUtil.getXPathNodes(xml,xpath);
		var box = new haxe.ui.toolkit.containers.ContinuousHBox();
		box.set_percentWidth(100);
		box.set_text(views.get_selectedButton().get_text());
		var _g = 0;
		while(_g < a.length) {
			var item = a[_g];
			++_g;
			item = item.get_parent();
			var name = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"name/text()");
			var icon = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"icon/text()");
			var controller = haxe.ui.showcase.util.XPathUtil.getXPathValue(item,"controller/text()");
			var button = new haxe.ui.toolkit.controls.Button();
			button.set_autoSize(false);
			button.set_multiline(true);
			button.set_width(110);
			button.set_height(110);
			button.set_icon(icon);
			button.get_style().set_iconPosition("top");
			button.set_text(name);
			button.userData = controller;
			button.addEventListener("haxeui_" + "click",$bind(this,this._onViewButtonClick));
			box.addChild(button);
		}
		tabs.addChild(box);
		tabs.set_selectedIndex(0);
	}
	,_onViewItemChange: function(event) {
		this.showView((js.Boot.__cast(event.get_component() , haxe.ui.toolkit.core.renderers.ItemRenderer)).get_data().controller);
	}
	,_onViewButtonClick: function(event) {
		this.showView(event.get_component().userData);
	}
	,showView: function(controller) {
		var tabs = this.getComponentAs("tabs",haxe.ui.toolkit.containers.TabView);
		tabs.removeAllTabs();
		var xml = haxe.ui.toolkit.resources.ResourceManager.get_instance().getXML("data/views.xml");
		var xpath = "/views/view/controller[text() = '" + controller + "']";
		var node = haxe.ui.showcase.util.XPathUtil.getXPathNode(xml,xpath).get_parent();
		var name = haxe.ui.showcase.util.XPathUtil.getXPathValue(node,"name/text()");
		var controller1 = haxe.ui.showcase.util.XPathUtil.getXPathValue(node,"controller/text()");
		var view = Type.createInstance(Type.resolveClass(controller1),[]);
		var icon = haxe.ui.showcase.util.XPathUtil.getXPathValue(node,"icon/text()");
		(js.Boot.__cast(view.get_view() , haxe.ui.toolkit.core.Component)).set_text(name);
		tabs.addChild(view.get_view());
		tabs.getTabButton(0).set_icon(icon);
		if(this._loadResources == true) {
			var resources = haxe.ui.showcase.util.XPathUtil.getXPathNodes(node,"resources/resource");
			var tabIndex = 0;
			var _g = 0;
			while(_g < resources.length) {
				var r = resources[_g];
				++_g;
				var resType = haxe.ui.showcase.util.XPathUtil.getXPathValue(r,"@type");
				var res = haxe.ui.showcase.util.XPathUtil.getXPathValue(r,"text()");
				var n = res.lastIndexOf("/");
				var resName = HxOverrides.substr(res,n + 1,res.length);
				var c = null;
				var icon1 = null;
				if(resType == "haxe") {
					c = new haxe.ui.richtext.Code();
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_async(true);
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_syntax("haxe");
					var code = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(res);
					code = StringTools.replace(code,"\r","");
					c.set_text(code);
					c.set_percentWidth(c.set_percentHeight(100));
					icon1 = "icons/blue-document-haxe.png";
				} else if(resType == "xml") {
					c = new haxe.ui.richtext.Code();
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_async(true);
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_syntax("xml");
					var code1 = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(res);
					code1 = StringTools.replace(code1,"\r","");
					c.set_text(code1);
					c.set_percentWidth(c.set_percentHeight(100));
					icon1 = "icons/blue-document-xml.png";
				} else if(resType == "css") {
					c = new haxe.ui.richtext.Code();
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_async(true);
					(js.Boot.__cast(c , haxe.ui.richtext.Code)).set_syntax("css");
					var code2 = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(res);
					code2 = StringTools.replace(code2,"\r","");
					c.set_text(code2);
					c.set_percentWidth(c.set_percentHeight(100));
					icon1 = "icons/blue-document-css.png";
				} else {
					c = new haxe.ui.richtext.Code();
					var code3 = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(res);
					code3 = StringTools.replace(code3,"\r","");
					c.set_text(code3);
					c.set_percentWidth(c.set_percentHeight(100));
					icon1 = "icons/blue-document-css.png";
				}
				if(c != null) {
					var container = new haxe.ui.toolkit.containers.VBox();
					container.set_percentWidth(container.set_percentHeight(100));
					container.set_text(resName);
					container.addChild(c);
					tabs.addChild(container);
					if(icon1 != null) tabs.getTabButton(tabIndex + 1).set_icon(icon1);
				}
				tabIndex++;
			}
		}
		tabs.set_selectedIndex(0);
	}
	,popupSettings: function() {
		var _g = this;
		var controller = new haxe.ui.showcase.PrefsController();
		var config = { };
		config.buttons = [65536,4096];
		config.styleName = "prefs-popup";
		config.width = 400;
		this.showCustomPopup(controller.get_view(),"Settings",config,function(e) {
			if(e == 65536) {
				controller.savePrefs();
				_g.showSimplePopup("Your settings have been changed. You must restart (or refresh) the application from the new settings to take effect.");
			}
		});
	}
	,popupAbout: function() {
		this.showCustomPopup("ui/about.xml","About",{ width : 400, buttons : 1});
	}
	,__class__: haxe.ui.showcase.MainController
});
haxe.ui.showcase.PrefsController = function() {
	haxe.ui.toolkit.core.XMLController.call(this,"assets/ui/prefs.xml");
	this.showSources = this.getComponentAs("showSources",haxe.ui.toolkit.controls.selection.ListSelector);
	this.selectionMethod = this.getComponentAs("selectionMethod",haxe.ui.toolkit.controls.selection.ListSelector);
	this.theme = this.getComponentAs("theme",haxe.ui.toolkit.controls.selection.ListSelector);
	var themeName = "Default";
	if(haxe.ui.showcase.util.Prefs.get_theme() == "default") themeName = "Default Theme"; else if(haxe.ui.showcase.util.Prefs.get_theme() == "gradient") themeName = "Gradient Theme";
	this.theme.set_text(themeName);
	var text = "No";
	if(haxe.ui.showcase.util.Prefs.get_showSources() == "yes") text = "Yes";
	this.showSources.set_text(text);
	text = "Theme Decides";
	if(haxe.ui.showcase.util.Prefs.get_selectionMethod() == "theme") text = "Theme Decides"; else if(haxe.ui.showcase.util.Prefs.get_selectionMethod() == "dropdown") text = "Drop Down List"; else if(haxe.ui.showcase.util.Prefs.get_selectionMethod() == "popup") text = "Popup Up List";
	this.selectionMethod.set_text(text);
};
$hxClasses["haxe.ui.showcase.PrefsController"] = haxe.ui.showcase.PrefsController;
haxe.ui.showcase.PrefsController.__name__ = ["haxe","ui","showcase","PrefsController"];
haxe.ui.showcase.PrefsController.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.PrefsController.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	savePrefs: function() {
		if(this.theme.get_selectedItems() != null && this.theme.get_selectedItems().length != 0) haxe.ui.showcase.util.Prefs.set_theme(this.theme.get_selectedItems()[0].get_data().id);
		haxe.ui.showcase.util.Prefs.set_showSources(this.showSources.get_text().toLowerCase());
		if(this.selectionMethod.get_selectedItems() != null && this.selectionMethod.get_selectedItems().length != 0) haxe.ui.showcase.util.Prefs.set_selectionMethod(this.selectionMethod.get_selectedItems()[0].get_data().id);
	}
	,__class__: haxe.ui.showcase.PrefsController
});
haxe.ui.showcase.util = {};
haxe.ui.showcase.util.Prefs = function() {
};
$hxClasses["haxe.ui.showcase.util.Prefs"] = haxe.ui.showcase.util.Prefs;
haxe.ui.showcase.util.Prefs.__name__ = ["haxe","ui","showcase","util","Prefs"];
haxe.ui.showcase.util.Prefs.__properties__ = {set_selectionMethod:"set_selectionMethod",get_selectionMethod:"get_selectionMethod",set_showSources:"set_showSources",get_showSources:"get_showSources",set_theme:"set_theme",get_theme:"get_theme"}
haxe.ui.showcase.util.Prefs.get_theme = function() {
	return haxe.ui.showcase.util.Prefs.getPref("theme","default");
};
haxe.ui.showcase.util.Prefs.set_theme = function(value) {
	haxe.ui.showcase.util.Prefs.setPref("theme",value);
	return value;
};
haxe.ui.showcase.util.Prefs.get_showSources = function() {
	return haxe.ui.showcase.util.Prefs.getPref("showSources","yes");
};
haxe.ui.showcase.util.Prefs.set_showSources = function(value) {
	haxe.ui.showcase.util.Prefs.setPref("showSources",value);
	return value;
};
haxe.ui.showcase.util.Prefs.get_selectionMethod = function() {
	return haxe.ui.showcase.util.Prefs.getPref("selectionMethod","theme");
};
haxe.ui.showcase.util.Prefs.set_selectionMethod = function(value) {
	haxe.ui.showcase.util.Prefs.setPref("selectionMethod",value);
	return value;
};
haxe.ui.showcase.util.Prefs.getPref = function(key,defaultValue,section) {
	if(section == null) section = "HaxeUIComponentShowcase";
	var value = defaultValue;
	var so = openfl.net.SharedObject.getLocal(section);
	if(so != null && so.data != null) {
		if(Object.prototype.hasOwnProperty.call(so.data,key)) value = Reflect.field(so.data,key);
	}
	return value;
};
haxe.ui.showcase.util.Prefs.setPref = function(key,value,section) {
	if(section == null) section = "HaxeUIComponentShowcase";
	var so = openfl.net.SharedObject.getLocal(section);
	if(so != null && so.data != null) {
		if(value != null) so.data[key] = value; else if(Object.prototype.hasOwnProperty.call(so.data,key)) Reflect.deleteField(so.data,key);
		try {
			so.flush();
		} catch( e ) {
			haxe.Log.trace("Could not save pref: " + Std.string(e),{ fileName : "Prefs.hx", lineNumber : 62, className : "haxe.ui.showcase.util.Prefs", methodName : "setPref"});
		}
	}
};
haxe.ui.showcase.util.Prefs.clearPref = function(key,section) {
	if(section == null) section = "HaxeUIComponentShowcase";
	var so = openfl.net.SharedObject.getLocal(section);
	if(so != null && so.data != null) {
		if(Object.prototype.hasOwnProperty.call(so.data,key)) {
			Reflect.deleteField(so.data,key);
			try {
				so.flush();
			} catch( e ) {
				haxe.Log.trace("Could not clear pref: " + Std.string(e),{ fileName : "Prefs.hx", lineNumber : 75, className : "haxe.ui.showcase.util.Prefs", methodName : "clearPref"});
			}
		}
	}
};
haxe.ui.showcase.util.Prefs.prototype = {
	__class__: haxe.ui.showcase.util.Prefs
};
haxe.ui.showcase.util.XPathUtil = function() { };
$hxClasses["haxe.ui.showcase.util.XPathUtil"] = haxe.ui.showcase.util.XPathUtil;
haxe.ui.showcase.util.XPathUtil.__name__ = ["haxe","ui","showcase","util","XPathUtil"];
haxe.ui.showcase.util.XPathUtil.getXPathValue = function(doc,xpathString) {
	var value = null;
	var xpath1 = new xpath.XPath(xpathString);
	var xml = xpath.xml.XPathHxXml.wrapNode(doc);
	var r = xpath1.selectNode(xml);
	if(r != null) value = r.getValue();
	return value;
};
haxe.ui.showcase.util.XPathUtil.getXPathNodes = function(doc,xpathString) {
	var xpath1 = new xpath.XPath(xpathString);
	var xml = xpath.xml.XPathHxXml.wrapNode(doc);
	var r = xpath1.selectNodes(xml);
	var a = new Array();
	if(r != null) {
		var $it0 = $iterator(r)();
		while( $it0.hasNext() ) {
			var item = $it0.next();
			if(js.Boot.__instanceof(item,xpath.xml.XPathHxXml)) a.push((js.Boot.__cast(item , xpath.xml.XPathHxXml)).getWrappedXml());
		}
	}
	return a;
};
haxe.ui.showcase.util.XPathUtil.getXPathNode = function(doc,xpathString) {
	var xpath1 = new xpath.XPath(xpathString);
	var xml = xpath.xml.XPathHxXml.wrapNode(doc);
	var r = xpath1.selectSingleNode(xml);
	if(r != null && js.Boot.__instanceof(r,xpath.xml.XPathHxXml)) return (js.Boot.__cast(r , xpath.xml.XPathHxXml)).getWrappedXml();
	return null;
};
haxe.ui.showcase.views = {};
haxe.ui.showcase.views.AbsoluteLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/AbsoluteLayout/AbsoluteLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.childLeft = this.getComponentAs("childLeft",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.Absolute);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.childTopLabel = this.getComponentAs("childTopLabel",haxe.ui.toolkit.controls.Text);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.childTop = this.getComponentAs("childTop",haxe.ui.toolkit.controls.HSlider);
	this.childLeftLabel = this.getComponentAs("childLeftLabel",haxe.ui.toolkit.controls.Text);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.childLeft.set_pos(_g.getComponent(_g.child.get_text()).get_x());
		_g.childTop.set_pos(_g.getComponent(_g.child.get_text()).get_y());
		_g.childWidth.set_pos(_g.getComponent(_g.child.get_text()).get_width());
		_g.childHeight.set_pos(_g.getComponent(_g.child.get_text()).get_height());
		_g.childLeftLabel.set_text("" + _g.childLeft.get_pos());
		_g.childTopLabel.set_text("" + _g.childTop.get_pos());
		_g.childWidthLabel.set_text("" + _g.childWidth.get_pos());
		_g.childHeightLabel.set_text("" + _g.childHeight.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.disabled.set_onChange(function(e4) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.clipContent.set_onChange(function(e5) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.child.set_onChange(function(e6) {
		_g.childLeft.set_pos(_g.getComponent(_g.child.get_text()).get_x());
		_g.childTop.set_pos(_g.getComponent(_g.child.get_text()).get_y());
		_g.childWidth.set_pos(_g.getComponent(_g.child.get_text()).get_width());
		_g.childHeight.set_pos(_g.getComponent(_g.child.get_text()).get_height());
		_g.childLeftLabel.set_text("" + _g.childLeft.get_pos());
		_g.childTopLabel.set_text("" + _g.childTop.get_pos());
		_g.childWidthLabel.set_text("" + _g.childWidth.get_pos());
		_g.childHeightLabel.set_text("" + _g.childHeight.get_pos());
	});
	this.childLeft.set_onChange(function(e7) {
		_g.getComponent(_g.child.get_text()).set_x(_g.childLeft.get_pos());
		_g.childLeftLabel.set_text("" + _g.childLeft.get_pos());
	});
	this.childTop.set_onChange(function(e8) {
		_g.getComponent(_g.child.get_text()).set_y(_g.childTop.get_pos());
		_g.childTopLabel.set_text("" + _g.childTop.get_pos());
	});
	this.childWidth.set_onChange(function(e9) {
		_g.getComponent(_g.child.get_text()).set_width(_g.childWidth.get_pos());
		_g.childWidthLabel.set_text("" + _g.childWidth.get_pos());
	});
	this.childHeight.set_onChange(function(e10) {
		_g.getComponent(_g.child.get_text()).set_height(_g.childHeight.get_pos());
		_g.childHeightLabel.set_text("" + _g.childHeight.get_pos());
	});
};
$hxClasses["haxe.ui.showcase.views.AbsoluteLayout"] = haxe.ui.showcase.views.AbsoluteLayout;
haxe.ui.showcase.views.AbsoluteLayout.__name__ = ["haxe","ui","showcase","views","AbsoluteLayout"];
haxe.ui.showcase.views.AbsoluteLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.AbsoluteLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.AbsoluteLayout
});
haxe.ui.showcase.views.Accordions = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/Accordions/Accordions.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theAccordion = this.getComponentAs("theAccordion",haxe.ui.toolkit.containers.Accordion);
	this.width.set_onChange(function(e) {
		_g.theAccordion.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theAccordion.set_height(_g.height.get_pos());
	});
};
$hxClasses["haxe.ui.showcase.views.Accordions"] = haxe.ui.showcase.views.Accordions;
haxe.ui.showcase.views.Accordions.__name__ = ["haxe","ui","showcase","views","Accordions"];
haxe.ui.showcase.views.Accordions.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.Accordions.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.Accordions
});
haxe.ui.showcase.views.BoxLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/BoxLayout/BoxLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.halign = this.getComponentAs("halign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.Box);
	this.Button9 = this.getComponentAs("Button9",haxe.ui.toolkit.controls.Button);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button7 = this.getComponentAs("Button7",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.valign = this.getComponentAs("valign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.Button6 = this.getComponentAs("Button6",haxe.ui.toolkit.controls.Button);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.Button8 = this.getComponentAs("Button8",haxe.ui.toolkit.controls.Button);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.Button5 = this.getComponentAs("Button5",haxe.ui.toolkit.controls.Button);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.childWidth.set_pos(_g.getComponent(_g.child.get_text()).get_width());
		_g.childHeight.set_pos(_g.getComponent(_g.child.get_text()).get_height());
		_g.childWidthLabel.set_text("" + _g.childWidth.get_pos());
		_g.childHeightLabel.set_text("" + _g.childHeight.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.disabled.set_onChange(function(e4) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e5) {
		var c = _g.getComponent(_g.child.get_text());
		if(c.get_percentWidth() == -1) {
			_g.childWidthAsPercent.set_selected(false);
			_g.childWidth.set_pos(c.get_width());
			_g.childWidthLabel.set_text("" + c.get_width());
		} else {
			_g.childWidthAsPercent.set_selected(true);
			_g.childWidth.set_pos(c.get_percentWidth());
			_g.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			_g.childHeightAsPercent.set_selected(false);
			_g.childHeight.set_pos(c.get_height());
			_g.childHeightLabel.set_text("" + c.get_height());
		} else {
			_g.childHeightAsPercent.set_selected(true);
			_g.childHeight.set_pos(c.get_percentHeight());
			_g.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		_g.halign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.BoxLayout.HALIGNS,c.get_horizontalAlign()));
		_g.valign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.BoxLayout.VALIGNS,c.get_verticalAlign()));
	});
	this.childWidth.set_onChange(function(e6) {
		var c1 = _g.getComponent(_g.child.get_text());
		if(_g.childWidthAsPercent.get_selected() == false) {
			c1.set_percentWidth(-1);
			c1.set_width(_g.childWidth.get_pos());
			_g.childWidthLabel.set_text("" + c1.get_width());
		} else {
			c1.set_percentWidth(Std["int"](_g.childWidth.get_pos() / 2));
			_g.childWidthLabel.set_text("" + c1.get_percentWidth());
		}
	});
	this.childHeight.set_onChange(function(e7) {
		var c2 = _g.getComponent(_g.child.get_text());
		if(_g.childHeightAsPercent.get_selected() == false) {
			c2.set_percentHeight(-1);
			c2.set_height(_g.childHeight.get_pos());
			_g.childHeightLabel.set_text("" + c2.get_height());
		} else {
			c2.set_percentHeight(Std["int"](_g.childHeight.get_pos() / 2));
			_g.childHeightLabel.set_text("" + c2.get_percentHeight());
		}
	});
	this.childWidthAsPercent.set_onClick(function(e8) {
		var c3 = _g.getComponent(_g.child.get_text());
		if(_g.childWidthAsPercent.get_selected() == false) {
			c3.set_percentWidth(-1);
			c3.set_width(_g.childWidth.get_pos());
			_g.childWidthLabel.set_text("" + c3.get_width());
		} else {
			c3.set_percentWidth(Std["int"](_g.childWidth.get_pos() / 2));
			_g.childWidthLabel.set_text("" + c3.get_percentWidth());
		}
	});
	this.childHeightAsPercent.set_onClick(function(e9) {
		var c4 = _g.getComponent(_g.child.get_text());
		if(_g.childHeightAsPercent.get_selected() == false) {
			c4.set_percentHeight(-1);
			c4.set_height(_g.childHeight.get_pos());
			_g.childHeightLabel.set_text("" + c4.get_height());
		} else {
			c4.set_percentHeight(Std["int"](_g.childHeight.get_pos() / 2));
			_g.childHeightLabel.set_text("" + c4.get_percentHeight());
		}
	});
	this.halign.set_onChange(function(e10) {
		var c5 = _g.getComponent(_g.child.get_text());
		c5.set_horizontalAlign(_g.halign.get_text());
	});
	this.valign.set_onChange(function(e11) {
		var c6 = _g.getComponent(_g.child.get_text());
		c6.set_verticalAlign(_g.valign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.BoxLayout"] = haxe.ui.showcase.views.BoxLayout;
haxe.ui.showcase.views.BoxLayout.__name__ = ["haxe","ui","showcase","views","BoxLayout"];
haxe.ui.showcase.views.BoxLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.BoxLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.BoxLayout
});
haxe.ui.showcase.views.BusyPopup = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/BusyPopup/BusyPopup.xml");
	this.title = this.getComponentAs("title",haxe.ui.toolkit.controls.TextInput);
	this.showButton = this.getComponentAs("showButton",haxe.ui.toolkit.controls.Button);
	this.delay = this.getComponentAs("delay",haxe.ui.toolkit.controls.TextInput);
	this.message = this.getComponentAs("message",haxe.ui.toolkit.controls.TextInput);
	this.showButton.set_onClick(function(e) {
		var theTitle = null;
		if(_g.title.get_text().length > 0) theTitle = _g.title.get_text();
		haxe.ui.toolkit.core.PopupManager.get_instance().showBusy(_g.message.get_text(),Std.parseInt(_g.delay.get_text()),theTitle);
	});
};
$hxClasses["haxe.ui.showcase.views.BusyPopup"] = haxe.ui.showcase.views.BusyPopup;
haxe.ui.showcase.views.BusyPopup.__name__ = ["haxe","ui","showcase","views","BusyPopup"];
haxe.ui.showcase.views.BusyPopup.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.BusyPopup.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.BusyPopup
});
haxe.ui.showcase.views.Buttons = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/Buttons/Buttons.xml");
	this.iconPosition = this.getComponentAs("iconPosition",haxe.ui.toolkit.controls.selection.ListSelector);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theButton = this.getComponentAs("theButton",haxe.ui.toolkit.controls.Button);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.toggle = this.getComponentAs("toggle",haxe.ui.toolkit.controls.CheckBox);
	this.text = this.getComponentAs("text",haxe.ui.toolkit.controls.TextInput);
	this.icon = this.getComponentAs("icon",haxe.ui.toolkit.controls.selection.ListSelector);
	this.text.set_onChange(function(e) {
		_g.theButton.set_text(_g.text.get_text());
	});
	this.width.set_onChange(function(e1) {
		_g.theButton.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e2) {
		_g.theButton.set_height(_g.height.get_pos());
	});
	this.disabled.set_onClick(function(e3) {
		_g.theButton.set_disabled(_g.disabled.get_selected());
	});
	this.toggle.set_onClick(function(e4) {
		_g.theButton.set_toggle(_g.toggle.get_selected());
	});
	this.icon.set_onChange(function(e5) {
		_g.theButton.get_style().set_icon(_g.icon.get_text());
	});
	this.iconPosition.set_onChange(function(e6) {
		_g.theButton.get_style().set_iconPosition(_g.iconPosition.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.Buttons"] = haxe.ui.showcase.views.Buttons;
haxe.ui.showcase.views.Buttons.__name__ = ["haxe","ui","showcase","views","Buttons"];
haxe.ui.showcase.views.Buttons.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.Buttons.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.Buttons
});
haxe.ui.showcase.views.CalendarPopup = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/CalendarPopup/CalendarPopup.xml");
	this.title = this.getComponentAs("title",haxe.ui.toolkit.controls.TextInput);
	this.showButton = this.getComponentAs("showButton",haxe.ui.toolkit.controls.Button);
	this.showButton.set_onClick(function(e) {
		haxe.ui.toolkit.core.PopupManager.get_instance().showCalendar(_g.title.get_text(),function(button,date) {
			if(button == 65536) haxe.ui.toolkit.core.PopupManager.get_instance().showSimple("You selected '" + Std.string(date) + "'","Selection");
		});
	});
};
$hxClasses["haxe.ui.showcase.views.CalendarPopup"] = haxe.ui.showcase.views.CalendarPopup;
haxe.ui.showcase.views.CalendarPopup.__name__ = ["haxe","ui","showcase","views","CalendarPopup"];
haxe.ui.showcase.views.CalendarPopup.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.CalendarPopup.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.CalendarPopup
});
haxe.ui.showcase.views.CheckBoxes = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/CheckBoxes/CheckBoxes.xml");
	this.theCheckbox1 = this.getComponentAs("theCheckbox1",haxe.ui.toolkit.controls.CheckBox);
	this.theCheckbox3 = this.getComponentAs("theCheckbox3",haxe.ui.toolkit.controls.CheckBox);
	this.theCheckbox2 = this.getComponentAs("theCheckbox2",haxe.ui.toolkit.controls.CheckBox);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.fontSize = this.getComponentAs("fontSize",haxe.ui.toolkit.controls.HSlider);
	this.text = this.getComponentAs("text",haxe.ui.toolkit.controls.TextInput);
	this.text.set_onChange(function(e) {
		_g.theCheckbox1.set_text(_g.text.get_text() + " 1");
		_g.theCheckbox2.set_text(_g.text.get_text() + " 2");
		_g.theCheckbox3.set_text(_g.text.get_text() + " 3");
	});
	this.fontSize.set_onChange(function(e1) {
		_g.theCheckbox1.get_style().set_fontSize(_g.fontSize.get_pos());
		_g.theCheckbox2.get_style().set_fontSize(_g.fontSize.get_pos());
		_g.theCheckbox3.get_style().set_fontSize(_g.fontSize.get_pos());
	});
	this.disabled.set_onClick(function(e2) {
		_g.theCheckbox1.set_disabled(_g.disabled.get_selected());
		_g.theCheckbox2.set_disabled(_g.disabled.get_selected());
		_g.theCheckbox3.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.CheckBoxes"] = haxe.ui.showcase.views.CheckBoxes;
haxe.ui.showcase.views.CheckBoxes.__name__ = ["haxe","ui","showcase","views","CheckBoxes"];
haxe.ui.showcase.views.CheckBoxes.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.CheckBoxes.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.CheckBoxes
});
haxe.ui.showcase.views.CustomPopup = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/CustomPopup/CustomPopup.xml");
	this.cancelButton = this.getComponentAs("cancelButton",haxe.ui.toolkit.controls.CheckBox);
	this.noButton = this.getComponentAs("noButton",haxe.ui.toolkit.controls.CheckBox);
	this.title = this.getComponentAs("title",haxe.ui.toolkit.controls.TextInput);
	this.okButton = this.getComponentAs("okButton",haxe.ui.toolkit.controls.CheckBox);
	this.showButton = this.getComponentAs("showButton",haxe.ui.toolkit.controls.Button);
	this.yesButton = this.getComponentAs("yesButton",haxe.ui.toolkit.controls.CheckBox);
	this.confirmButton = this.getComponentAs("confirmButton",haxe.ui.toolkit.controls.CheckBox);
	this.showButton.set_onClick(function(e) {
		var buttons = 0;
		if(_g.okButton.get_selected() == true) buttons |= 1;
		if(_g.cancelButton.get_selected() == true) buttons |= 4096;
		if(_g.confirmButton.get_selected() == true) buttons |= 65536;
		if(_g.yesButton.get_selected() == true) buttons |= 16;
		if(_g.noButton.get_selected() == true) buttons |= 256;
		var controller = new haxe.ui.showcase.views.CustomPopupController();
		haxe.ui.toolkit.core.PopupManager.get_instance().showCustom(controller.get_view(),_g.title.get_text(),buttons,function(button) {
			if(button == 1 || button == 16 || button == 65536) haxe.ui.toolkit.core.PopupManager.get_instance().showSimple("Hello, " + controller.get_name(),"Hello!");
		});
	});
};
$hxClasses["haxe.ui.showcase.views.CustomPopup"] = haxe.ui.showcase.views.CustomPopup;
haxe.ui.showcase.views.CustomPopup.__name__ = ["haxe","ui","showcase","views","CustomPopup"];
haxe.ui.showcase.views.CustomPopup.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.CustomPopup.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.CustomPopup
});
haxe.ui.showcase.views.CustomPopupController = function() {
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/CustomPopup/CustomPopupContent.xml");
	this.myCustomPopup = this.getComponentAs("myCustomPopup",haxe.ui.toolkit.containers.Grid);
	this.lastName = this.getComponentAs("lastName",haxe.ui.toolkit.controls.TextInput);
	this.firstName = this.getComponentAs("firstName",haxe.ui.toolkit.controls.TextInput);
};
$hxClasses["haxe.ui.showcase.views.CustomPopupController"] = haxe.ui.showcase.views.CustomPopupController;
haxe.ui.showcase.views.CustomPopupController.__name__ = ["haxe","ui","showcase","views","CustomPopupController"];
haxe.ui.showcase.views.CustomPopupController.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.CustomPopupController.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	get_name: function() {
		return this.firstName.get_text() + " " + this.lastName.get_text();
	}
	,__class__: haxe.ui.showcase.views.CustomPopupController
	,__properties__: $extend(haxe.ui.toolkit.core.XMLController.prototype.__properties__,{get_name:"get_name"})
});
haxe.ui.showcase.views.DateSelectors = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/DateSelectors/DateSelectors.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theSelector = this.getComponentAs("theSelector",haxe.ui.toolkit.controls.selection.DateSelector);
	this.dropdownMethod = this.getComponentAs("dropdownMethod",haxe.ui.toolkit.controls.OptionBox);
	this.popupMethod = this.getComponentAs("popupMethod",haxe.ui.toolkit.controls.OptionBox);
	this.width.set_onChange(function(e) {
		_g.theSelector.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theSelector.set_height(_g.height.get_pos());
	});
	this.popupMethod.set_onChange(function(e2) {
		_g.theSelector.set_method(_g.popupMethod.get_selected() == true?"popup":"");
	});
	this.dropdownMethod.set_onChange(function(e3) {
		_g.theSelector.set_method(_g.dropdownMethod.get_selected() == true?"dropdown":"");
	});
};
$hxClasses["haxe.ui.showcase.views.DateSelectors"] = haxe.ui.showcase.views.DateSelectors;
haxe.ui.showcase.views.DateSelectors.__name__ = ["haxe","ui","showcase","views","DateSelectors"];
haxe.ui.showcase.views.DateSelectors.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.DateSelectors.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.DateSelectors
});
haxe.ui.showcase.views.GridLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/GridLayout/GridLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.halign = this.getComponentAs("halign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.Grid);
	this.Button9 = this.getComponentAs("Button9",haxe.ui.toolkit.controls.Button);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button7 = this.getComponentAs("Button7",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.valign = this.getComponentAs("valign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.Button6 = this.getComponentAs("Button6",haxe.ui.toolkit.controls.Button);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.Button8 = this.getComponentAs("Button8",haxe.ui.toolkit.controls.Button);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button5 = this.getComponentAs("Button5",haxe.ui.toolkit.controls.Button);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.updateChildValues();
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.clipContent.set_onChange(function(e4) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.disabled.set_onChange(function(e5) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e6) {
		_g.updateChildValues();
	});
	this.childWidth.set_onChange(function(e7) {
		_g.updateChildWidth();
	});
	this.childHeight.set_onChange(function(e8) {
		_g.updateChildHeight();
	});
	this.childWidthAsPercent.set_onClick(function(e9) {
		_g.updateChildWidth();
	});
	this.childHeightAsPercent.set_onClick(function(e10) {
		_g.updateChildHeight();
	});
	this.halign.set_onChange(function(e11) {
		var c = _g.getComponent(_g.child.get_text());
		c.set_horizontalAlign(_g.halign.get_text());
	});
	this.valign.set_onChange(function(e12) {
		var c1 = _g.getComponent(_g.child.get_text());
		c1.set_verticalAlign(_g.valign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.GridLayout"] = haxe.ui.showcase.views.GridLayout;
haxe.ui.showcase.views.GridLayout.__name__ = ["haxe","ui","showcase","views","GridLayout"];
haxe.ui.showcase.views.GridLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.GridLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	updateChildValues: function() {
		var c = this.getComponent(this.child.get_text());
		if(c.get_percentWidth() == -1) {
			this.childWidthAsPercent.set_selected(false);
			this.childWidth.set_pos(c.get_width());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			this.childWidthAsPercent.set_selected(true);
			this.childWidth.set_pos(c.get_percentWidth());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			this.childHeightAsPercent.set_selected(false);
			this.childHeight.set_pos(c.get_height());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			this.childHeightAsPercent.set_selected(true);
			this.childHeight.set_pos(c.get_percentHeight());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.halign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.GridLayout.HALIGNS,c.get_horizontalAlign()));
		this.valign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.GridLayout.VALIGNS,c.get_verticalAlign()));
	}
	,updateChildWidth: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childWidthAsPercent.get_selected() == false) {
			c.set_percentWidth(-1);
			c.set_width(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			c.set_percentWidth(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		this.width.set_pos(this.theBox.get_width());
	}
	,updateChildHeight: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childHeightAsPercent.get_selected() == false) {
			c.set_percentHeight(-1);
			c.set_height(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			c.set_percentHeight(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.height.set_pos(this.theBox.get_height());
	}
	,__class__: haxe.ui.showcase.views.GridLayout
});
haxe.ui.showcase.views.HContinuousLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ContinuousLayout/HContinuousLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.ContinuousHBox);
	this.Button9 = this.getComponentAs("Button9",haxe.ui.toolkit.controls.Button);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button7 = this.getComponentAs("Button7",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.valign = this.getComponentAs("valign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.Button6 = this.getComponentAs("Button6",haxe.ui.toolkit.controls.Button);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.Button8 = this.getComponentAs("Button8",haxe.ui.toolkit.controls.Button);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button5 = this.getComponentAs("Button5",haxe.ui.toolkit.controls.Button);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.updateChildValues();
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.clipContent.set_onChange(function(e4) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.disabled.set_onChange(function(e5) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e6) {
		_g.updateChildValues();
	});
	this.childWidth.set_onChange(function(e7) {
		_g.updateChildWidth();
	});
	this.childHeight.set_onChange(function(e8) {
		_g.updateChildHeight();
	});
	this.childWidthAsPercent.set_onClick(function(e9) {
		_g.updateChildWidth();
	});
	this.childHeightAsPercent.set_onClick(function(e10) {
		_g.updateChildHeight();
	});
	this.valign.set_onChange(function(e11) {
		var c = _g.getComponent(_g.child.get_text());
		c.set_verticalAlign(_g.valign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.HContinuousLayout"] = haxe.ui.showcase.views.HContinuousLayout;
haxe.ui.showcase.views.HContinuousLayout.__name__ = ["haxe","ui","showcase","views","HContinuousLayout"];
haxe.ui.showcase.views.HContinuousLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.HContinuousLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	updateChildValues: function() {
		var c = this.getComponent(this.child.get_text());
		if(c.get_percentWidth() == -1) {
			this.childWidthAsPercent.set_selected(false);
			this.childWidth.set_pos(c.get_width());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			this.childWidthAsPercent.set_selected(true);
			this.childWidth.set_pos(c.get_percentWidth());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			this.childHeightAsPercent.set_selected(false);
			this.childHeight.set_pos(c.get_height());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			this.childHeightAsPercent.set_selected(true);
			this.childHeight.set_pos(c.get_percentHeight());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.valign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.HContinuousLayout.VALIGNS,c.get_verticalAlign()));
	}
	,updateChildWidth: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childWidthAsPercent.get_selected() == false) {
			c.set_percentWidth(-1);
			c.set_width(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			c.set_percentWidth(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		this.width.set_pos(this.theBox.get_width());
	}
	,updateChildHeight: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childHeightAsPercent.get_selected() == false) {
			c.set_percentHeight(-1);
			c.set_height(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			c.set_percentHeight(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.height.set_pos(this.theBox.get_height());
	}
	,__class__: haxe.ui.showcase.views.HContinuousLayout
});
haxe.ui.showcase.views.HProgressBars = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ProgressBars/HProgressBars.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.HProgress);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.disabled.set_onChange(function(e7) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.HProgressBars"] = haxe.ui.showcase.views.HProgressBars;
haxe.ui.showcase.views.HProgressBars.__name__ = ["haxe","ui","showcase","views","HProgressBars"];
haxe.ui.showcase.views.HProgressBars.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.HProgressBars.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.HProgressBars
});
haxe.ui.showcase.views.HScrollBars = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ScrollBars/HScrollBars.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.HScroll);
	this.pageSize = this.getComponentAs("pageSize",haxe.ui.toolkit.controls.HSlider);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.pageSizeLabel = this.getComponentAs("pageSizeLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.pageSize.set_pos(_g.theScroll.get_pageSize());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
		_g.pageSizeLabel.set_text("" + _g.pageSize.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.pageSize.set_onChange(function(e7) {
		_g.theScroll.set_pageSize(_g.pageSize.get_pos());
		_g.pageSizeLabel.set_text("" + _g.pageSize.get_pos());
	});
	this.disabled.set_onChange(function(e8) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.HScrollBars"] = haxe.ui.showcase.views.HScrollBars;
haxe.ui.showcase.views.HScrollBars.__name__ = ["haxe","ui","showcase","views","HScrollBars"];
haxe.ui.showcase.views.HScrollBars.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.HScrollBars.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.HScrollBars
});
haxe.ui.showcase.views.HSliders = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/Sliders/HSliders.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.HSlider);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.disabled.set_onChange(function(e7) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.HSliders"] = haxe.ui.showcase.views.HSliders;
haxe.ui.showcase.views.HSliders.__name__ = ["haxe","ui","showcase","views","HSliders"];
haxe.ui.showcase.views.HSliders.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.HSliders.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.HSliders
});
haxe.ui.showcase.views.HorizontalLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/HorizontalLayout/HorizontalLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.HBox);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.valign = this.getComponentAs("valign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.autoSize = this.getComponentAs("autoSize",haxe.ui.toolkit.controls.CheckBox);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.width.set_disabled(_g.autoSize.get_selected());
		_g.height.set_disabled(_g.autoSize.get_selected());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.updateChildValues();
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.autoSize.set_onChange(function(e4) {
		_g.theBox.set_autoSize(_g.autoSize.get_selected());
		_g.width.set_disabled(_g.autoSize.get_selected());
		_g.height.set_disabled(_g.autoSize.get_selected());
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
	});
	this.clipContent.set_onChange(function(e5) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.disabled.set_onChange(function(e6) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e7) {
		_g.updateChildValues();
	});
	this.childWidth.set_onChange(function(e8) {
		_g.updateChildWidth();
	});
	this.childHeight.set_onChange(function(e9) {
		_g.updateChildHeight();
	});
	this.childWidthAsPercent.set_onClick(function(e10) {
		_g.updateChildWidth();
	});
	this.childHeightAsPercent.set_onClick(function(e11) {
		_g.updateChildHeight();
	});
	this.valign.set_onChange(function(e12) {
		var c = _g.getComponent(_g.child.get_text());
		c.set_verticalAlign(_g.valign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.HorizontalLayout"] = haxe.ui.showcase.views.HorizontalLayout;
haxe.ui.showcase.views.HorizontalLayout.__name__ = ["haxe","ui","showcase","views","HorizontalLayout"];
haxe.ui.showcase.views.HorizontalLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.HorizontalLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	updateChildValues: function() {
		var c = this.getComponent(this.child.get_text());
		if(c.get_percentWidth() == -1) {
			this.childWidthAsPercent.set_selected(false);
			this.childWidth.set_pos(c.get_width());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			this.childWidthAsPercent.set_selected(true);
			this.childWidth.set_pos(c.get_percentWidth());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			this.childHeightAsPercent.set_selected(false);
			this.childHeight.set_pos(c.get_height());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			this.childHeightAsPercent.set_selected(true);
			this.childHeight.set_pos(c.get_percentHeight());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.valign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.HorizontalLayout.VALIGNS,c.get_verticalAlign()));
	}
	,updateChildWidth: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childWidthAsPercent.get_selected() == false) {
			c.set_percentWidth(-1);
			c.set_width(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			c.set_percentWidth(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		this.width.set_pos(this.theBox.get_width());
	}
	,updateChildHeight: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childHeightAsPercent.get_selected() == false) {
			c.set_percentHeight(-1);
			c.set_height(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			c.set_percentHeight(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.height.set_pos(this.theBox.get_height());
	}
	,__class__: haxe.ui.showcase.views.HorizontalLayout
});
haxe.ui.showcase.views.Images = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/Images/Images.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theImage = this.getComponentAs("theImage",haxe.ui.toolkit.controls.Image);
	this.resource = this.getComponentAs("resource",haxe.ui.toolkit.controls.selection.ListSelector);
	this.stretch = this.getComponentAs("stretch",haxe.ui.toolkit.controls.CheckBox);
	this.width.set_onChange(function(e) {
		_g.theImage.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theImage.set_height(_g.height.get_pos());
	});
	this.resource.set_onChange(function(e2) {
		_g.theImage.set_resource("resources/" + _g.resource.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.Images"] = haxe.ui.showcase.views.Images;
haxe.ui.showcase.views.Images.__name__ = ["haxe","ui","showcase","views","Images"];
haxe.ui.showcase.views.Images.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.Images.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.Images
});
haxe.ui.showcase.views.ListPopup = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ListPopup/ListPopup.xml");
	this.title = this.getComponentAs("title",haxe.ui.toolkit.controls.TextInput);
	this.showButton = this.getComponentAs("showButton",haxe.ui.toolkit.controls.Button);
	this.selection = this.getComponentAs("selection",haxe.ui.toolkit.controls.TextInput);
	this.items = this.getComponentAs("items",haxe.ui.toolkit.controls.TextInput);
	this.showButton.set_onClick(function(e) {
		var index = Std.parseInt(_g.selection.get_text());
		var itemArray = _g.items.get_text().split("\r");
		haxe.ui.toolkit.core.PopupManager.get_instance().showList(itemArray,index,_g.title.get_text(),null,function(item) {
			haxe.ui.toolkit.core.PopupManager.get_instance().showSimple("You selected '" + Std.string(item.get_data().text) + "'","Selection");
			_g.selection.set_text("" + Std.string(item.get_data().index));
		});
	});
};
$hxClasses["haxe.ui.showcase.views.ListPopup"] = haxe.ui.showcase.views.ListPopup;
haxe.ui.showcase.views.ListPopup.__name__ = ["haxe","ui","showcase","views","ListPopup"];
haxe.ui.showcase.views.ListPopup.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.ListPopup.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.ListPopup
});
haxe.ui.showcase.views.ListSelectors = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ListSelectors/ListSelectors.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theSelector = this.getComponentAs("theSelector",haxe.ui.toolkit.controls.selection.ListSelector);
	this.dropdownMethod = this.getComponentAs("dropdownMethod",haxe.ui.toolkit.controls.OptionBox);
	this.popupMethod = this.getComponentAs("popupMethod",haxe.ui.toolkit.controls.OptionBox);
	this.width.set_onChange(function(e) {
		_g.theSelector.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theSelector.set_height(_g.height.get_pos());
	});
	this.popupMethod.set_onChange(function(e2) {
		_g.theSelector.set_method(_g.popupMethod.get_selected() == true?"popup":"");
	});
	this.dropdownMethod.set_onChange(function(e3) {
		_g.theSelector.set_method(_g.dropdownMethod.get_selected() == true?"dropdown":"");
	});
};
$hxClasses["haxe.ui.showcase.views.ListSelectors"] = haxe.ui.showcase.views.ListSelectors;
haxe.ui.showcase.views.ListSelectors.__name__ = ["haxe","ui","showcase","views","ListSelectors"];
haxe.ui.showcase.views.ListSelectors.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.ListSelectors.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.ListSelectors
});
haxe.ui.showcase.views.ListViews = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ListViews/ListViews.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theList = this.getComponentAs("theList",haxe.ui.toolkit.containers.ListView);
	var _g1 = 0;
	while(_g1 < 100) {
		var a = _g1++;
		this.theList.get_dataSource().add({ text : "Item " + (a + 1)});
	}
	this.width.set_onChange(function(e) {
		_g.theList.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theList.set_height(_g.height.get_pos());
	});
};
$hxClasses["haxe.ui.showcase.views.ListViews"] = haxe.ui.showcase.views.ListViews;
haxe.ui.showcase.views.ListViews.__name__ = ["haxe","ui","showcase","views","ListViews"];
haxe.ui.showcase.views.ListViews.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.ListViews.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.ListViews
});
haxe.ui.showcase.views.OptionBoxes = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/OptionBoxes/OptionBoxes.xml");
	this.theOptionbox3 = this.getComponentAs("theOptionbox3",haxe.ui.toolkit.controls.OptionBox);
	this.theOptionbox1 = this.getComponentAs("theOptionbox1",haxe.ui.toolkit.controls.OptionBox);
	this.theOptionbox2 = this.getComponentAs("theOptionbox2",haxe.ui.toolkit.controls.OptionBox);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.fontSize = this.getComponentAs("fontSize",haxe.ui.toolkit.controls.HSlider);
	this.text = this.getComponentAs("text",haxe.ui.toolkit.controls.TextInput);
	this.text.set_onChange(function(e) {
		_g.theOptionbox1.set_text(_g.text.get_text() + " 1");
		_g.theOptionbox2.set_text(_g.text.get_text() + " 2");
		_g.theOptionbox3.set_text(_g.text.get_text() + " 3");
	});
	this.fontSize.set_onChange(function(e1) {
		_g.theOptionbox1.get_style().set_fontSize(_g.fontSize.get_pos());
		_g.theOptionbox2.get_style().set_fontSize(_g.fontSize.get_pos());
		_g.theOptionbox3.get_style().set_fontSize(_g.fontSize.get_pos());
	});
	this.disabled.set_onClick(function(e2) {
		_g.theOptionbox1.set_disabled(_g.disabled.get_selected());
		_g.theOptionbox2.set_disabled(_g.disabled.get_selected());
		_g.theOptionbox3.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.OptionBoxes"] = haxe.ui.showcase.views.OptionBoxes;
haxe.ui.showcase.views.OptionBoxes.__name__ = ["haxe","ui","showcase","views","OptionBoxes"];
haxe.ui.showcase.views.OptionBoxes.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.OptionBoxes.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.OptionBoxes
});
haxe.ui.showcase.views.ScrollViews = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ScrollViews/ScrollViews.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.theContainer = this.getComponentAs("theContainer",haxe.ui.toolkit.containers.VBox);
	this.theView = this.getComponentAs("theView",haxe.ui.toolkit.containers.ScrollView);
	var _g1 = 0;
	while(_g1 < 100) {
		var a = _g1++;
		var button = new haxe.ui.toolkit.controls.Button();
		button.set_percentWidth(50 + Std.random(50));
		button.set_text("" + button.get_percentWidth() + "%");
		var align = Std.random(3);
		this.theContainer.addChild(button);
	}
	this.width.set_onChange(function(e) {
		_g.theView.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theView.set_height(_g.height.get_pos());
	});
};
$hxClasses["haxe.ui.showcase.views.ScrollViews"] = haxe.ui.showcase.views.ScrollViews;
haxe.ui.showcase.views.ScrollViews.__name__ = ["haxe","ui","showcase","views","ScrollViews"];
haxe.ui.showcase.views.ScrollViews.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.ScrollViews.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.ScrollViews
});
haxe.ui.showcase.views.SimplePopup = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/SimplePopup/SimplePopup.xml");
	this.cancelButton = this.getComponentAs("cancelButton",haxe.ui.toolkit.controls.CheckBox);
	this.noButton = this.getComponentAs("noButton",haxe.ui.toolkit.controls.CheckBox);
	this.title = this.getComponentAs("title",haxe.ui.toolkit.controls.TextInput);
	this.okButton = this.getComponentAs("okButton",haxe.ui.toolkit.controls.CheckBox);
	this.showButton = this.getComponentAs("showButton",haxe.ui.toolkit.controls.Button);
	this.yesButton = this.getComponentAs("yesButton",haxe.ui.toolkit.controls.CheckBox);
	this.confirmButton = this.getComponentAs("confirmButton",haxe.ui.toolkit.controls.CheckBox);
	this.text = this.getComponentAs("text",haxe.ui.toolkit.controls.TextInput);
	this.showButton.set_onClick(function(e) {
		var buttons = 0;
		if(_g.okButton.get_selected() == true) buttons |= 1;
		if(_g.cancelButton.get_selected() == true) buttons |= 4096;
		if(_g.confirmButton.get_selected() == true) buttons |= 65536;
		if(_g.yesButton.get_selected() == true) buttons |= 16;
		if(_g.noButton.get_selected() == true) buttons |= 256;
		haxe.ui.toolkit.core.PopupManager.get_instance().showSimple(_g.text.get_text(),_g.title.get_text(),buttons);
	});
};
$hxClasses["haxe.ui.showcase.views.SimplePopup"] = haxe.ui.showcase.views.SimplePopup;
haxe.ui.showcase.views.SimplePopup.__name__ = ["haxe","ui","showcase","views","SimplePopup"];
haxe.ui.showcase.views.SimplePopup.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.SimplePopup.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.SimplePopup
});
haxe.ui.showcase.views.TextFields = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/TextFields/TextFields.xml");
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.wrapLines = this.getComponentAs("wrapLines",haxe.ui.toolkit.controls.CheckBox);
	this.theField = this.getComponentAs("theField",haxe.ui.toolkit.controls.Text);
	this.multiline = this.getComponentAs("multiline",haxe.ui.toolkit.controls.CheckBox);
	this.fontSize = this.getComponentAs("fontSize",haxe.ui.toolkit.controls.HSlider);
	this.text = this.getComponentAs("text",haxe.ui.toolkit.controls.TextInput);
	this.width.set_pos(this.theField.get_width());
	this.height.set_pos(this.theField.get_height());
	this.text.set_onChange(function(e) {
		haxe.Log.trace(e,{ fileName : "TextFields.hx", lineNumber : 11, className : "haxe.ui.showcase.views.TextFields", methodName : "new"});
		_g.theField.set_text(_g.text.get_text());
	});
	this.width.set_onChange(function(e1) {
		_g.theField.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e2) {
		_g.theField.set_height(_g.height.get_pos());
	});
	this.fontSize.set_onChange(function(e3) {
		_g.theField.get_style().set_fontSize(_g.fontSize.get_pos());
		_g.width.set_pos(_g.theField.get_width());
		_g.height.set_pos(_g.theField.get_height());
	});
	this.multiline.set_onClick(function(e4) {
		_g.theField.set_multiline(_g.multiline.get_selected());
	});
	this.wrapLines.set_onClick(function(e5) {
		_g.theField.set_wrapLines(_g.wrapLines.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.TextFields"] = haxe.ui.showcase.views.TextFields;
haxe.ui.showcase.views.TextFields.__name__ = ["haxe","ui","showcase","views","TextFields"];
haxe.ui.showcase.views.TextFields.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.TextFields.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.TextFields
});
haxe.ui.showcase.views.TextInputs = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/TextInputs/TextInputs.xml");
	this.password = this.getComponentAs("password",haxe.ui.toolkit.controls.CheckBox);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.wrapLines = this.getComponentAs("wrapLines",haxe.ui.toolkit.controls.CheckBox);
	this.theInput = this.getComponentAs("theInput",haxe.ui.toolkit.controls.TextInput);
	this.multiline = this.getComponentAs("multiline",haxe.ui.toolkit.controls.CheckBox);
	this.placeholderText = this.getComponentAs("placeholderText",haxe.ui.toolkit.controls.TextInput);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.width.set_onChange(function(e) {
		_g.theInput.set_width(_g.width.get_pos());
	});
	this.height.set_onChange(function(e1) {
		_g.theInput.set_height(_g.height.get_pos());
	});
	this.disabled.set_onClick(function(e2) {
		_g.theInput.set_disabled(_g.disabled.get_selected());
	});
	this.password.set_onClick(function(e3) {
		_g.theInput.set_displayAsPassword(_g.password.get_selected());
	});
	this.placeholderText.set_onChange(function(e4) {
		_g.theInput.set_placeholderText(_g.placeholderText.get_text());
	});
	this.multiline.set_onClick(function(e5) {
		_g.theInput.set_multiline(_g.multiline.get_selected());
	});
	this.wrapLines.set_onClick(function(e6) {
		_g.theInput.set_wrapLines(_g.wrapLines.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.TextInputs"] = haxe.ui.showcase.views.TextInputs;
haxe.ui.showcase.views.TextInputs.__name__ = ["haxe","ui","showcase","views","TextInputs"];
haxe.ui.showcase.views.TextInputs.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.TextInputs.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.TextInputs
});
haxe.ui.showcase.views.Todo = function() {
	haxe.ui.toolkit.core.XMLController.call(this,"ui/todo.xml");
};
$hxClasses["haxe.ui.showcase.views.Todo"] = haxe.ui.showcase.views.Todo;
haxe.ui.showcase.views.Todo.__name__ = ["haxe","ui","showcase","views","Todo"];
haxe.ui.showcase.views.Todo.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.Todo.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.Todo
});
haxe.ui.showcase.views.VContinuousLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ContinuousLayout/VContinuousLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.halign = this.getComponentAs("halign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.ContinuousVBox);
	this.Button9 = this.getComponentAs("Button9",haxe.ui.toolkit.controls.Button);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button7 = this.getComponentAs("Button7",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.Button6 = this.getComponentAs("Button6",haxe.ui.toolkit.controls.Button);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.Button8 = this.getComponentAs("Button8",haxe.ui.toolkit.controls.Button);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button5 = this.getComponentAs("Button5",haxe.ui.toolkit.controls.Button);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.updateChildValues();
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.clipContent.set_onChange(function(e4) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.disabled.set_onChange(function(e5) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e6) {
		_g.updateChildValues();
	});
	this.childWidth.set_onChange(function(e7) {
		_g.updateChildWidth();
	});
	this.childHeight.set_onChange(function(e8) {
		_g.updateChildHeight();
	});
	this.childWidthAsPercent.set_onClick(function(e9) {
		_g.updateChildWidth();
	});
	this.childHeightAsPercent.set_onClick(function(e10) {
		_g.updateChildHeight();
	});
	this.halign.set_onChange(function(e11) {
		var c = _g.getComponent(_g.child.get_text());
		c.set_horizontalAlign(_g.halign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.VContinuousLayout"] = haxe.ui.showcase.views.VContinuousLayout;
haxe.ui.showcase.views.VContinuousLayout.__name__ = ["haxe","ui","showcase","views","VContinuousLayout"];
haxe.ui.showcase.views.VContinuousLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.VContinuousLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	updateChildValues: function() {
		var c = this.getComponent(this.child.get_text());
		if(c.get_percentWidth() == -1) {
			this.childWidthAsPercent.set_selected(false);
			this.childWidth.set_pos(c.get_width());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			this.childWidthAsPercent.set_selected(true);
			this.childWidth.set_pos(c.get_percentWidth());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			this.childHeightAsPercent.set_selected(false);
			this.childHeight.set_pos(c.get_height());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			this.childHeightAsPercent.set_selected(true);
			this.childHeight.set_pos(c.get_percentHeight());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.halign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.VContinuousLayout.HALIGNS,c.get_horizontalAlign()));
	}
	,updateChildWidth: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childWidthAsPercent.get_selected() == false) {
			c.set_percentWidth(-1);
			c.set_width(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			c.set_percentWidth(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		this.width.set_pos(this.theBox.get_width());
	}
	,updateChildHeight: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childHeightAsPercent.get_selected() == false) {
			c.set_percentHeight(-1);
			c.set_height(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			c.set_percentHeight(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.height.set_pos(this.theBox.get_height());
	}
	,__class__: haxe.ui.showcase.views.VContinuousLayout
});
haxe.ui.showcase.views.VProgressBars = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ProgressBars/VProgressBars.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.VProgress);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.disabled.set_onChange(function(e7) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.VProgressBars"] = haxe.ui.showcase.views.VProgressBars;
haxe.ui.showcase.views.VProgressBars.__name__ = ["haxe","ui","showcase","views","VProgressBars"];
haxe.ui.showcase.views.VProgressBars.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.VProgressBars.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.VProgressBars
});
haxe.ui.showcase.views.VScrollBars = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/ScrollBars/VScrollBars.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.VScroll);
	this.pageSize = this.getComponentAs("pageSize",haxe.ui.toolkit.controls.HSlider);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.pageSizeLabel = this.getComponentAs("pageSizeLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.pageSize.set_pos(_g.theScroll.get_pageSize());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
		_g.pageSizeLabel.set_text("" + _g.pageSize.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.pageSize.set_onChange(function(e7) {
		_g.theScroll.set_pageSize(_g.pageSize.get_pos());
		_g.pageSizeLabel.set_text("" + _g.pageSize.get_pos());
	});
	this.disabled.set_onChange(function(e8) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.VScrollBars"] = haxe.ui.showcase.views.VScrollBars;
haxe.ui.showcase.views.VScrollBars.__name__ = ["haxe","ui","showcase","views","VScrollBars"];
haxe.ui.showcase.views.VScrollBars.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.VScrollBars.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.VScrollBars
});
haxe.ui.showcase.views.VSliders = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/Sliders/VSliders.xml");
	this.theScroll = this.getComponentAs("theScroll",haxe.ui.toolkit.controls.VSlider);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.max = this.getComponentAs("max",haxe.ui.toolkit.controls.HSlider);
	this.minLabel = this.getComponentAs("minLabel",haxe.ui.toolkit.controls.Text);
	this.posLabel = this.getComponentAs("posLabel",haxe.ui.toolkit.controls.Text);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.min = this.getComponentAs("min",haxe.ui.toolkit.controls.HSlider);
	this.pos = this.getComponentAs("pos",haxe.ui.toolkit.controls.HSlider);
	this.maxLabel = this.getComponentAs("maxLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theScroll.set_onReady(function(e) {
		_g.width.set_pos(_g.theScroll.get_width());
		_g.height.set_pos(_g.theScroll.get_height());
		_g.min.set_pos(_g.theScroll.get_min());
		_g.max.set_pos(_g.theScroll.get_max());
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.theScroll.set_onChange(function(e1) {
		_g.pos.set_pos(_g.theScroll.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.width.set_onChange(function(e2) {
		_g.theScroll.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theScroll.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.min.set_onChange(function(e4) {
		_g.theScroll.set_min(_g.min.get_pos());
		_g.pos.set_min(_g.min.get_pos());
		_g.minLabel.set_text("" + _g.min.get_pos());
	});
	this.max.set_onChange(function(e5) {
		_g.theScroll.set_max(_g.max.get_pos());
		_g.pos.set_max(_g.max.get_pos());
		_g.maxLabel.set_text("" + _g.max.get_pos());
	});
	this.pos.set_onChange(function(e6) {
		_g.theScroll.set_pos(_g.pos.get_pos());
		_g.posLabel.set_text("" + _g.pos.get_pos());
	});
	this.disabled.set_onChange(function(e7) {
		_g.theScroll.set_disabled(_g.disabled.get_selected());
	});
};
$hxClasses["haxe.ui.showcase.views.VSliders"] = haxe.ui.showcase.views.VSliders;
haxe.ui.showcase.views.VSliders.__name__ = ["haxe","ui","showcase","views","VSliders"];
haxe.ui.showcase.views.VSliders.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.VSliders.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.VSliders
});
haxe.ui.showcase.views.VerticalLayout = function() {
	var _g = this;
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/VerticalLayout/VerticalLayout.xml");
	this.childHeightLabel = this.getComponentAs("childHeightLabel",haxe.ui.toolkit.controls.Text);
	this.height = this.getComponentAs("height",haxe.ui.toolkit.controls.HSlider);
	this.width = this.getComponentAs("width",haxe.ui.toolkit.controls.HSlider);
	this.halign = this.getComponentAs("halign",haxe.ui.toolkit.controls.selection.ListSelector);
	this.childHeight = this.getComponentAs("childHeight",haxe.ui.toolkit.controls.HSlider);
	this.widthLabel = this.getComponentAs("widthLabel",haxe.ui.toolkit.controls.Text);
	this.theBox = this.getComponentAs("theBox",haxe.ui.toolkit.containers.VBox);
	this.Button1 = this.getComponentAs("Button1",haxe.ui.toolkit.controls.Button);
	this.Button4 = this.getComponentAs("Button4",haxe.ui.toolkit.controls.Button);
	this.childHeightAsPercent = this.getComponentAs("childHeightAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidth = this.getComponentAs("childWidth",haxe.ui.toolkit.controls.HSlider);
	this.disabled = this.getComponentAs("disabled",haxe.ui.toolkit.controls.CheckBox);
	this.child = this.getComponentAs("child",haxe.ui.toolkit.controls.selection.ListSelector);
	this.autoSize = this.getComponentAs("autoSize",haxe.ui.toolkit.controls.CheckBox);
	this.Button2 = this.getComponentAs("Button2",haxe.ui.toolkit.controls.Button);
	this.clipContent = this.getComponentAs("clipContent",haxe.ui.toolkit.controls.CheckBox);
	this.Button3 = this.getComponentAs("Button3",haxe.ui.toolkit.controls.Button);
	this.childWidthAsPercent = this.getComponentAs("childWidthAsPercent",haxe.ui.toolkit.controls.CheckBox);
	this.childWidthLabel = this.getComponentAs("childWidthLabel",haxe.ui.toolkit.controls.Text);
	this.heightLabel = this.getComponentAs("heightLabel",haxe.ui.toolkit.controls.Text);
	this.theBox.set_onReady(function(e) {
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
		_g.width.set_disabled(_g.autoSize.get_selected());
		_g.height.set_disabled(_g.autoSize.get_selected());
		_g.widthLabel.set_text("" + _g.width.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.getComponent(this.child.get_text()).set_onReady(function(e1) {
		_g.updateChildValues();
	});
	this.width.set_onChange(function(e2) {
		_g.theBox.set_width(_g.width.get_pos());
		_g.widthLabel.set_text("" + _g.width.get_pos());
	});
	this.height.set_onChange(function(e3) {
		_g.theBox.set_height(_g.height.get_pos());
		_g.heightLabel.set_text("" + _g.height.get_pos());
	});
	this.autoSize.set_onChange(function(e4) {
		_g.theBox.set_autoSize(_g.autoSize.get_selected());
		_g.width.set_disabled(_g.autoSize.get_selected());
		_g.height.set_disabled(_g.autoSize.get_selected());
		_g.width.set_pos(_g.theBox.get_width());
		_g.height.set_pos(_g.theBox.get_height());
	});
	this.clipContent.set_onChange(function(e5) {
		_g.theBox.set_clipContent(_g.clipContent.get_selected());
	});
	this.disabled.set_onChange(function(e6) {
		_g.theBox.set_disabled(_g.disabled.get_selected());
	});
	this.child.set_onChange(function(e7) {
		_g.updateChildValues();
	});
	this.childWidth.set_onChange(function(e8) {
		_g.updateChildWidth();
	});
	this.childHeight.set_onChange(function(e9) {
		_g.updateChildHeight();
	});
	this.childWidthAsPercent.set_onClick(function(e10) {
		_g.updateChildWidth();
	});
	this.childHeightAsPercent.set_onClick(function(e11) {
		_g.updateChildHeight();
	});
	this.halign.set_onChange(function(e12) {
		var c = _g.getComponent(_g.child.get_text());
		c.set_horizontalAlign(_g.halign.get_text());
	});
};
$hxClasses["haxe.ui.showcase.views.VerticalLayout"] = haxe.ui.showcase.views.VerticalLayout;
haxe.ui.showcase.views.VerticalLayout.__name__ = ["haxe","ui","showcase","views","VerticalLayout"];
haxe.ui.showcase.views.VerticalLayout.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.VerticalLayout.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	updateChildValues: function() {
		var c = this.getComponent(this.child.get_text());
		if(c.get_percentWidth() == -1) {
			this.childWidthAsPercent.set_selected(false);
			this.childWidth.set_pos(c.get_width());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			this.childWidthAsPercent.set_selected(true);
			this.childWidth.set_pos(c.get_percentWidth());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		if(c.get_percentHeight() == -1) {
			this.childHeightAsPercent.set_selected(false);
			this.childHeight.set_pos(c.get_height());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			this.childHeightAsPercent.set_selected(true);
			this.childHeight.set_pos(c.get_percentHeight());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.halign.set_selectedIndex(Lambda.indexOf(haxe.ui.showcase.views.VerticalLayout.HALIGNS,c.get_horizontalAlign()));
	}
	,updateChildWidth: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childWidthAsPercent.get_selected() == false) {
			c.set_percentWidth(-1);
			c.set_width(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_width());
		} else {
			c.set_percentWidth(this.childWidth.get_pos());
			this.childWidthLabel.set_text("" + c.get_percentWidth());
		}
		this.width.set_pos(this.theBox.get_width());
	}
	,updateChildHeight: function() {
		var c = this.getComponent(this.child.get_text());
		if(this.childHeightAsPercent.get_selected() == false) {
			c.set_percentHeight(-1);
			c.set_height(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_height());
		} else {
			c.set_percentHeight(this.childHeight.get_pos());
			this.childHeightLabel.set_text("" + c.get_percentHeight());
		}
		this.height.set_pos(this.theBox.get_height());
	}
	,__class__: haxe.ui.showcase.views.VerticalLayout
});
haxe.ui.showcase.views.WebViews = function() {
	haxe.ui.toolkit.core.XMLController.call(this,"assets/resources/WebViews/WebViews.xml");
	this.theWebView = this.getComponentAs("theWebView",haxe.ui.webview.WebView);
};
$hxClasses["haxe.ui.showcase.views.WebViews"] = haxe.ui.showcase.views.WebViews;
haxe.ui.showcase.views.WebViews.__name__ = ["haxe","ui","showcase","views","WebViews"];
haxe.ui.showcase.views.WebViews.__super__ = haxe.ui.toolkit.core.XMLController;
haxe.ui.showcase.views.WebViews.prototype = $extend(haxe.ui.toolkit.core.XMLController.prototype,{
	__class__: haxe.ui.showcase.views.WebViews
});
haxe.ui.toolkit.containers.Absolute = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(false);
	this.set_layout(new haxe.ui.toolkit.layout.AbsoluteLayout());
};
$hxClasses["haxe.ui.toolkit.containers.Absolute"] = haxe.ui.toolkit.containers.Absolute;
haxe.ui.toolkit.containers.Absolute.__name__ = ["haxe","ui","toolkit","containers","Absolute"];
haxe.ui.toolkit.containers.Absolute.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.Absolute.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.Absolute.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Absolute();
	}
	,__class__: haxe.ui.toolkit.containers.Absolute
});
haxe.ui.toolkit.containers.Accordion = function() {
	this._selectedIndex = -1;
	haxe.ui.toolkit.containers.VBox.call(this);
	this._autoSize = false;
	this._panels = new Array();
	this._buttons = new Array();
};
$hxClasses["haxe.ui.toolkit.containers.Accordion"] = haxe.ui.toolkit.containers.Accordion;
haxe.ui.toolkit.containers.Accordion.__name__ = ["haxe","ui","toolkit","containers","Accordion"];
haxe.ui.toolkit.containers.Accordion.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.Accordion.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.containers.Accordion.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
		if(this._selectedIndex != -1) {
			var cachedIndex = this._selectedIndex;
			this._selectedIndex = -1;
			this.showPage(cachedIndex);
		}
	}
	,addChild: function(child) {
		if(this._ready == false) return haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,child);
		var r = null;
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.containers.AccordionButton)) r = haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,child); else {
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) (js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)).set_autoSize(false);
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.StyleableDisplayObject)) (js.Boot.__cast(child , haxe.ui.toolkit.core.StyleableDisplayObject)).set_styleName("page");
			child.set_percentHeight(100);
			child.set_percentWidth(100);
			this._panels.push(child);
			var button = new haxe.ui.toolkit.containers.AccordionButton();
			button.set_styleName("expandable");
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.Component)) button.set_text((js.Boot.__cast(child , haxe.ui.toolkit.core.Component)).get_text());
			button.userData = this._panels.length - 1;
			button.set_id("accordionButton_" + (this._panels.length - 1));
			button.set_percentWidth(100);
			button.set_toggle(true);
			button.set_selected(false);
			button.set_allowSelection(false);
			button.addEventListener("haxeui_" + "click",$bind(this,this._onButtonClick));
			this._buttons.push(button);
			this.addChild(button);
			child.set_visible(false);
			r = haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,child);
		}
		return r;
	}
	,removeChild: function(child,dispose) {
		if(dispose == null) dispose = true;
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.containers.AccordionButton)) HxOverrides.remove(this._buttons,child); else HxOverrides.remove(this._panels,child);
		return haxe.ui.toolkit.containers.VBox.prototype.removeChild.call(this,child,dispose);
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		if(this._ready == true) this._buttons[value].set_selected(true); else this._selectedIndex = value;
		return value;
	}
	,get_selectedButton: function() {
		if(this._selectedIndex == -1) return null;
		return this.getButton(this._selectedIndex);
	}
	,getButton: function(index) {
		return this._buttons[index];
	}
	,showPage: function(index) {
		var button = this._buttons[index];
		button.set_selected(true);
	}
	,_onButtonClick: function(event) {
		var index = event.get_component().userData;
		this.showPanel(index);
		this.dispatchEvent(new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change"));
	}
	,showPanel: function(index) {
		var button = this._buttons[index];
		button.set_selected(true);
		var panel = this._panels[index];
		var buttonOld = null;
		var panelOld = null;
		var ucy = this.get_layout().get_usableHeight();
		if(this._selectedIndex > -1) {
			buttonOld = this._buttons[this._selectedIndex];
			panelOld = this._panels[this._selectedIndex];
			if(button != buttonOld) this.unselectButton(buttonOld);
		}
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.containers.Accordion);
		if(transition == "slide") {
			panel.set_percentHeight(-1);
			panel.set_height(0);
			panel.set_visible(true);
			motion.Actuate.tween(panel,.2,{ height : ucy, clipHeight : ucy},true).ease(motion.easing.Linear.get_easeNone()).onUpdate($bind(this,this._onTweenUpdate),[ucy,panel,panelOld]).onComplete($bind(this,this._onTweenComplete),[panel,panelOld,buttonOld]);
		} else if(transition == "fade") {
			panel.get_sprite().set_alpha(0);
			panel.set_visible(true);
			if(panelOld != null) {
				this.unselectButton(buttonOld);
				panelOld.set_visible(false);
			}
			motion.Actuate.tween(panel.get_sprite(),.2,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone());
		} else {
			panel.set_visible(true);
			if(panelOld != null) {
				this.unselectButton(buttonOld);
				panelOld.set_visible(false);
			}
		}
		if(panelOld == panel) this._selectedIndex = -1; else this._selectedIndex = index;
	}
	,unselectButton: function(button) {
		button.set_selected(false);
	}
	,_onTweenUpdate: function(ucy,panel,panelOld) {
		if(panelOld != null) {
			panelOld.set_height(ucy - panel.get_height());
			panelOld.set_clipHeight(panelOld.get_height());
		}
	}
	,_onTweenComplete: function(panel,panelOld,buttonOld) {
		panel.clearClip();
		panel.set_percentHeight(100);
		if(panelOld != null) {
			panelOld.set_visible(false);
			this.unselectButton(buttonOld);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		c.removeAllChildren();
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.containers.AccordionButton) == false) c.addChild(child.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Accordion();
	}
	,__class__: haxe.ui.toolkit.containers.Accordion
	,__properties__: $extend(haxe.ui.toolkit.containers.VBox.prototype.__properties__,{get_selectedButton:"get_selectedButton",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
haxe.ui.toolkit.containers.AccordionButton = function() {
	haxe.ui.toolkit.controls.Button.call(this);
};
$hxClasses["haxe.ui.toolkit.containers.AccordionButton"] = haxe.ui.toolkit.containers.AccordionButton;
haxe.ui.toolkit.containers.AccordionButton.__name__ = ["haxe","ui","toolkit","containers","AccordionButton"];
haxe.ui.toolkit.containers.AccordionButton.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.AccordionButton.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.containers.AccordionButton.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.AccordionButton();
	}
	,__class__: haxe.ui.toolkit.containers.AccordionButton
});
haxe.ui.toolkit.containers.Box = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this.set_layout(new haxe.ui.toolkit.layout.BoxLayout());
};
$hxClasses["haxe.ui.toolkit.containers.Box"] = haxe.ui.toolkit.containers.Box;
haxe.ui.toolkit.containers.Box.__name__ = ["haxe","ui","toolkit","containers","Box"];
haxe.ui.toolkit.containers.Box.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.Box.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.Box.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Box();
	}
	,__class__: haxe.ui.toolkit.containers.Box
});
haxe.ui.toolkit.containers.CalendarView = function() {
	haxe.ui.toolkit.containers.VBox.call(this);
	this._calendar = new haxe.ui.toolkit.controls.Calendar();
	this._autoSize = false;
	this._calendar.set_percentWidth(100);
	this._calendar.set_percentHeight(100);
};
$hxClasses["haxe.ui.toolkit.containers.CalendarView"] = haxe.ui.toolkit.containers.CalendarView;
haxe.ui.toolkit.containers.CalendarView.__name__ = ["haxe","ui","toolkit","containers","CalendarView"];
haxe.ui.toolkit.containers.CalendarView.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.containers.CalendarView.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
		var hbox = new haxe.ui.toolkit.containers.HBox();
		hbox.set_percentWidth(100);
		this._prevMonthButton = new haxe.ui.toolkit.controls.Button();
		this._prevMonthButton.set_text("<");
		this._prevMonthButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onPrevClicked));
		hbox.addChild(this._prevMonthButton);
		var spacer = new haxe.ui.toolkit.controls.Spacer();
		spacer.set_percentWidth(50);
		this._currentMonthYear = new haxe.ui.toolkit.controls.Text();
		this._currentMonthYear.set_text("December 2013");
		this._currentMonthYear.set_id("currentMonthYear");
		this._currentMonthYear.set_percentWidth(100);
		this._currentMonthYear.set_autoSize(false);
		hbox.addChild(this._currentMonthYear);
		var spacer1 = new haxe.ui.toolkit.controls.Spacer();
		spacer1.set_percentWidth(50);
		this._nextMonthButton = new haxe.ui.toolkit.controls.Button();
		this._nextMonthButton.set_text(">");
		this._nextMonthButton.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onNextClicked));
		hbox.addChild(this._nextMonthButton);
		this.addChild(hbox);
		this._calendar.addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onDateChanged));
		this.addChild(this._calendar);
		this.displayMonthYear();
	}
	,get_date: function() {
		return this._calendar.get_date();
	}
	,set_date: function(value) {
		this._calendar.set_date(value);
		return value;
	}
	,get_selectedDate: function() {
		return this._calendar.get_selectedDate();
	}
	,set_selectedDate: function(value) {
		this._calendar.set_selectedDate(value);
		return value;
	}
	,_onPrevClicked: function(event) {
		this._calendar.previousMonth();
		this.displayMonthYear();
	}
	,_onNextClicked: function(event) {
		this._calendar.nextMonth();
		this.displayMonthYear();
	}
	,_onDateChanged: function(event) {
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE));
	}
	,displayMonthYear: function() {
		var monthName = haxe.ui.toolkit.containers.CalendarView.MONTH_NAMES[this._calendar.get_date().getMonth()];
		this._currentMonthYear.set_text(monthName + " " + this._calendar.get_date().getFullYear());
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.CalendarView();
	}
	,__class__: haxe.ui.toolkit.containers.CalendarView
	,__properties__: $extend(haxe.ui.toolkit.containers.VBox.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
haxe.ui.toolkit.containers.ContinuousHBox = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this._layout = new haxe.ui.toolkit.layout.HorizontalContinuousLayout();
};
$hxClasses["haxe.ui.toolkit.containers.ContinuousHBox"] = haxe.ui.toolkit.containers.ContinuousHBox;
haxe.ui.toolkit.containers.ContinuousHBox.__name__ = ["haxe","ui","toolkit","containers","ContinuousHBox"];
haxe.ui.toolkit.containers.ContinuousHBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.ContinuousHBox.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.ContinuousHBox.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ContinuousHBox();
	}
	,__class__: haxe.ui.toolkit.containers.ContinuousHBox
});
haxe.ui.toolkit.containers.ContinuousVBox = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this._layout = new haxe.ui.toolkit.layout.VerticalContinuousLayout();
};
$hxClasses["haxe.ui.toolkit.containers.ContinuousVBox"] = haxe.ui.toolkit.containers.ContinuousVBox;
haxe.ui.toolkit.containers.ContinuousVBox.__name__ = ["haxe","ui","toolkit","containers","ContinuousVBox"];
haxe.ui.toolkit.containers.ContinuousVBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.ContinuousVBox.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.ContinuousVBox.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ContinuousVBox();
	}
	,__class__: haxe.ui.toolkit.containers.ContinuousVBox
});
haxe.ui.toolkit.containers.ExpandablePanel = function() {
	this.startExpanded = true;
	haxe.ui.toolkit.containers.VBox.call(this);
};
$hxClasses["haxe.ui.toolkit.containers.ExpandablePanel"] = haxe.ui.toolkit.containers.ExpandablePanel;
haxe.ui.toolkit.containers.ExpandablePanel.__name__ = ["haxe","ui","toolkit","containers","ExpandablePanel"];
haxe.ui.toolkit.containers.ExpandablePanel.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.containers.ExpandablePanel.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
	}
	,addChild: function(child) {
		if(this._button == null) {
			this._button = new haxe.ui.toolkit.containers.ExpandableButton();
			this._button.set_percentWidth(100);
			this._button.set_text(this.get_text());
			this._button.set_toggle(true);
			this._button.set_selected(this.startExpanded?true:false);
			this._button.addEventListener("haxeui_" + "change",$bind(this,this.onClickButton));
			this._button.set_styleName("expandable");
			haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,this._button);
		}
		if(this._panel == null) {
			this._panel = new haxe.ui.toolkit.containers.VBox();
			this._panel.set_id("content");
			this._panel.set_percentWidth(100);
			haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,this._panel);
			this._panel.addEventListener(openfl.events.Event.ADDED_TO_STAGE,$bind(this,this.panelAdded));
		}
		return this._panel.addChild(child);
	}
	,onClickButton: function(e) {
		if(this._button.get_selected()) this.showPanel(); else this.hidePanel();
	}
	,panelAdded: function(e) {
		this.removeEventListener(openfl.events.Event.ADDED_TO_STAGE,$bind(this,this.panelAdded));
		if(!this.startExpanded) this._panel.set_visible(false);
	}
	,showPanel: function() {
		var _g = this;
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.containers.ExpandablePanel);
		if(transition == "slide") {
			var startH = this._panel.get_height();
			this._panel.invalidate(256);
			var finalH = this._panel.get_height();
			this._panel.set_visible(true);
			this._panel._height = startH;
			this._panel.set_clipHeight(startH);
			motion.Actuate.tween(this._panel,.2,{ _height : finalH, clipHeight : finalH},true).ease(motion.easing.Linear.get_easeNone()).onUpdate(function() {
				_g.invalidate(256);
			});
		} else this._panel.set_visible(true);
	}
	,hidePanel: function() {
		var _g = this;
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.containers.ExpandablePanel);
		if(transition == "slide") motion.Actuate.tween(this._panel,.2,{ _height : 0, clipHeight : 0},true).ease(motion.easing.Linear.get_easeNone()).onUpdate(function() {
			_g.invalidate(256);
		}).onComplete(function() {
			_g._panel.set_visible(false);
		}); else this._panel.set_visible(false);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ExpandablePanel();
	}
	,__class__: haxe.ui.toolkit.containers.ExpandablePanel
});
haxe.ui.toolkit.containers.ExpandableButton = function() {
	haxe.ui.toolkit.controls.Button.call(this);
};
$hxClasses["haxe.ui.toolkit.containers.ExpandableButton"] = haxe.ui.toolkit.containers.ExpandableButton;
haxe.ui.toolkit.containers.ExpandableButton.__name__ = ["haxe","ui","toolkit","containers","ExpandableButton"];
haxe.ui.toolkit.containers.ExpandableButton.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.containers.ExpandableButton.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ExpandableButton();
	}
	,__class__: haxe.ui.toolkit.containers.ExpandableButton
});
haxe.ui.toolkit.containers.Grid = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this.set_layout(new haxe.ui.toolkit.layout.GridLayout());
};
$hxClasses["haxe.ui.toolkit.containers.Grid"] = haxe.ui.toolkit.containers.Grid;
haxe.ui.toolkit.containers.Grid.__name__ = ["haxe","ui","toolkit","containers","Grid"];
haxe.ui.toolkit.containers.Grid.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.Grid.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.Grid.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	get_columns: function() {
		return (js.Boot.__cast(this._layout , haxe.ui.toolkit.layout.GridLayout)).get_columns();
	}
	,set_columns: function(value) {
		(js.Boot.__cast(this._layout , haxe.ui.toolkit.layout.GridLayout)).set_columns(value);
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		c.set_columns(this.get_columns());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Grid();
	}
	,__class__: haxe.ui.toolkit.containers.Grid
	,__properties__: $extend(haxe.ui.toolkit.containers.Container.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
haxe.ui.toolkit.containers.HBox = function() {
	haxe.ui.toolkit.containers.Container.call(this);
	this.set_autoSize(true);
	this.set_layout(new haxe.ui.toolkit.layout.HorizontalLayout());
};
$hxClasses["haxe.ui.toolkit.containers.HBox"] = haxe.ui.toolkit.containers.HBox;
haxe.ui.toolkit.containers.HBox.__name__ = ["haxe","ui","toolkit","containers","HBox"];
haxe.ui.toolkit.containers.HBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.containers.HBox.__super__ = haxe.ui.toolkit.containers.Container;
haxe.ui.toolkit.containers.HBox.prototype = $extend(haxe.ui.toolkit.containers.Container.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.Container.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.HBox();
	}
	,__class__: haxe.ui.toolkit.containers.HBox
});
haxe.ui.toolkit.containers.ScrollView = function() {
	this._virtualScrolling = false;
	this._autoHideScrolls = false;
	this._scrollSensitivity = 1;
	this._showVScroll = true;
	this._showHScroll = true;
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.addStates(["normal","disabled"]);
	this._layout = new haxe.ui.toolkit.containers.ScrollViewLayout();
	this._eventTarget = new openfl.display.Sprite();
	this._eventTarget.set_visible(false);
	this._container = new haxe.ui.toolkit.containers.Box();
	this._container.set_layout(new haxe.ui.toolkit.layout.VerticalLayout());
	this._container.set_id("container");
	this._container.set_percentWidth(this._container.set_percentHeight(100));
	this.addChild(this._container);
};
$hxClasses["haxe.ui.toolkit.containers.ScrollView"] = haxe.ui.toolkit.containers.ScrollView;
haxe.ui.toolkit.containers.ScrollView.__name__ = ["haxe","ui","toolkit","containers","ScrollView"];
haxe.ui.toolkit.containers.ScrollView.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.containers.ScrollView.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.preInitialize.call(this);
		if(this._baseStyle != null) {
			this._autoHideScrolls = this._baseStyle.get_autoHideScrolls();
			if(Reflect.getProperty(this._layout,"inlineScrolls") != null) Reflect.setProperty(this._layout,"inlineScrolls",this._baseStyle.get_inlineScrolls());
		}
	}
	,initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onMouseWheel));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onMouseDown));
		this.get_sprite().addChild(this._eventTarget);
	}
	,postInitialize: function() {
		var _g = this;
		haxe.ui.toolkit.core.StateComponent.prototype.postInitialize.call(this);
		var content = this._container.getChildAt(0);
		if(content != null) (js.Boot.__cast(content , haxe.ui.toolkit.core.interfaces.IEventDispatcher)).addEventListener("haxeui_" + "resize",function(e) {
			_g.invalidate(256);
		});
	}
	,addChild: function(child) {
		var r = null;
		if(child == this._container || child == this._hscroll || child == this._vscroll) r = haxe.ui.toolkit.core.StateComponent.prototype.addChild.call(this,child); else r = this._container.addChild(child);
		return r;
	}
	,addChildAt: function(child,index) {
		var r = null;
		if(child == this._container || child == this._hscroll || child == this._vscroll) r = haxe.ui.toolkit.core.StateComponent.prototype.addChildAt.call(this,child,index); else r = this._container.addChildAt(child,index);
		return r;
	}
	,removeChild: function(child,dispose) {
		if(dispose == null) dispose = true;
		var r = null;
		if(child == this._container || child == this._hscroll || child == this._vscroll) r = haxe.ui.toolkit.core.StateComponent.prototype.removeChild.call(this,child,dispose); else r = this._container.removeChild(child,dispose);
		return r;
	}
	,dispose: function() {
		this.get_sprite().removeChild(this._eventTarget);
		haxe.ui.toolkit.core.StateComponent.prototype.dispose.call(this);
	}
	,get_virtualScrolling: function() {
		return this._virtualScrolling;
	}
	,set_virtualScrolling: function(value) {
		this._virtualScrolling = value;
		return value;
	}
	,get_showHScroll: function() {
		return this._showHScroll;
	}
	,set_showHScroll: function(value) {
		this._showHScroll = value;
		return value;
	}
	,get_showVScroll: function() {
		return this._showVScroll;
	}
	,set_showVScroll: function(value) {
		this._showVScroll = value;
		return value;
	}
	,get_hscrollPos: function() {
		if(this._hscroll != null) return this._hscroll.get_pos();
		return 0;
	}
	,set_hscrollPos: function(value) {
		if(this._hscroll != null) this._hscroll.set_pos(value);
		return value;
	}
	,get_hscrollMin: function() {
		if(this._hscroll != null) return this._hscroll.get_min();
		return 0;
	}
	,set_hscrollMin: function(value) {
		if(this._virtualScrolling == true) {
		}
		return value;
	}
	,get_hscrollMax: function() {
		if(this._hscroll != null) return this._hscroll.get_max();
		return 0;
	}
	,set_hscrollMax: function(value) {
		if(this._virtualScrolling == true) {
			this.createHScroll(true);
			this._hscroll.set_max(value);
		}
		return value;
	}
	,get_hscrollPageSize: function() {
		if(this._hscroll != null) return this._hscroll.get_pageSize();
		return 0;
	}
	,set_hscrollPageSize: function(value) {
		if(this._virtualScrolling == true) {
		}
		return value;
	}
	,get_vscrollPos: function() {
		if(this._vscroll != null) return this._vscroll.get_pos();
		return 0;
	}
	,set_vscrollPos: function(value) {
		if(this._vscroll != null) this._vscroll.set_pos(value);
		return value;
	}
	,get_vscrollMin: function() {
		if(this._vscroll != null) return this._vscroll.get_min();
		return 0;
	}
	,set_vscrollMin: function(value) {
		if(this._virtualScrolling == true) {
		}
		return value;
	}
	,get_vscrollMax: function() {
		if(this._vscroll != null) return this._vscroll.get_max();
		return 0;
	}
	,set_vscrollMax: function(value) {
		if(this._virtualScrolling == true) {
			this.createVScroll(true);
			this._vscroll.set_max(value);
		}
		return value;
	}
	,get_vscrollPageSize: function() {
		if(this._vscroll != null) return this._vscroll.get_pageSize();
		return 0;
	}
	,set_vscrollPageSize: function(value) {
		if(this._virtualScrolling == true) {
			this.createVScroll(true);
			this._vscroll.set_pageSize(value);
		}
		return value;
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.StateComponent.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256) {
			this.checkScrolls();
			this.updateScrollRect();
			this.resizeEventTarget();
		}
		this._invalidating = false;
	}
	,_onHScrollChange: function(event) {
		this.updateScrollRect();
		var event1 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "scroll");
		this.dispatchEvent(event1);
	}
	,_onVScrollChange: function(event) {
		this.updateScrollRect();
		var event1 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "scroll");
		this.dispatchEvent(event1);
	}
	,_onMouseWheel: function(event) {
		var content = this._container.getChildAt(0);
		if(event.shiftKey || content.get_height() < this.get_layout().get_usableHeight()) {
			if(this._hscroll != null && content.get_width() > this.get_layout().get_usableWidth()) {
				if(event.delta != 0) {
					if(event.delta < 0) this._hscroll.incrementValue(); else if(event.delta > 0) this._hscroll.deincrementValue();
				}
			}
		} else if(this._vscroll != null && content.get_height() > this.get_layout().get_usableHeight()) {
			if(event.delta != 0) {
				if(event.delta < 0) this._vscroll.incrementValue(); else if(event.delta > 0) this._vscroll.deincrementValue();
			}
		}
	}
	,_onMouseDown: function(event) {
		var inScroll = false;
		if(this._vscroll != null && this._vscroll.get_visible() == true) inScroll = this._vscroll.hitTest(event.stageX,event.stageY);
		if(this._hscroll != null && this._hscroll.get_visible() == true && inScroll == false) inScroll = this._hscroll.hitTest(event.stageX,event.stageY);
		var content = this._container.getChildAt(0);
		if(content != null && inScroll == false && this._virtualScrolling == false) {
			if(content.get_width() > this.get_layout().get_usableWidth() || content.get_height() > this.get_layout().get_usableHeight()) {
				this._downPos = new openfl.geom.Point(event.stageX,event.stageY);
				haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
				haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
			}
		}
		if(this._virtualScrolling == true && (this._vscroll != null || this._hscroll != null)) {
			this._downPos = new openfl.geom.Point(event.stageX,event.stageY);
			haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
			haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
		}
	}
	,_onScreenMouseMove: function(event) {
		if(this._downPos != null) {
			var ypos = event.stageY - this._downPos.y;
			var xpos = event.stageX - this._downPos.x;
			var target = event.target;
			while(target != null && js.Boot.__instanceof(target,openfl.display.DisplayObject)) {
				xpos /= target.get_scaleX();
				ypos /= target.get_scaleY();
				target = target.parent;
			}
			if(Math.abs(xpos) >= this._scrollSensitivity || Math.abs(ypos) >= this._scrollSensitivity) {
				this._eventTarget.set_visible(true);
				var content = this._container.getChildAt(0);
				if(content != null) {
					if(xpos != 0 && (content.get_width() > this.get_layout().get_usableWidth() || this._virtualScrolling == true)) {
						if(this._showHScroll == true && this._autoHideScrolls == true) this._hscroll.set_visible(true);
						if(this._hscroll != null) {
							var _g = this._hscroll;
							_g.set_pos(_g.get_pos() - xpos);
						}
					}
					if(ypos != 0 && (content.get_height() > this.get_layout().get_usableHeight() || this._virtualScrolling == true)) {
						if(this._showVScroll == true && this._autoHideScrolls == true) this._vscroll.set_visible(true);
						if(this._vscroll != null) {
							var _g1 = this._vscroll;
							_g1.set_pos(_g1.get_pos() - ypos);
						}
					}
					this._downPos = new openfl.geom.Point(event.stageX,event.stageY);
				}
			}
		}
	}
	,_onScreenMouseUp: function(event) {
		this._eventTarget.set_visible(false);
		this._downPos = null;
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
		if(this._hscroll != null && this._showHScroll == true && this._autoHideScrolls == true) this._hscroll.set_visible(false);
		if(this._vscroll != null && this._showVScroll == true && this._autoHideScrolls == true) this._vscroll.set_visible(false);
	}
	,checkScrolls: function() {
		if(this._virtualScrolling == true) return;
		var content = this._container.getChildAt(0);
		if(content != null) {
			var invalidateLayout = false;
			var hpos = 0;
			if(this._hscroll != null) hpos = this._hscroll.get_pos();
			if(content.get_width() - hpos > this.get_layout().get_usableWidth()) {
				if(this.createHScroll() == true) {
					this._hscroll.set_visible(false);
					invalidateLayout = true;
				}
				this._hscroll.set_max(content.get_width() - this.get_layout().get_usableWidth());
				this._hscroll.set_pageSize(this.get_layout().get_usableWidth() / content.get_width() * this._hscroll.get_max());
				if(this._hscroll.get_visible() == false && this._showHScroll == true && this._autoHideScrolls == false) {
					this._hscroll.set_visible(true);
					invalidateLayout = true;
				}
			} else if(this._hscroll != null) {
				if(this._hscroll.get_pos() != 0) this._hscroll.set_pos(content.get_width() - this.get_layout().get_usableWidth());
				if(this._hscroll.get_pos() == 0) {
					if(this._hscroll.get_visible() == true) {
						this._hscroll.set_visible(false);
						invalidateLayout = true;
					}
				} else {
					this._hscroll.set_max(content.get_width() - this.get_layout().get_usableWidth());
					this._hscroll.set_pageSize(this.get_layout().get_usableWidth() / content.get_width() * this._hscroll.get_max());
				}
			}
			var vpos = 0;
			if(this._vscroll != null) vpos = this._vscroll.get_pos();
			if(content.get_height() - vpos > this.get_layout().get_usableHeight()) {
				if(this.createVScroll() == true) {
					this._vscroll.set_visible(false);
					invalidateLayout = true;
				}
				this._vscroll.set_max(content.get_height() - this.get_layout().get_usableHeight());
				this._vscroll.set_pageSize(this.get_layout().get_usableHeight() / content.get_height() * this._vscroll.get_max());
				if(this._vscroll.get_visible() == false && this._showVScroll == true && this._autoHideScrolls == false) {
					this._vscroll.set_visible(true);
					invalidateLayout = true;
				}
			} else if(this._vscroll != null) {
				if(this._vscroll.get_pos() != 0) this._vscroll.set_pos(content.get_height() - this.get_layout().get_usableHeight());
				if(this._vscroll.get_pos() == 0) {
					if(this._vscroll.get_visible() == true) {
						this._vscroll.set_visible(false);
						invalidateLayout = true;
					}
				} else {
					this._vscroll.set_max(content.get_height() - this.get_layout().get_usableHeight());
					this._vscroll.set_pageSize(this.get_layout().get_usableHeight() / content.get_height() * this._vscroll.get_max());
				}
			}
			if(invalidateLayout) {
				this._invalidating = false;
				this.invalidate(1);
			}
		}
	}
	,createHScroll: function(invalidateLayout) {
		if(invalidateLayout == null) invalidateLayout = false;
		var created = false;
		if(this._hscroll == null) {
			this._hscroll = new haxe.ui.toolkit.controls.HScroll();
			this._hscroll.set_percentWidth(100);
			this._hscroll.addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onHScrollChange));
			if(this._showHScroll == false) this._hscroll.set_visible(false); else if(this._autoHideScrolls == true) this._hscroll.set_visible(false); else this._hscroll.set_visible(true);
			this.addChild(this._hscroll);
			created = true;
		}
		if(invalidateLayout) {
			this._invalidating = false;
			this.invalidate(1);
		}
		return created;
	}
	,createVScroll: function(invalidateLayout) {
		if(invalidateLayout == null) invalidateLayout = false;
		var created = false;
		if(this._vscroll == null) {
			this._vscroll = new haxe.ui.toolkit.controls.VScroll();
			this._vscroll.set_percentHeight(100);
			this._vscroll.addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onVScrollChange));
			if(this._showVScroll == false) this._vscroll.set_visible(false); else if(this._autoHideScrolls == true) this._vscroll.set_visible(false); else this._vscroll.set_visible(true);
			this.addChild(this._vscroll);
		}
		if(invalidateLayout) {
			this._invalidating = false;
			this.invalidate(1);
		}
		return created;
	}
	,updateScrollRect: function() {
		if(!this._ready) return;
		if(this.get_numChildren() > 0 && this._virtualScrolling == false) {
			var content = this._container.getChildAt(0);
			if(content != null) {
				var xpos = 0;
				if(this._hscroll != null) xpos = this._hscroll.get_pos();
				var ypos = 0;
				if(this._vscroll != null) ypos = this._vscroll.get_pos();
				content.set_x(-xpos);
				content.set_y(-ypos);
				this._container.get_sprite().set_scrollRect(new openfl.geom.Rectangle(0,0,this.get_layout().get_usableWidth(),this.get_layout().get_usableHeight()));
			}
		} else this._container.get_sprite().set_scrollRect(new openfl.geom.Rectangle(0,0,this.get_layout().get_usableWidth(),this.get_layout().get_usableHeight()));
	}
	,resizeEventTarget: function() {
		var targetX = this.get_layout().get_padding().get_left();
		var targetY = this.get_layout().get_padding().get_top();
		var targetCX = this.get_width() - (this.get_layout().get_padding().get_left() + this.get_layout().get_padding().get_right());
		var targetCY = this.get_height() - (this.get_layout().get_padding().get_top() + this.get_layout().get_padding().get_bottom());
		if(this._vscroll != null && this._vscroll.get_visible() == true) targetCX -= this._vscroll.get_width();
		if(this._hscroll != null && this._hscroll.get_visible() == true) targetCY -= this._hscroll.get_height();
		this._eventTarget.set_alpha(0);
		this._eventTarget.get_graphics().clear();
		this._eventTarget.get_graphics().beginFill(16711935);
		this._eventTarget.get_graphics().lineStyle(0);
		this._eventTarget.get_graphics().drawRect(targetX,targetY,targetCX,targetCY);
		this._eventTarget.get_graphics().endFill();
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ScrollView();
	}
	,__class__: haxe.ui.toolkit.containers.ScrollView
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollMin:"set_vscrollMin",get_vscrollMin:"get_vscrollMin",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollMin:"set_hscrollMin",get_hscrollMin:"get_hscrollMin",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_showVScroll:"set_showVScroll",get_showVScroll:"get_showVScroll",set_showHScroll:"set_showHScroll",get_showHScroll:"get_showHScroll",set_virtualScrolling:"set_virtualScrolling",get_virtualScrolling:"get_virtualScrolling"})
});
haxe.ui.toolkit.core.interfaces.IDataComponent = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDataComponent"] = haxe.ui.toolkit.core.interfaces.IDataComponent;
haxe.ui.toolkit.core.interfaces.IDataComponent.__name__ = ["haxe","ui","toolkit","core","interfaces","IDataComponent"];
haxe.ui.toolkit.core.interfaces.IDataComponent.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDataComponent
};
haxe.ui.toolkit.containers.ListView = function() {
	this._lastSelection = -1;
	haxe.ui.toolkit.containers.ScrollView.call(this);
	this.set_autoSize(false);
	this.set_dataSource(new haxe.ui.toolkit.data.ArrayDataSource());
	this._selectedItems = new Array();
	this._content = new haxe.ui.toolkit.containers.VBox();
	this._content.set_id("content");
	this._content.set_percentWidth(100);
	this.addChild(this._content);
	this._itemRenderer = haxe.ui.toolkit.core.renderers.BasicItemRenderer;
};
$hxClasses["haxe.ui.toolkit.containers.ListView"] = haxe.ui.toolkit.containers.ListView;
haxe.ui.toolkit.containers.ListView.__name__ = ["haxe","ui","toolkit","containers","ListView"];
haxe.ui.toolkit.containers.ListView.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDataComponent];
haxe.ui.toolkit.containers.ListView.__super__ = haxe.ui.toolkit.containers.ScrollView;
haxe.ui.toolkit.containers.ListView.prototype = $extend(haxe.ui.toolkit.containers.ScrollView.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.ScrollView.prototype.initialize.call(this);
		if(this._dataSource == null) this.set_dataSource(new haxe.ui.toolkit.data.ArrayDataSource());
		this._dataSource.open();
		this.syncUI();
		this.checkScrolls();
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.containers.ScrollView.prototype.invalidate.call(this,type,recursive);
		if((type & 65536) == 65536) this.syncUI();
	}
	,dispose: function() {
		if(this._dataSource != null) this._dataSource.close();
		haxe.ui.toolkit.containers.ScrollView.prototype.dispose.call(this);
	}
	,addChild: function(child) {
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IItemRenderer)) {
			this._itemRenderer = child;
			return child;
		}
		return haxe.ui.toolkit.containers.ScrollView.prototype.addChild.call(this,child);
	}
	,addChildAt: function(child,index) {
		return haxe.ui.toolkit.containers.ScrollView.prototype.addChildAt.call(this,child,index);
	}
	,get_listSize: function() {
		return this._content.get_children().length;
	}
	,get_itemHeight: function() {
		if(this._content.get_children().length == 0) return 0;
		var n = 0;
		var cy = this._content.get_layout().get_padding().get_top() + this._content.get_layout().get_padding().get_bottom();
		var scy = this._content.get_layout().get_spacingY();
		var _g = 0;
		var _g1 = this._content.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			cy += child.get_height() + scy;
			n++;
			if(n > 100) break;
		}
		if(n > 0) cy -= scy;
		return cy / n;
	}
	,getItem: function(index) {
		return js.Boot.__cast(this._content.get_children()[index] , haxe.ui.toolkit.core.interfaces.IItemRenderer);
	}
	,get_selectedItems: function() {
		return this._selectedItems;
	}
	,get_selectedIndex: function() {
		var index = -1;
		if(this._selectedItems != null && this._selectedItems.length > 0) index = Lambda.indexOf(this._content.get_children(),this._selectedItems[0]);
		return index;
	}
	,set_selectedIndex: function(value) {
		if(this._ready == false) return value;
		if(value < 0) {
			var _g = 0;
			var _g1 = this._selectedItems;
			while(_g < _g1.length) {
				var selectedItem = _g1[_g];
				++_g;
				selectedItem.set_state("normal");
			}
			this._selectedItems = new Array();
		} else if(this._content.getChildAt(value) != null) {
			var item;
			item = js.Boot.__cast(this._content.getChildAt(value) , haxe.ui.toolkit.core.interfaces.IItemRenderer);
			if(item != null) this.handleListSelection(item,null);
		}
		return value;
	}
	,get_content: function() {
		var c = null;
		if(this.get_numChildren() > 0) c = js.Boot.__cast(this.getChildAt(0) , haxe.ui.toolkit.core.Component);
		return c;
	}
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		this._itemRenderer = value;
		return value;
	}
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		if(this._dataSource != null) {
			if(js.Boot.__instanceof(this._dataSource,haxe.ui.toolkit.core.interfaces.IEventDispatcher)) (js.Boot.__cast(this._dataSource , haxe.ui.toolkit.core.interfaces.IEventDispatcher)).removeEventListener(openfl.events.Event.CHANGE,$bind(this,this._onDataSourceChanged));
		}
		this._dataSource = value;
		if(js.Boot.__instanceof(this._dataSource,haxe.ui.toolkit.core.interfaces.IEventDispatcher)) (js.Boot.__cast(this._dataSource , haxe.ui.toolkit.core.interfaces.IEventDispatcher)).addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onDataSourceChanged));
		if(this._ready == true) this.syncUI();
		this._lastSelection = -1;
		return value;
	}
	,_onDataSourceChanged: function(event) {
		this.syncUI();
	}
	,syncUI: function() {
		var pos = 0;
		if(this._dataSource != null) {
			if(this.get_dataSource().moveFirst()) do {
				var dataHash = this.get_dataSource().hash();
				var data = this.get_dataSource().get();
				var item = null;
				if(this._content.getChildAt(pos) != null) item = js.Boot.__cast(this._content.getChildAt(pos) , haxe.ui.toolkit.core.interfaces.IItemRenderer);
				if(item == null) {
					this.addListViewItem(dataHash,data,pos);
					pos++;
				} else if(item.hash == dataHash) {
					item.set_data(data);
					pos++;
				} else {
					while(item != null && item.hash != dataHash) {
						this.removeListViewItem(pos);
						item = js.Boot.__cast(this._content.getChildAt(pos) , haxe.ui.toolkit.core.interfaces.IItemRenderer);
					}
					pos++;
				}
			} while(this.get_dataSource().moveNext());
		}
		var _g1 = pos;
		var _g = this._content.get_children().length;
		while(_g1 < _g) {
			var n = _g1++;
			this.removeListViewItem(n);
		}
	}
	,addListViewItem: function(dataHash,data,index) {
		if(index == null) index = -1;
		if(data == null) return;
		var item = this.createRendererInstance();
		item.set_autoSize(true);
		item.hash = dataHash;
		item.set_percentWidth(100);
		item.set_data(data);
		if(js.Boot.__instanceof(item,haxe.ui.toolkit.core.StyleableDisplayObject)) {
			var styleName;
			if(this._content.get_numChildren() % 2 == 0) styleName = "even"; else styleName = "odd";
			(js.Boot.__cast(item , haxe.ui.toolkit.core.StyleableDisplayObject)).set_styleName(styleName);
		}
		if(index == -1) this._content.addChild(item); else this._content.addChildAt(item,index);
		this.invalidate(256);
		(js.Boot.__cast(item , haxe.ui.toolkit.core.interfaces.IDisplayObject)).addEventListener("haxeui_" + "mouseOver",$bind(this,this._onListItemMouseOver));
		(js.Boot.__cast(item , haxe.ui.toolkit.core.interfaces.IDisplayObject)).addEventListener("haxeui_" + "mouseOut",$bind(this,this._onListItemMouseOut));
		(js.Boot.__cast(item , haxe.ui.toolkit.core.interfaces.IDisplayObject)).addEventListener("haxeui_" + "click",$bind(this,this._onListItemClick));
	}
	,removeListViewItem: function(index) {
		var item;
		item = js.Boot.__cast(this._content.getChildAt(index) , haxe.ui.toolkit.core.interfaces.IItemRenderer);
		var sIndex = Lambda.indexOf(this._selectedItems,item);
		if(sIndex != -1) HxOverrides.remove(this._selectedItems,item);
		if(item != null) {
			this._content.removeChild(item);
			this.invalidate(256);
		}
	}
	,_onListItemMouseOver: function(event) {
		if(Std["is"](event.get_component(),haxe.ui.toolkit.core.interfaces.IStateComponent)) (js.Boot.__cast(event.get_component() , haxe.ui.toolkit.core.interfaces.IStateComponent)).set_state("over");
	}
	,_onListItemMouseOut: function(event) {
		if(Std["is"](event.get_component(),haxe.ui.toolkit.core.interfaces.IStateComponent)) {
			var item = event.get_component();
			if(this.isSelected(item)) (js.Boot.__cast(item , haxe.ui.toolkit.core.interfaces.IStateComponent)).set_state("selected"); else (js.Boot.__cast(item , haxe.ui.toolkit.core.interfaces.IStateComponent)).set_state("normal");
		}
	}
	,_onListItemClick: function(event) {
		if(Std["is"](event.get_component(),haxe.ui.toolkit.core.interfaces.IItemRenderer)) {
			var item = event.get_component();
			if(item.allowSelection(event.stageX,event.stageY)) {
				this.handleListSelection(item,event);
				this.handleClick(item);
			}
		}
	}
	,handleListSelection: function(item,event,raiseEvent) {
		if(raiseEvent == null) raiseEvent = true;
		var shiftPressed = false;
		var ctrlPressed = false;
		if(event != null && js.Boot.__instanceof(event,openfl.events.MouseEvent)) {
			var mouseEvent;
			mouseEvent = js.Boot.__cast(event , openfl.events.MouseEvent);
			shiftPressed = mouseEvent.shiftKey;
			ctrlPressed = mouseEvent.ctrlKey;
		}
		if(ctrlPressed == true) {
		} else if(shiftPressed == true) {
		} else {
			var _g = 0;
			var _g1 = this._selectedItems;
			while(_g < _g1.length) {
				var selectedItem = _g1[_g];
				++_g;
				if(selectedItem != item) selectedItem.set_state("normal");
			}
			this._selectedItems = new Array();
		}
		if(this.isSelected(item)) {
			HxOverrides.remove(this._selectedItems,item);
			item.set_state("over");
		} else {
			this._selectedItems.push(item);
			item.set_state("selected");
		}
		this.ensureVisible(item);
		if(raiseEvent == true) {
			if(this.get_selectedIndex() != -1) {
				var item1 = this._content.getChildAt(this.get_selectedIndex());
				if(item1 != null) item1.dispatchProxyEvent("haxeui_" + "change",event);
			}
		}
	}
	,handleClick: function(item) {
		var index = Lambda.indexOf(this._content.get_children(),item);
		if(this._lastSelection == index) {
			var event = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "doubleClick");
			this.dispatchEvent(event);
			this._lastSelection = -1;
		} else this._lastSelection = index;
	}
	,isSelected: function(item) {
		return Lambda.indexOf(this._selectedItems,item) != -1;
	}
	,getItemIndex: function(item) {
		var index = -1;
		if(item != null) index = Lambda.indexOf(this._content.get_children(),item);
		return index;
	}
	,setSelectedIndexNoEvent: function(value) {
		if(this._ready == false) return value;
		if(this._content.getChildAt(value) != null) {
			var item;
			item = js.Boot.__cast(this._content.getChildAt(value) , haxe.ui.toolkit.core.interfaces.IItemRenderer);
			if(item != null) this.handleListSelection(item,null,false);
		}
		return value;
	}
	,ensureVisible: function(item) {
		if(item == null) return;
		var vpos = 0;
		if(this._vscroll != null) vpos = this._vscroll.get_pos();
		if(item.get_y() + item.get_height() > vpos + this._content.get_clipHeight()) this._vscroll.set_pos(item.get_y() + item.get_height() - this._content.get_clipHeight()); else if(item.get_y() < vpos) this._vscroll.set_pos(item.get_y());
	}
	,createRendererInstance: function() {
		var r = null;
		if(this._itemRenderer == null) return null;
		if(js.Boot.__instanceof(this._itemRenderer,haxe.ui.toolkit.core.interfaces.IItemRenderer)) r = (js.Boot.__cast(this._itemRenderer , haxe.ui.toolkit.core.interfaces.IItemRenderer)).clone(); else if(js.Boot.__instanceof(this._itemRenderer,Class)) {
			var cls;
			cls = js.Boot.__cast(this._itemRenderer , Class);
			r = Type.createInstance(cls,[]);
		} else if(typeof(this._itemRenderer) == "string") {
			var classString;
			classString = js.Boot.__cast(this._itemRenderer , String);
			var cls1 = Type.resolveClass(classString);
			r = Type.createInstance(cls1,[]);
		}
		if(r != null) r.eventDispatcher = this;
		return r;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.ScrollView.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ListView();
	}
	,set_onComponentEvent: function(value) {
		this.onComponentEvent = value;
		this.addEventListener("haxeui_" + "componentEvent",$bind(this,this._handleEvent));
		return value;
	}
	,__class__: haxe.ui.toolkit.containers.ListView
	,__properties__: $extend(haxe.ui.toolkit.containers.ScrollView.prototype.__properties__,{set_onComponentEvent:"set_onComponentEvent",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",get_content:"get_content",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_selectedItems:"get_selectedItems",get_itemHeight:"get_itemHeight",get_listSize:"get_listSize"})
});
haxe.ui.toolkit.containers.MenuBar = function() {
	haxe.ui.toolkit.containers.HBox.call(this);
	this._autoSize = false;
};
$hxClasses["haxe.ui.toolkit.containers.MenuBar"] = haxe.ui.toolkit.containers.MenuBar;
haxe.ui.toolkit.containers.MenuBar.__name__ = ["haxe","ui","toolkit","containers","MenuBar"];
haxe.ui.toolkit.containers.MenuBar.__super__ = haxe.ui.toolkit.containers.HBox;
haxe.ui.toolkit.containers.MenuBar.prototype = $extend(haxe.ui.toolkit.containers.HBox.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.HBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.MenuBar();
	}
	,__class__: haxe.ui.toolkit.containers.MenuBar
});
haxe.ui.toolkit.core.interfaces.ILayout = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.ILayout"] = haxe.ui.toolkit.core.interfaces.ILayout;
haxe.ui.toolkit.core.interfaces.ILayout.__name__ = ["haxe","ui","toolkit","core","interfaces","ILayout"];
haxe.ui.toolkit.core.interfaces.ILayout.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.core.interfaces.ILayout.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.ILayout
};
haxe.ui.toolkit.layout = {};
haxe.ui.toolkit.layout.Layout = function() {
	this._spacingY = 0;
	this._spacingX = 0;
	this._padding = new openfl.geom.Rectangle();
};
$hxClasses["haxe.ui.toolkit.layout.Layout"] = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.Layout.__name__ = ["haxe","ui","toolkit","layout","Layout"];
haxe.ui.toolkit.layout.Layout.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.ILayout];
haxe.ui.toolkit.layout.Layout.prototype = {
	get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		this._container = value;
		this.refresh();
		return value;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(value) {
		this._padding = value;
		this.refresh();
		return value;
	}
	,get_spacingX: function() {
		return this._spacingX;
	}
	,set_spacingX: function(value) {
		this._spacingX = value;
		this.refresh();
		return value;
	}
	,get_spacingY: function() {
		return this._spacingY;
	}
	,set_spacingY: function(value) {
		this._spacingY = value;
		this.refresh();
		return value;
	}
	,refresh: function() {
		if(this.get_container() != null && this.get_container().get_ready()) {
			this.resizeChildren();
			this.repositionChildren();
		}
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,get_innerWidth: function() {
		if(this.get_container() == null) return 0;
		var icx = this.get_container().get_width() - (this.get_padding().get_left() + this.get_padding().get_right());
		return icx;
	}
	,get_innerHeight: function() {
		if(this.get_container() == null) return 0;
		var icy = this.get_container().get_height() - (this.get_padding().get_top() + this.get_padding().get_bottom());
		return icy;
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		return ucx;
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		return ucy;
	}
	,clone: function() {
		var c = this.self();
		c.set_padding(this.get_padding());
		c.set_spacingX(this.get_spacingX());
		c.set_spacingY(this.get_spacingY());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.Layout();
	}
	,__class__: haxe.ui.toolkit.layout.Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",set_spacingY:"set_spacingY",get_spacingY:"get_spacingY",set_spacingX:"set_spacingX",get_spacingX:"get_spacingX",set_padding:"set_padding",get_padding:"get_padding",set_container:"set_container",get_container:"get_container"}
};
haxe.ui.toolkit.layout.DefaultLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.DefaultLayout"] = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.layout.DefaultLayout.__name__ = ["haxe","ui","toolkit","layout","DefaultLayout"];
haxe.ui.toolkit.layout.DefaultLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.DefaultLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var ucx = this.get_usableWidth();
		var ucy = this.get_usableHeight();
		var totalWidth = 0;
		var totalHeight = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			if(child.get_percentWidth() > -1) child.set_width(ucx * child.get_percentWidth() / 100);
			if(child.get_percentHeight() > -1) child.set_height(ucy * child.get_percentHeight() / 100);
			if(child.get_width() > totalWidth) totalWidth = child.get_width();
			if(child.get_height() > totalHeight) totalHeight = child.get_height();
		}
		if(this.get_container().get_autoSize()) {
			if(totalWidth > 0 && totalWidth != this.get_innerWidth() && this.get_container().get_percentWidth() == -1) this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			if(totalHeight > 0 && totalHeight != this.get_innerHeight() && this.get_container().get_percentHeight() == -1) this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else {
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var xpos = this.get_padding().get_left();
		var ypos = this.get_padding().get_top();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			child.set_x(xpos);
			child.set_y(ypos);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.DefaultLayout();
	}
	,__class__: haxe.ui.toolkit.layout.DefaultLayout
});
haxe.ui.toolkit.containers.ScrollViewLayout = function() {
	this._inlineScrolls = false;
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.containers.ScrollViewLayout"] = haxe.ui.toolkit.containers.ScrollViewLayout;
haxe.ui.toolkit.containers.ScrollViewLayout.__name__ = ["haxe","ui","toolkit","containers","ScrollViewLayout"];
haxe.ui.toolkit.containers.ScrollViewLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.containers.ScrollViewLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var hscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.HScroll);
		var vscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.VScroll);
		if(hscroll != null) hscroll.set_y(this.get_container().get_height() - hscroll.get_height() - this.get_padding().get_bottom());
		if(vscroll != null) vscroll.set_x(this.get_container().get_width() - vscroll.get_width() - this.get_padding().get_right());
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var vscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.VScroll);
		if(vscroll != null && vscroll.get_visible() == true && this._inlineScrolls == false) ucx -= vscroll.get_width() + this.get_spacingX();
		return ucx;
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var hscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.HScroll);
		if(hscroll != null && hscroll.get_visible() && this._inlineScrolls == false) ucy -= hscroll.get_height() + this.get_spacingY();
		return ucy;
	}
	,get_inlineScrolls: function() {
		return this._inlineScrolls;
	}
	,set_inlineScrolls: function(value) {
		this._inlineScrolls = value;
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.ScrollViewLayout();
	}
	,__class__: haxe.ui.toolkit.containers.ScrollViewLayout
	,__properties__: $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype.__properties__,{set_inlineScrolls:"set_inlineScrolls",get_inlineScrolls:"get_inlineScrolls"})
});
haxe.ui.toolkit.containers.Stack = function() {
	this._history = new List();
	this._selectedIndex = -1;
	haxe.ui.toolkit.core.Component.call(this);
	this._clipContent = true;
};
$hxClasses["haxe.ui.toolkit.containers.Stack"] = haxe.ui.toolkit.containers.Stack;
haxe.ui.toolkit.containers.Stack.__name__ = ["haxe","ui","toolkit","containers","Stack"];
haxe.ui.toolkit.containers.Stack.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.containers.Stack.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	addChild: function(child) {
		var r = haxe.ui.toolkit.core.Component.prototype.addChild.call(this,child);
		r.set_visible(this.get_children().length - 1 == this._selectedIndex);
		r.get_sprite().set_alpha(1);
		return r;
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		if(value != this._selectedIndex) {
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.containers.Stack);
			var _g1 = 0;
			var _g = this.get_children().length;
			while(_g1 < _g) {
				var n = _g1++;
				var item = [this.get_children()[n]];
				if(n == value) {
					if(transition == "slide") {
						if(value < this._selectedIndex) {
							item[0].get_sprite().set_alpha(1);
							item[0].set_visible(true);
							item[0].set_x(-item[0].get_width());
							motion.Actuate.tween(item[0],.2,{ x : this.get_layout().get_padding().get_left()},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function() {
								return function() {
								};
							})());
						} else {
							item[0].get_sprite().set_alpha(1);
							item[0].set_visible(true);
							item[0].set_x(this.get_width());
							motion.Actuate.tween(item[0],.2,{ x : this.get_layout().get_padding().get_left()},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function() {
								return function() {
								};
							})());
						}
					} else if(transition == "fade") {
						item[0].set_x(this.get_layout().get_padding().get_left());
						item[0].get_sprite().set_alpha(0);
						item[0].set_visible(true);
						motion.Actuate.tween(item[0].get_sprite(),.2,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function() {
							return function() {
							};
						})());
					} else {
						item[0].set_x(this.get_layout().get_padding().get_left());
						item[0].get_sprite().set_alpha(1);
						item[0].set_visible(true);
					}
				} else if(n == this._selectedIndex) {
					if(transition == "slide") {
						item[0].get_sprite().set_alpha(1);
						if(value < this._selectedIndex) motion.Actuate.tween(item[0],.2,{ x : this.get_width()},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function(item) {
							return function() {
								item[0].set_visible(false);
							};
						})(item)); else motion.Actuate.tween(item[0],.2,{ x : -item[0].get_width()},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function(item) {
							return function() {
								item[0].set_visible(false);
							};
						})(item));
					} else if(transition == "fade") {
						item[0].set_x(this.get_layout().get_padding().get_left());
						motion.Actuate.tween(item[0].get_sprite(),.2,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete((function(item) {
							return function() {
								item[0].set_visible(false);
							};
						})(item));
					} else {
						item[0].set_x(this.get_layout().get_padding().get_left());
						item[0].get_sprite().set_alpha(1);
						item[0].set_visible(false);
					}
				}
			}
			this._history.push(this._selectedIndex);
			this._selectedIndex = value;
			var event = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(event);
		}
		return value;
	}
	,back: function() {
		var last = this._history.pop();
		if(last == null) return;
		this.set_selectedIndex(last);
		this._history.pop();
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.Stack();
	}
	,__class__: haxe.ui.toolkit.containers.Stack
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
haxe.ui.toolkit.containers.TabView = function() {
	haxe.ui.toolkit.core.Component.call(this);
	this._layout = new haxe.ui.toolkit.layout.VerticalLayout();
	this._tabs = new haxe.ui.toolkit.controls.TabBar();
	this._tabs.set_percentWidth(100);
	this._tabs.addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onTabsChange));
	this._tabs.addEventListener("haxeui_" + "glyphClick",$bind(this,this._onGlyphClick));
	this.addChild(this._tabs);
	this._stack = new haxe.ui.toolkit.containers.Stack();
	this._stack.set_percentWidth(this._stack.set_percentHeight(100));
	this._stack.set_styleName("page");
	this.addChild(this._stack);
};
$hxClasses["haxe.ui.toolkit.containers.TabView"] = haxe.ui.toolkit.containers.TabView;
haxe.ui.toolkit.containers.TabView.__name__ = ["haxe","ui","toolkit","containers","TabView"];
haxe.ui.toolkit.containers.TabView.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.containers.TabView.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	_onTabsChange: function(event) {
		this._stack.set_selectedIndex(this._tabs.get_selectedIndex());
		var event1 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change");
		this.dispatchEvent(event1);
	}
	,_onGlyphClick: function(event) {
		var newEvent = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "glyphClick");
		newEvent.data = event.data;
		this.dispatchEvent(newEvent);
	}
	,initialize: function() {
		haxe.ui.toolkit.core.Component.prototype.initialize.call(this);
		this.set_selectedIndex(0);
	}
	,addChild: function(child) {
		var r = null;
		if(child == this._tabs || child == this._stack) r = haxe.ui.toolkit.core.Component.prototype.addChild.call(this,child); else {
			r = this._stack.addChild(child);
			var label = "";
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.Component)) label = (js.Boot.__cast(child , haxe.ui.toolkit.core.Component)).get_text();
			this._tabs.addTab(label).set_styleName(child.get_id());
		}
		return r;
	}
	,addChildAt: function(child,index) {
		var r = null;
		if(child == this._tabs || child == this._stack) r = haxe.ui.toolkit.core.Component.prototype.addChildAt.call(this,child,index); else {
			r = this._stack.addChildAt(child,index);
			var label = "";
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.Component)) label = (js.Boot.__cast(child , haxe.ui.toolkit.core.Component)).get_text();
			this._tabs.addTab(label).set_styleName(child.get_id());
		}
		return r;
	}
	,removeChild: function(child,dispose) {
		if(dispose == null) dispose = true;
		var r = null;
		if(child == this._tabs || child == this._stack) r = haxe.ui.toolkit.core.Component.prototype.removeChild.call(this,child,dispose); else r = this._stack.removeChild(child,dispose);
		return r;
	}
	,get_selectedIndex: function() {
		return this._tabs.get_selectedIndex();
	}
	,set_selectedIndex: function(value) {
		this._tabs.set_selectedIndex(value);
		return value;
	}
	,get_pageCount: function() {
		return this._stack.get_numChildren();
	}
	,setTabText: function(index,text) {
		this._tabs.setTabText(index,text);
	}
	,removeTab: function(index) {
		this._stack.removeChildAt(index);
		this._tabs.removeTab(index);
	}
	,getTabButton: function(index) {
		return this._tabs.getTabButton(index);
	}
	,removeAllTabs: function() {
		this._stack.removeAllChildren();
		this._tabs.removeAllTabs();
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.TabView();
	}
	,__class__: haxe.ui.toolkit.containers.TabView
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{get_pageCount:"get_pageCount",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
haxe.ui.toolkit.containers.TableView = function() {
	this._lastSelection = -1;
	haxe.ui.toolkit.core.Component.call(this);
	this._columnDefs = new haxe.ui.toolkit.containers.TableViewColumnDefs();
	this.set_dataSource(new haxe.ui.toolkit.data.ArrayDataSource());
	this._scrollView = new haxe.ui.toolkit.containers.ScrollView();
	this._scrollView.get_style().set_borderSize(0);
	this._selectedItems = new Array();
	this._scrollView.set_percentWidth(100);
	this._scrollView.set_percentHeight(100);
	this._scrollContent = new haxe.ui.toolkit.containers.VBox();
	this._scrollContent.set_id("tableContent");
	this._scrollContent.set_autoSize(true);
	this._scrollView.addChild(this._scrollContent);
};
$hxClasses["haxe.ui.toolkit.containers.TableView"] = haxe.ui.toolkit.containers.TableView;
haxe.ui.toolkit.containers.TableView.__name__ = ["haxe","ui","toolkit","containers","TableView"];
haxe.ui.toolkit.containers.TableView.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDataComponent];
haxe.ui.toolkit.containers.TableView.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.containers.TableView.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.Component.prototype.initialize.call(this);
		this.addChild(this._scrollView);
		if(this._dataSource == null) this.set_dataSource(new haxe.ui.toolkit.data.ArrayDataSource());
		this._dataSource.open();
		this.syncUI();
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		haxe.ui.toolkit.core.Component.prototype.invalidate.call(this,type,recursive);
		if(this._ready && (type & 256) == 256) {
			if(this._scrollView.get_layout().get_usableWidth() > 0) this.resizeColumns();
		}
	}
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		if(this._dataSource != null) {
			if(js.Boot.__instanceof(this._dataSource,openfl.events.IEventDispatcher)) (js.Boot.__cast(this._dataSource , openfl.events.IEventDispatcher)).removeEventListener(openfl.events.Event.CHANGE,$bind(this,this._onDataSourceChanged));
		}
		this._dataSource = value;
		if(js.Boot.__instanceof(this._dataSource,openfl.events.IEventDispatcher)) (js.Boot.__cast(this._dataSource , openfl.events.IEventDispatcher)).addEventListener(openfl.events.Event.CHANGE,$bind(this,this._onDataSourceChanged));
		if(this._ready == true) this.syncUI();
		return value;
	}
	,_onDataSourceChanged: function(event) {
		this.syncUI();
	}
	,get_columns: function() {
		return this._columnDefs;
	}
	,set_columns: function(value) {
		this._columnDefs = value;
		return value;
	}
	,syncUI: function() {
		var pos = 0;
		if(this._dataSource != null) {
			if(this.get_dataSource().moveFirst()) do {
				var dataHash = this.get_dataSource().hash();
				var data = this.get_dataSource().get();
				var item = null;
				if(this._scrollContent.getChildAt(pos) != null) item = js.Boot.__cast(this._scrollContent.getChildAt(pos) , haxe.ui.toolkit.containers.TableViewRow);
				if(item == null) {
					this.addTableRow(dataHash,data,pos);
					pos++;
				} else if(item.hash == dataHash) pos++; else {
					while(item != null && item.hash != dataHash) item = js.Boot.__cast(this._scrollContent.getChildAt(pos) , haxe.ui.toolkit.containers.TableViewRow);
					pos++;
				}
			} while(this.get_dataSource().moveNext());
		}
	}
	,addTableRow: function(dataHash,data,index) {
		if(index == null) index = -1;
		if(data == null) return;
		var _g = 0;
		var _g1 = Reflect.fields(data);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(f != "__get_id__") {
				if(this._columnDefs.has(f) == false) {
					this._columnDefs.add(f);
					haxe.Log.trace(f,{ fileName : "TableView.hx", lineNumber : 162, className : "haxe.ui.toolkit.containers.TableView", methodName : "addTableRow"});
				}
			}
		}
		var item = new haxe.ui.toolkit.containers.TableViewRow(this);
		item.set_autoSize(true);
		item.set_data(data);
		item.hash = dataHash;
		var id;
		if(this._scrollContent.get_numChildren() % 2 == 0) id = "even"; else id = "odd";
		item.set_id(id);
		if(index == -1) this._scrollContent.addChild(item); else this._scrollContent.addChildAt(item,index);
		this._scrollView.invalidate(256);
	}
	,resizeColumns: function() {
		if(this._scrollContent.get_numChildren() == 0) return;
		var sx = (js.Boot.__cast(this._scrollContent.getChildAt(0) , haxe.ui.toolkit.containers.TableViewRow)).get_layout().get_spacingX();
		var cols = this._columnDefs.iterator();
		var totalWidth = 0;
		var _g = 0;
		while(_g < cols.length) {
			var c = cols[_g];
			++_g;
			totalWidth += c.calculatedWidth + sx;
		}
		if(totalWidth < this._scrollView.get_layout().get_usableWidth()) {
			var diff = this._scrollView.get_layout().get_usableWidth() - totalWidth;
			var newWidth = cols[cols.length - 1].calculatedWidth + diff;
			var _g1 = 0;
			var _g11 = this._scrollContent.get_children();
			while(_g1 < _g11.length) {
				var child = _g11[_g1];
				++_g1;
				var temp;
				temp = js.Boot.__cast(child , haxe.ui.toolkit.containers.TableViewRow);
				temp.getChildAt(temp.get_numChildren() - 1).set_width(newWidth);
			}
		}
	}
	,handleListSelection: function(item,event,raiseEvent) {
		if(raiseEvent == null) raiseEvent = true;
		var shiftPressed = false;
		var ctrlPressed = false;
		if(event != null && js.Boot.__instanceof(event,openfl.events.MouseEvent)) {
			var mouseEvent;
			mouseEvent = js.Boot.__cast(event , openfl.events.MouseEvent);
			shiftPressed = mouseEvent.shiftKey;
			ctrlPressed = mouseEvent.ctrlKey;
		}
		if(ctrlPressed == true) {
		} else if(shiftPressed == true) {
		} else {
			var _g = 0;
			var _g1 = this._selectedItems;
			while(_g < _g1.length) {
				var selectedItem = _g1[_g];
				++_g;
				if(selectedItem != item) selectedItem.set_state("normal");
			}
			this._selectedItems = new Array();
		}
		if(this.isSelected(item)) {
			HxOverrides.remove(this._selectedItems,item);
			item.set_state("over");
		} else {
			this._selectedItems.push(item);
			item.set_state("selected");
		}
		if(raiseEvent == true) {
			var event1 = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(event1);
		}
	}
	,handleClick: function(item,event) {
		var index = Lambda.indexOf(this._scrollContent.get_children(),item);
		if(this._lastSelection == index) {
			var event1 = new openfl.events.MouseEvent(openfl.events.MouseEvent.DOUBLE_CLICK);
			this.dispatchEvent(event1);
			this._lastSelection = -1;
		} else this._lastSelection = index;
	}
	,isSelected: function(item) {
		return Lambda.indexOf(this._selectedItems,item) != -1;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.TableView();
	}
	,__class__: haxe.ui.toolkit.containers.TableView
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
haxe.ui.toolkit.containers.TableViewColumnDefs = function() {
	this._columns = new Array();
};
$hxClasses["haxe.ui.toolkit.containers.TableViewColumnDefs"] = haxe.ui.toolkit.containers.TableViewColumnDefs;
haxe.ui.toolkit.containers.TableViewColumnDefs.__name__ = ["haxe","ui","toolkit","containers","TableViewColumnDefs"];
haxe.ui.toolkit.containers.TableViewColumnDefs.prototype = {
	add: function(id,width,title) {
		if(title == null) title = "";
		if(width == null) width = 0;
		if(this.has(id) == false) {
			var c = new haxe.ui.toolkit.containers.TableViewColumnDef();
			c.id = id;
			c.width = width;
			this._columns.push(c);
		}
	}
	,has: function(id) {
		var b = false;
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.id == id) b = true;
		}
		return b;
	}
	,iterator: function() {
		return this._columns;
	}
	,findColumn: function(id) {
		var c = null;
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1.length) {
			var test = _g1[_g];
			++_g;
			if(test.id == id) {
				c = test;
				break;
			}
		}
		return c;
	}
	,__class__: haxe.ui.toolkit.containers.TableViewColumnDefs
};
haxe.ui.toolkit.containers.TableViewColumnDef = function() {
	this.calculatedWidth = 0;
	this.width = 0;
	this.type = "text";
};
$hxClasses["haxe.ui.toolkit.containers.TableViewColumnDef"] = haxe.ui.toolkit.containers.TableViewColumnDef;
haxe.ui.toolkit.containers.TableViewColumnDef.__name__ = ["haxe","ui","toolkit","containers","TableViewColumnDef"];
haxe.ui.toolkit.containers.TableViewColumnDef.prototype = {
	__class__: haxe.ui.toolkit.containers.TableViewColumnDef
};
haxe.ui.toolkit.containers.TableViewRow = function(parentTable) {
	haxe.ui.toolkit.containers.HBox.call(this);
	this._states = new Array();
	this.get_sprite().buttonMode = true;
	this.get_sprite().set_useHandCursor(true);
	this.set_state("normal");
	this._parentTable = parentTable;
};
$hxClasses["haxe.ui.toolkit.containers.TableViewRow"] = haxe.ui.toolkit.containers.TableViewRow;
haxe.ui.toolkit.containers.TableViewRow.__name__ = ["haxe","ui","toolkit","containers","TableViewRow"];
haxe.ui.toolkit.containers.TableViewRow.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IStateComponent];
haxe.ui.toolkit.containers.TableViewRow.__super__ = haxe.ui.toolkit.containers.HBox;
haxe.ui.toolkit.containers.TableViewRow.prototype = $extend(haxe.ui.toolkit.containers.HBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.HBox.prototype.initialize.call(this);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_OVER,$bind(this,this._onMouseOver));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_OUT,$bind(this,this._onMouseOut));
		this.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onMouseClick));
	}
	,_onMouseOver: function(event) {
		this.set_state("over");
	}
	,_onMouseOut: function(event) {
		if(this._parentTable.isSelected(this)) this.set_state("selected"); else this.set_state("normal");
	}
	,_onMouseClick: function(event) {
		this._parentTable.handleListSelection(this,event);
		this._parentTable.handleClick(this,event);
	}
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this._data = value;
		var _g = 0;
		var _g1 = this._parentTable.get_columns().iterator();
		while(_g < _g1.length) {
			var colDef = [_g1[_g]];
			++_g;
			if(Object.prototype.hasOwnProperty.call(value,colDef[0].id)) {
				var c = [null];
				var colValue = Reflect.field(value,colDef[0].id);
				var type = "text";
				if(typeof(colValue) == "string") c[0] = this.createColumnComponent(colValue,"text"); else {
					if(Object.prototype.hasOwnProperty.call(colValue,"type")) type = js.Boot.__cast(Reflect.field(colValue,"type") , String);
					var componentValue = null;
					if(Object.prototype.hasOwnProperty.call(colValue,"value")) componentValue = Reflect.field(colValue,"value");
					c[0] = this.createColumnComponent(componentValue,type);
				}
				if(c[0] != null) {
					if(type == "list") {
						if(Object.prototype.hasOwnProperty.call(colValue,"dataSource")) {
							var controlDataSource = Reflect.field(colValue,"dataSource");
							var ds = null;
							if((controlDataSource instanceof Array) && controlDataSource.__enum__ == null) {
								ds = new haxe.ui.toolkit.data.ArrayDataSource();
								var _g2 = 0;
								var _g3;
								_g3 = js.Boot.__cast(controlDataSource , Array);
								while(_g2 < _g3.length) {
									var o = _g3[_g2];
									++_g2;
									ds.add(o);
								}
							}
							(js.Boot.__cast(c[0] , haxe.ui.toolkit.controls.selection.ListSelector)).set_dataSource(ds);
						}
					}
					c[0].set_autoSize(true);
					this.addChild(c[0]);
					c[0].addEventListener(openfl.events.Event.ADDED_TO_STAGE,(function(c,colDef) {
						return function(e) {
							if(colDef[0].width <= 0) {
								if(c[0].get_width() > colDef[0].calculatedWidth) colDef[0].calculatedWidth = c[0].get_width(); else c[0].set_width(colDef[0].calculatedWidth);
							} else {
								c[0].set_width(colDef[0].width);
								colDef[0].calculatedWidth = colDef[0].width;
							}
						};
					})(c,colDef));
				}
			}
		}
		return value;
	}
	,createColumnComponent: function(value,type) {
		var c = null;
		if(value == null) {
			c = new haxe.ui.toolkit.controls.Spacer();
			return c;
		}
		switch(type) {
		case "text":
			c = new haxe.ui.toolkit.controls.Text();
			c.set_autoSize(false);
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.Text)).set_text(js.Boot.__cast(value , String));
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.Text)).addStates(this.get_states());
			break;
		case "button":
			c = new haxe.ui.toolkit.controls.Button();
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.Button)).set_text(js.Boot.__cast(value , String));
			break;
		case "slider":
			c = new haxe.ui.toolkit.controls.HSlider();
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.HSlider)).set_pos(Std.parseInt(value));
			break;
		case "progress":
			c = new haxe.ui.toolkit.controls.HProgress();
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.HProgress)).set_pos(Std.parseInt(value));
			break;
		case "list":
			c = new haxe.ui.toolkit.controls.selection.ListSelector();
			(js.Boot.__cast(c , haxe.ui.toolkit.controls.selection.ListSelector)).set_text(js.Boot.__cast(value , String));
			break;
		default:
			c = new haxe.ui.toolkit.controls.Spacer();
		}
		return c;
	}
	,buildStyles: function() {
		var _g = 0;
		var _g1 = this.get_states();
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var stateStyle = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(this,s);
			if(stateStyle != null) this.storeStyle(s,stateStyle);
		}
	}
	,addStates: function(stateNames) {
		var _g = 0;
		while(_g < stateNames.length) {
			var stateName = stateNames[_g];
			++_g;
			this._states.push(stateName);
		}
		if(this._ready) {
			if(this._lazyLoadStyles == false) this.buildStyles(); else this.clearStyles();
		}
	}
	,get_state: function() {
		return this._state;
	}
	,set_state: function(value) {
		if(this._state != value) {
			this._state = value;
			if(this.retrieveStyle(this._state) != null) this.set_baseStyle(this.retrieveStyle(this._state)); else this.invalidate(4096);
			var _g = 0;
			var _g1 = this.get_children();
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(js.Boot.__instanceof(c,haxe.ui.toolkit.controls.Text)) {
					var cx = (js.Boot.__cast(c , haxe.ui.toolkit.controls.Text)).get_width();
					(js.Boot.__cast(c , haxe.ui.toolkit.controls.Text)).set_state(value);
					(js.Boot.__cast(c , haxe.ui.toolkit.controls.Text)).set_width(cx);
				}
			}
		}
		return value;
	}
	,get_states: function() {
		return ["normal","over","selected"];
	}
	,hasState: function(state) {
		if(this.get_states() == null) return false;
		return Lambda.indexOf(this.get_states(),state) != -1;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.HBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.containers.TableViewRow();
	}
	,__class__: haxe.ui.toolkit.containers.TableViewRow
	,__properties__: $extend(haxe.ui.toolkit.containers.HBox.prototype.__properties__,{get_states:"get_states",set_state:"set_state",get_state:"get_state",set_data:"set_data",get_data:"get_data"})
});
haxe.ui.toolkit.controls.Calendar = function() {
	haxe.ui.toolkit.core.Component.call(this);
	this._layout = new haxe.ui.toolkit.controls.CalendarLayout();
	this._autoSize = false;
	this._dayItems = new Array();
	this._selectedDate = new Date();
};
$hxClasses["haxe.ui.toolkit.controls.Calendar"] = haxe.ui.toolkit.controls.Calendar;
haxe.ui.toolkit.controls.Calendar.__name__ = ["haxe","ui","toolkit","controls","Calendar"];
haxe.ui.toolkit.controls.Calendar.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.controls.Calendar.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.core.Component.prototype.preInitialize.call(this);
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			var _g1 = 0;
			while(_g1 < 7) {
				var j = _g1++;
				var dayItem = new haxe.ui.toolkit.controls.CalendarDay();
				dayItem.addEventListener(openfl.events.MouseEvent.CLICK,this.buildMouseClickFunction(this._dayItems.length));
				this._dayItems.push(dayItem);
				this.addChild(dayItem);
			}
		}
		this.set_date(new Date());
	}
	,previousMonth: function() {
		this._month--;
		if(this._month < 0) {
			this._month = 11;
			this._year--;
		}
		this._day = js.Boot.__cast(Math.min(this._day,this.getEndDay(this._month,this._year)) , Int);
		this.set_date(new Date(this._year,this._month,this._day,0,0,0));
	}
	,nextMonth: function() {
		this._month++;
		if(this._month > 11) {
			this._month = 0;
			this._year++;
		}
		this._day = js.Boot.__cast(Math.min(this._day,this.getEndDay(this._month,this._year)) , Int);
		this.set_date(new Date(this._year,this._month,this._day,0,0,0));
	}
	,get_date: function() {
		return this._date;
	}
	,set_date: function(value) {
		this._date = value;
		this._year = this._date.getFullYear();
		this._month = this._date.getMonth();
		this._day = this._date.getDate();
		var startDay = new Date(this._year,this._month,1,0,0,0).getDay();
		var endDay = this.getEndDay(this._month,this._year);
		var _g = 0;
		var _g1 = this._dayItems;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.set_visible(false);
			item.set_id(null);
		}
		var _g2 = 0;
		while(_g2 < endDay) {
			var i = _g2++;
			var item1 = this._dayItems[i + startDay];
			item1.set_visible(true);
			item1.set_text("" + (i + 1));
			if(i + 1 == this._selectedDate.getDate() && this._month == this._selectedDate.getMonth() && this._year == this._selectedDate.getFullYear()) item1.set_id("selectedDay");
		}
		return value;
	}
	,get_selectedDate: function() {
		return this._selectedDate;
	}
	,set_selectedDate: function(value) {
		this._selectedDate = value;
		this.set_date(this._date);
		return value;
	}
	,getEndDay: function(month,year) {
		var endDay = -1;
		switch(month) {
		case 1:
			if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) endDay = 29; else endDay = 28;
			break;
		case 3:case 5:case 8:case 10:
			endDay = 30;
			break;
		default:
			endDay = 31;
		}
		return endDay;
	}
	,buildMouseClickFunction: function(index) {
		var _g = this;
		return function(event) {
			_g.mouseClickButton(index);
		};
	}
	,mouseClickButton: function(index) {
		var item = this._dayItems[index];
		var day = Std.parseInt(item.get_text());
		this.set_selectedDate(new Date(this._year,this._month,day,0,0,0));
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE));
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Calendar();
	}
	,__class__: haxe.ui.toolkit.controls.Calendar
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
haxe.ui.toolkit.controls.CalendarDay = function() {
	haxe.ui.toolkit.controls.Button.call(this);
	this.set_autoSize(false);
};
$hxClasses["haxe.ui.toolkit.controls.CalendarDay"] = haxe.ui.toolkit.controls.CalendarDay;
haxe.ui.toolkit.controls.CalendarDay.__name__ = ["haxe","ui","toolkit","controls","CalendarDay"];
haxe.ui.toolkit.controls.CalendarDay.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.CalendarDay.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.CalendarDay();
	}
	,__class__: haxe.ui.toolkit.controls.CalendarDay
});
haxe.ui.toolkit.controls.CalendarLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.CalendarLayout"] = haxe.ui.toolkit.controls.CalendarLayout;
haxe.ui.toolkit.controls.CalendarLayout.__name__ = ["haxe","ui","toolkit","controls","CalendarLayout"];
haxe.ui.toolkit.controls.CalendarLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.controls.CalendarLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var children = this.get_container().get_children();
		var ucx = this.get_usableWidth() - 6 * this.get_spacingX() + (this.get_padding().get_left() + this.get_padding().get_right());
		var ucy = this.get_usableHeight() - 5 * this.get_spacingY() + (this.get_padding().get_top() + this.get_padding().get_bottom());
		var bcx = ucx / 7;
		var bcy = ucy / 6;
		var xpos = 0;
		var ypos = 0;
		var n = 0;
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			var _g1 = 0;
			while(_g1 < 7) {
				var j = _g1++;
				var child = children[n];
				if(child != null) {
					child.set_x(xpos);
					child.set_y(ypos);
					child.set_width(bcx);
					child.set_height(bcy);
					n++;
					xpos += bcx + this.get_spacingX();
				}
			}
			xpos = 0;
			ypos += bcy + this.get_spacingY();
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.CalendarLayout();
	}
	,__class__: haxe.ui.toolkit.controls.CalendarLayout
});
haxe.ui.toolkit.controls.CheckBox = function() {
	haxe.ui.toolkit.core.Component.call(this);
	this.set_autoSize(true);
	this.get_sprite().buttonMode = true;
	this.get_sprite().set_useHandCursor(true);
	this._value = new haxe.ui.toolkit.controls.CheckBoxValue();
	this._label = new haxe.ui.toolkit.controls.Text();
	this.set_layout(new haxe.ui.toolkit.layout.HorizontalLayout());
};
$hxClasses["haxe.ui.toolkit.controls.CheckBox"] = haxe.ui.toolkit.controls.CheckBox;
haxe.ui.toolkit.controls.CheckBox.__name__ = ["haxe","ui","toolkit","controls","CheckBox"];
haxe.ui.toolkit.controls.CheckBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.CheckBox.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.controls.CheckBox.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	initialize: function() {
		var _g = this;
		haxe.ui.toolkit.core.Component.prototype.initialize.call(this);
		this._value.set_verticalAlign("center");
		this.addChild(this._value);
		this.addChild(this._label);
		this._label.addEventListener("haxeui_" + "click",function(e) {
			_g._value.cycleValues();
		});
		this._value.addEventListener("haxeui_" + "change",function(e1) {
			_g.set_selected(_g._value.get_value() == "selected");
		});
	}
	,get_text: function() {
		return this._label.get_text();
	}
	,set_text: function(value) {
		value = haxe.ui.toolkit.core.Component.prototype.set_text.call(this,value);
		this._label.set_text(value);
		return value;
	}
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(this._selected == value) return value;
		this._value.set_value(value == true?"selected":"unselected");
		this._selected = value;
		var event = new openfl.events.Event(openfl.events.Event.CHANGE);
		this.dispatchEvent(event);
		return value;
	}
	,applyStyle: function() {
		haxe.ui.toolkit.core.Component.prototype.applyStyle.call(this);
		if(this._label != null) {
			var labelStyle = new haxe.ui.toolkit.style.Style();
			if(this._baseStyle != null) {
				labelStyle.set_fontName(this._baseStyle.get_fontName());
				labelStyle.set_fontSize(this._baseStyle.get_fontSize());
				labelStyle.set_fontEmbedded(this._baseStyle.get_fontEmbedded());
				labelStyle.set_color(this._baseStyle.get_color());
			}
			this._label.set_baseStyle(labelStyle);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		c.set_selected(this.get_selected());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.CheckBox();
	}
	,__class__: haxe.ui.toolkit.controls.CheckBox
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
haxe.ui.toolkit.controls.Value = function() {
	this._interactive = true;
	this._value = "";
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.addStates(["normal","disabled"]);
	this._autoSize = false;
	this._layout = new haxe.ui.toolkit.layout.AbsoluteLayout();
	this._values = new haxe.ds.StringMap();
	this._valuesList = new Array();
	this.addEventListener(openfl.events.MouseEvent.CLICK,$bind(this,this._onMouseClick));
};
$hxClasses["haxe.ui.toolkit.controls.Value"] = haxe.ui.toolkit.controls.Value;
haxe.ui.toolkit.controls.Value.__name__ = ["haxe","ui","toolkit","controls","Value"];
haxe.ui.toolkit.controls.Value.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.Value.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.Value.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	addValue: function(value) {
		if(this._values.get(value) == null) {
			var valueControl = new haxe.ui.toolkit.controls.Button();
			valueControl.set_id(value);
			valueControl.set_percentWidth(100);
			valueControl.set_percentHeight(100);
			this._values.set(value,valueControl);
			this._valuesList.push(value);
			valueControl.set_visible(this._value == value);
			this.addChild(valueControl);
		}
	}
	,cycleValues: function() {
		var currentIndex = Lambda.indexOf(this._valuesList,this._value);
		currentIndex++;
		if(currentIndex > this._valuesList.length - 1) currentIndex = 0;
		this.set_value(this._valuesList[currentIndex]);
	}
	,_onMouseClick: function(event) {
		if(this._interactive == true) this.cycleValues();
	}
	,get_value: function() {
		return this._value;
	}
	,set_value: function(newValue) {
		if(newValue != this._value) {
			var valueControl;
			var key = newValue;
			valueControl = this._values.get(key);
			if(valueControl != null) {
				var currentControl = this._values.get(this._value);
				if(currentControl != null) currentControl.set_visible(false);
				this._value = newValue;
				valueControl.set_visible(true);
			}
			this.dispatchEvent(new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change"));
		}
		return newValue;
	}
	,get_interactive: function() {
		return this._interactive;
	}
	,set_interactive: function(value) {
		this._interactive = value;
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		var _g = 0;
		var _g1 = this._valuesList;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			c.addValue(v);
		}
		return c;
		c.set_interactive(this.get_interactive());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Value();
	}
	,__class__: haxe.ui.toolkit.controls.Value
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_interactive:"set_interactive",get_interactive:"get_interactive"})
});
haxe.ui.toolkit.controls.CheckBoxValue = function() {
	haxe.ui.toolkit.controls.Value.call(this);
	this._value = "unselected";
	this.addValue("selected");
	this.addValue("unselected");
};
$hxClasses["haxe.ui.toolkit.controls.CheckBoxValue"] = haxe.ui.toolkit.controls.CheckBoxValue;
haxe.ui.toolkit.controls.CheckBoxValue.__name__ = ["haxe","ui","toolkit","controls","CheckBoxValue"];
haxe.ui.toolkit.controls.CheckBoxValue.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.CheckBoxValue.__super__ = haxe.ui.toolkit.controls.Value;
haxe.ui.toolkit.controls.CheckBoxValue.prototype = $extend(haxe.ui.toolkit.controls.Value.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Value.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.CheckBoxValue();
	}
	,__class__: haxe.ui.toolkit.controls.CheckBoxValue
});
haxe.ui.toolkit.core.interfaces.IDirectional = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDirectional"] = haxe.ui.toolkit.core.interfaces.IDirectional;
haxe.ui.toolkit.core.interfaces.IDirectional.__name__ = ["haxe","ui","toolkit","core","interfaces","IDirectional"];
haxe.ui.toolkit.core.interfaces.IDirectional.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDirectional
};
haxe.ui.toolkit.core.interfaces.IScrollable = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IScrollable"] = haxe.ui.toolkit.core.interfaces.IScrollable;
haxe.ui.toolkit.core.interfaces.IScrollable.__name__ = ["haxe","ui","toolkit","core","interfaces","IScrollable"];
haxe.ui.toolkit.core.interfaces.IScrollable.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IScrollable
};
haxe.ui.toolkit.controls.Progress = function() {
	this._incrementSize = 1;
	this._pos = 0;
	this._max = 100;
	this._min = 0;
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.addStates(["normal","disabled"]);
	this.set_direction("horizontal");
	this._valueBgComp = new haxe.ui.toolkit.core.StateComponent();
	this._valueBgComp.addStates(["normal","disabled"]);
	this._valueBgComp.set_id("background");
	this._valueComp = new haxe.ui.toolkit.core.StateComponent();
	this._valueComp.addStates(["normal","disabled"]);
	this._valueComp.set_id("value");
};
$hxClasses["haxe.ui.toolkit.controls.Progress"] = haxe.ui.toolkit.controls.Progress;
haxe.ui.toolkit.controls.Progress.__name__ = ["haxe","ui","toolkit","controls","Progress"];
haxe.ui.toolkit.controls.Progress.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IDirectional,haxe.ui.toolkit.core.interfaces.IScrollable];
haxe.ui.toolkit.controls.Progress.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.Progress.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.addChild(this._valueBgComp);
		this._valueBgComp.addChild(this._valueComp);
	}
	,get_direction: function() {
		return this._direction;
	}
	,set_direction: function(value) {
		this._direction = value;
		if(value == "horizontal") this._layout = new haxe.ui.toolkit.controls.HProgressLayout(); else if(value == "vertical") this._layout = new haxe.ui.toolkit.controls.VProgressLayout();
		return value;
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		if(value != this._min) {
			this._min = value;
			var changeEvent = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(changeEvent);
			this.invalidate(1);
		}
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		if(value != this._max) {
			this._max = value;
			var changeEvent = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(changeEvent);
			this.invalidate(1);
		}
		return this._max;
	}
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(this._ready) {
			if(value < this._min) value = this._min;
			if(value > this._max) value = this._max;
		}
		if(value != this._pos) {
			this._pos = value;
			var changeEvent = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(changeEvent);
			this.invalidate(1);
		}
		return value;
	}
	,get_pageSize: function() {
		return 0;
	}
	,set_pageSize: function(value) {
		return value;
	}
	,get_incrementSize: function() {
		return this._incrementSize;
	}
	,set_incrementSize: function(value) {
		this._incrementSize = value;
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		c.set_direction(this.get_direction());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_pos(this.get_pos());
		c.set_pageSize(this.get_pageSize());
		c.set_incrementSize(this.get_incrementSize());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Progress();
	}
	,__class__: haxe.ui.toolkit.controls.Progress
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_incrementSize:"set_incrementSize",get_incrementSize:"get_incrementSize",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_pos:"set_pos",get_pos:"get_pos",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_direction:"set_direction",get_direction:"get_direction"})
});
haxe.ui.toolkit.controls.HProgress = function() {
	haxe.ui.toolkit.controls.Progress.call(this);
	this.set_direction("horizontal");
};
$hxClasses["haxe.ui.toolkit.controls.HProgress"] = haxe.ui.toolkit.controls.HProgress;
haxe.ui.toolkit.controls.HProgress.__name__ = ["haxe","ui","toolkit","controls","HProgress"];
haxe.ui.toolkit.controls.HProgress.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.HProgress.__super__ = haxe.ui.toolkit.controls.Progress;
haxe.ui.toolkit.controls.HProgress.prototype = $extend(haxe.ui.toolkit.controls.Progress.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Progress.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.HProgress();
	}
	,__class__: haxe.ui.toolkit.controls.HProgress
});
haxe.ui.toolkit.controls.Scroll = function() {
	this._direction = "vertical";
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.addStates(["normal","disabled"]);
};
$hxClasses["haxe.ui.toolkit.controls.Scroll"] = haxe.ui.toolkit.controls.Scroll;
haxe.ui.toolkit.controls.Scroll.__name__ = ["haxe","ui","toolkit","controls","Scroll"];
haxe.ui.toolkit.controls.Scroll.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDirectional];
haxe.ui.toolkit.controls.Scroll.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.Scroll.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	get_direction: function() {
		return this._direction;
	}
	,set_direction: function(value) {
		this._direction = value;
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Scroll();
	}
	,__class__: haxe.ui.toolkit.controls.Scroll
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_direction:"set_direction",get_direction:"get_direction"})
});
haxe.ui.toolkit.controls.HScroll = function() {
	this._hasButtons = true;
	this._scrollDirection = 0;
	this._mouseDownOffset = -1;
	this._incrementSize = 20;
	this._pageSize = 0;
	this._max = 100;
	this._min = 0;
	this._pos = 0;
	haxe.ui.toolkit.controls.Scroll.call(this);
	this._layout = new haxe.ui.toolkit.controls.HScrollLayout();
};
$hxClasses["haxe.ui.toolkit.controls.HScroll"] = haxe.ui.toolkit.controls.HScroll;
haxe.ui.toolkit.controls.HScroll.__name__ = ["haxe","ui","toolkit","controls","HScroll"];
haxe.ui.toolkit.controls.HScroll.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IScrollable];
haxe.ui.toolkit.controls.HScroll.__super__ = haxe.ui.toolkit.controls.Scroll;
haxe.ui.toolkit.controls.HScroll.prototype = $extend(haxe.ui.toolkit.controls.Scroll.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.controls.Scroll.prototype.preInitialize.call(this);
		if(this._baseStyle != null) this._hasButtons = this._baseStyle.get_hasButtons();
	}
	,initialize: function() {
		haxe.ui.toolkit.controls.Scroll.prototype.initialize.call(this);
		if(this._hasButtons == true) {
			this._deincButton = new haxe.ui.toolkit.controls.Button();
			this._deincButton.set_autoSize(false);
			this._deincButton.set_iconPosition("center");
			this._deincButton.set_percentHeight(100);
			this._deincButton.set_width(this.get_layout().get_innerHeight());
			this._deincButton.set_id("deinc");
			this._deincButton.set_styleName("left");
			this._deincButton.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onDeinc));
			this.addChild(this._deincButton);
			this._incButton = new haxe.ui.toolkit.controls.Button();
			this._incButton.set_autoSize(false);
			this._incButton.set_iconPosition("center");
			this._incButton.set_percentHeight(100);
			this._incButton.set_width(this.get_layout().get_innerHeight());
			this._incButton.set_id("inc");
			this._incButton.set_styleName("right");
			this._incButton.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onInc));
			this.addChild(this._incButton);
		}
		this._thumb = new haxe.ui.toolkit.controls.Button();
		this._thumb.set_iconPosition("center");
		this._thumb.set_autoSize(false);
		this._thumb.set_width(50);
		this._thumb.set_percentHeight(100);
		this._thumb.set_id("thumb");
		this._thumb.set_styleName("thumb");
		this._thumb.set_remainPressed(true);
		this._thumb.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onThumbMouseDown));
		this.addChild(this._thumb);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onMouseDown));
	}
	,_onThumbMouseDown: function(event) {
		var ptStage = new openfl.geom.Point(event.stageX,event.stageY);
		this._mouseDownOffset = ptStage.x - this._thumb.get_x();
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,_onScreenMouseMove: function(event) {
		var xpos = event.stageX - this._mouseDownOffset;
		var minX = 0;
		if(this._deincButton != null) minX = this._deincButton.get_width() + this.get_layout().get_spacingX();
		var maxX = this.get_layout().get_usableWidth() - this._thumb.get_width();
		if(this._deincButton != null) maxX += this._deincButton.get_width() + this.get_layout().get_spacingX();
		if(xpos < minX) xpos = minX; else if(xpos > maxX) xpos = maxX;
		var ucx = this.get_layout().get_usableWidth();
		ucx -= this._thumb.get_width();
		var m = Std["int"](this.get_max() - this.get_min());
		var v = xpos - minX;
		var newValue = this.get_min() + v / ucx * m;
		this.set_pos(newValue | 0);
	}
	,_onScreenMouseUp: function(event) {
		this._mouseDownOffset = -1;
		if(this._scrollTimer != null) this._scrollTimer.stop();
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,_onDeinc: function(event) {
		this.deincrementValue();
		this._scrollDirection = 0;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		if(this._scrollTimer == null) {
			this._scrollTimer = new openfl.utils.Timer(50,1);
			this._scrollTimer.addEventListener("timerComplete",$bind(this,this._onScrollTimerComplete));
		}
		this._scrollTimer.reset();
		this._scrollTimer.start();
	}
	,_onInc: function(event) {
		this.incrementValue();
		this._scrollDirection = 1;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		if(this._scrollTimer == null) {
			this._scrollTimer = new openfl.utils.Timer(50,1);
			this._scrollTimer.addEventListener("timerComplete",$bind(this,this._onScrollTimerComplete));
		}
		this._scrollTimer.reset();
		this._scrollTimer.start();
	}
	,_onScrollTimerComplete: function(event) {
		if(this._scrollTimer != null) {
			if(this._scrollDirection == 1) this.incrementValue(); else if(this._scrollDirection == 0) this.deincrementValue();
			this._scrollTimer.reset();
			this._scrollTimer.start();
		}
	}
	,_onMouseDown: function(event) {
		var performPaging = !this._thumb.hitTest(event.stageX,event.stageY);
		if(this._deincButton != null && this._deincButton.hitTest(event.stageX,event.stageY) == true) performPaging = false;
		if(this._incButton != null && this._incButton.hitTest(event.stageX,event.stageY) == true) performPaging = false;
		if(performPaging == true) {
			if(event.localX > this._thumb.get_x()) {
				var _g = this;
				_g.set_pos(_g.get_pos() + this.get_pageSize());
			} else {
				var _g1 = this;
				_g1.set_pos(_g1.get_pos() - this.get_pageSize());
			}
		}
	}
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(value < this._min) value = this._min;
		if(value > this._max) value = this._max;
		if(value != this._pos) {
			this._pos = value;
			var changeEvent = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(changeEvent);
			this.invalidate(1);
		}
		return value;
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		if(value != this._min) {
			this._min = value;
			if(this._pos < this._min) this._pos = this._min;
			this.invalidate(1);
		}
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		if(value != this._max) {
			this._max = value;
			if(this._pos > this._max) this._pos = this._max;
			this.invalidate(1);
		}
		return value;
	}
	,get_pageSize: function() {
		return this._pageSize;
	}
	,set_pageSize: function(value) {
		if(value != this._pageSize) {
			this._pageSize = value;
			this.invalidate(1);
		}
		return value;
	}
	,get_incrementSize: function() {
		return this._incrementSize;
	}
	,set_incrementSize: function(value) {
		this._incrementSize = value;
		return value;
	}
	,deincrementValue: function() {
		var _g = this;
		_g.set_pos(_g.get_pos() - this._incrementSize);
	}
	,incrementValue: function() {
		var _g = this;
		_g.set_pos(_g.get_pos() + this._incrementSize);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Scroll.prototype.clone.call(this);
		c.set_pos(this.get_pos());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_pageSize(this.get_pageSize());
		c.set_incrementSize(this.get_incrementSize());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.HScroll();
	}
	,__class__: haxe.ui.toolkit.controls.HScroll
	,__properties__: $extend(haxe.ui.toolkit.controls.Scroll.prototype.__properties__,{set_incrementSize:"set_incrementSize",get_incrementSize:"get_incrementSize",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_pos:"set_pos",get_pos:"get_pos"})
});
haxe.ui.toolkit.controls.HScrollLayout = function() {
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.HScrollLayout"] = haxe.ui.toolkit.controls.HScrollLayout;
haxe.ui.toolkit.controls.HScrollLayout.__name__ = ["haxe","ui","toolkit","controls","HScrollLayout"];
haxe.ui.toolkit.controls.HScrollLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.controls.HScrollLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
		var deinc = this.get_container().findChild("deinc");
		if(deinc != null) deinc.set_width(this.get_innerHeight());
		var inc = this.get_container().findChild("inc");
		if(inc != null) inc.set_width(this.get_innerHeight());
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		var thumb = this.get_container().findChild("thumb");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucx = this.get_usableWidth();
			var thumbWidth = scroll.get_pageSize() / m * ucx;
			if(thumbWidth < this.get_innerHeight()) thumbWidth = this.get_innerHeight(); else if(thumbWidth > ucx) thumbWidth = ucx;
			thumb.set_width(thumbWidth);
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_container().findChild("deinc");
		var inc = this.get_container().findChild("inc");
		if(inc != null) inc.set_x(this.get_container().get_width() - inc.get_width() - this.get_padding().get_right());
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		var thumb = this.get_container().findChild("thumb");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_width();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_padding().get_left();
			if(deinc != null) x += deinc.get_width() + this.get_spacingX();
			thumb.set_x(x);
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_container().findChild("deinc");
		var inc = this.get_container().findChild("inc");
		if(deinc != null) ucx -= deinc.get_width() + this.get_spacingX();
		if(inc != null) ucx -= inc.get_width() + this.get_spacingX();
		return ucx;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.HScrollLayout();
	}
	,__class__: haxe.ui.toolkit.controls.HScrollLayout
});
haxe.ui.toolkit.controls.Slider = function() {
	this._mouseDownOffset = -1;
	haxe.ui.toolkit.controls.Progress.call(this);
	this._valueBgComp.get_sprite().buttonMode = true;
	this._valueBgComp.get_sprite().set_useHandCursor(true);
};
$hxClasses["haxe.ui.toolkit.controls.Slider"] = haxe.ui.toolkit.controls.Slider;
haxe.ui.toolkit.controls.Slider.__name__ = ["haxe","ui","toolkit","controls","Slider"];
haxe.ui.toolkit.controls.Slider.__super__ = haxe.ui.toolkit.controls.Progress;
haxe.ui.toolkit.controls.Slider.prototype = $extend(haxe.ui.toolkit.controls.Progress.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.Progress.prototype.initialize.call(this);
		this._thumb = new haxe.ui.toolkit.controls.Button();
		this._thumb.set_id("thumb");
		this._thumb.set_remainPressed(true);
		this._thumb.set_autoSize(false);
		this._thumb.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onMouseDown));
		this.addChild(this._thumb);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onMouseWheel));
		this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onBackgroundMouseDown));
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(newValue) {
		this.set_pos(Std.parseFloat(newValue));
		return newValue;
	}
	,_onMouseDown: function(event) {
	}
	,_onScreenMouseMove: function(event) {
	}
	,_onScreenMouseUp: function(event) {
		this._mouseDownOffset = -1;
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,_onBackgroundMouseDown: function(event) {
	}
	,calcPosFromCoord: function(coord) {
		return 0;
	}
	,_onMouseWheel: function(event) {
		if(event.delta != 0) {
			if(this._direction == "horizontal") {
				if(event.delta < 0) {
					var _g = this;
					_g.set_pos(_g.get_pos() + 5);
				} else if(event.delta > 0) {
					var _g1 = this;
					_g1.set_pos(_g1.get_pos() - 5);
				}
			} else if(this._direction == "vertical") {
				if(event.delta < 0) {
					var _g2 = this;
					_g2.set_pos(_g2.get_pos() - 5);
				} else if(event.delta > 0) {
					var _g3 = this;
					_g3.set_pos(_g3.get_pos() + 5);
				}
			}
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Progress.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Slider();
	}
	,__class__: haxe.ui.toolkit.controls.Slider
});
haxe.ui.toolkit.controls.HSlider = function() {
	haxe.ui.toolkit.controls.Slider.call(this);
	this.set_direction("horizontal");
};
$hxClasses["haxe.ui.toolkit.controls.HSlider"] = haxe.ui.toolkit.controls.HSlider;
haxe.ui.toolkit.controls.HSlider.__name__ = ["haxe","ui","toolkit","controls","HSlider"];
haxe.ui.toolkit.controls.HSlider.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.HSlider.__super__ = haxe.ui.toolkit.controls.Slider;
haxe.ui.toolkit.controls.HSlider.prototype = $extend(haxe.ui.toolkit.controls.Slider.prototype,{
	_onMouseDown: function(event) {
		this.startTracking(event.stageX - this._thumb.get_stageX());
	}
	,_onScreenMouseMove: function(event) {
		var xpos = event.stageX - this.get_stageX() - this._mouseDownOffset;
		this.set_pos(Std["int"](this.calcPosFromCoord(xpos)));
	}
	,_onBackgroundMouseDown: function(event) {
		if(this._thumb.hitTest(event.stageX,event.stageY) == false) {
			var xpos = event.stageX - this.get_stageX();
			xpos -= this._thumb.get_width() / 2;
			this.set_pos(Std["int"](this.calcPosFromCoord(xpos)));
			this._thumb.set_state("down");
			this.startTracking(this._thumb.get_width() / 2);
		}
	}
	,startTracking: function(offset) {
		this._mouseDownOffset = offset;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,calcPosFromCoord: function(xpos) {
		var minX = 0;
		var maxX = this.get_layout().get_usableWidth() - this._thumb.get_width();
		if(xpos < minX) xpos = minX; else if(xpos > maxX) xpos = maxX;
		var ucx = this.get_layout().get_usableWidth();
		ucx -= this._thumb.get_width();
		var m = Std["int"](this.get_max() - this.get_min());
		var v = xpos - minX;
		var newValue = this.get_min() + v / ucx * m;
		return newValue;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Slider.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.HSlider();
	}
	,__class__: haxe.ui.toolkit.controls.HSlider
});
haxe.ui.toolkit.controls.Image = function() {
	this._autoDisposeBitmapData = false;
	haxe.ui.toolkit.core.Component.call(this);
	this.set_autoSize(true);
};
$hxClasses["haxe.ui.toolkit.controls.Image"] = haxe.ui.toolkit.controls.Image;
haxe.ui.toolkit.controls.Image.__name__ = ["haxe","ui","toolkit","controls","Image"];
haxe.ui.toolkit.controls.Image.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.Image.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.controls.Image.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.Component.prototype.initialize.call(this);
		if(this._bmp != null) {
			this.get_sprite().addChild(this._bmp);
			if(this.get_height() > this._bmp.get_height()) this._bmp.set_y(Std["int"](this.get_height() / 2 - this._bmp.get_height() / 2));
		}
	}
	,dispose: function() {
		if(this._bmp != null) {
			if(this._autoDisposeBitmapData == true) this._bmp.bitmapData.dispose();
			this.get_sprite().removeChild(this._bmp);
			this._bmp = null;
		}
		haxe.ui.toolkit.core.Component.prototype.dispose.call(this);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		haxe.ui.toolkit.core.Component.prototype.invalidate.call(this,type,recursive);
		if((type & 256) == 256) {
			if(this._stretch && this._bmp != null) {
				this._bmp.set_width(this.get_width());
				this._bmp.set_height(this.get_height());
			}
		}
	}
	,get_value: function() {
		return this.get_resource();
	}
	,set_value: function(newValue) {
		this.set_resource(newValue);
		return newValue;
	}
	,get_resource: function() {
		return this._resource;
	}
	,set_resource: function(value) {
		if(this._bmp != null) {
			if(this._autoDisposeBitmapData == true) this._bmp.bitmapData.dispose();
			this.get_sprite().removeChild(this._bmp);
			this._bmp = null;
		}
		var bmpData = null;
		if(typeof(value) == "string") bmpData = haxe.ui.toolkit.resources.ResourceManager.get_instance().getBitmapData(js.Boot.__cast(value , String)); else if(js.Boot.__instanceof(value,openfl.display.Bitmap)) bmpData = (js.Boot.__cast(value , openfl.display.Bitmap)).bitmapData; else if(js.Boot.__instanceof(value,openfl.display.BitmapData)) bmpData = js.Boot.__cast(value , openfl.display.BitmapData);
		if(bmpData != null) {
			this._bmp = new openfl.display.Bitmap(bmpData);
			this.get_sprite().addChild(this._bmp);
			if(this.get_autoSize() == true) {
				this.set_width(bmpData.___textureBuffer != null?bmpData.___textureBuffer.width:0);
				this.set_height(bmpData.___textureBuffer != null?bmpData.___textureBuffer.height:0);
			}
		}
		this._resource = value;
		return value;
	}
	,get_stretch: function() {
		return this._stretch;
	}
	,set_stretch: function(value) {
		if(this._stretch == value) return value;
		this._stretch = value;
		this.invalidate(256);
		return value;
	}
	,get_autoDisposeBitmapData: function() {
		return this._autoDisposeBitmapData;
	}
	,set_autoDisposeBitmapData: function(value) {
		this._autoDisposeBitmapData = value;
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		c.set_resource(this.get_resource());
		c.set_stretch(this.get_stretch());
		c.set_autoDisposeBitmapData(this.get_autoDisposeBitmapData());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Image();
	}
	,__class__: haxe.ui.toolkit.controls.Image
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_autoDisposeBitmapData:"set_autoDisposeBitmapData",get_autoDisposeBitmapData:"get_autoDisposeBitmapData",set_stretch:"set_stretch",get_stretch:"get_stretch",set_resource:"set_resource",get_resource:"get_resource"})
});
haxe.ui.toolkit.controls.Menu = function() {
	haxe.ui.toolkit.containers.VBox.call(this);
	this._subMenus = new haxe.ds.ObjectMap();
};
$hxClasses["haxe.ui.toolkit.controls.Menu"] = haxe.ui.toolkit.controls.Menu;
haxe.ui.toolkit.controls.Menu.__name__ = ["haxe","ui","toolkit","controls","Menu"];
haxe.ui.toolkit.controls.Menu.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.controls.Menu.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
		if(this.get_rootMenu() == this) this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
	}
	,addChild: function(child) {
		var r = null;
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.MenuItem)) {
			(js.Boot.__cast(child , haxe.ui.toolkit.controls.MenuItem)).addEventListener(openfl.events.MouseEvent.MOUSE_OVER,this.buildMouseOverFunction(this.get_numChildren()));
			(js.Boot.__cast(child , haxe.ui.toolkit.controls.MenuItem)).addEventListener(openfl.events.MouseEvent.CLICK,this.buildMouseClickFunction(this.get_numChildren()));
			r = haxe.ui.toolkit.containers.VBox.prototype.addChild.call(this,child);
		} else if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.Menu)) {
			var item = new haxe.ui.toolkit.controls.MenuItem();
			(js.Boot.__cast(child , haxe.ui.toolkit.controls.Menu))._parentMenu = this;
			item.set_text((js.Boot.__cast(child , haxe.ui.toolkit.controls.Menu)).get_text());
			item.set_styleName("expandable");
			var value;
			value = js.Boot.__cast(child , haxe.ui.toolkit.controls.Menu);
			this._subMenus.set(item,value);
			this.addChild(item);
		}
		return r;
	}
	,_onRootMouseDown: function(event) {
		var mouseIn = false;
		var menu = this.get_rootMenu();
		while(menu != null) {
			if(menu.hitTest(event.stageX,event.stageY) == true) {
				mouseIn = true;
				break;
			}
			menu = menu._currentSubMenu;
		}
		if(mouseIn == false) this.get_rootMenu().hideSubMenus();
	}
	,buildMouseOverFunction: function(index) {
		var _g = this;
		return function(event) {
			_g.mouseOverItem(index);
		};
	}
	,buildMouseClickFunction: function(index) {
		var _g = this;
		return function(event) {
			_g.mouseClickItem(index);
		};
	}
	,mouseClickItem: function(index) {
		if(this.getChildAt(index) == null) return;
		var item;
		item = js.Boot.__cast(this.getChildAt(index) , haxe.ui.toolkit.controls.MenuItem);
		var subMenu = this._subMenus.h[item.__id__];
		if(subMenu == null) {
			this.get_rootMenu().hideSubMenus();
			var e = new haxe.ui.toolkit.events.MenuEvent(haxe.ui.toolkit.events.MenuEvent.SELECT,item);
			this.get_rootMenu().dispatchEvent(e);
		}
	}
	,mouseOverItem: function(index) {
		if(this.getChildAt(index) == null) return;
		var item;
		item = js.Boot.__cast(this.getChildAt(index) , haxe.ui.toolkit.controls.MenuItem);
		var subMenu = this._subMenus.h[item.__id__];
		if(this._currentItem != null) {
			this._currentItem.set_selected(false);
			this._currentItem = null;
		}
		if(this._currentSubMenu != null && this._currentSubMenu != subMenu) this.hideSubMenus();
		if(subMenu != null) {
			this.showSubMenu(item);
			this._currentItem = item;
		} else {
		}
	}
	,showSubMenu: function(item) {
		item.set_selected(true);
		var subMenu = this._subMenus.h[item.__id__];
		if(subMenu != null && subMenu != this._currentSubMenu) {
			subMenu.set_x(item.get_stageX() + item.get_width());
			subMenu.set_y(item.get_stageY());
			this.get_root().addChild(subMenu);
			this._currentSubMenu = subMenu;
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.Menu);
			if(transition == "slide") {
				subMenu.set_clipHeight(0);
				subMenu.get_sprite().set_alpha(1);
				subMenu.set_visible(true);
				motion.Actuate.tween(subMenu,.1,{ clipHeight : subMenu.get_height()},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
					subMenu.clearClip();
				});
			} else if(transition == "fade") {
				subMenu.get_sprite().set_alpha(0);
				subMenu.set_visible(true);
				motion.Actuate.tween(subMenu.get_sprite(),.1,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				});
			} else {
				subMenu.get_sprite().set_alpha(1);
				subMenu.set_visible(true);
			}
			var e = new haxe.ui.toolkit.events.MenuEvent(haxe.ui.toolkit.events.MenuEvent.OPEN,item);
			e.menu = subMenu;
			this.get_rootMenu().dispatchEvent(e);
		}
	}
	,hideSubMenus: function() {
		var _g = this;
		if(this._currentSubMenu == null) return;
		var ref = this._currentSubMenu;
		ref.hideSubMenus();
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.Menu);
		if(transition == "slide") {
			this._currentSubMenu.get_sprite().set_alpha(1);
			motion.Actuate.tween(ref,.1,{ clipHeight : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				ref.set_visible(false);
				ref.clearClip();
				_g.get_root().removeChild(ref,false);
				_g._currentSubMenu = null;
				ref.hideSubMenus();
			});
		} else if(transition == "fade") motion.Actuate.tween(ref.get_sprite(),.1,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			ref.set_visible(false);
			_g.get_root().removeChild(ref,false);
			_g._currentSubMenu = null;
			ref.hideSubMenus();
		}); else {
			ref.get_sprite().set_alpha(1);
			ref.set_visible(false);
			this.get_root().removeChild(ref,false);
			this._currentSubMenu = null;
			ref.hideSubMenus();
		}
		if(this._currentItem != null) {
			this._currentItem.set_selected(false);
			this._currentItem = null;
		}
	}
	,get_currentSubMenu: function() {
		return this._currentSubMenu;
	}
	,get_parentMenu: function() {
		return this._parentMenu;
	}
	,get_rootMenu: function() {
		var menu = this;
		while(menu._parentMenu != null) menu = menu._parentMenu;
		return menu;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Menu();
	}
	,__class__: haxe.ui.toolkit.controls.Menu
	,__properties__: $extend(haxe.ui.toolkit.containers.VBox.prototype.__properties__,{get_rootMenu:"get_rootMenu",get_parentMenu:"get_parentMenu",get_currentSubMenu:"get_currentSubMenu"})
});
haxe.ui.toolkit.controls.MenuButton = function() {
	haxe.ui.toolkit.controls.Button.call(this);
	this.set_toggle(true);
	this.set_allowSelection(false);
};
$hxClasses["haxe.ui.toolkit.controls.MenuButton"] = haxe.ui.toolkit.controls.MenuButton;
haxe.ui.toolkit.controls.MenuButton.__name__ = ["haxe","ui","toolkit","controls","MenuButton"];
haxe.ui.toolkit.controls.MenuButton.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.MenuButton.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.Button.prototype.initialize.call(this);
		if(this._menu != null) {
			this._menu.addEventListener(haxe.ui.toolkit.events.MenuEvent.SELECT,$bind(this,this._onMenuSelect));
			this._menu.addEventListener(haxe.ui.toolkit.events.MenuEvent.OPEN,$bind(this,this._onMenuOpen));
		}
	}
	,addChild: function(child) {
		var r = null;
		if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.MenuItem)) {
			if(this._menu == null) {
				this._menu = new haxe.ui.toolkit.controls.Menu();
				this._menu.set_root(this.get_root());
			}
			this._menu.addChild(child);
		} else if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.Menu)) this._menu = js.Boot.__cast(child , haxe.ui.toolkit.controls.Menu); else r = haxe.ui.toolkit.controls.Button.prototype.addChild.call(this,child);
		return r;
	}
	,_onMouseOver: function(event) {
		haxe.ui.toolkit.controls.Button.prototype._onMouseOver.call(this,event);
		if(haxe.ui.toolkit.controls.MenuButton._currentMenuButton != null && haxe.ui.toolkit.controls.MenuButton._currentMenuButton != this) {
			haxe.ui.toolkit.controls.MenuButton._currentMenuButton.hideMenu();
			this.showMenu();
		}
	}
	,_onMouseClick: function(event) {
		if(this.get_root().indexOfChild(this._menu) == -1) this.showMenu(); else this.hideMenu();
	}
	,set_selected: function(value) {
		this._selected = value;
		if(this._selected == true) this.set_state("down"); else this.set_state("normal");
		return value;
	}
	,_onRootMouseDown: function(event) {
		var mouseIn = false;
		if(this.hitTest(event.stageX,event.stageY) == true) mouseIn = true;
		if(this._menu != null && this._menu.hitTest(event.stageX,event.stageY) == true) mouseIn = true;
		if(this._menu != null && mouseIn == false) {
			var menu = this._menu.get_rootMenu();
			while(menu != null) {
				if(menu.hitTest(event.stageX,event.stageY) == true) {
					mouseIn = true;
					break;
				}
				menu = menu.get_currentSubMenu();
			}
		}
		if(this._menu != null && mouseIn == false) this.hideMenu();
	}
	,_onMenuSelect: function(event) {
		this.hideMenu();
		var e = new haxe.ui.toolkit.events.MenuEvent(haxe.ui.toolkit.events.MenuEvent.SELECT,event.menuItem);
		this.dispatchEvent(e);
		var uiEvent = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "menuSelect",event.menuItem);
		this.dispatchEvent(uiEvent);
	}
	,_onMenuOpen: function(event) {
		var e = new haxe.ui.toolkit.events.MenuEvent(haxe.ui.toolkit.events.MenuEvent.OPEN);
		e.menu = event.menu;
		this.dispatchEvent(e);
	}
	,showMenu: function() {
		var _g = this;
		this.set_selected(true);
		this._menu.set_x(this.get_stageX() - this.get_root().get_stageX());
		this._menu.set_y(this.get_stageY() + this.get_height() - this.get_root().get_stageY());
		this.get_root().addChild(this._menu);
		this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
		haxe.ui.toolkit.controls.MenuButton._currentMenuButton = this;
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.Menu);
		if(transition == "slide") {
			this._menu.set_clipHeight(0);
			this._menu.get_sprite().set_alpha(1);
			this._menu.set_visible(true);
			motion.Actuate.tween(this._menu,.1,{ clipHeight : this._menu.get_height()},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				_g._menu.clearClip();
			});
		} else if(transition == "fade") {
			this._menu.get_sprite().set_alpha(0);
			this._menu.set_visible(true);
			motion.Actuate.tween(this._menu.get_sprite(),.1,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			});
		} else {
			this._menu.get_sprite().set_alpha(1);
			this._menu.set_visible(true);
		}
		var event = new haxe.ui.toolkit.events.MenuEvent(haxe.ui.toolkit.events.MenuEvent.OPEN);
		event.menu = this._menu;
		this.dispatchEvent(event);
	}
	,hideMenu: function() {
		var _g = this;
		this.set_selected(false);
		this._menu.hideSubMenus();
		this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.Menu);
		if(transition == "slide") {
			this._menu.get_sprite().set_alpha(1);
			motion.Actuate.tween(this._menu,.1,{ clipHeight : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				_g._menu.set_visible(false);
				_g._menu.clearClip();
				_g.get_root().removeChild(_g._menu,false);
			});
		} else if(transition == "fade") motion.Actuate.tween(this._menu.get_sprite(),.1,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			_g._menu.set_visible(false);
			_g.get_root().removeChild(_g._menu,false);
		}); else {
			this._menu.get_sprite().set_alpha(1);
			this._menu.set_visible(false);
			this.get_root().removeChild(this._menu,false);
		}
		haxe.ui.toolkit.controls.MenuButton._currentMenuButton = null;
		this.set_selected(false);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.MenuButton();
	}
	,__class__: haxe.ui.toolkit.controls.MenuButton
});
haxe.ui.toolkit.controls.MenuItem = function() {
	haxe.ui.toolkit.controls.Button.call(this);
	this.set_toggle(true);
	this.set_allowSelection(false);
};
$hxClasses["haxe.ui.toolkit.controls.MenuItem"] = haxe.ui.toolkit.controls.MenuItem;
haxe.ui.toolkit.controls.MenuItem.__name__ = ["haxe","ui","toolkit","controls","MenuItem"];
haxe.ui.toolkit.controls.MenuItem.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.MenuItem.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	set_selected: function(value) {
		this._selected = value;
		if(this._selected == true) this.set_state("down"); else this.set_state("normal");
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.MenuItem();
	}
	,__class__: haxe.ui.toolkit.controls.MenuItem
});
haxe.ui.toolkit.controls.OptionBox = function() {
	haxe.ui.toolkit.core.Component.call(this);
	this.get_sprite().buttonMode = true;
	this.get_sprite().set_useHandCursor(true);
	if(haxe.ui.toolkit.controls.OptionBox._groups == null) haxe.ui.toolkit.controls.OptionBox._groups = new haxe.ds.StringMap();
	this._value = new haxe.ui.toolkit.controls.OptionBoxValue();
	this._value.set_interactive(false);
	this._label = new haxe.ui.toolkit.controls.Text();
	this._layout = new haxe.ui.toolkit.layout.HorizontalLayout();
	this._autoSize = true;
};
$hxClasses["haxe.ui.toolkit.controls.OptionBox"] = haxe.ui.toolkit.controls.OptionBox;
haxe.ui.toolkit.controls.OptionBox.__name__ = ["haxe","ui","toolkit","controls","OptionBox"];
haxe.ui.toolkit.controls.OptionBox.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.OptionBox.optionInGroup = function(value,option) {
	var exists = false;
	var arr = haxe.ui.toolkit.controls.OptionBox._groups.get(value);
	if(arr != null) {
		var _g = 0;
		while(_g < arr.length) {
			var test = arr[_g];
			++_g;
			if(test == option) {
				exists = true;
				break;
			}
		}
	}
	return exists;
};
haxe.ui.toolkit.controls.OptionBox.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.controls.OptionBox.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	dispose: function() {
		if(this.get_group() != null) {
			var arr = haxe.ui.toolkit.controls.OptionBox._groups.get(this._group);
			HxOverrides.remove(arr,this);
		}
		haxe.ui.toolkit.core.Component.prototype.dispose.call(this);
	}
	,initialize: function() {
		var _g = this;
		haxe.ui.toolkit.core.Component.prototype.initialize.call(this);
		this._value.set_verticalAlign("center");
		this.addChild(this._value);
		this.addChild(this._label);
		this.addEventListener(openfl.events.MouseEvent.CLICK,function(e) {
			if(_g.get_selected() == false) _g.set_selected(!_g.get_selected());
		});
	}
	,get_text: function() {
		return this._label.get_text();
	}
	,set_text: function(value) {
		value = haxe.ui.toolkit.core.Component.prototype.set_text.call(this,value);
		this._label.set_text(value);
		return value;
	}
	,get_selected: function() {
		return this._value.get_value() == "selected";
	}
	,set_selected: function(value) {
		if(this.get_selected() == value) return value;
		this._value.set_value(value == true?"selected":"unselected");
		if(this._group != null && value == true) {
			var arr = haxe.ui.toolkit.controls.OptionBox._groups.get(this._group);
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != this) option.set_selected(false);
				}
			}
		}
		var event = new openfl.events.Event(openfl.events.Event.CHANGE);
		this.dispatchEvent(event);
		return value;
	}
	,get_group: function() {
		return this._group;
	}
	,set_group: function(value) {
		if(value != null) {
			var arr = haxe.ui.toolkit.controls.OptionBox._groups.get(value);
			if(arr != null) HxOverrides.remove(arr,this);
		}
		this._group = value;
		var arr1 = haxe.ui.toolkit.controls.OptionBox._groups.get(value);
		if(arr1 == null) arr1 = new Array();
		if(haxe.ui.toolkit.controls.OptionBox.optionInGroup(value,this) == false) arr1.push(this);
		haxe.ui.toolkit.controls.OptionBox._groups.set(value,arr1);
		return value;
	}
	,applyStyle: function() {
		haxe.ui.toolkit.core.Component.prototype.applyStyle.call(this);
		if(this._label != null) {
			var labelStyle = new haxe.ui.toolkit.style.Style();
			if(this._baseStyle != null) {
				labelStyle.set_fontName(this._baseStyle.get_fontName());
				labelStyle.set_fontSize(this._baseStyle.get_fontSize());
				labelStyle.set_fontEmbedded(this._baseStyle.get_fontEmbedded());
				labelStyle.set_color(this._baseStyle.get_color());
			}
			this._label.set_baseStyle(labelStyle);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		c.set_selected(this.get_selected());
		c.set_group(this.get_group());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.OptionBox();
	}
	,__class__: haxe.ui.toolkit.controls.OptionBox
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{set_group:"set_group",get_group:"get_group",set_selected:"set_selected",get_selected:"get_selected"})
});
haxe.ui.toolkit.controls.OptionBoxValue = function() {
	haxe.ui.toolkit.controls.Value.call(this);
	this._value = "unselected";
	this.addValue("selected");
	this.addValue("unselected");
};
$hxClasses["haxe.ui.toolkit.controls.OptionBoxValue"] = haxe.ui.toolkit.controls.OptionBoxValue;
haxe.ui.toolkit.controls.OptionBoxValue.__name__ = ["haxe","ui","toolkit","controls","OptionBoxValue"];
haxe.ui.toolkit.controls.OptionBoxValue.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.OptionBoxValue.__super__ = haxe.ui.toolkit.controls.Value;
haxe.ui.toolkit.controls.OptionBoxValue.prototype = $extend(haxe.ui.toolkit.controls.Value.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Value.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.OptionBoxValue();
	}
	,__class__: haxe.ui.toolkit.controls.OptionBoxValue
});
haxe.ui.toolkit.controls.HProgressLayout = function() {
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.HProgressLayout"] = haxe.ui.toolkit.controls.HProgressLayout;
haxe.ui.toolkit.controls.HProgressLayout.__name__ = ["haxe","ui","toolkit","controls","HProgressLayout"];
haxe.ui.toolkit.controls.HProgressLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.controls.HProgressLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
		var background = this.get_container().findChild("background",haxe.ui.toolkit.core.Component);
		var value = null;
		if(background != null) value = background.findChild("value");
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		if(value != null) {
			var ucx = this.get_usableWidth();
			var thumb = this.get_container().findChild("thumb");
			if(thumb != null) ucx -= thumb.get_width();
			value.set_percentWidth(-1);
			var cx = (scroll.get_pos() - scroll.get_min()) / (scroll.get_max() - scroll.get_min()) * ucx;
			if(cx < 0) cx = 0; else if(cx > ucx) cx = ucx;
			if(thumb != null) cx += thumb.get_width() / 2;
			if(cx == 0) value.set_visible(false); else {
				value.set_width(cx);
				value.set_visible(true);
			}
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var background = this.get_container().findChild("background",haxe.ui.toolkit.core.Component);
		var value = null;
		if(background != null) {
			background.set_y(this.get_container().get_height() / 2 - background.get_height() / 2);
			value = background.findChild("value");
		}
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		if(value != null) {
			var thumb = this.get_container().findChild("thumb");
			if(thumb != null) {
				var xpos = this.get_padding().get_left() + value.get_x() + value.get_width() - thumb.get_width() / 2;
				thumb.set_x(xpos | 0);
			}
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.HProgressLayout();
	}
	,__class__: haxe.ui.toolkit.controls.HProgressLayout
});
haxe.ui.toolkit.controls.VProgressLayout = function() {
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.VProgressLayout"] = haxe.ui.toolkit.controls.VProgressLayout;
haxe.ui.toolkit.controls.VProgressLayout.__name__ = ["haxe","ui","toolkit","controls","VProgressLayout"];
haxe.ui.toolkit.controls.VProgressLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.controls.VProgressLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
		var background = this.get_container().findChild("background",haxe.ui.toolkit.core.Component);
		var value = null;
		if(background != null) value = background.findChild("value");
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		if(value != null) {
			var ucy = this.get_usableHeight();
			var thumb = this.get_container().findChild("thumb");
			if(thumb != null) ucy -= thumb.get_height();
			value.set_percentHeight(-1);
			var cy = (scroll.get_pos() - scroll.get_min()) / (scroll.get_max() - scroll.get_min()) * ucy;
			if(cy < 0) cy = 0; else if(cy > ucy) cy = ucy;
			if(thumb != null) cy += thumb.get_height() / 2;
			if(cy == 0) value.set_visible(false); else {
				value.set_height(cy);
				value.set_visible(true);
			}
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var background = this.get_container().findChild("background",haxe.ui.toolkit.core.Component);
		var value = null;
		if(background != null) {
			background.set_x(this.get_container().get_width() / 2 - background.get_width() / 2);
			value = background.findChild("value");
		}
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		if(value != null) {
			var ucy = this.get_usableHeight();
			value.set_y(ucy - value.get_height() - background.get_layout().get_padding().get_bottom());
			var thumb = this.get_container().findChild("thumb");
			if(thumb != null) {
				var ypos = this.get_padding().get_top() + value.get_y() - thumb.get_height() / 2;
				thumb.set_y(ypos | 0);
			}
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.VProgressLayout();
	}
	,__class__: haxe.ui.toolkit.controls.VProgressLayout
});
haxe.ui.toolkit.controls.Spacer = function() {
	haxe.ui.toolkit.core.Component.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.Spacer"] = haxe.ui.toolkit.controls.Spacer;
haxe.ui.toolkit.controls.Spacer.__name__ = ["haxe","ui","toolkit","controls","Spacer"];
haxe.ui.toolkit.controls.Spacer.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.Spacer.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.controls.Spacer.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Spacer();
	}
	,__class__: haxe.ui.toolkit.controls.Spacer
});
haxe.ui.toolkit.controls.TabBar = function() {
	this._selectedIndex = -1;
	haxe.ui.toolkit.containers.ScrollView.call(this);
	this.set_autoSize(false);
	this._scrollSensitivity = 5;
	this._showHScroll = this._showVScroll = false;
	this._content = new haxe.ui.toolkit.containers.HBox();
	this._content.set_id("content");
	this._content.set_percentHeight(100);
	this._content.addEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onMouseWheel));
	this.addChild(this._content);
};
$hxClasses["haxe.ui.toolkit.controls.TabBar"] = haxe.ui.toolkit.controls.TabBar;
haxe.ui.toolkit.controls.TabBar.__name__ = ["haxe","ui","toolkit","controls","TabBar"];
haxe.ui.toolkit.controls.TabBar.__super__ = haxe.ui.toolkit.containers.ScrollView;
haxe.ui.toolkit.controls.TabBar.prototype = $extend(haxe.ui.toolkit.containers.ScrollView.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.ScrollView.prototype.initialize.call(this);
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		if(value != this._selectedIndex) {
			var _g1 = 0;
			var _g = this._content.get_children().length;
			while(_g1 < _g) {
				var n = _g1++;
				var button;
				button = js.Boot.__cast(this._content.get_children()[n] , haxe.ui.toolkit.controls.Button);
				if(n == value) button.set_selected(true); else button.set_selected(false);
			}
			this._selectedIndex = value;
			var event = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(event);
		}
		return value;
	}
	,get_numTabs: function() {
		return this._content.get_numChildren();
	}
	,addTab: function(text) {
		var _g = this;
		var button = new haxe.ui.toolkit.controls.Button();
		button.set_text(text);
		button.set_toggle(true);
		button.set_id("tabButton");
		button.set_verticalAlign("bottom");
		button.set_allowSelection(false);
		this._content.addChild(button);
		button.set_selected(this._content.get_children().length - 1 == this._selectedIndex);
		button.addEventListener("haxeui_" + "click",$bind(this,this.tabButtonClick),false,1);
		button.addEventListener("haxeui_" + "glyphClick",$bind(this,this.tabGlyphClick));
		button.addEventListener(openfl.events.Event.ADDED_TO_STAGE,function(e) {
			var cy = _g.get_height();
			var newCY = button.get_height() + _g.get_baseStyle().get_paddingTop() + _g.get_baseStyle().get_paddingBottom();
			if(newCY > cy) _g.set_height(newCY);
			button.removeEventListenerType(openfl.events.Event.ADDED_TO_STAGE);
		});
		return button;
	}
	,removeTab: function(index) {
		this._content.removeChildAt(index);
		var newIndex = this.get_selectedIndex();
		if(newIndex > this._content.get_numChildren() - 1) newIndex = this._content.get_numChildren() - 1;
		this.set_selectedIndex(-1);
		this.set_selectedIndex(newIndex);
	}
	,getTabButton: function(index) {
		return this._content.getChildAt(index);
	}
	,removeAllTabs: function() {
		this._content.removeAllChildren();
		this._selectedIndex = -1;
	}
	,setTabText: function(index,text) {
		var button;
		button = js.Boot.__cast(this._content.getChildAt(index) , haxe.ui.toolkit.controls.Button);
		button.set_text(text);
	}
	,tabButtonClick: function(event) {
		this.set_selectedIndex(this._content.indexOfChild(event.displayObject));
	}
	,tabGlyphClick: function(event) {
		var newEvent = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "glyphClick");
		newEvent.data = this._content.indexOfChild(event.displayObject);
		this.dispatchEvent(newEvent);
	}
	,_onMouseWheel: function(event) {
		if(this._hscroll != null && this._content.get_width() > this.get_layout().get_usableWidth()) {
			if(event.delta != 0) {
				if(event.delta < 0) this._hscroll.incrementValue(); else if(event.delta > 0) this._hscroll.deincrementValue();
			}
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.ScrollView.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.TabBar();
	}
	,__class__: haxe.ui.toolkit.controls.TabBar
	,__properties__: $extend(haxe.ui.toolkit.containers.ScrollView.prototype.__properties__,{get_numTabs:"get_numTabs",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
haxe.ui.toolkit.controls.Text = function() {
	haxe.ui.toolkit.core.StateComponent.call(this);
	this._valign = "center";
	this.set_autoSize(true);
	this._textDisplay = new haxe.ui.toolkit.text.TextDisplay();
	this._textDisplay.set_text("");
};
$hxClasses["haxe.ui.toolkit.controls.Text"] = haxe.ui.toolkit.controls.Text;
haxe.ui.toolkit.controls.Text.__name__ = ["haxe","ui","toolkit","controls","Text"];
haxe.ui.toolkit.controls.Text.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.Text.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.controls.Text.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.get_sprite().addChild(this._textDisplay.get_display());
		this._textDisplay.set_autoSize(this.get_autoSize());
		this._textDisplay.set_text(this.get_text());
		if(this.get_autoSize() == true) {
			if(this.get_width() == 0) this.set_width(this._textDisplay.get_display().get_width());
			if(this.get_height() == 0) this.set_height(this._textDisplay.get_display().get_height());
		}
	}
	,dispose: function() {
		if(this.get_sprite().contains(this._textDisplay.get_display())) this.get_sprite().removeChild(this._textDisplay.get_display());
		haxe.ui.toolkit.core.StateComponent.prototype.dispose.call(this);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.core.StateComponent.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256 && this._autoSize == false) {
			this._textDisplay.get_display().set_width(this.get_layout().get_innerWidth());
			this._textDisplay.get_display().set_height(this.get_layout().get_innerHeight());
		}
		this._invalidating = false;
	}
	,get_text: function() {
		return this._textDisplay.get_text();
	}
	,set_text: function(value) {
		value = haxe.ui.toolkit.core.StateComponent.prototype.set_text.call(this,value);
		this._textDisplay.set_text(value);
		if(this.get_autoSize() == true) {
			this.set_width(this._textDisplay.get_display().get_width());
			this.set_height(this._textDisplay.get_display().get_height());
		}
		return value;
	}
	,set_autoSize: function(value) {
		value = haxe.ui.toolkit.core.StateComponent.prototype.set_autoSize.call(this,value);
		if(this._textDisplay != null) this._textDisplay.set_autoSize(value);
		return value;
	}
	,set_width: function(value) {
		haxe.ui.toolkit.core.StateComponent.prototype.set_width.call(this,value);
		this._textDisplay.get_display().set_width(value);
		this._textDisplay.set_text(this.get_text());
		this.set_height(this._textDisplay.get_display().get_height());
		return value;
	}
	,applyStyle: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.applyStyle.call(this);
		if(this._textDisplay != null) {
			this._textDisplay.set_style(this._baseStyle);
			if(this.get_autoSize() == true) {
				this.set_width(this._textDisplay.get_display().get_width());
				this.set_height(this._textDisplay.get_display().get_height());
			}
		}
	}
	,get_multiline: function() {
		return this._textDisplay.get_multiline();
	}
	,set_multiline: function(value) {
		this._textDisplay.set_multiline(value);
		return value;
	}
	,get_wrapLines: function() {
		return this._textDisplay.get_wrapLines();
	}
	,set_wrapLines: function(value) {
		this._textDisplay.set_wrapLines(value);
		return value;
	}
	,get_selectable: function() {
		return this._textDisplay.get_selectable();
	}
	,set_selectable: function(value) {
		return this._textDisplay.set_selectable(value);
	}
	,get_textAlign: function() {
		if(this._textDisplay == null) return null;
		return this._textDisplay.get_textAlign();
	}
	,set_textAlign: function(value) {
		if(this._textDisplay != null) this._textDisplay.set_textAlign(value);
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		c.set_multiline(this.get_multiline());
		c.set_wrapLines(this.get_wrapLines());
		c.set_selectable(this.get_selectable());
		c.set_textAlign(this.get_textAlign());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.Text();
	}
	,__class__: haxe.ui.toolkit.controls.Text
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_selectable:"set_selectable",get_selectable:"get_selectable",set_wrapLines:"set_wrapLines",get_wrapLines:"get_wrapLines",set_multiline:"set_multiline",get_multiline:"get_multiline"})
});
haxe.ui.toolkit.controls.TextInputLayout = function() {
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.TextInputLayout"] = haxe.ui.toolkit.controls.TextInputLayout;
haxe.ui.toolkit.controls.TextInputLayout.__name__ = ["haxe","ui","toolkit","controls","TextInputLayout"];
haxe.ui.toolkit.controls.TextInputLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.controls.TextInputLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
		if(this.get_container().get_sprite().get_numChildren() > 0) {
			var vscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.VScroll);
			var text = this.findTextField();
			if(text != null) {
				text.set_x(this.get_padding().get_left());
				if(text.multiline == true) {
					text.set_y(this.get_padding().get_top());
					text.set_height(this.get_usableHeight());
				} else {
					text.set_height(text.get_defaultTextFormat().size + 8);
					text.set_y(this.get_container().get_height() / 2 - text.get_height() / 2);
				}
				text.set_width(this.get_usableWidth());
				var placeholder = this.get_container().findChild("placeholder");
				if(placeholder != null) {
					placeholder.set_width(text.get_width());
					placeholder.set_height(text.get_height());
				}
			}
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var vscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.VScroll);
		if(vscroll != null) vscroll.set_x(this.get_container().get_width() - vscroll.get_width() - this.get_padding().get_right());
		var hscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.HScroll);
		if(hscroll != null) hscroll.set_y(this.get_container().get_height() - hscroll.get_height() - this.get_padding().get_bottom());
		var text = this.findTextField();
		var placeholder = this.get_container().findChild("placeholder");
		if(text != null && placeholder != null) {
			placeholder.set_x(text.get_x());
			placeholder.set_y(text.get_y() + 1);
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var vscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.VScroll);
		if(vscroll != null && vscroll.get_visible() == true) ucx -= vscroll.get_width() + this.get_spacingX();
		return ucx;
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var hscroll = this.get_container().findChildAs(haxe.ui.toolkit.controls.HScroll);
		if(hscroll != null && hscroll.get_visible() == true) ucy -= hscroll.get_height() - this.get_spacingY();
		return ucy;
	}
	,findTextField: function() {
		var tf = null;
		var _g1 = 0;
		var _g = this.get_container().get_sprite().get_numChildren();
		while(_g1 < _g) {
			var i = _g1++;
			var child = this.get_container().get_sprite().getChildAt(i);
			if(js.Boot.__instanceof(child,openfl.text.TextField)) {
				tf = js.Boot.__cast(child , openfl.text.TextField);
				break;
			}
		}
		return tf;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.TextInputLayout();
	}
	,__class__: haxe.ui.toolkit.controls.TextInputLayout
});
haxe.ui.toolkit.controls.VProgress = function() {
	haxe.ui.toolkit.controls.Progress.call(this);
	this.set_direction("vertical");
};
$hxClasses["haxe.ui.toolkit.controls.VProgress"] = haxe.ui.toolkit.controls.VProgress;
haxe.ui.toolkit.controls.VProgress.__name__ = ["haxe","ui","toolkit","controls","VProgress"];
haxe.ui.toolkit.controls.VProgress.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.VProgress.__super__ = haxe.ui.toolkit.controls.Progress;
haxe.ui.toolkit.controls.VProgress.prototype = $extend(haxe.ui.toolkit.controls.Progress.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.controls.Progress.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.VProgress();
	}
	,__class__: haxe.ui.toolkit.controls.VProgress
});
haxe.ui.toolkit.controls.VScroll = function() {
	this._hasButtons = true;
	this._scrollDirection = 0;
	this._mouseDownOffset = -1;
	this._incrementSize = 20;
	this._pageSize = 0;
	this._max = 100;
	this._min = 0;
	this._pos = 0;
	haxe.ui.toolkit.controls.Scroll.call(this);
	this._layout = new haxe.ui.toolkit.controls.VScrollLayout();
};
$hxClasses["haxe.ui.toolkit.controls.VScroll"] = haxe.ui.toolkit.controls.VScroll;
haxe.ui.toolkit.controls.VScroll.__name__ = ["haxe","ui","toolkit","controls","VScroll"];
haxe.ui.toolkit.controls.VScroll.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IScrollable];
haxe.ui.toolkit.controls.VScroll.__super__ = haxe.ui.toolkit.controls.Scroll;
haxe.ui.toolkit.controls.VScroll.prototype = $extend(haxe.ui.toolkit.controls.Scroll.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.controls.Scroll.prototype.preInitialize.call(this);
		if(this._baseStyle != null) this._hasButtons = this._baseStyle.get_hasButtons();
	}
	,initialize: function() {
		haxe.ui.toolkit.controls.Scroll.prototype.initialize.call(this);
		if(this._hasButtons == true) {
			this._deincButton = new haxe.ui.toolkit.controls.Button();
			this._deincButton.set_autoSize(false);
			this._deincButton.set_iconPosition("center");
			this._deincButton.set_percentWidth(100);
			this._deincButton.set_height(this.get_layout().get_innerWidth());
			this._deincButton.set_id("deinc");
			this._deincButton.set_styleName("up");
			this._deincButton.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onDeinc));
			this.addChild(this._deincButton);
			this._incButton = new haxe.ui.toolkit.controls.Button();
			this._incButton.set_autoSize(false);
			this._incButton.set_iconPosition("center");
			this._incButton.set_percentWidth(100);
			this._incButton.set_height(this.get_layout().get_innerWidth());
			this._incButton.set_id("inc");
			this._incButton.set_styleName("down");
			this._incButton.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onInc));
			this.addChild(this._incButton);
		}
		this._thumb = new haxe.ui.toolkit.controls.Button();
		this._thumb.set_iconPosition("center");
		this._thumb.set_autoSize(false);
		this._thumb.set_percentWidth(100);
		this._thumb.set_height(50);
		this._thumb.set_id("thumb");
		this._thumb.set_styleName("thumb");
		this._thumb.set_remainPressed(true);
		this._thumb.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onThumbMouseDown));
		this.addChild(this._thumb);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onMouseDown));
	}
	,_onThumbMouseDown: function(event) {
		var ptStage = new openfl.geom.Point(event.stageX,event.stageY);
		this._mouseDownOffset = ptStage.y - this._thumb.get_y();
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,_onScreenMouseMove: function(event) {
		var ypos = event.stageY - this._mouseDownOffset;
		var minY = 0;
		if(this._deincButton != null) minY = this._deincButton.get_height() + this.get_layout().get_spacingY();
		var maxY = this.get_layout().get_usableHeight() - this._thumb.get_height();
		if(this._deincButton != null) maxY += this._deincButton.get_height() + this.get_layout().get_spacingY();
		if(ypos < minY) ypos = minY; else if(ypos > maxY) ypos = maxY;
		var ucy = this.get_layout().get_usableHeight();
		ucy -= this._thumb.get_height();
		var m = Std["int"](this.get_max() - this.get_min());
		var v = ypos - minY;
		var newValue = this.get_min() + v / ucy * m;
		this.set_pos(newValue | 0);
	}
	,_onScreenMouseUp: function(event) {
		this._mouseDownOffset = -1;
		if(this._scrollTimer != null) this._scrollTimer.stop();
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,_onDeinc: function(event) {
		this.deincrementValue();
		this._scrollDirection = 0;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		if(this._scrollTimer == null) {
			this._scrollTimer = new openfl.utils.Timer(50,1);
			this._scrollTimer.addEventListener("timerComplete",$bind(this,this._onScrollTimerComplete));
		}
		this._scrollTimer.reset();
		this._scrollTimer.start();
	}
	,_onInc: function(event) {
		this.incrementValue();
		this._scrollDirection = 1;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		if(this._scrollTimer == null) {
			this._scrollTimer = new openfl.utils.Timer(50,1);
			this._scrollTimer.addEventListener("timerComplete",$bind(this,this._onScrollTimerComplete));
		}
		this._scrollTimer.reset();
		this._scrollTimer.start();
	}
	,_onScrollTimerComplete: function(event) {
		if(this._scrollTimer != null) {
			if(this._scrollDirection == 1) this.incrementValue(); else if(this._scrollDirection == 0) this.deincrementValue();
			this._scrollTimer.reset();
			this._scrollTimer.start();
		}
	}
	,_onMouseDown: function(event) {
		var performPaging = !this._thumb.hitTest(event.stageX,event.stageY);
		if(this._deincButton != null && this._deincButton.hitTest(event.stageX,event.stageY) == true) performPaging = false;
		if(this._incButton != null && this._incButton.hitTest(event.stageX,event.stageY) == true) performPaging = false;
		if(performPaging == true) {
			if(event.localY > this._thumb.get_y()) {
				var _g = this;
				_g.set_pos(_g.get_pos() + this.get_pageSize());
			} else {
				var _g1 = this;
				_g1.set_pos(_g1.get_pos() - this.get_pageSize());
			}
		}
	}
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(value < this._min) value = this._min;
		if(value > this._max) value = this._max;
		if(value != this._pos) {
			this._pos = value;
			var changeEvent = new openfl.events.Event(openfl.events.Event.CHANGE);
			this.dispatchEvent(changeEvent);
			this.invalidate(1);
		}
		return value;
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		if(value != this._min) {
			this._min = value;
			if(this._pos < this._min) this._pos = this._min;
			this.invalidate(1);
		}
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		if(value != this._max) {
			this._max = value;
			if(this._pos > this._max) this._pos = this._max;
			this.invalidate(1);
		}
		return value;
	}
	,get_pageSize: function() {
		return this._pageSize;
	}
	,set_pageSize: function(value) {
		if(value != this._pageSize) {
			this._pageSize = value;
			this.invalidate(1);
		}
		return value;
	}
	,get_incrementSize: function() {
		return this._incrementSize;
	}
	,set_incrementSize: function(value) {
		this._incrementSize = value;
		return value;
	}
	,deincrementValue: function() {
		var _g = this;
		_g.set_pos(_g.get_pos() - this._incrementSize);
	}
	,incrementValue: function() {
		var _g = this;
		_g.set_pos(_g.get_pos() + this._incrementSize);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Scroll.prototype.clone.call(this);
		c.set_pos(this.get_pos());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_pageSize(this.get_pageSize());
		c.set_incrementSize(this.get_incrementSize());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.VScroll();
	}
	,__class__: haxe.ui.toolkit.controls.VScroll
	,__properties__: $extend(haxe.ui.toolkit.controls.Scroll.prototype.__properties__,{set_incrementSize:"set_incrementSize",get_incrementSize:"get_incrementSize",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_pos:"set_pos",get_pos:"get_pos"})
});
haxe.ui.toolkit.controls.VScrollLayout = function() {
	haxe.ui.toolkit.layout.DefaultLayout.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.VScrollLayout"] = haxe.ui.toolkit.controls.VScrollLayout;
haxe.ui.toolkit.controls.VScrollLayout.__name__ = ["haxe","ui","toolkit","controls","VScrollLayout"];
haxe.ui.toolkit.controls.VScrollLayout.__super__ = haxe.ui.toolkit.layout.DefaultLayout;
haxe.ui.toolkit.controls.VScrollLayout.prototype = $extend(haxe.ui.toolkit.layout.DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.resizeChildren.call(this);
		var deinc = this.get_container().findChild("deinc");
		if(deinc != null) deinc.set_height(this.get_innerWidth());
		var inc = this.get_container().findChild("inc");
		if(inc != null) inc.set_height(this.get_innerWidth());
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		var thumb = this.get_container().findChild("thumb");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucy = this.get_usableHeight();
			var thumbHeight = scroll.get_pageSize() / m * ucy;
			if(thumbHeight < this.get_innerWidth()) thumbHeight = this.get_innerWidth(); else if(thumbHeight > ucy) thumbHeight = ucy;
			thumb.set_height(thumbHeight);
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_container().findChild("deinc");
		var inc = this.get_container().findChild("inc");
		if(inc != null) inc.set_y(this.get_container().get_height() - inc.get_height() - this.get_padding().get_bottom());
		var scroll;
		scroll = js.Boot.__cast(this.get_container() , haxe.ui.toolkit.core.interfaces.IScrollable);
		var thumb = this.get_container().findChild("thumb");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_padding().get_top();
			if(deinc != null) y += deinc.get_height() + this.get_spacingY();
			thumb.set_y(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_container().findChild("deinc");
		var inc = this.get_container().findChild("inc");
		if(deinc != null) ucy -= deinc.get_height() + this.get_spacingY();
		if(inc != null) ucy -= inc.get_height() + this.get_spacingY();
		return ucy;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.DefaultLayout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.VScrollLayout();
	}
	,__class__: haxe.ui.toolkit.controls.VScrollLayout
});
haxe.ui.toolkit.controls.VSlider = function() {
	haxe.ui.toolkit.controls.Slider.call(this);
	this.set_direction("vertical");
};
$hxClasses["haxe.ui.toolkit.controls.VSlider"] = haxe.ui.toolkit.controls.VSlider;
haxe.ui.toolkit.controls.VSlider.__name__ = ["haxe","ui","toolkit","controls","VSlider"];
haxe.ui.toolkit.controls.VSlider.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.controls.VSlider.__super__ = haxe.ui.toolkit.controls.Slider;
haxe.ui.toolkit.controls.VSlider.prototype = $extend(haxe.ui.toolkit.controls.Slider.prototype,{
	_onMouseDown: function(event) {
		this.startTracking(event.stageY - this._thumb.get_stageY());
	}
	,_onScreenMouseMove: function(event) {
		var ypos = event.stageY - this.get_stageY() - this._mouseDownOffset;
		this.set_pos(Std["int"](this.calcPosFromCoord(ypos)));
	}
	,_onBackgroundMouseDown: function(event) {
		if(this._thumb.hitTest(event.stageX,event.stageY) == false) {
			var ypos = event.stageY - this.get_stageY();
			ypos -= this._thumb.get_height() / 2;
			this.set_pos(Std["int"](this.calcPosFromCoord(ypos)));
			this._thumb.set_state("down");
			this.startTracking(this._thumb.get_height() / 2);
		}
	}
	,startTracking: function(offset) {
		this._mouseDownOffset = offset;
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this._onScreenMouseUp));
		haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this._onScreenMouseMove));
	}
	,calcPosFromCoord: function(ypos) {
		var minY = 0;
		var maxY = this.get_layout().get_usableHeight() - this._thumb.get_height();
		if(ypos < minY) ypos = minY; else if(ypos > maxY) ypos = maxY;
		var ucy = this.get_layout().get_usableHeight();
		ucy -= this._thumb.get_height();
		var m = Std["int"](this.get_max() - this.get_min());
		var v = ypos - minY;
		var newValue = this.get_max() - v / ucy * m;
		return newValue;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Slider.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.VSlider();
	}
	,__class__: haxe.ui.toolkit.controls.VSlider
});
haxe.ui.toolkit.controls.popups = {};
haxe.ui.toolkit.controls.popups.PopupContent = function() {
	haxe.ui.toolkit.containers.VBox.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.popups.PopupContent"] = haxe.ui.toolkit.controls.popups.PopupContent;
haxe.ui.toolkit.controls.popups.PopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","PopupContent"];
haxe.ui.toolkit.controls.popups.PopupContent.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.controls.popups.PopupContent.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	onButtonClicked: function(button) {
		return true;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.PopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.PopupContent
});
haxe.ui.toolkit.controls.popups.SimplePopupContent = function(text) {
	if(text == null) text = "";
	haxe.ui.toolkit.controls.popups.PopupContent.call(this);
	this._autoSize = true;
	this._textControl = new haxe.ui.toolkit.controls.Text();
	this._textControl.set_multiline(true);
	this._textControl.set_wrapLines(true);
	this._textControl.set_percentWidth(100);
	this._textControl.set_text(text);
	this._textControl.set_autoSize(true);
};
$hxClasses["haxe.ui.toolkit.controls.popups.SimplePopupContent"] = haxe.ui.toolkit.controls.popups.SimplePopupContent;
haxe.ui.toolkit.controls.popups.SimplePopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","SimplePopupContent"];
haxe.ui.toolkit.controls.popups.SimplePopupContent.__super__ = haxe.ui.toolkit.controls.popups.PopupContent;
haxe.ui.toolkit.controls.popups.SimplePopupContent.prototype = $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.popups.PopupContent.prototype.initialize.call(this);
		this.addChild(this._textControl);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.popups.PopupContent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.SimplePopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.SimplePopupContent
});
haxe.ui.toolkit.controls.popups.BusyPopupContent = function(text) {
	if(text == null) text = "";
	haxe.ui.toolkit.controls.popups.SimplePopupContent.call(this,text);
};
$hxClasses["haxe.ui.toolkit.controls.popups.BusyPopupContent"] = haxe.ui.toolkit.controls.popups.BusyPopupContent;
haxe.ui.toolkit.controls.popups.BusyPopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","BusyPopupContent"];
haxe.ui.toolkit.controls.popups.BusyPopupContent.__super__ = haxe.ui.toolkit.controls.popups.SimplePopupContent;
haxe.ui.toolkit.controls.popups.BusyPopupContent.prototype = $extend(haxe.ui.toolkit.controls.popups.SimplePopupContent.prototype,{
	initialize: function() {
		this.addChild(this._textControl);
		this.set_height(this._textControl.get_height() + 15);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.popups.SimplePopupContent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.BusyPopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.BusyPopupContent
});
haxe.ui.toolkit.controls.popups.CalendarPopupContent = function() {
	haxe.ui.toolkit.controls.popups.PopupContent.call(this);
	this._cal = new haxe.ui.toolkit.containers.CalendarView();
	this._cal.set_percentWidth(100);
};
$hxClasses["haxe.ui.toolkit.controls.popups.CalendarPopupContent"] = haxe.ui.toolkit.controls.popups.CalendarPopupContent;
haxe.ui.toolkit.controls.popups.CalendarPopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","CalendarPopupContent"];
haxe.ui.toolkit.controls.popups.CalendarPopupContent.__super__ = haxe.ui.toolkit.controls.popups.PopupContent;
haxe.ui.toolkit.controls.popups.CalendarPopupContent.prototype = $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.popups.PopupContent.prototype.initialize.call(this);
		this.addChild(this._cal);
		this.set_height(this._cal.get_height());
	}
	,get_selectedDate: function() {
		return this._cal.get_selectedDate();
	}
	,set_selectedDate: function(value) {
		this._cal.set_selectedDate(value);
		return value;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.popups.PopupContent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.CalendarPopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.CalendarPopupContent
	,__properties__: $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate"})
});
haxe.ui.toolkit.controls.popups.CustomPopupContent = function(display) {
	haxe.ui.toolkit.controls.popups.PopupContent.call(this);
	this._display = display;
};
$hxClasses["haxe.ui.toolkit.controls.popups.CustomPopupContent"] = haxe.ui.toolkit.controls.popups.CustomPopupContent;
haxe.ui.toolkit.controls.popups.CustomPopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","CustomPopupContent"];
haxe.ui.toolkit.controls.popups.CustomPopupContent.__super__ = haxe.ui.toolkit.controls.popups.PopupContent;
haxe.ui.toolkit.controls.popups.CustomPopupContent.prototype = $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.popups.PopupContent.prototype.initialize.call(this);
		this.addChild(this._display);
		this.set_height(this._display.get_height());
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.popups.PopupContent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.CustomPopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.CustomPopupContent
});
haxe.ui.toolkit.controls.popups.ListPopupContent = function(dataSource,selectedIndex,fn) {
	if(selectedIndex == null) selectedIndex = -1;
	this.DELAY = 0;
	this._selectedIndex = -1;
	this._maxListSize = 4;
	haxe.ui.toolkit.controls.popups.PopupContent.call(this);
	this._selectedIndex = selectedIndex;
	this._fn = fn;
	this._list = new haxe.ui.toolkit.containers.ListView();
	this._list.set_percentWidth(100);
	this._list.set_dataSource(dataSource);
};
$hxClasses["haxe.ui.toolkit.controls.popups.ListPopupContent"] = haxe.ui.toolkit.controls.popups.ListPopupContent;
haxe.ui.toolkit.controls.popups.ListPopupContent.__name__ = ["haxe","ui","toolkit","controls","popups","ListPopupContent"];
haxe.ui.toolkit.controls.popups.ListPopupContent.__super__ = haxe.ui.toolkit.controls.popups.PopupContent;
haxe.ui.toolkit.controls.popups.ListPopupContent.prototype = $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.controls.popups.PopupContent.prototype.initialize.call(this);
		this._list.addEventListener("haxeui_" + "change",$bind(this,this._onListChange));
		this.addChild(this._list);
		var n = this._maxListSize;
		if(n > this._list.get_listSize()) n = this._list.get_listSize();
		var listHeight = n * this._list.get_itemHeight() + (this._list.get_layout().get_padding().get_top() + this._list.get_layout().get_padding().get_bottom());
		this._list.set_height(listHeight);
		this.set_height(listHeight);
		this._list.setSelectedIndexNoEvent(this._selectedIndex);
	}
	,get_selectedIndex: function() {
		var index = this._selectedIndex;
		if(this._list.get_ready()) index = this._list.get_selectedIndex();
		return index;
	}
	,set_selectedIndex: function(value) {
		this._selectedIndex = value;
		if(this._list.get_ready()) this._list.set_selectedIndex(value);
		return value;
	}
	,get_listSize: function() {
		if(this._list.get_ready() == false) return -1;
		return this._list.get_listSize();
	}
	,_onListChange: function(event) {
		this.hideTimer = new openfl.utils.Timer(this.DELAY,1);
		this.hideTimer.addEventListener("timerComplete",$bind(this,this._onTimerComplete));
		this.hideTimer.start();
	}
	,_onTimerComplete: function(event) {
		this.hideTimer.removeEventListener("timerComplete",$bind(this,this._onTimerComplete));
		if(Std["is"](this.get_parent(),haxe.ui.toolkit.controls.popups.Popup)) haxe.ui.toolkit.core.PopupManager.get_instance().hidePopup(js.Boot.__cast(this.get_parent() , haxe.ui.toolkit.controls.popups.Popup));
		if(this._fn != null) {
			var item = this._list.get_selectedItems()[0];
			var index = this._list.getItemIndex(item);
			item.get_data().index = index;
			this._fn(item);
		}
	}
	,setSelectedIndexNoEvent: function(index) {
		this._selectedIndex = index;
		if(this._list.get_ready()) this._list.setSelectedIndexNoEvent(index);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.popups.PopupContent.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.ListPopupContent();
	}
	,__class__: haxe.ui.toolkit.controls.popups.ListPopupContent
	,__properties__: $extend(haxe.ui.toolkit.controls.popups.PopupContent.prototype.__properties__,{get_listSize:"get_listSize",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
haxe.ui.toolkit.core.interfaces.IDraggable = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IDraggable"] = haxe.ui.toolkit.core.interfaces.IDraggable;
haxe.ui.toolkit.core.interfaces.IDraggable.__name__ = ["haxe","ui","toolkit","core","interfaces","IDraggable"];
haxe.ui.toolkit.core.interfaces.IDraggable.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IDraggable
};
haxe.ui.toolkit.controls.popups.Popup = function(title,content,config,fn) {
	haxe.ui.toolkit.containers.VBox.call(this);
	this._autoSize = true;
	if(title != null) {
		this._titleBar = new haxe.ui.toolkit.containers.Box();
		this._titleBar.set_autoSize(false);
		this._titleBar.set_id("titleBar");
	}
	this._content = content;
	this._content.popup = this;
	if(title != null) {
		this._title = new haxe.ui.toolkit.controls.Text();
		this._title.set_id("title");
		this._title.set_text(title);
	}
	this._buttonBar = new haxe.ui.toolkit.containers.Box();
	this._buttonBar.set_id("buttonBar");
	this._buttonBar.set_percentWidth(100);
	this._buttonBar.set_horizontalAlign("center");
	this._config = config;
	if(this._config == null) {
		this._config = { };
		this._config.buttons = new Array();
	}
	if(this._config.id != null) this.set_id(this._config.id);
	if(this._config.styleName != null) this.set_styleName(this._config.styleName);
	this._fn = fn;
};
$hxClasses["haxe.ui.toolkit.controls.popups.Popup"] = haxe.ui.toolkit.controls.popups.Popup;
haxe.ui.toolkit.controls.popups.Popup.__name__ = ["haxe","ui","toolkit","controls","popups","Popup"];
haxe.ui.toolkit.controls.popups.Popup.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDraggable];
haxe.ui.toolkit.controls.popups.Popup.__super__ = haxe.ui.toolkit.containers.VBox;
haxe.ui.toolkit.controls.popups.Popup.prototype = $extend(haxe.ui.toolkit.containers.VBox.prototype,{
	initialize: function() {
		var _g1 = this;
		haxe.ui.toolkit.containers.VBox.prototype.initialize.call(this);
		if(this._titleBar != null) {
			this._titleBar.set_percentWidth(100);
			this._titleBar.addChild(this._title);
			this._titleBar.get_sprite().buttonMode = true;
			this._titleBar.get_sprite().set_useHandCursor(true);
			this.addChild(this._titleBar);
		}
		if(this._content == null) this._content = new haxe.ui.toolkit.controls.popups.PopupContent();
		this._content.set_id("popupContent");
		this._content.set_percentWidth(100);
		this.addChild(this._content);
		if(this._config.buttons.length > 0) {
			var box = new haxe.ui.toolkit.containers.HBox();
			box.set_horizontalAlign(this._buttonBar.get_horizontalAlign());
			var buttons = this._config.buttons;
			this._buttonBar.addChild(box);
			var _g = 0;
			while(_g < buttons.length) {
				var info = [buttons[_g]];
				++_g;
				if((info[0].type & 16777216) != 16777216) {
					var button = this.createStandardButton(info[0].type);
					if(button != null) box.addChild(button);
				} else {
					var button1 = new haxe.ui.toolkit.controls.Button();
					button1.set_text(info[0].text);
					button1.addEventListener(openfl.events.MouseEvent.CLICK,(function(info) {
						return function(e) {
							_g1.clickButton(info[0].type);
						};
					})(info));
					box.addChild(button1);
				}
			}
			this.addChild(this._buttonBar);
		}
		if(this._config.width != null) this.set_width(this._config.width);
		haxe.ui.toolkit.core.PopupManager.get_instance().centerPopup(this);
	}
	,allowDrag: function(event) {
		return this._titleBar.hitTest(event.stageX,event.stageY);
	}
	,get_content: function() {
		return this._content;
	}
	,get_config: function() {
		return this._config;
	}
	,createStandardButton: function(v) {
		var _g = this;
		var button = null;
		if(v == 1) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("OK");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e) {
				_g.clickButton(1);
			});
		}
		if(v == 16) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("Yes");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e1) {
				_g.clickButton(16);
			});
		}
		if(v == 256) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("No");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e2) {
				_g.clickButton(256);
			});
		}
		if(v == 4096) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("Cancel");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e3) {
				_g.clickButton(4096);
			});
		}
		if(v == 65536) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("Confirm");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e4) {
				_g.clickButton(65536);
			});
		}
		if(v == 1048576) {
			button = new haxe.ui.toolkit.controls.Button();
			button.set_text("Close");
			button.addEventListener(openfl.events.MouseEvent.CLICK,function(e5) {
				_g.clickButton(1048576);
			});
		}
		return button;
	}
	,clickButton: function(button) {
		if(this._content.onButtonClicked(button) == true) haxe.ui.toolkit.core.PopupManager.get_instance().hidePopup(this);
		if(this._fn != null) this._fn(button);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.VBox.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.popups.Popup();
	}
	,__class__: haxe.ui.toolkit.controls.popups.Popup
	,__properties__: $extend(haxe.ui.toolkit.containers.VBox.prototype.__properties__,{get_config:"get_config",get_content:"get_content"})
});
haxe.ui.toolkit.controls.selection = {};
haxe.ui.toolkit.controls.selection.DateSelector = function() {
	this.dateFormat = "%d/%m/%Y";
	haxe.ui.toolkit.controls.Button.call(this);
	this.set_text("Select Date");
	this.set_toggle(true);
};
$hxClasses["haxe.ui.toolkit.controls.selection.DateSelector"] = haxe.ui.toolkit.controls.selection.DateSelector;
haxe.ui.toolkit.controls.selection.DateSelector.__name__ = ["haxe","ui","toolkit","controls","selection","DateSelector"];
haxe.ui.toolkit.controls.selection.DateSelector.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.selection.DateSelector.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.controls.Button.prototype.preInitialize.call(this);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_selectionMethod() != null) this._method = this._baseStyle.get_selectionMethod();
		}
	}
	,initialize: function() {
		haxe.ui.toolkit.controls.Button.prototype.initialize.call(this);
		this.set_autoSize(false);
	}
	,_onMouseClick: function(event) {
		haxe.ui.toolkit.controls.Button.prototype._onMouseClick.call(this,event);
		if(this._cal == null || this._cal.get_visible() == false) this.showCalendar(); else this.hideCalendar();
	}
	,applyStyle: function() {
		haxe.ui.toolkit.controls.Button.prototype.applyStyle.call(this);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_selectionMethod() != null && this._method == null) this._method = this._baseStyle.get_selectionMethod();
		}
	}
	,showCalendar: function() {
		var _g = this;
		if(this._method == "popup") haxe.ui.toolkit.core.PopupManager.get_instance().showCalendar("Select Date",function(button,date) {
			_g.set_selected(false);
			if(button == 65536) {
				var dateString = DateTools.format(date,_g.dateFormat);
				_g.set_text(dateString);
			}
		}); else {
			if(this._cal == null) {
				this._cal = new haxe.ui.toolkit.containers.CalendarView();
				this._cal.addEventListener(openfl.events.Event.CHANGE,$bind(this,this.onDateChange));
				this._cal.addEventListener(openfl.events.Event.ADDED_TO_STAGE,function(e) {
					_g.showCalendar();
				});
				this.get_root().addChild(this._cal);
				return;
			}
			this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
			this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onRootMouseDown));
			this._cal.set_x(this.get_stageX() - this.get_root().get_stageX());
			this._cal.set_y(this.get_stageY() + this.get_height() - this.get_root().get_stageY());
			this._cal.get_sprite().set_filters([new openfl.filters.DropShadowFilter(4,45,8421504,1,4,4,1,3)]);
			if(this._cal.get_stageY() + this._cal.get_height() > haxe.ui.toolkit.core.Screen.get_instance().get_height()) {
				this._cal.set_y(this.get_stageY() - this._cal.get_height());
				this.set_styleName("dropUp");
			} else this.set_styleName(null);
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.selection.DateSelector);
			if(transition == "slide") {
				this._cal.set_clipHeight(0);
				this._cal.get_sprite().set_alpha(1);
				this._cal.set_visible(true);
				motion.Actuate.tween(this._cal,.1,{ clipHeight : this._cal.get_height()},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
					_g._cal.clearClip();
				});
			} else if(transition == "fade") {
				this._cal.get_sprite().set_alpha(0);
				this._cal.set_visible(true);
				motion.Actuate.tween(this._cal.get_sprite(),.2,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				});
			} else {
				this._cal.get_sprite().set_alpha(1);
				this._cal.set_visible(true);
			}
			this.set_selected(true);
		}
	}
	,hideCalendar: function() {
		var _g = this;
		if(this._cal != null) {
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.selection.DateSelector);
			if(transition == "slide") {
				this._cal.get_sprite().set_alpha(1);
				motion.Actuate.tween(this._cal,.1,{ clipHeight : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
					_g._cal.set_visible(false);
					_g._cal.clearClip();
				});
			} else if(transition == "fade") motion.Actuate.tween(this._cal.get_sprite(),.2,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				_g._cal.set_visible(false);
			}); else {
				this._cal.get_sprite().set_alpha(1);
				this._cal.set_visible(false);
			}
			this.set_selected(false);
		}
	}
	,get_method: function() {
		return this._method;
	}
	,set_method: function(value) {
		this._method = value;
		return value;
	}
	,get_date: function() {
		if(this._cal != null) return this._cal.get_selectedDate();
		return new Date();
	}
	,set_dateFormat: function(value) {
		this.dateFormat = value;
		if(this._cal != null) this.set_text(DateTools.format(this._cal.get_selectedDate(),this.dateFormat));
		return value;
	}
	,_onRootMouseDown: function(event) {
		var mouseInList = false;
		if(this._cal != null) mouseInList = this._cal.hitTest(event.stageX,event.stageY);
		var mouseIn = this.hitTest(event.stageX,event.stageY);
		if(mouseInList == false && this._cal != null && mouseIn == false) {
			this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
			this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onRootMouseDown));
			this.hideCalendar();
		}
	}
	,onDateChange: function(event) {
		var dateString = DateTools.format(this._cal.get_selectedDate(),this.dateFormat);
		this.set_text(dateString);
		this.hideCalendar();
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.selection.DateSelector();
	}
	,__class__: haxe.ui.toolkit.controls.selection.DateSelector
	,__properties__: $extend(haxe.ui.toolkit.controls.Button.prototype.__properties__,{set_dateFormat:"set_dateFormat",get_date:"get_date",set_method:"set_method",get_method:"get_method"})
});
haxe.ui.toolkit.controls.selection.ListSelector = function() {
	this._selectedIndex = -1;
	this._maxListSize = 4;
	haxe.ui.toolkit.controls.Button.call(this);
	this.set_toggle(true);
	this.set_allowSelection(false);
	this.dispatchChangeEvents = false;
};
$hxClasses["haxe.ui.toolkit.controls.selection.ListSelector"] = haxe.ui.toolkit.controls.selection.ListSelector;
haxe.ui.toolkit.controls.selection.ListSelector.__name__ = ["haxe","ui","toolkit","controls","selection","ListSelector"];
haxe.ui.toolkit.controls.selection.ListSelector.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IDataComponent];
haxe.ui.toolkit.controls.selection.ListSelector.__super__ = haxe.ui.toolkit.controls.Button;
haxe.ui.toolkit.controls.selection.ListSelector.prototype = $extend(haxe.ui.toolkit.controls.Button.prototype,{
	preInitialize: function() {
		haxe.ui.toolkit.controls.Button.prototype.preInitialize.call(this);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_selectionMethod() != null) this._method = this._baseStyle.get_selectionMethod();
		}
	}
	,initialize: function() {
		haxe.ui.toolkit.controls.Button.prototype.initialize.call(this);
		this.set_autoSize(false);
	}
	,_onMouseClick: function(event) {
		if(this._list == null || this._list.get_visible() == false) this.showList(); else this.hideList();
	}
	,applyStyle: function() {
		haxe.ui.toolkit.controls.Button.prototype.applyStyle.call(this);
		if(this._baseStyle != null) {
			if(this._baseStyle.get_selectionMethod() != null && this._method == null) this._method = this._baseStyle.get_selectionMethod();
		}
	}
	,get_dataSource: function() {
		if(this._dataSource == null) this._dataSource = new haxe.ui.toolkit.data.ArrayDataSource();
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,showList: function() {
		var _g = this;
		if(this._method == "popup") haxe.ui.toolkit.core.PopupManager.get_instance().showList(this.get_dataSource(),this._selectedIndex,"Select Item",{ },function(item) {
			_g._selectedIndex = item.get_data().index;
			_g.set_text(item.get_data().text);
			_g._selectedItems = new Array();
			_g._selectedItems.push(item);
			_g.set_selected(false);
			var event = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change");
			_g.dispatchEvent(event);
		}); else {
			if(this._list == null) {
				this._list = new haxe.ui.toolkit.containers.ListView();
				this._list.addEventListener("haxeui_" + "change",$bind(this,this._onListChange));
				this._list.get_content().addEventListener(openfl.events.Event.ADDED_TO_STAGE,function(e) {
					_g.showList();
				});
				this.get_root().addChild(this._list);
				return;
			}
			this._list.set_dataSource(this._dataSource);
			this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
			this.get_root().addEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onRootMouseDown));
			this._list.set_x(this.get_stageX() - this.get_root().get_stageX());
			this._list.set_y(this.get_stageY() + this.get_height() - this.get_root().get_stageY());
			if(this._list.get_width() == 0) this._list.set_width(this.get_width());
			var n = this._maxListSize;
			if(n > this._list.get_listSize()) n = this._list.get_listSize();
			var listHeight = n * this._list.get_itemHeight() + (this._list.get_layout().get_padding().get_top() + this._list.get_layout().get_padding().get_bottom());
			this._list.set_height(listHeight);
			this._list.setSelectedIndexNoEvent(this._selectedIndex);
			if(this._list.get_stageY() + listHeight > haxe.ui.toolkit.core.Screen.get_instance().get_height()) {
				this._list.set_y(this.get_stageY() - this._list.get_height());
				this.set_styleName("dropUp");
			} else this.set_styleName(null);
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.selection.ListSelector);
			if(transition == "slide") {
				this._list.set_clipHeight(0);
				this._list.get_sprite().set_alpha(1);
				this._list.set_visible(true);
				motion.Actuate.tween(this._list,.1,{ clipHeight : listHeight},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
					_g._list.clearClip();
				});
			} else if(transition == "fade") {
				this._list.get_sprite().set_alpha(0);
				this._list.set_visible(true);
				motion.Actuate.tween(this._list.get_sprite(),.2,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				});
			} else {
				this._list.get_sprite().set_alpha(1);
				this._list.set_visible(true);
			}
			this.set_selected(true);
		}
	}
	,hideList: function() {
		var _g = this;
		if(this._list != null) {
			var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.selection.ListSelector);
			if(transition == "slide") {
				this._list.get_sprite().set_alpha(1);
				motion.Actuate.tween(this._list,.1,{ clipHeight : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
					_g._list.set_visible(false);
					_g._list.clearClip();
				});
			} else if(transition == "fade") motion.Actuate.tween(this._list.get_sprite(),.2,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
				_g._list.set_visible(false);
			}); else {
				this._list.get_sprite().set_alpha(1);
				this._list.set_visible(false);
			}
			this.set_selected(false);
		}
	}
	,get_method: function() {
		return this._method;
	}
	,set_method: function(value) {
		this._method = value;
		return value;
	}
	,get_selectedItems: function() {
		return this._selectedItems;
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		this._selectedIndex = value;
		if(this._list != null) {
			this._list.set_selectedIndex(value);
			this._selectedItems = this._list.get_selectedItems();
		}
		if(this._selectedIndex > -1 && this._dataSource != null) {
			var n = 0;
			if(this.get_dataSource().moveFirst()) do {
				if(n == this._selectedIndex) {
					this.set_text(this._dataSource.get().text);
					break;
				}
				n++;
			} while(this.get_dataSource().moveNext());
		}
		return value;
	}
	,_onRootMouseDown: function(event) {
		var mouseInList = false;
		if(this._list != null) mouseInList = this._list.hitTest(event.stageX,event.stageY);
		var mouseIn = this.hitTest(event.stageX,event.stageY);
		if(mouseInList == false && this._list != null && mouseIn == false) {
			this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this._onRootMouseDown));
			this.get_root().removeEventListener(openfl.events.MouseEvent.MOUSE_WHEEL,$bind(this,this._onRootMouseDown));
			this.hideList();
		}
	}
	,_onListChange: function(event) {
		if(this._list.get_selectedItems() != null && this._list.get_selectedItems().length > 0) {
			this.set_text(this._list.get_selectedItems()[0].get_data().text);
			this._selectedIndex = this._list.get_selectedIndex();
			this._selectedItems = this._list.get_selectedItems();
			this.hideList();
			var event1 = new haxe.ui.toolkit.events.UIEvent("haxeui_" + "change");
			this.dispatchEvent(event1);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.controls.Button.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.selection.ListSelector();
	}
	,__class__: haxe.ui.toolkit.controls.selection.ListSelector
	,__properties__: $extend(haxe.ui.toolkit.controls.Button.prototype.__properties__,{set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_selectedItems:"get_selectedItems",set_method:"set_method",get_method:"get_method",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
haxe.ui.toolkit.controls.selection.DropDownList = function() {
	haxe.ui.toolkit.containers.ListView.call(this);
};
$hxClasses["haxe.ui.toolkit.controls.selection.DropDownList"] = haxe.ui.toolkit.controls.selection.DropDownList;
haxe.ui.toolkit.controls.selection.DropDownList.__name__ = ["haxe","ui","toolkit","controls","selection","DropDownList"];
haxe.ui.toolkit.controls.selection.DropDownList.__super__ = haxe.ui.toolkit.containers.ListView;
haxe.ui.toolkit.controls.selection.DropDownList.prototype = $extend(haxe.ui.toolkit.containers.ListView.prototype,{
	clone: function() {
		var c = haxe.ui.toolkit.containers.ListView.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.controls.selection.DropDownList();
	}
	,__class__: haxe.ui.toolkit.controls.selection.DropDownList
});
haxe.ui.toolkit.core.ClassManager = function() {
	this.registerDefaults();
};
$hxClasses["haxe.ui.toolkit.core.ClassManager"] = haxe.ui.toolkit.core.ClassManager;
haxe.ui.toolkit.core.ClassManager.__name__ = ["haxe","ui","toolkit","core","ClassManager"];
haxe.ui.toolkit.core.ClassManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.ClassManager.get_instance = function() {
	if(haxe.ui.toolkit.core.ClassManager._instance == null) haxe.ui.toolkit.core.ClassManager._instance = new haxe.ui.toolkit.core.ClassManager();
	return haxe.ui.toolkit.core.ClassManager._instance;
};
haxe.ui.toolkit.core.ClassManager.prototype = {
	registerDefaults: function() {
	}
	,getComponentClassName: function(simpleName) {
		if(this.componentClassMap == null) return null;
		var key = simpleName;
		var entry = this.componentClassMap.get(key);
		if(entry == null) return null;
		return entry.className;
	}
	,registerComponentClass: function(cls,simpleName) {
		var className = Type.getClassName(cls);
		this.registerComponentClassName(className,simpleName);
	}
	,registerComponentClassName: function(className,simpleName) {
		if(this.componentClassMap == null) this.componentClassMap = new haxe.ds.StringMap();
		var entry = new haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry();
		entry.simpleName = simpleName;
		entry.className = className;
		this.componentClassMap.set(simpleName,entry);
	}
	,hasDataSourceClass: function(simpleName) {
		if(this.dataSourceClassMap == null) return false;
		return this.dataSourceClassMap.exists(simpleName);
	}
	,getDataSourceClassName: function(simpleName) {
		if(this.dataSourceClassMap == null) return null;
		var entry = this.dataSourceClassMap.get(simpleName);
		if(entry == null) return null;
		return entry.className;
	}
	,registerDataSourceClass: function(cls,simpleName) {
		var className = Type.getClassName(cls);
		this.registerDataSourceClassName(className,simpleName);
	}
	,registerDataSourceClassName: function(className,simpleName) {
		if(this.dataSourceClassMap == null) this.dataSourceClassMap = new haxe.ds.StringMap();
		var entry = new haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry();
		entry.simpleName = simpleName;
		entry.className = className;
		this.dataSourceClassMap.set(simpleName,entry);
	}
	,__class__: haxe.ui.toolkit.core.ClassManager
};
haxe.ui.toolkit.core._ClassManager = {};
haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry = function() {
};
$hxClasses["haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry"] = haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry;
haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.__name__ = ["haxe","ui","toolkit","core","_ClassManager","ClassRegistryEntry"];
haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.prototype = {
	__class__: haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry
};
haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry = function() {
	haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.call(this);
};
$hxClasses["haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry"] = haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry;
haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry.__name__ = ["haxe","ui","toolkit","core","_ClassManager","ComponentRegistryEntry"];
haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry.__super__ = haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry;
haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry.prototype = $extend(haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.prototype,{
	__class__: haxe.ui.toolkit.core._ClassManager.ComponentRegistryEntry
});
haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry = function() {
	haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.call(this);
};
$hxClasses["haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry"] = haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry;
haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry.__name__ = ["haxe","ui","toolkit","core","_ClassManager","DataSourceRegistryEntry"];
haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry.__super__ = haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry;
haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry.prototype = $extend(haxe.ui.toolkit.core._ClassManager.ClassRegistryEntry.prototype,{
	__class__: haxe.ui.toolkit.core._ClassManager.DataSourceRegistryEntry
});
haxe.ui.toolkit.core.Client = function() {
};
$hxClasses["haxe.ui.toolkit.core.Client"] = haxe.ui.toolkit.core.Client;
haxe.ui.toolkit.core.Client.__name__ = ["haxe","ui","toolkit","core","Client"];
haxe.ui.toolkit.core.Client.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.Client.get_instance = function() {
	if(haxe.ui.toolkit.core.Client._instance == null) {
		haxe.ui.toolkit.core.Client._instance = new haxe.ui.toolkit.core.Client();
		haxe.ui.toolkit.core.Client._instance.init();
	}
	return haxe.ui.toolkit.core.Client._instance;
};
haxe.ui.toolkit.core.Client.prototype = {
	init: function() {
	}
	,get_language: function() {
		return openfl.system.Capabilities.get_language();
	}
	,get_dpi: function() {
		return openfl.system.Capabilities.get_screenDPI();
	}
	,get_platform: function() {
		return "html5";
		return null;
	}
	,get_target: function() {
		return "html5";
		return null;
	}
	,get_mobile: function() {
		return false;
	}
	,get_screenWidth: function() {
		return openfl.system.Capabilities.get_screenResolutionX();
	}
	,get_screenHeight: function() {
		return openfl.system.Capabilities.get_screenResolutionY();
	}
	,get_windowWidth: function() {
		return openfl.Lib.get_current().get_stage().get_stageWidth();
	}
	,get_windowHeight: function() {
		return openfl.Lib.get_current().get_stage().get_stageHeight();
	}
	,__class__: haxe.ui.toolkit.core.Client
	,__properties__: {get_mobile:"get_mobile",get_target:"get_target",get_windowHeight:"get_windowHeight",get_windowWidth:"get_windowWidth",get_screenHeight:"get_screenHeight",get_screenWidth:"get_screenWidth",get_platform:"get_platform",get_dpi:"get_dpi",get_language:"get_language"}
};
haxe.ui.toolkit.core.FocusManager = function() {
};
$hxClasses["haxe.ui.toolkit.core.FocusManager"] = haxe.ui.toolkit.core.FocusManager;
haxe.ui.toolkit.core.FocusManager.__name__ = ["haxe","ui","toolkit","core","FocusManager"];
haxe.ui.toolkit.core.FocusManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.FocusManager.get_instance = function() {
	if(haxe.ui.toolkit.core.FocusManager._instance == null) haxe.ui.toolkit.core.FocusManager._instance = new haxe.ui.toolkit.core.FocusManager();
	return haxe.ui.toolkit.core.FocusManager._instance;
};
haxe.ui.toolkit.core.FocusManager.prototype = {
	__class__: haxe.ui.toolkit.core.FocusManager
};
haxe.ui.toolkit.core.Macros = function() { };
$hxClasses["haxe.ui.toolkit.core.Macros"] = haxe.ui.toolkit.core.Macros;
haxe.ui.toolkit.core.Macros.__name__ = ["haxe","ui","toolkit","core","Macros"];
haxe.ui.toolkit.core.Macros.processNode = function(node,types,paths) {
	var nodeName = node.get_nodeName();
	var n = nodeName.indexOf(":");
	if(n != -1) nodeName = HxOverrides.substr(nodeName,n + 1,nodeName.length);
	nodeName = nodeName.toLowerCase();
	if(nodeName == "import") {
	}
	var id = node.get("id");
	if(id != null && id.length > 0) {
		var cls = haxe.ui.toolkit.core.Macros.componentClasses.get(nodeName);
		if(cls != null) types.set(id,cls); else haxe.Log.trace("WARNING: '" + nodeName + "' hasnt been registered",{ fileName : "Macros.hx", lineNumber : 448, className : "haxe.ui.toolkit.core.Macros", methodName : "processNode"});
	}
	var $it0 = node.elements();
	while( $it0.hasNext() ) {
		var child = $it0.next();
		haxe.ui.toolkit.core.Macros.processNode(child,types,paths);
	}
};
haxe.ui.toolkit.core.Macros.getFunction = function(name,fields) {
	var fn = null;
	var _g = 0;
	try {
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			if(f.name == name) {
				{
					var _g1 = f.kind;
					switch(_g1[1]) {
					case 1:
						var f1 = _g1[2];
						fn = f1;
						throw "__break__";
						break;
					default:
					}
				}
				throw "__break__";
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	return fn;
};
haxe.ui.toolkit.core.Macros.addFunction = function(name,e,access,fields,pos) {
	var fn;
	{
		var _g = e.expr;
		switch(_g[1]) {
		case 11:
			var f = _g[3];
			fn = f;
			break;
		default:
			throw "false";
		}
	}
	fields.push({ name : name, doc : null, meta : [], access : access, kind : haxe.macro.FieldType.FFun(fn), pos : pos});
};
haxe.ui.toolkit.core.Macros.getFieldsWithMeta = function(meta,fields) {
	var arr = new Array();
	var _g = 0;
	while(_g < fields.length) {
		var f = fields[_g];
		++_g;
		if(haxe.ui.toolkit.core.Macros.hasMeta(f,meta)) arr.push(f);
	}
	return arr;
};
haxe.ui.toolkit.core.Macros.getSuperClass = function(t) {
	var superClass = null;
	switch(t[1]) {
	case 5:
		var t1 = t[2];
		break;
	case 0:
		var t2 = t[2];
		break;
	case 7:
		var t3 = t[2];
		break;
	case 4:
		var t4 = t[2];
		break;
	case 6:
		var t5 = t[2];
		break;
	case 2:
		var t6 = t[2];
		superClass = t6.get().superClass;
		break;
	case 1:
		var t7 = t[2];
		break;
	case 3:
		var t8 = t[2];
		break;
	case 8:
		var t9 = t[2];
		break;
	}
	return superClass;
};
haxe.ui.toolkit.core.Macros.insertLine = function(fn,e,location) {
	{
		var _g = fn.expr.expr;
		switch(_g[1]) {
		case 12:
			var el = _g[2];
			fn.expr = { expr : haxe.macro.ExprDef.EBlock(haxe.ui.toolkit.core.Macros.insertExpr(el,location,e)), pos : { file : "/usr/lib/haxe/lib/haxeui/1,5,1/haxe/ui/toolkit/core/Macros.hx", min : 16770, max : 16799}};
			break;
		default:
			fn.expr = { expr : haxe.macro.ExprDef.EBlock(haxe.ui.toolkit.core.Macros.insertExpr([fn.expr],location,e)), pos : { file : "/usr/lib/haxe/lib/haxeui/1,5,1/haxe/ui/toolkit/core/Macros.hx", min : 16822, max : 16860}};
		}
	}
};
haxe.ui.toolkit.core.Macros.insertExpr = function(arr,pos,item) {
	if(pos == -1) arr.push(item); else arr.splice(pos,0,item);
	return arr;
};
haxe.ui.toolkit.core.Macros.getClassNameFromType = function(t) {
	var className = "";
	switch(t[1]) {
	case 5:
		var t1 = t[2];
		className = t1.toString();
		break;
	case 0:
		var t2 = t[2];
		className = t2.toString();
		break;
	case 7:
		var t3 = t[2];
		className = "";
		break;
	case 4:
		var t4 = t[2];
		className = t4.toString();
		break;
	case 6:
		var t5 = t[2];
		className = "";
		break;
	case 2:
		var t6 = t[2];
		className = t6.toString();
		break;
	case 1:
		var t7 = t[2];
		className = t7.toString();
		break;
	case 3:
		var t8 = t[2];
		className = t8.toString();
		break;
	case 8:
		var t9 = t[2];
		className = t9.toString();
		break;
	}
	return className;
};
haxe.ui.toolkit.core.Macros.hasMeta = function(f,meta) {
	var has = false;
	var _g = 0;
	var _g1 = f.meta;
	while(_g < _g1.length) {
		var m = _g1[_g];
		++_g;
		if(m.name == meta || m.name == ":" + meta) {
			has = true;
			break;
		}
	}
	return has;
};
haxe.ui.toolkit.core.Macros.getClassName = function(t) {
	var name = null;
	switch(t[1]) {
	case 5:
		var t1 = t[2];
		break;
	case 0:
		var t2 = t[2];
		break;
	case 7:
		var t3 = t[2];
		break;
	case 4:
		var t4 = t[2];
		break;
	case 6:
		var t5 = t[2];
		break;
	case 2:
		var t6 = t[2];
		name = t6.get().module;
		break;
	case 1:
		var t7 = t[2];
		break;
	case 3:
		var t8 = t[2];
		break;
	case 8:
		var t9 = t[2];
		break;
	}
	return name;
};
haxe.ui.toolkit.core.Macros.hasInterface = function(t,interfaceRequired) {
	var has = false;
	switch(t[1]) {
	case 5:
		var t1 = t[2];
		break;
	case 0:
		var t2 = t[2];
		break;
	case 7:
		var t3 = t[2];
		break;
	case 4:
		var t4 = t[2];
		break;
	case 6:
		var t5 = t[2];
		break;
	case 2:
		var t6 = t[2];
		while(t6 != null) {
			var _g = 0;
			var _g1 = t6.get().interfaces;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				var interfaceName = i.t.toString();
				if(interfaceName == interfaceRequired) {
					has = true;
					break;
				}
			}
			if(has == false) {
				if(t6.get().superClass != null) t6 = t6.get().superClass.t; else t6 = null;
			} else break;
		}
		break;
	case 1:
		var t7 = t[2];
		break;
	case 3:
		var t8 = t[2];
		break;
	case 8:
		var t9 = t[2];
		break;
	}
	return has;
};
haxe.ui.toolkit.core.Macros.resolveResource = function(resourcePath,paths) {
	return resourcePath;
};
haxe.ui.toolkit.core.PopupManager = function() {
	this.defaultWidth = 300;
	this.defaultTitle = "HaxeUI";
};
$hxClasses["haxe.ui.toolkit.core.PopupManager"] = haxe.ui.toolkit.core.PopupManager;
haxe.ui.toolkit.core.PopupManager.__name__ = ["haxe","ui","toolkit","core","PopupManager"];
haxe.ui.toolkit.core.PopupManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.PopupManager.get_instance = function() {
	if(haxe.ui.toolkit.core.PopupManager._instance == null) haxe.ui.toolkit.core.PopupManager._instance = new haxe.ui.toolkit.core.PopupManager();
	return haxe.ui.toolkit.core.PopupManager._instance;
};
haxe.ui.toolkit.core.PopupManager.prototype = {
	showSimple: function(text,title,config,fn) {
		if(config == null) config = 1;
		var p = this.buildPopup(new haxe.ui.toolkit.controls.popups.SimplePopupContent(text),title,config,fn);
		this.showPopup(p);
		return p;
	}
	,showCustom: function(display,title,config,fn) {
		if(config == null) config = 1;
		var p = this.buildPopup(new haxe.ui.toolkit.controls.popups.CustomPopupContent(display),title,config,fn);
		this.showPopup(p);
		return p;
	}
	,showList: function(items,selectedIndex,title,config,fn) {
		if(selectedIndex == null) selectedIndex = -1;
		var ds = null;
		if((items instanceof Array) && items.__enum__ == null) {
			var arr;
			arr = js.Boot.__cast(items , Array);
			ds = new haxe.ui.toolkit.data.ArrayDataSource();
			var _g = 0;
			while(_g < arr.length) {
				var item = arr[_g];
				++_g;
				if(typeof(item) == "string") {
					var o = { };
					o.text = js.Boot.__cast(item , String);
					ds.add(o);
				} else ds.add(item);
			}
		} else if(js.Boot.__instanceof(items,haxe.ui.toolkit.data.IDataSource)) ds = js.Boot.__cast(items , haxe.ui.toolkit.data.IDataSource);
		var p = this.buildPopup(new haxe.ui.toolkit.controls.popups.ListPopupContent(ds,selectedIndex,fn),title,config,fn);
		this.showPopup(p);
		return p;
	}
	,showCalendar: function(title,fn) {
		var config = { modal : true, buttons : 69632};
		var content = new haxe.ui.toolkit.controls.popups.CalendarPopupContent();
		var tempFn = function(button) {
			if(fn != null) {
				if(button == 65536) fn(button,content.get_selectedDate()); else fn(button,null);
			}
		};
		var p = this.buildPopup(content,title,config,tempFn);
		this.showPopup(p);
		return p;
	}
	,showBusy: function(text,delay,title,config,fn) {
		if(delay == null) delay = -1;
		var _g = this;
		if(config == null) config = { };
		config.useDefaultTitle = false;
		var p = this.buildPopup(new haxe.ui.toolkit.controls.popups.BusyPopupContent(text),title,config,fn);
		this.showPopup(p);
		if(delay > 0) {
			var timer = new haxe.Timer(delay);
			timer.run = function() {
				timer.stop();
				_g.hidePopup(p);
			};
		}
		return p;
	}
	,showPopup: function(p) {
		var modal = true;
		if(p.get_config().modal != null) modal = p.get_config().modal;
		if(modal == true) p.get_root().showModalOverlay();
		p.get_root().addChild(p);
		this.centerPopup(p);
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.popups.Popup);
		if(transition == "slide") {
			var ypos = p.get_y();
			p.set_y(-p.get_height());
			p.set_visible(true);
			motion.Actuate.tween(p,.2,{ y : ypos},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			});
		} else if(transition == "fade") {
			p.get_sprite().set_alpha(0);
			p.set_visible(true);
			motion.Actuate.tween(p.get_sprite(),.2,{ alpha : 1},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			});
		} else p.set_visible(true);
	}
	,hidePopup: function(p,dispose) {
		if(dispose == null) dispose = true;
		var transition = haxe.ui.toolkit.core.Toolkit.getTransitionForClass(haxe.ui.toolkit.controls.popups.Popup);
		if(transition == "slide") motion.Actuate.tween(p,.2,{ y : p.get_root().get_height()},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			p.get_root().removeChild(p,dispose);
			p.get_root().hideModalOverlay();
		}); else if(transition == "fade") motion.Actuate.tween(p.get_sprite(),.2,{ alpha : 0},true).ease(motion.easing.Linear.get_easeNone()).onComplete(function() {
			p.get_root().removeChild(p,dispose);
			p.get_root().hideModalOverlay();
		}); else {
			p.get_root().removeChild(p,dispose);
			p.get_root().hideModalOverlay();
		}
	}
	,centerPopup: function(p) {
		p.set_x(Std["int"](p.get_root().get_width() / 2 - p.get_width() / 2));
		p.set_y(Std["int"](p.get_root().get_height() / 2 - p.get_height() / 2));
	}
	,buildPopup: function(content,title,config,fn) {
		config = this.buildConfig(config);
		if(title == null && config.useDefaultTitle == true) title = haxe.ui.toolkit.core.PopupManager.get_instance().defaultTitle;
		var p = new haxe.ui.toolkit.controls.popups.Popup(title,content,config,fn);
		p.set_root(config.root);
		p.set_visible(false);
		return p;
	}
	,buildConfig: function(config) {
		var c = { };
		c.id = null;
		c.styleName = null;
		c.modal = true;
		c.width = haxe.ui.toolkit.core.PopupManager.get_instance().defaultWidth;
		c.useDefaultTitle = true;
		c.root = haxe.ui.toolkit.core.RootManager.get_instance().get_currentRoot();
		if(config != null && ((config | 0) === config) == false) {
			if(config.id != null) c.id = config.id; else c.id = null;
			if(config.styleName != null) c.styleName = config.styleName; else c.styleName = null;
			if(config.modal != null) c.modal = config.modal; else c.modal = true;
			if(config.width != null) c.width = config.width; else c.width = haxe.ui.toolkit.core.PopupManager.get_instance().defaultWidth;
			if(config.useDefaultTitle != null) c.useDefaultTitle = config.useDefaultTitle; else c.useDefaultTitle = true;
			if(config.root != null) c.root = config.root; else c.root = haxe.ui.toolkit.core.RootManager.get_instance().get_currentRoot();
		}
		c.buttons = new Array();
		if(config != null) {
			if(((config | 0) === config)) c.buttons = this.buildButtonArray(config); else if((config instanceof Array) && config.__enum__ == null) c.buttons = this.buildButtonArray(config); else if(config.buttons != null) c.buttons = this.buildButtonArray(config.buttons);
		}
		return c;
	}
	,buildButtonArray: function(data) {
		var buttons = new Array();
		if(((data | 0) === data)) {
			var n;
			n = js.Boot.__cast(data , Int);
			if((n & 1) == 1) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(1));
			if((n & 16) == 16) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(16));
			if((n & 256) == 256) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(256));
			if((n & 4096) == 4096) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(4096));
			if((n & 65536) == 65536) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(65536));
			if((n & 1048576) == 1048576) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(1048576));
		} else if((data instanceof Array) && data.__enum__ == null) {
			var arr = data;
			var _g = 0;
			while(_g < arr.length) {
				var item = arr[_g];
				++_g;
				if(((item | 0) === item)) buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(js.Boot.__cast(item , Int))); else {
					var type = 16777216;
					if(item.type != null) type = item.type;
					var text = item.text;
					var fn = item.fn;
					buttons.push(new haxe.ui.toolkit.core.PopupButtonInfo(type,text,fn));
				}
			}
		}
		return buttons;
	}
	,__class__: haxe.ui.toolkit.core.PopupManager
};
haxe.ui.toolkit.core.PopupButton = function() { };
$hxClasses["haxe.ui.toolkit.core.PopupButton"] = haxe.ui.toolkit.core.PopupButton;
haxe.ui.toolkit.core.PopupButton.__name__ = ["haxe","ui","toolkit","core","PopupButton"];
haxe.ui.toolkit.core.PopupButtonInfo = function(type,text,fn) {
	if(type == null) type = 1;
	this.type = -1;
	this.type = type;
	this.text = text;
	this.fn = fn;
};
$hxClasses["haxe.ui.toolkit.core.PopupButtonInfo"] = haxe.ui.toolkit.core.PopupButtonInfo;
haxe.ui.toolkit.core.PopupButtonInfo.__name__ = ["haxe","ui","toolkit","core","PopupButtonInfo"];
haxe.ui.toolkit.core.PopupButtonInfo.prototype = {
	__class__: haxe.ui.toolkit.core.PopupButtonInfo
};
haxe.ui.toolkit.core.Root = function() {
	this._modalOverlayCounter = 0;
	haxe.ui.toolkit.core.Component.call(this);
	this._layout = new haxe.ui.toolkit.layout.AbsoluteLayout();
	this._clipContent = true;
	this._mousePos = new openfl.geom.Point(0,0);
	haxe.ui.toolkit.core.Screen.get_instance().addEventListener(openfl.events.Event.RESIZE,$bind(this,this._onScreenResize));
};
$hxClasses["haxe.ui.toolkit.core.Root"] = haxe.ui.toolkit.core.Root;
haxe.ui.toolkit.core.Root.__name__ = ["haxe","ui","toolkit","core","Root"];
haxe.ui.toolkit.core.Root.__super__ = haxe.ui.toolkit.core.Component;
haxe.ui.toolkit.core.Root.prototype = $extend(haxe.ui.toolkit.core.Component.prototype,{
	preInitialize: function() {
		var _g = this;
		haxe.ui.toolkit.core.Component.prototype.preInitialize.call(this);
		this.addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,function(event) {
			_g._mousePos = new openfl.geom.Point(event.stageX,event.stageY);
		});
		this.resizeRoot();
	}
	,_onScreenResize: function(event) {
		this.resizeRoot();
	}
	,get_mousePosition: function() {
		return this._mousePos;
	}
	,add: function(item) {
		var r = null;
		if(typeof(item) == "string") r = this.addChild(haxe.ui.toolkit.core.Toolkit.processXmlResource(item)); else if(js.Boot.__instanceof(item,haxe.ui.toolkit.core.Controller)) r = this.addChild((js.Boot.__cast(item , haxe.ui.toolkit.core.Controller)).get_view()); else haxe.Log.trace(Std.string(item) + " item not supported in Root.add",{ fileName : "Root.hx", lineNumber : 62, className : "haxe.ui.toolkit.core.Root", methodName : "add"});
		return r;
	}
	,resizeRoot: function() {
		if(this.get_percentWidth() > 0) this.set_width(haxe.ui.toolkit.core.Screen.get_instance().get_width() * this.get_percentWidth() / 100);
		if(this.get_percentHeight() > 0) this.set_height(haxe.ui.toolkit.core.Screen.get_instance().get_height() * this.get_percentHeight() / 100);
	}
	,showModalOverlay: function() {
		this._modalOverlayCounter++;
		if(this._modalOverlay == null) {
			this._modalOverlay = new haxe.ui.toolkit.core.Component();
			this._modalOverlay.set_id("modalOverlay");
			this._modalOverlay.set_percentWidth(this._modalOverlay.set_percentHeight(100));
		}
		if(this.findChild("modalOverlay") == null) this.addChild(this._modalOverlay);
		this._modalOverlay.set_visible(true);
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.popups.Popup) == false && child.get_id() != "modalOverlay") {
				var c;
				c = js.Boot.__cast(child , haxe.ui.toolkit.core.Component);
			}
		}
	}
	,hideModalOverlay: function() {
		this._modalOverlayCounter--;
		if(this._modalOverlayCounter <= 0) {
			if(this._modalOverlay != null) this._modalOverlay.set_visible(false);
			var _g = 0;
			var _g1 = this.get_children();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(js.Boot.__instanceof(child,haxe.ui.toolkit.controls.popups.Popup) == false && child.get_id() != "modalOverlay") {
					var c;
					c = js.Boot.__cast(child , haxe.ui.toolkit.core.Component);
				}
			}
			this._modalOverlayCounter = 0;
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.Component.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.Root();
	}
	,__class__: haxe.ui.toolkit.core.Root
	,__properties__: $extend(haxe.ui.toolkit.core.Component.prototype.__properties__,{get_mousePosition:"get_mousePosition"})
});
haxe.ui.toolkit.core.RootManager = function() {
	this._roots = new Array();
};
$hxClasses["haxe.ui.toolkit.core.RootManager"] = haxe.ui.toolkit.core.RootManager;
haxe.ui.toolkit.core.RootManager.__name__ = ["haxe","ui","toolkit","core","RootManager"];
haxe.ui.toolkit.core.RootManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.RootManager.get_instance = function() {
	if(haxe.ui.toolkit.core.RootManager._instance == null) haxe.ui.toolkit.core.RootManager._instance = new haxe.ui.toolkit.core.RootManager();
	return haxe.ui.toolkit.core.RootManager._instance;
};
haxe.ui.toolkit.core.RootManager.prototype = {
	createRoot: function(options,fn) {
		if(options == null) options = { };
		if(options.parent != null) options.parent = options.parent; else options.parent = openfl.Lib.get_current().get_stage();
		var root = new haxe.ui.toolkit.core.Root();
		this._roots.push(root);
		root.addEventListener(openfl.events.Event.ADDED_TO_STAGE,function(e) {
			if(fn != null) fn(root);
			root.removeEventListenerType(openfl.events.Event.ADDED_TO_STAGE);
		});
		root.set_root(root);
		root.set_id(options.id != null?options.id:"root");
		root.set_styleName(options.styleName != null?options.styleName:null);
		root.set_x(options.x != null?options.x:0);
		root.set_y(options.y != null?options.y:0);
		root.set_width(options.width != null?options.width:0);
		root.set_height(options.height != null?options.height:0);
		root.set_percentWidth(options.percentWidth != null?options.percentWidth:-1);
		root.set_percentHeight(options.percentHeight != null?options.percentHeight:-1);
		options.parent.addChild(root.get_sprite());
		return root;
	}
	,destroyRoot: function(root) {
		if(root.get_sprite().parent != null) root.get_sprite().parent.removeChild(root.get_sprite());
		root.dispose();
		HxOverrides.remove(this._roots,root);
	}
	,destroyAllRoots: function() {
		var _g = 0;
		var _g1 = this._roots;
		while(_g < _g1.length) {
			var root = _g1[_g];
			++_g;
			this.destroyRoot(root);
		}
	}
	,get_roots: function() {
		return this._roots;
	}
	,get_currentRoot: function() {
		if(this._roots.length == 0) return null;
		return this._roots[this._roots.length - 1];
	}
	,__class__: haxe.ui.toolkit.core.RootManager
	,__properties__: {get_currentRoot:"get_currentRoot",get_roots:"get_roots"}
};
haxe.ui.toolkit.core.Screen = function() {
};
$hxClasses["haxe.ui.toolkit.core.Screen"] = haxe.ui.toolkit.core.Screen;
haxe.ui.toolkit.core.Screen.__name__ = ["haxe","ui","toolkit","core","Screen"];
haxe.ui.toolkit.core.Screen.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.core.Screen.get_instance = function() {
	if(haxe.ui.toolkit.core.Screen._instance == null) haxe.ui.toolkit.core.Screen._instance = new haxe.ui.toolkit.core.Screen();
	return haxe.ui.toolkit.core.Screen._instance;
};
haxe.ui.toolkit.core.Screen.prototype = {
	addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		var target = openfl.Lib.get_current().get_stage();
		target.addEventListener(type,listener,useCapture,priority,useWeakReference);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		var target = openfl.Lib.get_current().get_stage();
		target.removeEventListener(type,listener,useCapture);
	}
	,get_width: function() {
		return openfl.Lib.get_current().get_stage().get_stageWidth();
	}
	,get_height: function() {
		return openfl.Lib.get_current().get_stage().get_stageHeight();
	}
	,__class__: haxe.ui.toolkit.core.Screen
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
haxe.ui.toolkit.core.Toolkit = function() {
	this.initInstance();
};
$hxClasses["haxe.ui.toolkit.core.Toolkit"] = haxe.ui.toolkit.core.Toolkit;
haxe.ui.toolkit.core.Toolkit.__name__ = ["haxe","ui","toolkit","core","Toolkit"];
haxe.ui.toolkit.core.Toolkit.__properties__ = {set_defaultTransition:"set_defaultTransition",get_defaultTransition:"get_defaultTransition",get_instance:"get_instance"}
haxe.ui.toolkit.core.Toolkit.get_instance = function() {
	if(haxe.ui.toolkit.core.Toolkit._instance == null) {
		openfl.Lib.get_current().get_stage().align = openfl.display.StageAlign.TOP_LEFT;
		openfl.Lib.get_current().get_stage().scaleMode = openfl.display.StageScaleMode.NO_SCALE;
		haxe.ui.toolkit.core.Toolkit._instance = new haxe.ui.toolkit.core.Toolkit();
	}
	return haxe.ui.toolkit.core.Toolkit._instance;
};
haxe.ui.toolkit.core.Toolkit.init = function() {
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ScrollView","scrollview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.VSlider","vslider");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.webview.WebView","webview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Text","text");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.CalendarDay","calendarday");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.VProgress","vprogress");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ContinuousVBox","continuousvbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.TextInput","textinput");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.richtext.RTFView","rtfview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Absolute","absolute");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.TabBar","tabbar");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Image","image");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ListView","listview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.OptionBoxValue","optionboxvalue");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.VBox","vbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.HSlider","hslider");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Menu","menu");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ContinuousHBox","continuoushbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.renderers.ComponentItemRenderer","componentitemrenderer");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.renderers.ItemRenderer","itemrenderer");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.richtext.Code","code");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.TableView","tableview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.Component","component");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.HBox","hbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.MenuItem","menuitem");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Container","container");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.CheckBox","checkbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Spacer","spacer");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.TableViewRow","tableviewrow");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.VScroll","vscroll");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.DisplayObject","displayobject");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.OptionBox","optionbox");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.MenuBar","menubar");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Value","value");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.Root","root");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.DisplayObjectContainer","displayobjectcontainer");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Box","box");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.CheckBoxValue","checkboxvalue");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.HScroll","hscroll");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.HProgress","hprogress");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.StyleableDisplayObject","styleabledisplayobject");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.AccordionButton","accordionbutton");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Grid","grid");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Stack","stack");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.TabView","tabview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Progress","progress");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ExpandablePanel","expandablepanel");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Slider","slider");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.MenuButton","menubutton");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.selection.ListSelector","listselector");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.Accordion","accordion");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Button","button");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Scroll","scroll");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.selection.DropDownList","dropdownlist");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.renderers.BasicItemRenderer","basicitemrenderer");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.CalendarView","calendarview");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.containers.ExpandableButton","expandablebutton");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.Calendar","calendar");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.controls.selection.DateSelector","dateselector");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerComponentClassName("haxe.ui.toolkit.core.StateComponent","statecomponent");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerDataSourceClassName("haxe.ui.toolkit.data.ArrayDataSource","array");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerDataSourceClassName("haxe.ui.toolkit.data.XMLDataSource","xml");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerDataSourceClassName("haxe.ui.toolkit.data.JSONDataSource","json");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerDataSourceClassName("haxe.ui.toolkit.data.FilesDataSource","files");
	haxe.ui.toolkit.core.ClassManager.get_instance().registerDataSourceClassName("haxe.ui.toolkit.data.MySQLDataSource","mysql");
	haxe.ui.toolkit.themes.Theme.addAsset("__PUBLIC__","css/webview.css");
	haxe.ui.toolkit.themes.Theme.addAsset("__PUBLIC__","css/rtf.css");
	haxe.ui.toolkit.themes.Theme.addAsset("__PUBLIC__","css/code.css");
	haxe.ui.toolkit.themes.Theme.addAsset("gradient","css/gradient/webview.css");
	haxe.ui.toolkit.themes.Theme.addAsset("gradient","styles/gradient/gradient.css");
	haxe.ui.toolkit.themes.Theme.addAsset("default","css/default/webview.css");
	haxe.ui.toolkit.themes.Theme.addAsset("default",haxe.ui.toolkit.style.DefaultStyles);
	haxe.ui.toolkit.themes.Theme.addAsset("gradient_mobile","styles/gradient/gradient_mobile.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/windows.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/buttons.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/tabs.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/listview.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/scrolls.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/sliders.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/accordion.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/rtf.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/calendar.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/popups.css");
	haxe.ui.toolkit.themes.Theme.addAsset("windows","styles/windows/menus.css");
	haxe.ui.toolkit.core.Toolkit.get_instance();
	haxe.ui.toolkit.core.Toolkit.registerXMLProcessor(haxe.ui.toolkit.core.xml.UIProcessor,"ui");
	haxe.ui.toolkit.core.Toolkit.registerXMLProcessor(haxe.ui.toolkit.core.xml.UIProcessor,"selection");
	haxe.ui.toolkit.core.Toolkit.registerXMLProcessor(haxe.ui.toolkit.core.xml.StyleProcessor,"style");
	haxe.ui.toolkit.core.Toolkit.registerXMLProcessor(haxe.ui.toolkit.core.xml.DataProcessor,"data");
	if(haxe.ui.toolkit.core.Toolkit._defaultTransition != "none" && haxe.ui.toolkit.core.Toolkit._transitionRegister != null && haxe.ui.toolkit.core.Toolkit._transitionRegister.get(Type.getClassName(haxe.ui.toolkit.controls.Menu)) == null) haxe.ui.toolkit.core.Toolkit.setTransitionForClass(haxe.ui.toolkit.controls.Menu,"fade");
	var t = null;
	if(js.Boot.__instanceof(haxe.ui.toolkit.core.Toolkit.theme,haxe.ui.toolkit.themes.Theme)) t = haxe.ui.toolkit.core.Toolkit.theme; else if(typeof(haxe.ui.toolkit.core.Toolkit.theme) == "string") {
		t = new haxe.ui.toolkit.themes.Theme();
		t.name = haxe.ui.toolkit.core.Toolkit.theme;
	}
	if(t == null && haxe.ui.toolkit.core.Toolkit.useDefaultTheme == true) t = new haxe.ui.toolkit.themes.DefaultTheme();
	if(t != null) t.apply();
	null;
};
haxe.ui.toolkit.core.Toolkit.registerXMLProcessor = function(cls,prefix) {
	if(haxe.ui.toolkit.core.Toolkit._registeredProcessors == null) haxe.ui.toolkit.core.Toolkit._registeredProcessors = new haxe.ds.StringMap();
	haxe.ui.toolkit.core.Toolkit._registeredProcessors.set(prefix,Type.getClassName(cls));
};
haxe.ui.toolkit.core.Toolkit.processXmlResource = function(resourceId) {
	return haxe.ui.toolkit.core.Toolkit.processXml(haxe.ui.toolkit.resources.ResourceManager.get_instance().getXML(resourceId));
};
haxe.ui.toolkit.core.Toolkit.processXml = function(xml) {
	var result = null;
	result = haxe.ui.toolkit.core.Toolkit.processXmlNode(xml.firstElement());
	haxe.ui.toolkit.core.Toolkit.postProcessXmlNode(xml.firstElement(),result);
	return result;
};
haxe.ui.toolkit.core.Toolkit.processXmlNode = function(node) {
	if(node == null) return null;
	var result = null;
	var nodeName = node.get_nodeName();
	var n = nodeName.indexOf(":");
	if(n != -1) nodeName = HxOverrides.substr(nodeName,n + 1,nodeName.length);
	nodeName = nodeName.toLowerCase();
	var condition = node.get("condition");
	if(condition != null) {
		var parser = new hscript.Parser();
		var program = parser.parseString(condition);
		var interp = new hscript.Interp();
		var clientWrapper = new haxe.ui.toolkit.hscript.ClientWrapper();
		interp.variables.set("Client",clientWrapper);
		var conditionResult = interp.execute(program);
		if(conditionResult == false) return null;
	}
	if(nodeName == "import") {
		var importResource = node.get("resource");
		if(importResource != null) {
			var importData = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(importResource);
			if(importData != null) {
				var importXml = Xml.parse(importData);
				return haxe.ui.toolkit.core.Toolkit.processXml(importXml);
			}
		}
	} else if(nodeName == "script") {
	} else if(nodeName == "style") {
		var p = new haxe.ui.toolkit.core.xml.StyleProcessor();
		result = p.process(node);
	} else if(haxe.ui.toolkit.core.ClassManager.get_instance().hasDataSourceClass(nodeName)) {
		var p1 = new haxe.ui.toolkit.core.xml.DataProcessor();
		result = p1.process(node);
	} else {
		var p2 = new haxe.ui.toolkit.core.xml.UIProcessor();
		result = p2.process(node);
		if(result == null) haxe.Log.trace("WARNING: Could not find processor for '" + nodeName + "'",{ fileName : "Toolkit.hx", lineNumber : 146, className : "haxe.ui.toolkit.core.Toolkit", methodName : "processXmlNode"});
	}
	var $it0 = node.elements();
	while( $it0.hasNext() ) {
		var child = $it0.next();
		var childResult = haxe.ui.toolkit.core.Toolkit.processXmlNode(child);
		if(js.Boot.__instanceof(childResult,haxe.ui.toolkit.data.IDataSource) && js.Boot.__instanceof(result,haxe.ui.toolkit.core.interfaces.IDataComponent)) (js.Boot.__cast(result , haxe.ui.toolkit.core.interfaces.IDataComponent)).set_dataSource(js.Boot.__cast(childResult , haxe.ui.toolkit.data.IDataSource));
		if(js.Boot.__instanceof(childResult,haxe.ui.toolkit.core.interfaces.IDisplayObject) && js.Boot.__instanceof(result,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) (js.Boot.__cast(result , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)).addChild(js.Boot.__cast(childResult , haxe.ui.toolkit.core.interfaces.IDisplayObject));
	}
	return result;
};
haxe.ui.toolkit.core.Toolkit.postProcessXmlNode = function(node,parentObject) {
	if(node == null) return null;
	var result = null;
	var nodeName = node.get_nodeName();
	var n = nodeName.indexOf(":");
	if(n != -1) nodeName = HxOverrides.substr(nodeName,n + 1,nodeName.length);
	nodeName = nodeName.toLowerCase();
	var condition = node.get("condition");
	if(condition != null) {
		var parser = new hscript.Parser();
		var program = parser.parseString(condition);
		var interp = new hscript.Interp();
		var clientWrapper = new haxe.ui.toolkit.hscript.ClientWrapper();
		interp.variables.set("Client",clientWrapper);
		var conditionResult = interp.execute(program);
		if(conditionResult == false) return null;
	}
	if(nodeName == "script") {
		var scriptResource = node.get("resource");
		var scriptData = "";
		if(scriptResource != null) {
			scriptData += haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(scriptResource);
			scriptData += "\n\n";
		}
		var scriptNodeData = node.firstChild().get_nodeValue();
		if(scriptNodeData != null) {
			scriptNodeData = StringTools.trim(scriptNodeData);
			scriptData += "\n\n" + scriptNodeData;
		}
		if(parentObject != null && js.Boot.__instanceof(parentObject,haxe.ui.toolkit.core.interfaces.IComponent)) (js.Boot.__cast(parentObject , haxe.ui.toolkit.core.interfaces.IComponent)).addScriptlet(scriptData);
	}
	var $it0 = node.elements();
	while( $it0.hasNext() ) {
		var child = $it0.next();
		var childResult = haxe.ui.toolkit.core.Toolkit.postProcessXmlNode(child,parentObject);
	}
	return result;
};
haxe.ui.toolkit.core.Toolkit.get_defaultTransition = function() {
	return haxe.ui.toolkit.core.Toolkit._defaultTransition;
};
haxe.ui.toolkit.core.Toolkit.set_defaultTransition = function(value) {
	haxe.ui.toolkit.core.Toolkit._defaultTransition = value;
	return value;
};
haxe.ui.toolkit.core.Toolkit.getTransitionForClass = function(cls) {
	var s = haxe.ui.toolkit.core.Toolkit._defaultTransition;
	var className = Type.getClassName(cls);
	if(haxe.ui.toolkit.core.Toolkit._transitionRegister != null && haxe.ui.toolkit.core.Toolkit._transitionRegister.get(className) != null) s = haxe.ui.toolkit.core.Toolkit._transitionRegister.get(className);
	return s;
};
haxe.ui.toolkit.core.Toolkit.setTransitionForClass = function(cls,transition) {
	if(haxe.ui.toolkit.core.Toolkit._transitionRegister == null) haxe.ui.toolkit.core.Toolkit._transitionRegister = new haxe.ds.StringMap();
	var className = Type.getClassName(cls);
	haxe.ui.toolkit.core.Toolkit._transitionRegister.set(className,transition);
};
haxe.ui.toolkit.core.Toolkit.addScriptletClass = function(name,cls) {
	haxe.ui.toolkit.hscript.ScriptManager.get_instance().addClass(name,cls);
};
haxe.ui.toolkit.core.Toolkit.openFullscreen = function(fn) {
	var root = haxe.ui.toolkit.core.RootManager.get_instance().createRoot({ x : 0, y : 0, percentWidth : 100, percentHeight : 100},fn);
	return root;
};
haxe.ui.toolkit.core.Toolkit.openPopup = function(options,fn) {
	if(options == null) options = { };
	if(options.x != null) options.x = options.x; else options.x = 20;
	if(options.y != null) options.y = options.y; else options.y = 20;
	if(options.styleName != null) options.styleName = options.styleName; else options.styleName = "popup";
	var root = haxe.ui.toolkit.core.RootManager.get_instance().createRoot(options,fn);
	return root;
};
haxe.ui.toolkit.core.Toolkit.prototype = {
	initInstance: function() {
		haxe.ui.toolkit.core.ClassManager.get_instance();
	}
	,__class__: haxe.ui.toolkit.core.Toolkit
};
haxe.ui.toolkit.core.base = {};
haxe.ui.toolkit.core.base.HorizontalAlign = function() { };
$hxClasses["haxe.ui.toolkit.core.base.HorizontalAlign"] = haxe.ui.toolkit.core.base.HorizontalAlign;
haxe.ui.toolkit.core.base.HorizontalAlign.__name__ = ["haxe","ui","toolkit","core","base","HorizontalAlign"];
haxe.ui.toolkit.core.base.State = function() { };
$hxClasses["haxe.ui.toolkit.core.base.State"] = haxe.ui.toolkit.core.base.State;
haxe.ui.toolkit.core.base.State.__name__ = ["haxe","ui","toolkit","core","base","State"];
haxe.ui.toolkit.core.base.VerticalAlign = function() { };
$hxClasses["haxe.ui.toolkit.core.base.VerticalAlign"] = haxe.ui.toolkit.core.base.VerticalAlign;
haxe.ui.toolkit.core.base.VerticalAlign.__name__ = ["haxe","ui","toolkit","core","base","VerticalAlign"];
haxe.ui.toolkit.core.interfaces.Direction = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.Direction"] = haxe.ui.toolkit.core.interfaces.Direction;
haxe.ui.toolkit.core.interfaces.Direction.__name__ = ["haxe","ui","toolkit","core","interfaces","Direction"];
haxe.ui.toolkit.core.interfaces.IItemRenderer = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.IItemRenderer"] = haxe.ui.toolkit.core.interfaces.IItemRenderer;
haxe.ui.toolkit.core.interfaces.IItemRenderer.__name__ = ["haxe","ui","toolkit","core","interfaces","IItemRenderer"];
haxe.ui.toolkit.core.interfaces.IItemRenderer.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IStateComponent];
haxe.ui.toolkit.core.interfaces.IItemRenderer.prototype = {
	__class__: haxe.ui.toolkit.core.interfaces.IItemRenderer
};
haxe.ui.toolkit.core.interfaces.InvalidationFlag = function() { };
$hxClasses["haxe.ui.toolkit.core.interfaces.InvalidationFlag"] = haxe.ui.toolkit.core.interfaces.InvalidationFlag;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.__name__ = ["haxe","ui","toolkit","core","interfaces","InvalidationFlag"];
haxe.ui.toolkit.core.renderers = {};
haxe.ui.toolkit.core.renderers.ItemRenderer = function() {
	haxe.ui.toolkit.core.StateComponent.call(this);
	this.get_sprite().buttonMode = true;
	this.get_sprite().set_useHandCursor(true);
	this.set_state("normal");
};
$hxClasses["haxe.ui.toolkit.core.renderers.ItemRenderer"] = haxe.ui.toolkit.core.renderers.ItemRenderer;
haxe.ui.toolkit.core.renderers.ItemRenderer.__name__ = ["haxe","ui","toolkit","core","renderers","ItemRenderer"];
haxe.ui.toolkit.core.renderers.ItemRenderer.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable,haxe.ui.toolkit.core.interfaces.IItemRenderer];
haxe.ui.toolkit.core.renderers.ItemRenderer.__super__ = haxe.ui.toolkit.core.StateComponent;
haxe.ui.toolkit.core.renderers.ItemRenderer.prototype = $extend(haxe.ui.toolkit.core.StateComponent.prototype,{
	initialize: function() {
		haxe.ui.toolkit.core.StateComponent.prototype.initialize.call(this);
		this.addStatesRecursively(this);
	}
	,addStatesRecursively: function(c) {
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.StateComponent) && c != this) (js.Boot.__cast(c , haxe.ui.toolkit.core.StateComponent)).addStates(this.get_states());
		var _g = 0;
		var _g1 = c.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(this.isInteractive(c)) continue;
			if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) this.addStatesRecursively(js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer));
		}
	}
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this._data = value;
		this.updateComponents();
		this.attachEvents(this);
		return value;
	}
	,update: function() {
		this.updateComponents();
	}
	,allowSelection: function(stageX,stageY) {
		var allow = true;
		var c = this.findComponentUnderPoint(stageX,stageY);
		while(c != null) {
			if(this.isInteractive(c)) {
				allow = false;
				break;
			}
			if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.DisplayObjectContainer) == false) break;
			c = (js.Boot.__cast(c , haxe.ui.toolkit.core.DisplayObjectContainer)).findComponentUnderPoint(stageX,stageY);
		}
		return allow;
	}
	,attachEvents: function(c) {
		var _g = 0;
		var _g1 = c.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(this.isInteractive(child)) this.attachEvent(child); else if(js.Boot.__instanceof(child,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) this.attachEvents(js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer));
		}
	}
	,attachEvent: function(c) {
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.controls.Slider)) {
			c.removeEventListener("haxeui_" + "change",$bind(this,this._onComponentEvent));
			c.addEventListener("haxeui_" + "change",$bind(this,this._onComponentEvent));
		} else if(js.Boot.__instanceof(c,haxe.ui.toolkit.controls.Button)) {
			c.removeEventListener("haxeui_" + "click",$bind(this,this._onComponentEvent));
			c.addEventListener("haxeui_" + "click",$bind(this,this._onComponentEvent));
		}
	}
	,_onComponentEvent: function(event) {
		if(event.get_component() != null && event.get_component().get_id() != null && event.get_component().get_id().length > 0) Reflect.setField(this._data,event.get_component().get_id(),event.get_component().get_value());
		this.dispatchProxyEvent("haxeui_" + "componentEvent",event);
	}
	,dispatchProxyEvent: function(type,refEvent) {
		if(this.eventDispatcher != null) {
			var c = null;
			if(refEvent != null && refEvent.get_component() != null) c = refEvent.get_component();
			var uiEvent = new haxe.ui.toolkit.events.UIEvent(type,c);
			uiEvent.data = this._data;
			uiEvent.data.update = $bind(this,this.update);
			this.eventDispatcher.dispatchEvent(uiEvent);
		}
	}
	,updateComponents: function() {
		var fields = Reflect.fields(this._data);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			var componentId = f;
			var value = Reflect.field(this._data,f);
			var c = this.findChild(componentId,null,true);
			if(c != null) this.updateComponentValue(c,value);
		}
	}
	,updateComponentValue: function(c,value) {
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.Component)) (js.Boot.__cast(c , haxe.ui.toolkit.core.Component)).set_value(value);
	}
	,get_states: function() {
		return ["normal","over","selected","disabled"];
	}
	,set_state: function(value) {
		this.setStateRecursively(value,this);
		return haxe.ui.toolkit.core.StateComponent.prototype.set_state.call(this,value);
	}
	,setStateRecursively: function(value,c) {
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.StateComponent) && c != this) (js.Boot.__cast(c , haxe.ui.toolkit.core.StateComponent)).set_state(value);
		var _g = 0;
		var _g1 = c.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(this.isInteractive(c)) continue;
			if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer)) this.setStateRecursively(value,js.Boot.__cast(child , haxe.ui.toolkit.core.interfaces.IDisplayObjectContainer));
		}
	}
	,isInteractive: function(c) {
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.controls.Button) || js.Boot.__instanceof(c,haxe.ui.toolkit.controls.Slider)) return true;
		return false;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.StateComponent.prototype.clone.call(this);
		var _g = 0;
		var _g1 = this.get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			c.addChild(child.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.renderers.ItemRenderer();
	}
	,__class__: haxe.ui.toolkit.core.renderers.ItemRenderer
	,__properties__: $extend(haxe.ui.toolkit.core.StateComponent.prototype.__properties__,{set_data:"set_data",get_data:"get_data"})
});
haxe.ui.toolkit.core.renderers.BasicItemRenderer = function() {
	haxe.ui.toolkit.core.renderers.ItemRenderer.call(this);
	this._layout = new haxe.ui.toolkit.layout.HorizontalLayout();
	this._maintext = new haxe.ui.toolkit.controls.Text();
	this._maintext.set_text("Text");
	this._maintext.set_id("text");
	this._maintext.set_verticalAlign("center");
	this._maintext.set_percentWidth(100);
	this.addChild(this._maintext);
};
$hxClasses["haxe.ui.toolkit.core.renderers.BasicItemRenderer"] = haxe.ui.toolkit.core.renderers.BasicItemRenderer;
haxe.ui.toolkit.core.renderers.BasicItemRenderer.__name__ = ["haxe","ui","toolkit","core","renderers","BasicItemRenderer"];
haxe.ui.toolkit.core.renderers.BasicItemRenderer.__super__ = haxe.ui.toolkit.core.renderers.ItemRenderer;
haxe.ui.toolkit.core.renderers.BasicItemRenderer.prototype = $extend(haxe.ui.toolkit.core.renderers.ItemRenderer.prototype,{
	set_data: function(value) {
		var n = 0;
		if(value.icon != null) {
			if(this._icon == null) {
				this._icon = new haxe.ui.toolkit.controls.Image();
				this._icon.set_id("icon");
				this._icon.set_verticalAlign("center");
				this.addChildAt(this._icon,n);
				n++;
			}
		}
		if(value.subtext != null) {
			if(this._vbox == null) {
				this._vbox = new haxe.ui.toolkit.containers.VBox();
				this._vbox.set_percentWidth(100);
				this.addChildAt(this._vbox,n);
			}
			if(this._subtext == null) {
				this._subtext = new haxe.ui.toolkit.controls.Text();
				this._subtext.set_id("subtext");
				this._subtext.set_percentWidth(100);
				this._subtext.set_multiline(true);
				this._subtext.set_wrapLines(true);
				this.removeChild(this._maintext,false);
				this._vbox.addChild(this._maintext);
				this._vbox.addChild(this._subtext);
			}
		}
		return haxe.ui.toolkit.core.renderers.ItemRenderer.prototype.set_data.call(this,value);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.renderers.ItemRenderer.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.renderers.BasicItemRenderer();
	}
	,__class__: haxe.ui.toolkit.core.renderers.BasicItemRenderer
});
haxe.ui.toolkit.core.renderers.ComponentItemRenderer = function() {
	haxe.ui.toolkit.core.renderers.BasicItemRenderer.call(this);
};
$hxClasses["haxe.ui.toolkit.core.renderers.ComponentItemRenderer"] = haxe.ui.toolkit.core.renderers.ComponentItemRenderer;
haxe.ui.toolkit.core.renderers.ComponentItemRenderer.__name__ = ["haxe","ui","toolkit","core","renderers","ComponentItemRenderer"];
haxe.ui.toolkit.core.renderers.ComponentItemRenderer.__super__ = haxe.ui.toolkit.core.renderers.BasicItemRenderer;
haxe.ui.toolkit.core.renderers.ComponentItemRenderer.prototype = $extend(haxe.ui.toolkit.core.renderers.BasicItemRenderer.prototype,{
	set_data: function(value) {
		var type = value.componentType;
		if(type != null) {
			var cls = this.getClassFromType(type);
			if(cls != null && js.Boot.__instanceof(this._component,cls) == false) {
				if(this._component != null) this.removeChild(this._component);
				this._component = Type.createInstance(cls,[]);
				this._component.set_verticalAlign("center");
				this._component.set_id("componentValue");
				this._component.set_styleName(value.controlId);
				if(value.componentSize != null) {
					var cx = value.componentSize;
					this._component.set_autoSize(false);
					this._component.set_width(cx);
				}
				this.addChildAt(this._component,this.get_numChildren());
			}
		}
		return haxe.ui.toolkit.core.renderers.BasicItemRenderer.prototype.set_data.call(this,value);
	}
	,getClassFromType: function(type) {
		type = type.toLowerCase();
		if(type == "button") return haxe.ui.toolkit.controls.Button; else if(type == "slider") return haxe.ui.toolkit.controls.HSlider; else if(type == "image") return haxe.ui.toolkit.controls.Image;
		return null;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.core.renderers.BasicItemRenderer.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.core.renderers.ComponentItemRenderer();
	}
	,__class__: haxe.ui.toolkit.core.renderers.ComponentItemRenderer
});
haxe.ui.toolkit.core.xml = {};
haxe.ui.toolkit.core.xml.IXMLProcessor = function() { };
$hxClasses["haxe.ui.toolkit.core.xml.IXMLProcessor"] = haxe.ui.toolkit.core.xml.IXMLProcessor;
haxe.ui.toolkit.core.xml.IXMLProcessor.__name__ = ["haxe","ui","toolkit","core","xml","IXMLProcessor"];
haxe.ui.toolkit.core.xml.IXMLProcessor.prototype = {
	__class__: haxe.ui.toolkit.core.xml.IXMLProcessor
};
haxe.ui.toolkit.core.xml.XMLProcessor = function() {
};
$hxClasses["haxe.ui.toolkit.core.xml.XMLProcessor"] = haxe.ui.toolkit.core.xml.XMLProcessor;
haxe.ui.toolkit.core.xml.XMLProcessor.__name__ = ["haxe","ui","toolkit","core","xml","XMLProcessor"];
haxe.ui.toolkit.core.xml.XMLProcessor.__interfaces__ = [haxe.ui.toolkit.core.xml.IXMLProcessor];
haxe.ui.toolkit.core.xml.XMLProcessor.prototype = {
	process: function(node) {
		return null;
	}
	,stripNamespace: function(nodeName) {
		var n = nodeName.indexOf(":");
		if(n != -1) nodeName = HxOverrides.substr(nodeName,n + 1,nodeName.length);
		nodeName = nodeName.toLowerCase();
		return nodeName;
	}
	,__class__: haxe.ui.toolkit.core.xml.XMLProcessor
};
haxe.ui.toolkit.core.xml.DataProcessor = function() {
	haxe.ui.toolkit.core.xml.XMLProcessor.call(this);
};
$hxClasses["haxe.ui.toolkit.core.xml.DataProcessor"] = haxe.ui.toolkit.core.xml.DataProcessor;
haxe.ui.toolkit.core.xml.DataProcessor.__name__ = ["haxe","ui","toolkit","core","xml","DataProcessor"];
haxe.ui.toolkit.core.xml.DataProcessor.createDataSource = function(className,config) {
	var ds = Type.createInstance(Type.resolveClass(className),[]);
	if(ds != null) {
		ds.create(config);
		haxe.ui.toolkit.data.DataManager.get_instance().registerDataSource(ds);
	}
	return ds;
};
haxe.ui.toolkit.core.xml.DataProcessor.__super__ = haxe.ui.toolkit.core.xml.XMLProcessor;
haxe.ui.toolkit.core.xml.DataProcessor.prototype = $extend(haxe.ui.toolkit.core.xml.XMLProcessor.prototype,{
	process: function(node) {
		var result = null;
		var nodeName = this.stripNamespace(node.get_nodeName());
		nodeName = nodeName.toLowerCase();
		var className = haxe.ui.toolkit.core.ClassManager.get_instance().getDataSourceClassName(nodeName);
		if(className != null) result = haxe.ui.toolkit.core.xml.DataProcessor.createDataSource(className,node);
		return result;
	}
	,__class__: haxe.ui.toolkit.core.xml.DataProcessor
});
haxe.ui.toolkit.core.xml.StyleProcessor = function() {
	haxe.ui.toolkit.core.xml.XMLProcessor.call(this);
};
$hxClasses["haxe.ui.toolkit.core.xml.StyleProcessor"] = haxe.ui.toolkit.core.xml.StyleProcessor;
haxe.ui.toolkit.core.xml.StyleProcessor.__name__ = ["haxe","ui","toolkit","core","xml","StyleProcessor"];
haxe.ui.toolkit.core.xml.StyleProcessor.__super__ = haxe.ui.toolkit.core.xml.XMLProcessor;
haxe.ui.toolkit.core.xml.StyleProcessor.prototype = $extend(haxe.ui.toolkit.core.xml.XMLProcessor.prototype,{
	process: function(node) {
		var styleData = node.firstChild().get_nodeValue();
		styleData = StringTools.trim(styleData);
		var styles = haxe.ui.toolkit.style.StyleParser.fromString(styleData);
		haxe.ui.toolkit.style.StyleManager.get_instance().addStyles(styles);
		return null;
	}
	,__class__: haxe.ui.toolkit.core.xml.StyleProcessor
});
haxe.ui.toolkit.core.xml.UIProcessor = function() {
	haxe.ui.toolkit.core.xml.XMLProcessor.call(this);
};
$hxClasses["haxe.ui.toolkit.core.xml.UIProcessor"] = haxe.ui.toolkit.core.xml.UIProcessor;
haxe.ui.toolkit.core.xml.UIProcessor.__name__ = ["haxe","ui","toolkit","core","xml","UIProcessor"];
haxe.ui.toolkit.core.xml.UIProcessor.createComponent = function(className,config) {
	var c = Type.createInstance(Type.resolveClass(className),[]);
	try {
		var $it0 = config.attributes();
		while( $it0.hasNext() ) {
			var attr = $it0.next();
			if(StringTools.startsWith(attr,"xmlns:")) continue;
			var value = config.get(attr);
			if(haxe.ui.toolkit.hscript.ScriptUtils.isScript(value)) value = haxe.ui.toolkit.hscript.ScriptManager.get_instance().executeScript(value);
			if(attr == "width") {
				var width = 0;
				var percentWidth = -1;
				var widthString = value;
				if(widthString != null) {
					width = Std.parseFloat(widthString);
					if(widthString.indexOf("%") != -1) {
						width = 0;
						percentWidth = Std.parseFloat(HxOverrides.substr(widthString,0,widthString.length - 1));
					}
				}
				if(width != 0) c.set_width(width);
				if(percentWidth != -1) c.set_percentWidth(percentWidth);
			} else if(attr == "height") {
				var height = 0;
				var percentHeight = -1;
				var heightString = value;
				if(heightString != null) {
					height = Std.parseFloat(heightString);
					if(heightString.indexOf("%") != -1) {
						height = 0;
						percentHeight = Std.parseFloat(HxOverrides.substr(heightString,0,heightString.length - 1));
					}
				}
				if(height != 0) c.set_height(height);
				if(percentHeight != -1) c.set_percentHeight(percentHeight);
			} else if(attr == "style") {
				if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.StyleableDisplayObject)) {
					var inlineStyles = haxe.ui.toolkit.style.StyleParser.fromString("_temp {" + value + "}");
					if(inlineStyles != null) {
						var style = inlineStyles.getStyle("_temp");
						if(style != null) (js.Boot.__cast(c , haxe.ui.toolkit.core.StyleableDisplayObject)).set_style(style);
					}
				}
			} else if(attr == "condition") {
			} else if(attr == "layout") switch(value) {
			case "absolute":
				c.set_layout(new haxe.ui.toolkit.layout.AbsoluteLayout());
				throw "__break__";
				break;
			case "box":
				c.set_layout(new haxe.ui.toolkit.layout.BoxLayout());
				throw "__break__";
				break;
			case "grid":
				c.set_layout(new haxe.ui.toolkit.layout.GridLayout());
				throw "__break__";
				break;
			case "horizontal":
				c.set_layout(new haxe.ui.toolkit.layout.HorizontalLayout());
				throw "__break__";
				break;
			case "vertical":
				c.set_layout(new haxe.ui.toolkit.layout.VerticalLayout());
				throw "__break__";
				break;
			case "continuousVertical":
				c.set_layout(new haxe.ui.toolkit.layout.VerticalContinuousLayout());
				throw "__break__";
				break;
			case "continuousHorizontal":
				c.set_layout(new haxe.ui.toolkit.layout.HorizontalContinuousLayout());
				throw "__break__";
				break;
			default:
				c.set_layout(new haxe.ui.toolkit.layout.DefaultLayout());
				throw "__break__";
			} else if(attr == "dataSource") {
				if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IDataComponent)) {
					var dataComponent;
					dataComponent = js.Boot.__cast(c , haxe.ui.toolkit.core.interfaces.IDataComponent);
					var registeredDataSource = haxe.ui.toolkit.data.DataManager.get_instance().getRegisteredDataSource(value);
					if(registeredDataSource != null) dataComponent.set_dataSource(registeredDataSource); else {
						var n = value.indexOf("://");
						if(n != -1) {
							var proto = HxOverrides.substr(value,0,n);
							value = HxOverrides.substr(value,n + 3,value.length);
							var className1 = haxe.ui.toolkit.core.ClassManager.get_instance().getDataSourceClassName(proto);
							var ds = Type.createInstance(Type.resolveClass(className1),[]);
							if(ds != null) {
								ds.createFromResource(value);
								haxe.ui.toolkit.data.DataManager.get_instance().registerDataSource(ds);
								dataComponent.set_dataSource(ds);
							}
						}
					}
				}
			} else if(attr == "text") c.set_text(value); else if(StringTools.startsWith(attr.toLowerCase(),"on")) {
				var event = HxOverrides.substr(attr,2,attr.length).toLowerCase();
				c.addScriptletEventHandler(event,value);
			} else try {
				if(Std.parseInt(value) != null) Reflect.setProperty(c,attr,Std.parseInt(value)); else if(value == "true" || value == "yes" || value == "false" || value == "no") Reflect.setProperty(c,attr,haxe.ui.toolkit.util.TypeParser.parseBool(value)); else Reflect.setProperty(c,attr,value);
			} catch( e ) {
				haxe.Log.trace("Exception setting component property: " + attr + " (" + Std.string(e) + ")",{ fileName : "UIProcessor.hx", lineNumber : 162, className : "haxe.ui.toolkit.core.xml.UIProcessor", methodName : "createComponent"});
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	return c;
};
haxe.ui.toolkit.core.xml.UIProcessor.__super__ = haxe.ui.toolkit.core.xml.XMLProcessor;
haxe.ui.toolkit.core.xml.UIProcessor.prototype = $extend(haxe.ui.toolkit.core.xml.XMLProcessor.prototype,{
	process: function(node) {
		var result = null;
		var nodeName = node.get_nodeName();
		var n = nodeName.indexOf(":");
		if(n != -1) nodeName = HxOverrides.substr(nodeName,n + 1,nodeName.length);
		nodeName = nodeName.toLowerCase();
		var className = haxe.ui.toolkit.core.ClassManager.get_instance().getComponentClassName(nodeName);
		var direction = node.get("direction");
		if(direction != null) {
			var directionalPrefix = HxOverrides.substr(direction,0,1);
			var directionalName = directionalPrefix + nodeName;
			var directionalClassName = haxe.ui.toolkit.core.ClassManager.get_instance().getComponentClassName(directionalName);
			if(directionalClassName != null) className = directionalClassName;
		}
		if(className != null) result = haxe.ui.toolkit.core.xml.UIProcessor.createComponent(className,node);
		return result;
	}
	,__class__: haxe.ui.toolkit.core.xml.UIProcessor
});
haxe.ui.toolkit.data = {};
haxe.ui.toolkit.data.IDataSource = function() { };
$hxClasses["haxe.ui.toolkit.data.IDataSource"] = haxe.ui.toolkit.data.IDataSource;
haxe.ui.toolkit.data.IDataSource.__name__ = ["haxe","ui","toolkit","data","IDataSource"];
haxe.ui.toolkit.data.IDataSource.prototype = {
	__class__: haxe.ui.toolkit.data.IDataSource
};
haxe.ui.toolkit.data.DataSource = function() {
	this._hasChanged = false;
	this._allowEvents = true;
	this.allowDeletions = true;
	this.allowUpdates = true;
	this.allowAdditions = true;
	openfl.events.EventDispatcher.call(this);
};
$hxClasses["haxe.ui.toolkit.data.DataSource"] = haxe.ui.toolkit.data.DataSource;
haxe.ui.toolkit.data.DataSource.__name__ = ["haxe","ui","toolkit","data","DataSource"];
haxe.ui.toolkit.data.DataSource.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IEventDispatcher,haxe.ui.toolkit.data.IDataSource];
haxe.ui.toolkit.data.DataSource.__super__ = openfl.events.EventDispatcher;
haxe.ui.toolkit.data.DataSource.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	get_config: function() {
		return this._config;
	}
	,clone: function() {
		var newDS = null;
		return newDS;
	}
	,get_allowEvents: function() {
		return this._allowEvents;
	}
	,set_allowEvents: function(value) {
		this._allowEvents = value;
		if(this._allowEvents == true) {
			if(this._hasChanged == true) this.dispatchChanged();
		}
		return value;
	}
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		this._id = value;
		return value;
	}
	,create: function(config) {
		this._config = config;
		if(this._config == null) return;
		this._id = config.get("id");
	}
	,open: function() {
		return this._open();
	}
	,close: function() {
		return this._close();
	}
	,moveFirst: function() {
		return this._moveFirst();
	}
	,moveNext: function() {
		return this._moveNext();
	}
	,get: function() {
		return this._get();
	}
	,add: function(o) {
		var b = false;
		if(this.allowAdditions) {
			b = this._add(o);
			if(b == true) this.dispatchChanged();
		}
		return b;
	}
	,update: function(o) {
		var b = false;
		if(this.allowUpdates) {
			b = this._update(o);
			if(b) this.dispatchChanged();
		}
		return b;
	}
	,remove: function() {
		var b = false;
		if(this.allowDeletions) {
			b = this._remove();
			if(b) this.dispatchChanged();
		}
		return b;
	}
	,removeAll: function() {
		if(this.moveFirst()) do this.remove(); while(this.moveFirst());
	}
	,hash: function() {
		var o = this.get();
		if(o == null) return null;
		return "" + this.getObjectId(o);
	}
	,size: function() {
		return -1;
	}
	,_open: function() {
		return false;
	}
	,_close: function() {
		return false;
	}
	,_moveFirst: function() {
		return false;
	}
	,_moveNext: function() {
		return false;
	}
	,_get: function() {
		return null;
	}
	,_add: function(o) {
		return false;
	}
	,_update: function(o) {
		return false;
	}
	,_remove: function() {
		return false;
	}
	,createFromString: function(data,config) {
	}
	,createFromResource: function(resourceId,config) {
		if(resourceId != null) {
			var data = haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(resourceId);
			this.createFromString(data,config);
		}
	}
	,dispatchChanged: function() {
		this._hasChanged = true;
		if(this._allowEvents == true) {
			this._hasChanged = false;
			this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE));
		}
	}
	,getObjectId: function(obj) {
		if(js.Boot.__instanceof(obj,Class)) {
			if(obj.__cls_id__ == null) obj.__cls_id__ = haxe.ui.toolkit.data.DataSource.clsId++;
			return obj.__cls_id__;
		} else {
			if(obj.__get_id__ == null) {
				var cls = Type.getClass(obj);
				if(cls == null) {
					var id = Std.random(2147483647);
					obj.__get_id__ = function() {
						return id;
					};
					return id;
				}
				var fstid = Std.random(2147483647);
				var _this = this;
				cls.prototype.__get_id__ = function() {
					if(_this.___id___ == null) return _this.___id___ = Std.random(2147483647);
					return _this.___id___;
				};
			}
			return obj.__get_id__();
		}
	}
	,__class__: haxe.ui.toolkit.data.DataSource
	,__properties__: {set_id:"set_id",get_id:"get_id",set_allowEvents:"set_allowEvents",get_allowEvents:"get_allowEvents",get_config:"get_config"}
});
haxe.ui.toolkit.data.ArrayDataSource = function() {
	this.pos = 0;
	haxe.ui.toolkit.data.DataSource.call(this);
	this.array = new Array();
};
$hxClasses["haxe.ui.toolkit.data.ArrayDataSource"] = haxe.ui.toolkit.data.ArrayDataSource;
haxe.ui.toolkit.data.ArrayDataSource.__name__ = ["haxe","ui","toolkit","data","ArrayDataSource"];
haxe.ui.toolkit.data.ArrayDataSource.__super__ = haxe.ui.toolkit.data.DataSource;
haxe.ui.toolkit.data.ArrayDataSource.prototype = $extend(haxe.ui.toolkit.data.DataSource.prototype,{
	create: function(config) {
		haxe.ui.toolkit.data.DataSource.prototype.create.call(this,config);
		if(config == null) return;
		this._id = config.get("id");
		var delimeter = config.get("delimeter");
		if(delimeter == null) delimeter = ",";
		delimeter = StringTools.replace(delimeter,"\\n","\n");
		var resource = config.get("resource");
		if(resource != null) this.createFromResource(resource,{ delimeter : delimeter});
		var nodeText = null;
		if(config.firstChild() != null) nodeText = config.firstChild().get_nodeValue();
		if(nodeText != null) this.createFromString(nodeText,{ delimeter : delimeter});
	}
	,_moveFirst: function() {
		this.pos = 0;
		if(this.array == null || this.array.length == 0) return false;
		return true;
	}
	,_moveNext: function() {
		if(this.array == null || this.array.length == 0) return false;
		var b = false;
		if(this.pos + 1 < this.array.length) {
			this.pos += 1;
			b = true;
		}
		return b;
	}
	,_get: function() {
		if(this.array == null || this.array.length == 0) return null;
		return this.array[this.pos];
	}
	,_add: function(o) {
		this.array.push(o);
		return true;
	}
	,_remove: function() {
		var x = this.get();
		return HxOverrides.remove(this.array,x);
	}
	,size: function() {
		return this.array.length;
	}
	,createFromString: function(data,config) {
		if(data != null) {
			if(config == null) config = { };
			if(config.delimeter != null) config.delimeter = config.delimeter; else config.delimeter = ",";
			var arr = data.split(config.delimeter);
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var s = arr[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						var o = { text : s};
						this.add(o);
					}
				}
			}
		}
	}
	,__class__: haxe.ui.toolkit.data.ArrayDataSource
});
haxe.ui.toolkit.data.DataManager = function() {
	this._dataSourceMap = new haxe.ds.StringMap();
};
$hxClasses["haxe.ui.toolkit.data.DataManager"] = haxe.ui.toolkit.data.DataManager;
haxe.ui.toolkit.data.DataManager.__name__ = ["haxe","ui","toolkit","data","DataManager"];
haxe.ui.toolkit.data.DataManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.data.DataManager.get_instance = function() {
	if(haxe.ui.toolkit.data.DataManager._instance == null) haxe.ui.toolkit.data.DataManager._instance = new haxe.ui.toolkit.data.DataManager();
	return haxe.ui.toolkit.data.DataManager._instance;
};
haxe.ui.toolkit.data.DataManager.prototype = {
	registerDataSource: function(dataSource) {
		var dataSourceId = dataSource.get_id();
		if(dataSourceId == null || dataSourceId.length == 0) {
			dataSourceId = haxe.ui.toolkit.util.Identifier.guid();
			dataSource.set_id(dataSourceId);
		}
		this._dataSourceMap.set(dataSourceId,dataSource);
	}
	,getRegisteredDataSource: function(id) {
		return this._dataSourceMap.get(id);
	}
	,get_dataSources: function() {
		var arr = new Array();
		var $it0 = this._dataSourceMap.iterator();
		while( $it0.hasNext() ) {
			var ds = $it0.next();
			arr.push(ds);
		}
		return arr;
	}
	,__class__: haxe.ui.toolkit.data.DataManager
	,__properties__: {get_dataSources:"get_dataSources"}
};
haxe.ui.toolkit.data.FilesDataSource = function() {
	haxe.ui.toolkit.data.ArrayDataSource.call(this);
};
$hxClasses["haxe.ui.toolkit.data.FilesDataSource"] = haxe.ui.toolkit.data.FilesDataSource;
haxe.ui.toolkit.data.FilesDataSource.__name__ = ["haxe","ui","toolkit","data","FilesDataSource"];
haxe.ui.toolkit.data.FilesDataSource.__super__ = haxe.ui.toolkit.data.ArrayDataSource;
haxe.ui.toolkit.data.FilesDataSource.prototype = $extend(haxe.ui.toolkit.data.ArrayDataSource.prototype,{
	create: function(config) {
		if(config == null) return;
		this._id = config.get("id");
		var resource = config.get("resource");
		if(resource != null) this.createFromString(resource);
	}
	,_open: function() {
		return true;
	}
	,createFromString: function(data,config) {
		if(data != null) this._dir = this.fixDir(data);
	}
	,createFromResource: function(resourceId,config) {
		this.createFromString(resourceId,config);
	}
	,isDir: function(dir) {
		var isDir = false;
		return isDir;
	}
	,isRoot: function(dir) {
		var isRoot = false;
		return isRoot;
	}
	,fixDir: function(dir) {
		if(dir == null) return "";
		var fixedDir = dir;
		fixedDir = StringTools.replace(fixedDir,"\\","/");
		if(fixedDir.lastIndexOf("/") == fixedDir.length - 1 || fixedDir.lastIndexOf("\\") == fixedDir.length - 1) fixedDir = HxOverrides.substr(fixedDir,0,fixedDir.length - 1);
		return fixedDir;
	}
	,__class__: haxe.ui.toolkit.data.FilesDataSource
});
haxe.ui.toolkit.data.JSONDataSource = function() {
	haxe.ui.toolkit.data.ArrayDataSource.call(this);
};
$hxClasses["haxe.ui.toolkit.data.JSONDataSource"] = haxe.ui.toolkit.data.JSONDataSource;
haxe.ui.toolkit.data.JSONDataSource.__name__ = ["haxe","ui","toolkit","data","JSONDataSource"];
haxe.ui.toolkit.data.JSONDataSource.__super__ = haxe.ui.toolkit.data.ArrayDataSource;
haxe.ui.toolkit.data.JSONDataSource.prototype = $extend(haxe.ui.toolkit.data.ArrayDataSource.prototype,{
	create: function(config) {
		if(config == null) return;
		this._id = config.get("id");
		var resource = config.get("resource");
		if(resource != null) this.createFromResource(resource);
		var nodeText = null;
		if(config.firstChild() != null) nodeText = config.firstChild().get_nodeValue();
		if(nodeText != null) this.createFromString(nodeText);
	}
	,createFromString: function(data,config) {
		if(data != null) {
			var jsonObject = JSON.parse(data);
			var arr = null;
			if((jsonObject instanceof Array) && jsonObject.__enum__ == null) {
				arr = js.Boot.__cast(jsonObject , Array);
				var _g = 0;
				while(_g < arr.length) {
					var o = arr[_g];
					++_g;
					this.add(o);
				}
			}
		}
	}
	,__class__: haxe.ui.toolkit.data.JSONDataSource
});
haxe.ui.toolkit.data.MySQLDataSource = function() {
	haxe.ui.toolkit.data.DataSource.call(this);
};
$hxClasses["haxe.ui.toolkit.data.MySQLDataSource"] = haxe.ui.toolkit.data.MySQLDataSource;
haxe.ui.toolkit.data.MySQLDataSource.__name__ = ["haxe","ui","toolkit","data","MySQLDataSource"];
haxe.ui.toolkit.data.MySQLDataSource.__super__ = haxe.ui.toolkit.data.DataSource;
haxe.ui.toolkit.data.MySQLDataSource.prototype = $extend(haxe.ui.toolkit.data.DataSource.prototype,{
	__class__: haxe.ui.toolkit.data.MySQLDataSource
});
haxe.ui.toolkit.data.XMLDataSource = function() {
	haxe.ui.toolkit.data.ArrayDataSource.call(this);
};
$hxClasses["haxe.ui.toolkit.data.XMLDataSource"] = haxe.ui.toolkit.data.XMLDataSource;
haxe.ui.toolkit.data.XMLDataSource.__name__ = ["haxe","ui","toolkit","data","XMLDataSource"];
haxe.ui.toolkit.data.XMLDataSource.__super__ = haxe.ui.toolkit.data.ArrayDataSource;
haxe.ui.toolkit.data.XMLDataSource.prototype = $extend(haxe.ui.toolkit.data.ArrayDataSource.prototype,{
	create: function(config) {
		if(config == null) return;
		this._id = config.get("id");
		var resource = config.get("resource");
		if(resource != null) this.createFromResource(resource);
		var nodeText = null;
		if(config.firstChild() != null) nodeText = config.firstElement().toString();
		if(nodeText != null) this.createFromString(nodeText);
	}
	,createFromString: function(data,config) {
		if(data != null) {
			var xml = Xml.parse(data);
			if(xml != null) {
				var it = xml.firstElement().elements();
				while( it.hasNext() ) {
					var e = it.next();
					var o = { };
					var $it0 = e.attributes();
					while( $it0.hasNext() ) {
						var attrName = $it0.next();
						Reflect.setField(o,attrName,e.get(attrName));
					}
					if(Reflect.fields(o).length != 0) this.add(o);
				}
			}
		}
	}
	,__class__: haxe.ui.toolkit.data.XMLDataSource
});
openfl.events.Event = function(inType,inBubbles,inCancelable) {
	if(inCancelable == null) inCancelable = false;
	if(inBubbles == null) inBubbles = false;
	this.type = inType;
	this.bubbles = inBubbles;
	this.cancelable = inCancelable;
	this.__isCancelled = false;
	this.__isCancelledNow = false;
	this.target = null;
	this.currentTarget = null;
	this.eventPhase = openfl.events.EventPhase.AT_TARGET;
};
$hxClasses["openfl.events.Event"] = openfl.events.Event;
openfl.events.Event.__name__ = ["openfl","events","Event"];
openfl.events.Event.prototype = {
	clone: function() {
		return new openfl.events.Event(this.type,this.bubbles,this.cancelable);
	}
	,stopImmediatePropagation: function() {
		this.__isCancelled = true;
		this.__isCancelledNow = true;
	}
	,stopPropagation: function() {
		this.__isCancelled = true;
	}
	,toString: function() {
		return "[Event type=" + this.type + " bubbles=" + Std.string(this.bubbles) + " cancelable=" + Std.string(this.cancelable) + "]";
	}
	,__createSimilar: function(type,related,targ) {
		var result = new openfl.events.Event(type,this.bubbles,this.cancelable);
		if(targ != null) result.target = targ;
		return result;
	}
	,__getIsCancelled: function() {
		return this.__isCancelled;
	}
	,__getIsCancelledNow: function() {
		return this.__isCancelledNow;
	}
	,__setPhase: function(phase) {
		this.eventPhase = phase;
	}
	,__class__: openfl.events.Event
};
haxe.ui.toolkit.events = {};
haxe.ui.toolkit.events.MenuEvent = function(type,menuItem) {
	openfl.events.Event.call(this,type);
	this.menuItem = menuItem;
};
$hxClasses["haxe.ui.toolkit.events.MenuEvent"] = haxe.ui.toolkit.events.MenuEvent;
haxe.ui.toolkit.events.MenuEvent.__name__ = ["haxe","ui","toolkit","events","MenuEvent"];
haxe.ui.toolkit.events.MenuEvent.__super__ = openfl.events.Event;
haxe.ui.toolkit.events.MenuEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: haxe.ui.toolkit.events.MenuEvent
});
haxe.ui.toolkit.events.UIEvent = function(type,c,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this._component = c;
};
$hxClasses["haxe.ui.toolkit.events.UIEvent"] = haxe.ui.toolkit.events.UIEvent;
haxe.ui.toolkit.events.UIEvent.__name__ = ["haxe","ui","toolkit","events","UIEvent"];
haxe.ui.toolkit.events.UIEvent.__super__ = openfl.events.Event;
haxe.ui.toolkit.events.UIEvent.prototype = $extend(openfl.events.Event.prototype,{
	clone: function() {
		var c = new haxe.ui.toolkit.events.UIEvent(this.type,this._component,this.bubbles,this.cancelable);
		c.displayObject = this.displayObject;
		c.data = this.data;
		c.stageX = this.stageX;
		c.stageY = this.stageY;
		return c;
	}
	,get_component: function() {
		if(this._component != null) return this._component;
		if(this.displayObject == null || js.Boot.__instanceof(this.displayObject,haxe.ui.toolkit.core.Component) == false) return null;
		return js.Boot.__cast(this.displayObject , haxe.ui.toolkit.core.Component);
	}
	,getComponentAs: function(type) {
		var c = this.get_component();
		if(c == null) return null;
		return c;
	}
	,getDataAs: function(type) {
		var d = this.data;
		if(d == null) return null;
		return d;
	}
	,__class__: haxe.ui.toolkit.events.UIEvent
	,__properties__: {get_component:"get_component"}
});
haxe.ui.toolkit.hscript = {};
haxe.ui.toolkit.hscript.ClientWrapper = function() {
	this.language = haxe.ui.toolkit.core.Client.get_instance().get_language();
	this.dpi = haxe.ui.toolkit.core.Client.get_instance().get_dpi();
	this.platform = haxe.ui.toolkit.core.Client.get_instance().get_platform();
	this.target = haxe.ui.toolkit.core.Client.get_instance().get_target();
	this.mobile = haxe.ui.toolkit.core.Client.get_instance().get_mobile();
	this.screenWidth = haxe.ui.toolkit.core.Client.get_instance().get_screenWidth();
	this.screenHeight = haxe.ui.toolkit.core.Client.get_instance().get_screenHeight();
	this.windowWidth = haxe.ui.toolkit.core.Client.get_instance().get_windowWidth();
	this.windowHeight = haxe.ui.toolkit.core.Client.get_instance().get_windowHeight();
};
$hxClasses["haxe.ui.toolkit.hscript.ClientWrapper"] = haxe.ui.toolkit.hscript.ClientWrapper;
haxe.ui.toolkit.hscript.ClientWrapper.__name__ = ["haxe","ui","toolkit","hscript","ClientWrapper"];
haxe.ui.toolkit.hscript.ClientWrapper.prototype = {
	__class__: haxe.ui.toolkit.hscript.ClientWrapper
};
var hscript = {};
hscript.Interp = function() {
	this.variables = new haxe.ds.StringMap();
	this.variables.set("null",null);
	this.variables.set("true",true);
	this.variables.set("false",false);
	this.variables.set("trace",function(e) {
		haxe.Log.trace(Std.string(e),{ fileName : "hscript", lineNumber : 0});
	});
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript.Interp;
hscript.Interp.__name__ = ["hscript","Interp"];
hscript.Interp.prototype = {
	initOps: function() {
		var me = this;
		this.binops = new haxe.ds.StringMap();
		this.binops.set("+",function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		});
		this.binops.set("-",function(e11,e21) {
			return me.expr(e11) - me.expr(e21);
		});
		this.binops.set("*",function(e12,e22) {
			return me.expr(e12) * me.expr(e22);
		});
		this.binops.set("/",function(e13,e23) {
			return me.expr(e13) / me.expr(e23);
		});
		this.binops.set("%",function(e14,e24) {
			return me.expr(e14) % me.expr(e24);
		});
		this.binops.set("&",function(e15,e25) {
			return me.expr(e15) & me.expr(e25);
		});
		this.binops.set("|",function(e16,e26) {
			return me.expr(e16) | me.expr(e26);
		});
		this.binops.set("^",function(e17,e27) {
			return me.expr(e17) ^ me.expr(e27);
		});
		this.binops.set("<<",function(e18,e28) {
			return me.expr(e18) << me.expr(e28);
		});
		this.binops.set(">>",function(e19,e29) {
			return me.expr(e19) >> me.expr(e29);
		});
		this.binops.set(">>>",function(e110,e210) {
			return me.expr(e110) >>> me.expr(e210);
		});
		this.binops.set("==",function(e111,e211) {
			return me.expr(e111) == me.expr(e211);
		});
		this.binops.set("!=",function(e112,e212) {
			return me.expr(e112) != me.expr(e212);
		});
		this.binops.set(">=",function(e113,e213) {
			return me.expr(e113) >= me.expr(e213);
		});
		this.binops.set("<=",function(e114,e214) {
			return me.expr(e114) <= me.expr(e214);
		});
		this.binops.set(">",function(e115,e215) {
			return me.expr(e115) > me.expr(e215);
		});
		this.binops.set("<",function(e116,e216) {
			return me.expr(e116) < me.expr(e216);
		});
		this.binops.set("||",function(e117,e217) {
			return me.expr(e117) == true || me.expr(e217) == true;
		});
		this.binops.set("&&",function(e118,e218) {
			return me.expr(e118) == true && me.expr(e218) == true;
		});
		this.binops.set("=",$bind(this,this.assign));
		this.binops.set("...",function(e119,e219) {
			return new IntIterator(me.expr(e119),me.expr(e219));
		});
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			if(l == null) this.variables.set(id,v); else l.r = v;
			break;
		case 5:
			var f = e1[3];
			var e = e1[2];
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			this.expr(e3)[this.expr(index)] = v;
			break;
		default:
			this.error(hscript.Error.EInvalidOp("="));
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		this.binops.set(op,function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		});
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1[1]) {
		case 1:
			var id = e1[2];
			var l = this.locals.get(id);
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) this.variables.set(id,v); else l.r = v;
			break;
		case 5:
			var f = e1[3];
			var e = e1[2];
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1[3];
			var e3 = e1[2];
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			v = fop(arr[index1],this.expr(e2));
			arr[index1] = v;
			break;
		default:
			return this.error(hscript.Error.EInvalidOp(op));
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e[1]) {
		case 1:
			var id = e[2];
			var l = this.locals.get(id);
			var v;
			if(l == null) v = this.variables.get(id); else v = l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					var value = v;
					this.variables.set(id,value);
				} else l.r = v;
			} else if(l == null) {
				var value1 = v + delta;
				this.variables.set(id,value1);
			} else l.r = v + delta;
			return v;
		case 5:
			var f = e[3];
			var e1 = e[2];
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else this.set(obj,f,v1 + delta);
			return v1;
		case 16:
			var index = e[3];
			var e2 = e[2];
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			var v2 = arr[index1];
			if(prefix) {
				v2 += delta;
				arr[index1] = v2;
			} else arr[index1] = v2 + delta;
			return v2;
		default:
			return this.error(hscript.Error.EInvalidOp(delta > 0?"++":"--"));
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe.ds.StringMap();
		this.declared = new Array();
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			if( js.Boot.__instanceof(e1,hscript._Interp.Stop) ) {
				switch(e1[1]) {
				case 0:
					throw "Invalid break";
					break;
				case 1:
					throw "Invalid continue";
					break;
				case 2:
					var v = e1[2];
					return v;
				}
			} else throw(e1);
		}
		return null;
	}
	,duplicate: function(h) {
		var h2 = new haxe.ds.StringMap();
		var $it0 = h.keys();
		while( $it0.hasNext() ) {
			var k = $it0.next();
			var value = h.get(k);
			h2.set(k,value);
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			this.locals.set(d.n,d.old);
		}
	}
	,edef: function(e) {
		return e;
	}
	,error: function(e) {
		throw e;
		return null;
	}
	,resolve: function(id) {
		var l = this.locals.get(id);
		if(l != null) return l.r;
		var v = this.variables.get(id);
		if(v == null && !this.variables.exists(id)) this.error(hscript.Error.EUnknownVariable(id));
		return v;
	}
	,expr: function(e) {
		switch(e[1]) {
		case 0:
			var c = e[2];
			switch(c[1]) {
			case 0:
				var v = c[2];
				return v;
			case 1:
				var f = c[2];
				return f;
			case 2:
				var s = c[2];
				return s;
			}
			break;
		case 1:
			var id = e[2];
			return this.resolve(id);
		case 2:
			var e1 = e[4];
			var n = e[2];
			this.declared.push({ n : n, old : this.locals.get(n)});
			var value = { r : e1 == null?null:this.expr(e1)};
			this.locals.set(n,value);
			return null;
		case 3:
			var e2 = e[2];
			return this.expr(e2);
		case 4:
			var exprs = e[2];
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e[3];
			var e4 = e[2];
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e[4];
			var e11 = e[3];
			var op = e[2];
			var fop = this.binops.get(op);
			if(fop == null) this.error(hscript.Error.EInvalidOp(op));
			return fop(e11,e21);
		case 7:
			var e5 = e[4];
			var prefix = e[3];
			var op1 = e[2];
			switch(op1) {
			case "!":
				return this.expr(e5) != true;
			case "-":
				return -this.expr(e5);
			case "++":
				return this.increment(e5,prefix,1);
			case "--":
				return this.increment(e5,prefix,-1);
			case "~":
				return ~this.expr(e5);
			default:
				this.error(hscript.Error.EInvalidOp(op1));
			}
			break;
		case 8:
			var params = e[3];
			var e6 = e[2];
			var args = new Array();
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			switch(e6[1]) {
			case 5:
				var f2 = e6[3];
				var e7 = e6[2];
				var obj = this.expr(e7);
				if(obj == null) this.error(hscript.Error.EInvalidAccess(f2));
				return this.fcall(obj,f2,args);
			default:
				return this.call(null,this.expr(e6),args);
			}
			break;
		case 9:
			var e22 = e[4];
			var e12 = e[3];
			var econd = e[2];
			if(this.expr(econd) == true) return this.expr(e12); else if(e22 == null) return null; else return this.expr(e22);
			break;
		case 10:
			var e8 = e[3];
			var econd1 = e[2];
			this.whileLoop(econd1,e8);
			return null;
		case 11:
			var e9 = e[4];
			var it = e[3];
			var v2 = e[2];
			this.forLoop(v2,it,e9);
			return null;
		case 12:
			throw hscript._Interp.Stop.SBreak;
			break;
		case 13:
			throw hscript._Interp.Stop.SContinue;
			break;
		case 15:
			var e10 = e[2];
			throw hscript._Interp.Stop.SReturn(e10 == null?null:this.expr(e10));
			break;
		case 14:
			var name = e[4];
			var fexpr = e[3];
			var params1 = e[2];
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) hasOpt = true; else minParams++;
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) str += " for function '" + name + "'";
						throw str;
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g3 = 0;
					while(_g3 < params1.length) {
						var p2 = params1[_g3];
						++_g3;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								extraParams--;
							} else args2.push(null);
						} else args2.push(args1[pos++]);
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g11 = 0;
				var _g4 = params1.length;
				while(_g11 < _g4) {
					var i = _g11++;
					me.locals.set(params1[i].name,{ r : args1[i]});
				}
				var r = null;
				try {
					r = me.exprReturn(fexpr);
				} catch( e13 ) {
					me.locals = old1;
					me.depth = depth;
					throw e13;
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) this.variables.set(name,f4); else {
					this.declared.push({ n : name, old : this.locals.get(name)});
					var ref = { r : f4};
					this.locals.set(name,ref);
					capturedLocals.set(name,ref);
				}
			}
			return f4;
		case 17:
			var arr = e[2];
			var a = new Array();
			var _g5 = 0;
			while(_g5 < arr.length) {
				var e14 = arr[_g5];
				++_g5;
				a.push(this.expr(e14));
			}
			return a;
		case 16:
			var index = e[3];
			var e15 = e[2];
			return this.expr(e15)[this.expr(index)];
		case 18:
			var params2 = e[3];
			var cl = e[2];
			var a1 = new Array();
			var _g6 = 0;
			while(_g6 < params2.length) {
				var e16 = params2[_g6];
				++_g6;
				a1.push(this.expr(e16));
			}
			return this.cnew(cl,a1);
		case 19:
			var e17 = e[2];
			throw this.expr(e17);
			break;
		case 20:
			var ecatch = e[5];
			var n1 = e[3];
			var e18 = e[2];
			var old2 = this.declared.length;
			try {
				var v3 = this.expr(e18);
				this.restore(old2);
				return v3;
			} catch( $e0 ) {
				if( js.Boot.__instanceof($e0,hscript._Interp.Stop) ) {
					var err = $e0;
					throw err;
				} else {
				var err1 = $e0;
				this.restore(old2);
				this.declared.push({ n : n1, old : this.locals.get(n1)});
				this.locals.set(n1,{ r : err1});
				var v4 = this.expr(ecatch);
				this.restore(old2);
				return v4;
				}
			}
			break;
		case 21:
			var fl = e[2];
			var o = { };
			var _g7 = 0;
			while(_g7 < fl.length) {
				var f5 = fl[_g7];
				++_g7;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e23 = e[4];
			var e19 = e[3];
			var econd2 = e[2];
			if(this.expr(econd2) == true) return this.expr(e19); else return this.expr(e23);
			break;
		case 23:
			var def = e[4];
			var cases = e[3];
			var e20 = e[2];
			var val = this.expr(e20);
			var match = false;
			var _g8 = 0;
			while(_g8 < cases.length) {
				var c1 = cases[_g8];
				++_g8;
				var _g12 = 0;
				var _g21 = c1.values;
				while(_g12 < _g21.length) {
					var v5 = _g21[_g12];
					++_g12;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) if(def == null) val = null; else val = this.expr(def);
			return val;
		}
		return null;
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		try {
			while(this.expr(econd) == true) try {
				this.expr(e);
			} catch( err ) {
				if( js.Boot.__instanceof(err,hscript._Interp.Stop) ) {
					switch(err[1]) {
					case 1:
						break;
					case 0:
						throw "__break__";
						break;
					case 2:
						throw err;
						break;
					}
				} else throw(err);
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $iterator(v)();
		} catch( e ) {
		}
		if(v.hasNext == null || v.next == null) this.error(hscript.Error.EInvalidIterator(v));
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		this.declared.push({ n : n, old : this.locals.get(n)});
		var it1 = this.makeIterator(this.expr(it));
		try {
			while(it1.hasNext()) {
				var value = { r : it1.next()};
				this.locals.set(n,value);
				try {
					this.expr(e);
				} catch( err ) {
					if( js.Boot.__instanceof(err,hscript._Interp.Stop) ) {
						switch(err[1]) {
						case 1:
							break;
						case 0:
							throw "__break__";
							break;
						case 2:
							throw err;
							break;
						}
					} else throw(err);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		this.restore(old);
	}
	,get: function(o,f) {
		if(o == null) this.error(hscript.Error.EInvalidAccess(f));
		return Reflect.field(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) this.error(hscript.Error.EInvalidAccess(f));
		o[f] = v;
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,Reflect.field(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = Type.resolveClass(cl);
		if(c == null) c = this.resolve(cl);
		return Type.createInstance(c,args);
	}
	,__class__: hscript.Interp
};
haxe.ui.toolkit.hscript.ScriptInterp = function() {
	hscript.Interp.call(this);
	var defaultClasses = haxe.ui.toolkit.hscript.ScriptManager.get_instance().get_classes();
	var $it0 = defaultClasses.keys();
	while( $it0.hasNext() ) {
		var name = $it0.next();
		var c = defaultClasses.get(name);
		try {
			var inst = Type.createInstance(c,[]);
			if(js.Boot.__instanceof(inst,Std)) throw "Not sure why";
			this.variables.set(name,inst);
		} catch( e ) {
			this.variables.set(name,c);
		}
	}
};
$hxClasses["haxe.ui.toolkit.hscript.ScriptInterp"] = haxe.ui.toolkit.hscript.ScriptInterp;
haxe.ui.toolkit.hscript.ScriptInterp.__name__ = ["haxe","ui","toolkit","hscript","ScriptInterp"];
haxe.ui.toolkit.hscript.ScriptInterp.__super__ = hscript.Interp;
haxe.ui.toolkit.hscript.ScriptInterp.prototype = $extend(hscript.Interp.prototype,{
	get: function(o,f) {
		if(o == null) throw hscript.Error.EInvalidAccess(f);
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) throw hscript.Error.EInvalidAccess(f);
		Reflect.setProperty(o,f,v);
		return v;
	}
	,__class__: haxe.ui.toolkit.hscript.ScriptInterp
});
haxe.ui.toolkit.hscript.ScriptManager = function() {
	this._defaultClasses = new haxe.ds.StringMap();
	this._defaultClasses.set("Std",Std);
	this._defaultClasses.set("Math",Math);
	this._defaultClasses.set("Client",haxe.ui.toolkit.hscript.ClientWrapper);
};
$hxClasses["haxe.ui.toolkit.hscript.ScriptManager"] = haxe.ui.toolkit.hscript.ScriptManager;
haxe.ui.toolkit.hscript.ScriptManager.__name__ = ["haxe","ui","toolkit","hscript","ScriptManager"];
haxe.ui.toolkit.hscript.ScriptManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.hscript.ScriptManager.get_instance = function() {
	if(haxe.ui.toolkit.hscript.ScriptManager._instance == null) haxe.ui.toolkit.hscript.ScriptManager._instance = new haxe.ui.toolkit.hscript.ScriptManager();
	return haxe.ui.toolkit.hscript.ScriptManager._instance;
};
haxe.ui.toolkit.hscript.ScriptManager.prototype = {
	get_classes: function() {
		return this._defaultClasses;
	}
	,addClass: function(name,cls) {
		this._defaultClasses.set(name,cls);
	}
	,executeScript: function(script) {
		var fullScript = "";
		fullScript += script;
		var retVal = null;
		try {
			var parser = new hscript.Parser();
			var program = parser.parseString(fullScript);
			var interp = new haxe.ui.toolkit.hscript.ScriptInterp();
			retVal = interp.execute(program);
		} catch( e ) {
			retVal = script;
		}
		return retVal;
	}
	,__class__: haxe.ui.toolkit.hscript.ScriptManager
	,__properties__: {get_classes:"get_classes"}
};
haxe.ui.toolkit.hscript.ScriptUtils = function() { };
$hxClasses["haxe.ui.toolkit.hscript.ScriptUtils"] = haxe.ui.toolkit.hscript.ScriptUtils;
haxe.ui.toolkit.hscript.ScriptUtils.__name__ = ["haxe","ui","toolkit","hscript","ScriptUtils"];
haxe.ui.toolkit.hscript.ScriptUtils.isScript = function(data) {
	if(data.indexOf("+") != -1 || data.indexOf("-") != -1 || data.indexOf("*") != -1 || data.indexOf("/") != -1 || data.indexOf("(") != -1 || data.indexOf(")") != -1 || data.indexOf("[") != -1 || data.indexOf("]") != -1) return true;
	return false;
};
haxe.ui.toolkit.hscript.ScriptUtils.isCssException = function(name) {
	if(name == "filter" || name == "icon" || name == "backgroundImage" || name == "fontName") return true;
	return false;
};
haxe.ui.toolkit.layout.AbsoluteLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.AbsoluteLayout"] = haxe.ui.toolkit.layout.AbsoluteLayout;
haxe.ui.toolkit.layout.AbsoluteLayout.__name__ = ["haxe","ui","toolkit","layout","AbsoluteLayout"];
haxe.ui.toolkit.layout.AbsoluteLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.AbsoluteLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var ucx = this.get_usableWidth();
		var ucy = this.get_usableHeight();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			if(child.get_percentWidth() > -1) child.set_width(ucx * child.get_percentWidth() / 100);
			if(child.get_percentHeight() > -1) child.set_height(ucy * child.get_percentHeight() / 100);
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.AbsoluteLayout();
	}
	,__class__: haxe.ui.toolkit.layout.AbsoluteLayout
});
haxe.ui.toolkit.layout.BoxLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.BoxLayout"] = haxe.ui.toolkit.layout.BoxLayout;
haxe.ui.toolkit.layout.BoxLayout.__name__ = ["haxe","ui","toolkit","layout","BoxLayout"];
haxe.ui.toolkit.layout.BoxLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.BoxLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var ucx = this.get_usableWidth();
		var ucy = this.get_usableHeight();
		var totalWidth = 0;
		var totalHeight = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			if(child.get_percentWidth() > -1) child.set_width(ucx * child.get_percentWidth() / 100);
			if(child.get_percentHeight() > -1) child.set_height(ucy * child.get_percentHeight() / 100);
			if(child.get_width() > totalWidth) totalWidth = child.get_width();
			if(child.get_height() > totalHeight) totalHeight = child.get_height();
		}
		if(this.get_container().get_autoSize()) {
			if(totalWidth > 0 && totalWidth != this.get_innerWidth() && this.get_container().get_percentWidth() == -1) this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			if(totalHeight > 0 && totalHeight != this.get_innerHeight() && this.get_container().get_percentHeight() == -1) this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalWidth > 0 && this.get_container().get_height() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalHeight > 0 && this.get_container().get_width() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			var xpos = this.get_padding().get_left();
			var ypos = this.get_padding().get_top();
			var halign = child.get_horizontalAlign();
			var valign = child.get_verticalAlign();
			switch(halign) {
			case "center":
				xpos = this.get_container().get_width() / 2 - child.get_width() / 2;
				break;
			case "right":
				xpos = this.get_container().get_width() - child.get_width() - this.get_padding().get_right();
				break;
			default:
			}
			switch(valign) {
			case "center":
				ypos = this.get_container().get_height() / 2 - child.get_height() / 2;
				break;
			case "bottom":
				ypos = this.get_container().get_height() - child.get_height() - this.get_padding().get_bottom();
				break;
			default:
			}
			child.set_x(xpos);
			child.set_y(ypos);
		}
	}
	,get_usableWidth: function() {
		var ucx = haxe.ui.toolkit.layout.Layout.prototype.get_usableWidth.call(this);
		return ucx;
	}
	,get_usableHeight: function() {
		var ucy = haxe.ui.toolkit.layout.Layout.prototype.get_usableHeight.call(this);
		return ucy;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.BoxLayout();
	}
	,__class__: haxe.ui.toolkit.layout.BoxLayout
});
haxe.ui.toolkit.layout.GridLayout = function() {
	this._columns = 1;
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.GridLayout"] = haxe.ui.toolkit.layout.GridLayout;
haxe.ui.toolkit.layout.GridLayout.__name__ = ["haxe","ui","toolkit","layout","GridLayout"];
haxe.ui.toolkit.layout.GridLayout.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.layout.GridLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.GridLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		this._columns = value;
		return value;
	}
	,resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var columnWidths = this.calcColumnWidths();
		var rowHeights = this.calcRowHeights();
		var totalWidth = 0;
		var totalHeight = 0;
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			if(child.get_percentWidth() > -1) {
				var ucx = columnWidths[columnIndex];
				child.set_width(ucx * child.get_percentWidth() / 100);
			}
			if(child.get_percentHeight() > -1) {
				var ucy = rowHeights[rowIndex];
				child.set_height(ucy * child.get_percentHeight() / 100);
			}
			columnIndex++;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				rowIndex++;
			}
		}
		var _g2 = 0;
		while(_g2 < columnWidths.length) {
			var cx = columnWidths[_g2];
			++_g2;
			totalWidth += cx;
		}
		if(columnWidths.length > 1) totalWidth += this.get_spacingX() * (columnWidths.length - 1);
		var _g3 = 0;
		while(_g3 < rowHeights.length) {
			var cy = rowHeights[_g3];
			++_g3;
			totalHeight += cy;
		}
		if(rowHeights.length > 1) totalHeight += this.get_spacingY() * (rowHeights.length - 1);
		if(this.get_container().get_autoSize()) {
			if(totalWidth > 0 && totalWidth != this.get_innerWidth() && this.get_container().get_percentWidth() == -1) this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			if(totalHeight > 0 && totalHeight != this.get_innerHeight() && this.get_container().get_percentHeight() == -1) this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalWidth > 0 && this.get_container().get_height() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalHeight > 0 && this.get_container().get_width() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var columnWidths = this.calcColumnWidths();
		var rowHeights = this.calcRowHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_padding().get_left();
		var ypos = this.get_padding().get_top();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			var halign = child.get_horizontalAlign();
			var valign = child.get_verticalAlign();
			switch(halign) {
			case "center":
				child.set_x(xpos + (columnWidths[columnIndex] - child.get_width()) * 0.5);
				break;
			case "right":
				child.set_x(xpos + (columnWidths[columnIndex] - child.get_width()));
				break;
			default:
				child.set_x(xpos);
			}
			switch(valign) {
			case "center":
				child.set_y(ypos + (rowHeights[rowIndex] - child.get_height()) * 0.5);
				break;
			case "bottom":
				child.set_y(ypos + (rowHeights[rowIndex] - child.get_height()));
				break;
			default:
				child.set_y(ypos);
			}
			xpos += columnWidths[columnIndex] + this.get_spacingX();
			columnIndex++;
			if(columnIndex >= this._columns) {
				xpos = this.get_padding().get_left();
				ypos += rowHeights[rowIndex] + this.get_spacingY();
				columnIndex = 0;
				rowIndex++;
			}
		}
	}
	,get_usableWidth: function() {
		var ucx = haxe.ui.toolkit.layout.Layout.prototype.get_usableWidth.call(this);
		return ucx;
	}
	,get_usableHeight: function() {
		var ucy = haxe.ui.toolkit.layout.Layout.prototype.get_usableHeight.call(this);
		return ucy;
	}
	,calcColumnWidths: function() {
		var columnWidths = new Array();
		var _g1 = 0;
		var _g = this._columns;
		while(_g1 < _g) {
			var n = _g1++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g11 = this.get_container().get_children();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_visible() == false) continue;
			if(child.get_percentWidth() <= 0) {
				if(child.get_width() > columnWidths[columnIndex]) columnWidths[columnIndex] = child.get_width();
			}
			columnIndex++;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				rowIndex++;
			}
		}
		rowIndex = 0;
		columnIndex = 0;
		var _g3 = 0;
		var _g12 = this.get_container().get_children();
		while(_g3 < _g12.length) {
			var child1 = _g12[_g3];
			++_g3;
			if(child1.get_visible() == false) continue;
			if(child1.get_percentWidth() > 0) {
				var ucx = this.get_usableWidth() - (this.get_columns() - 1) * this.get_spacingX();
				var _g31 = 0;
				var _g21 = columnWidths.length;
				while(_g31 < _g21) {
					var n1 = _g31++;
					if(n1 != columnIndex) ucx -= columnWidths[n1];
				}
				var cx = ucx * child1.get_percentWidth() / 100;
				if(cx > columnWidths[columnIndex]) columnWidths[columnIndex] = cx;
			}
			columnIndex++;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				rowIndex++;
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function() {
		var visibleChildren = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_visible()) visibleChildren++;
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) rowCount++;
		var rowHeights = new Array();
		var _g2 = 0;
		while(_g2 < rowCount) {
			var n = _g2++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g3 = 0;
		var _g11 = this.get_container().get_children();
		while(_g3 < _g11.length) {
			var child = _g11[_g3];
			++_g3;
			if(child.get_visible() == false) continue;
			if(child.get_percentHeight() <= 0) {
				if(child.get_height() > rowHeights[rowIndex]) rowHeights[rowIndex] = child.get_height();
			}
			columnIndex++;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				rowIndex++;
			}
		}
		rowIndex = 0;
		columnIndex = 0;
		var _g4 = 0;
		var _g12 = this.get_container().get_children();
		while(_g4 < _g12.length) {
			var child1 = _g12[_g4];
			++_g4;
			if(child1.get_visible() == false) continue;
			if(child1.get_percentHeight() > 0) {
				var ucy = this.get_usableHeight() - (rowCount - 1) * this.get_spacingY();
				var _g31 = 0;
				var _g21 = rowHeights.length;
				while(_g31 < _g21) {
					var n1 = _g31++;
					if(n1 != rowIndex) ucy -= rowHeights[n1];
				}
				var cy = ucy * child1.get_percentHeight() / 100;
				if(cy > rowHeights[rowIndex]) rowHeights[rowIndex] = cy;
			}
			columnIndex++;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				rowIndex++;
			}
		}
		return rowHeights;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		c.set_columns(this.get_columns());
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.GridLayout();
	}
	,__class__: haxe.ui.toolkit.layout.GridLayout
	,__properties__: $extend(haxe.ui.toolkit.layout.Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
haxe.ui.toolkit.layout.HorizontalContinuousLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.HorizontalContinuousLayout"] = haxe.ui.toolkit.layout.HorizontalContinuousLayout;
haxe.ui.toolkit.layout.HorizontalContinuousLayout.__name__ = ["haxe","ui","toolkit","layout","HorizontalContinuousLayout"];
haxe.ui.toolkit.layout.HorizontalContinuousLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.HorizontalContinuousLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var xpos = this.get_padding().get_left();
		var ypos = this.get_padding().get_top();
		var usedCX = this.get_padding().get_left() + this.get_padding().get_right();
		var usedCY = this.get_padding().get_top() + this.get_padding().get_bottom();
		var rowCY = 0;
		var rowHeights = new Array();
		var rowChildren = new Array();
		rowHeights.push(0);
		var row = 0;
		var maxCX = this.get_container().get_width();
		if(this.get_container().get_autoSize() == true && this.get_container().get_parent() != null) maxCX = this.get_container().get_parent().get_layout().get_usableWidth();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			rowChildren.push(child);
			if(child.get_percentWidth() > -1) child.set_width((maxCX - this.get_spacingX()) * child.get_percentWidth() / 100);
			usedCX += child.get_width() + this.get_spacingX();
			if(usedCX - this.get_spacingX() > maxCX) {
				xpos = this.get_padding().get_left();
				rowHeights.push(0);
				ypos += rowHeights[row] + this.get_spacingY();
				row++;
				usedCX = this.get_padding().get_left() + this.get_padding().get_right() + child.get_width() + this.get_spacingX();
				rowChildren = new Array();
				rowChildren.push(child);
			}
			var reposition = false;
			if(child.get_height() > rowHeights[row]) {
				rowHeights[row] = child.get_height();
				reposition = true;
			}
			usedCY = this.get_padding().get_top() + this.get_padding().get_bottom();
			var _g2 = 0;
			while(_g2 < rowHeights.length) {
				var cy = rowHeights[_g2];
				++_g2;
				usedCY += cy + this.get_spacingY();
			}
			usedCY -= this.get_spacingY();
			if(reposition) {
				var _g21 = 0;
				while(_g21 < rowChildren.length) {
					var temp = rowChildren[_g21];
					++_g21;
					var valign = temp.get_verticalAlign();
					var tempYpos = temp.get_y();
					switch(valign) {
					case "center":
						tempYpos = usedCY - temp.get_height() - this.get_padding().get_top() - (rowHeights[row] / 2 - temp.get_height() / 2);
						break;
					case "bottom":
						tempYpos = usedCY - temp.get_height() - this.get_padding().get_top();
						break;
					default:
					}
					temp.set_y(tempYpos);
				}
			}
			if(usedCX - this.get_spacingX() > this.get_container().get_width() && this.get_container().get_autoSize()) this.get_container().set_width(usedCX - this.get_spacingX());
			if(usedCY > this.get_container().get_height() && this.get_container().get_autoSize()) this.get_container().set_height(usedCY);
			var valign1 = child.get_verticalAlign();
			var tempYPos = ypos;
			switch(valign1) {
			case "center":
				tempYPos = usedCY - child.get_height() - this.get_padding().get_top() - (rowHeights[row] / 2 - child.get_height() / 2);
				break;
			case "bottom":
				tempYPos = usedCY - child.get_height() - this.get_padding().get_top();
				break;
			default:
			}
			child.set_x(xpos);
			child.set_y(tempYPos);
			xpos += child.get_width() + this.get_spacingX();
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.HorizontalContinuousLayout();
	}
	,__class__: haxe.ui.toolkit.layout.HorizontalContinuousLayout
});
haxe.ui.toolkit.layout.HorizontalLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.HorizontalLayout"] = haxe.ui.toolkit.layout.HorizontalLayout;
haxe.ui.toolkit.layout.HorizontalLayout.__name__ = ["haxe","ui","toolkit","layout","HorizontalLayout"];
haxe.ui.toolkit.layout.HorizontalLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.HorizontalLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var ucx = this.get_usableWidth();
		var ucy = this.get_usableHeight();
		var totalWidth = 0;
		var totalHeight = 0;
		var numChildren = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			numChildren++;
			if(child.get_percentWidth() > -1) child.set_width(ucx * child.get_percentWidth() / 100);
			if(child.get_percentHeight() > -1) child.set_height(ucy * child.get_percentHeight() / 100);
			totalWidth += child.get_width();
			if(child.get_height() > totalHeight) totalHeight = child.get_height();
		}
		if(numChildren > 1) totalWidth += this.get_spacingX() * (numChildren - 1);
		if(this.get_container().get_autoSize()) {
			if(totalWidth > 0 && totalWidth != this.get_innerWidth() && this.get_container().get_percentWidth() == -1) this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			if(totalHeight > 0 && totalHeight != this.get_innerHeight() && this.get_container().get_percentHeight() == -1) this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalWidth > 0 && this.get_container().get_height() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalHeight > 0 && this.get_container().get_width() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var xpos = this.get_padding().get_left();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			var ypos = this.get_padding().get_top();
			var valign = child.get_verticalAlign();
			switch(valign) {
			case "center":
				ypos = this.get_container().get_height() / 2 - child.get_height() / 2;
				break;
			case "bottom":
				ypos = this.get_container().get_height() - child.get_height() - this.get_padding().get_bottom();
				break;
			default:
			}
			child.set_x(xpos);
			child.set_y(ypos);
			xpos += child.get_width() + this.get_spacingX();
		}
	}
	,get_usableWidth: function() {
		var ucx = haxe.ui.toolkit.layout.Layout.prototype.get_usableWidth.call(this);
		var visibleChildren = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_visible()) visibleChildren++;
		}
		if(visibleChildren > 1) ucx -= this.get_spacingX() * (visibleChildren - 1);
		var _g2 = 0;
		var _g11 = this.get_container().get_children();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_visible() == false) continue;
			if(child.get_width() > 0 && child.get_percentWidth() < 0) ucx -= child.get_width();
		}
		if(ucx < 0) ucx = 0;
		return ucx;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.HorizontalLayout();
	}
	,__class__: haxe.ui.toolkit.layout.HorizontalLayout
});
haxe.ui.toolkit.layout.VerticalContinuousLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.VerticalContinuousLayout"] = haxe.ui.toolkit.layout.VerticalContinuousLayout;
haxe.ui.toolkit.layout.VerticalContinuousLayout.__name__ = ["haxe","ui","toolkit","layout","VerticalContinuousLayout"];
haxe.ui.toolkit.layout.VerticalContinuousLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.VerticalContinuousLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var xpos = this.get_padding().get_left();
		var ypos = this.get_padding().get_top();
		var usedCX = this.get_padding().get_left() + this.get_padding().get_right();
		var usedCY = this.get_padding().get_top() + this.get_padding().get_bottom();
		var colCX = 0;
		var colWidths = new Array();
		var colChildren = new Array();
		colWidths.push(0);
		var col = 0;
		var maxCY = this.get_container().get_height();
		if(this.get_container().get_autoSize() == true && this.get_container().get_parent() != null) maxCY = this.get_container().get_parent().get_layout().get_usableHeight();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			colChildren.push(child);
			usedCY += child.get_height() + this.get_spacingY();
			if(usedCY - this.get_spacingY() > maxCY) {
				ypos = this.get_padding().get_top();
				colWidths.push(0);
				xpos += colWidths[col] + this.get_spacingX();
				col++;
				usedCY = this.get_padding().get_top() + this.get_padding().get_bottom() + child.get_height() + this.get_spacingY();
				colChildren = new Array();
				colChildren.push(child);
			}
			var reposition = false;
			if(child.get_width() > colWidths[col]) {
				colWidths[col] = child.get_width();
				reposition = true;
			}
			usedCX = this.get_padding().get_left() + this.get_padding().get_right();
			var _g2 = 0;
			while(_g2 < colWidths.length) {
				var cx = colWidths[_g2];
				++_g2;
				usedCX += cx + this.get_spacingX();
			}
			usedCX -= this.get_spacingX();
			if(reposition) {
				var _g21 = 0;
				while(_g21 < colChildren.length) {
					var temp = colChildren[_g21];
					++_g21;
					var halign = child.get_horizontalAlign();
					var tempXpos = temp.get_x();
					switch(halign) {
					case "center":
						tempXpos = usedCX - temp.get_width() - this.get_padding().get_left() - (colWidths[col] / 2 - temp.get_width() / 2);
						break;
					case "right":
						tempXpos = usedCX - temp.get_width() - this.get_padding().get_left();
						break;
					default:
					}
					temp.set_x(tempXpos);
				}
			}
			if(usedCY - this.get_spacingY() > this.get_container().get_height() && this.get_container().get_autoSize()) this.get_container().set_height(usedCY - this.get_spacingY());
			if(usedCX > this.get_container().get_width() && this.get_container().get_autoSize()) this.get_container().set_width(usedCX);
			var halign1 = child.get_horizontalAlign();
			var tempXPos = xpos;
			switch(halign1) {
			case "center":
				tempXPos = usedCX - child.get_width() - this.get_padding().get_left() - (colWidths[col] / 2 - child.get_width() / 2);
				break;
			case "right":
				tempXPos = usedCX - child.get_width() - this.get_padding().get_left();
				break;
			default:
			}
			child.set_x(tempXPos);
			child.set_y(ypos);
			ypos += child.get_height() + this.get_spacingY();
		}
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.VerticalContinuousLayout();
	}
	,__class__: haxe.ui.toolkit.layout.VerticalContinuousLayout
});
haxe.ui.toolkit.layout.VerticalLayout = function() {
	haxe.ui.toolkit.layout.Layout.call(this);
};
$hxClasses["haxe.ui.toolkit.layout.VerticalLayout"] = haxe.ui.toolkit.layout.VerticalLayout;
haxe.ui.toolkit.layout.VerticalLayout.__name__ = ["haxe","ui","toolkit","layout","VerticalLayout"];
haxe.ui.toolkit.layout.VerticalLayout.__super__ = haxe.ui.toolkit.layout.Layout;
haxe.ui.toolkit.layout.VerticalLayout.prototype = $extend(haxe.ui.toolkit.layout.Layout.prototype,{
	resizeChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.resizeChildren.call(this);
		var ucx = this.get_usableWidth();
		var ucy = this.get_usableHeight();
		var totalWidth = 0;
		var totalHeight = 0;
		var numChildren = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			numChildren++;
			if(child.get_percentWidth() > -1) child.set_width(ucx * child.get_percentWidth() / 100);
			if(child.get_percentHeight() > -1) child.set_height(ucy * child.get_percentHeight() / 100);
			totalHeight += child.get_height();
			if(child.get_width() > totalWidth) totalWidth = child.get_width();
		}
		if(numChildren > 1) totalHeight += this.get_spacingY() * (numChildren - 1);
		if(this.get_container().get_autoSize()) {
			if(totalWidth > 0 && totalWidth != this.get_innerWidth() && this.get_container().get_percentWidth() == -1) this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			if(totalHeight > 0 && totalHeight != this.get_innerHeight() && this.get_container().get_percentHeight() == -1) this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalWidth > 0 && this.get_container().get_height() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		} else if(totalHeight > 0 && this.get_container().get_width() == 0) {
			this.get_container().set_width(totalWidth + (this.get_padding().get_left() + this.get_padding().get_right()));
			this.get_container().set_height(totalHeight + (this.get_padding().get_top() + this.get_padding().get_bottom()));
		}
	}
	,repositionChildren: function() {
		haxe.ui.toolkit.layout.Layout.prototype.repositionChildren.call(this);
		var ypos = this.get_padding().get_top();
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_visible() == false) continue;
			var xpos = this.get_padding().get_left();
			var halign = child.get_horizontalAlign();
			switch(halign) {
			case "center":
				xpos = this.get_container().get_width() / 2 - child.get_width() / 2;
				break;
			case "right":
				xpos = this.get_container().get_width() - child.get_width() - this.get_padding().get_left();
				break;
			default:
			}
			child.set_x(xpos);
			child.set_y(ypos);
			ypos += child.get_height() + this.get_spacingY();
		}
	}
	,get_usableHeight: function() {
		var ucy = haxe.ui.toolkit.layout.Layout.prototype.get_usableHeight.call(this);
		var visibleChildren = 0;
		var _g = 0;
		var _g1 = this.get_container().get_children();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_visible()) visibleChildren++;
		}
		if(visibleChildren > 1) ucy -= this.get_spacingY() * (visibleChildren - 1);
		var _g2 = 0;
		var _g11 = this.get_container().get_children();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_visible() == false) continue;
			if(child.get_height() > 0 && child.get_percentHeight() < 0) ucy -= child.get_height();
		}
		if(ucy < 0) ucy = 0;
		return ucy;
	}
	,clone: function() {
		var c = haxe.ui.toolkit.layout.Layout.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.toolkit.layout.VerticalLayout();
	}
	,__class__: haxe.ui.toolkit.layout.VerticalLayout
});
haxe.ui.toolkit.resources = {};
haxe.ui.toolkit.resources.ResourceManager = function() {
};
$hxClasses["haxe.ui.toolkit.resources.ResourceManager"] = haxe.ui.toolkit.resources.ResourceManager;
haxe.ui.toolkit.resources.ResourceManager.__name__ = ["haxe","ui","toolkit","resources","ResourceManager"];
haxe.ui.toolkit.resources.ResourceManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.resources.ResourceManager.get_instance = function() {
	if(haxe.ui.toolkit.resources.ResourceManager._instance == null) haxe.ui.toolkit.resources.ResourceManager._instance = new haxe.ui.toolkit.resources.ResourceManager();
	return haxe.ui.toolkit.resources.ResourceManager._instance;
};
haxe.ui.toolkit.resources.ResourceManager.prototype = {
	hasAsset: function(resouceId) {
		return openfl.Assets.exists(resouceId);
	}
	,getXML: function(resourceId,locale) {
		var text = this.getText(resourceId,locale);
		var xml = null;
		if(text != null) xml = Xml.parse(text);
		return xml;
	}
	,getText: function(resourceId,locale) {
		var str = haxe.Resource.getString(resourceId);
		if(str == null) str = openfl.Assets.getText(resourceId);
		return str;
	}
	,getSVG: function(resourceId,locale) {
		var text = this.getText(resourceId,locale);
		var svg = null;
		if(text != null) svg = new format.SVG(text);
		return svg;
	}
	,getBitmapData: function(resourceId,locale) {
		if(resourceId == null || resourceId.length == 0) return null;
		var bmp = null;
		var bytes = haxe.Resource.getBytes(resourceId);
		if(bytes != null) {
			var ba = haxe.ui.toolkit.util.ByteConverter.fromHaxeBytes(bytes);
			var loader = new openfl.display.Loader();
			loader.loadBytes(ba);
			if(loader.content != null) bmp = (js.Boot.__cast(loader.content , openfl.display.Bitmap)).bitmapData;
		} else bmp = openfl.Assets.getBitmapData(resourceId,true);
		return bmp;
	}
	,reset: function() {
	}
	,__class__: haxe.ui.toolkit.resources.ResourceManager
};
haxe.ui.toolkit.style = {};
haxe.ui.toolkit.style.Styles = function() {
	this._styles = new haxe.ds.StringMap();
	this._styleRules = new Array();
};
$hxClasses["haxe.ui.toolkit.style.Styles"] = haxe.ui.toolkit.style.Styles;
haxe.ui.toolkit.style.Styles.__name__ = ["haxe","ui","toolkit","style","Styles"];
haxe.ui.toolkit.style.Styles.prototype = {
	addStyle: function(rule,style) {
		if(rule.indexOf(",") != -1) {
			var rules = rule.split(",");
			var _g = 0;
			while(_g < rules.length) {
				var r = rules[_g];
				++_g;
				r = StringTools.trim(r);
				this.addStyle(r,style);
			}
			return null;
		}
		var currentStyle = this.getStyle(rule);
		if(currentStyle != null) {
			currentStyle.merge(style);
			style = currentStyle;
		} else this._styleRules.push(rule);
		this._styles.set(rule,style);
		return style;
	}
	,getStyle: function(rule) {
		return this._styles.get(rule);
	}
	,get_rules: function() {
		return HxOverrides.iter(this._styleRules);
	}
	,__class__: haxe.ui.toolkit.style.Styles
	,__properties__: {get_rules:"get_rules"}
};
haxe.ui.toolkit.style.DefaultStyles = function() {
	haxe.ui.toolkit.style.Styles.call(this);
	var f = openfl.Assets.getFont("fonts/Oxygen.ttf");
	var fb = openfl.Assets.getFont("fonts/Oxygen-Bold.ttf");
	this.addStyle("Component",new haxe.ui.toolkit.style.Style({ padding : 0, backgroundColor : 8947848}));
	this.addStyle("#modalOverlay",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848, alpha : .7}));
	this.addStyle("Text",new haxe.ui.toolkit.style.Style({ fontSize : 14, fontName : f.fontName, fontEmbedded : true, color : 4473924}));
	this.addStyle("Code",new haxe.ui.toolkit.style.Style({ fontSize : 14, fontName : "_sans", fontEmbedded : false, color : 4473924}));
	this.addStyle("Container",new haxe.ui.toolkit.style.Style({ spacing : 5, backgroundColor : 8947848}));
	this.addStyle("Accordion",new haxe.ui.toolkit.style.Style({ spacing : 0}));
	this.addStyle(".page",new haxe.ui.toolkit.style.Style({ padding : 5, backgroundColor : -2}));
	this.addStyle("Button",new haxe.ui.toolkit.style.Style({ fontSize : 14, fontName : f.fontName, fontEmbedded : true, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 2236962, padding : 10, borderColor : 4473924, borderSize : 1, cornerRadius : 2, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), spacing : 5}));
	this.addStyle("Button:over",new haxe.ui.toolkit.style.Style({ backgroundColor : 16758635, backgroundColorGradientEnd : 16744196, color : 2236962}));
	this.addStyle("Button:down",new haxe.ui.toolkit.style.Style({ backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 4473924}));
	this.addStyle("Button.expandable",new haxe.ui.toolkit.style.Style({ icon : "styles/default/expand.png"}));
	this.addStyle("Button.expandable:down",new haxe.ui.toolkit.style.Style({ icon : "styles/default/collapse.png"}));
	this.addStyle("CheckBox, OptionBox",new haxe.ui.toolkit.style.Style({ spacingX : 2, fontSize : 14, fontName : f.fontName, fontEmbedded : true, color : 4473924}));
	this.addStyle("CheckBoxValue, OptionBoxValue",new haxe.ui.toolkit.style.Style({ width : 32, height : 32}));
	this.addStyle("CheckBoxValue #unselected",new haxe.ui.toolkit.style.Style({ iconPosition : "center"}));
	this.addStyle("CheckBoxValue #unselected:disabled",new haxe.ui.toolkit.style.Style({ }));
	this.addStyle("CheckBoxValue #selected",new haxe.ui.toolkit.style.Style({ icon : "styles/default/cross.png", iconPosition : "center"}));
	this.addStyle("CheckBoxValue #selected:disabled",new haxe.ui.toolkit.style.Style({ }));
	this.addStyle("OptionBoxValue #unselected",new haxe.ui.toolkit.style.Style({ iconPosition : "center"}));
	this.addStyle("OptionBoxValue #unselected:disabled",new haxe.ui.toolkit.style.Style({ }));
	this.addStyle("OptionBoxValue #selected",new haxe.ui.toolkit.style.Style({ icon : "styles/default/circle.png", iconPosition : "center"}));
	this.addStyle("OptionBoxValue #selected:disabled",new haxe.ui.toolkit.style.Style({ }));
	this.addStyle("TextInput",new haxe.ui.toolkit.style.Style({ backgroundColor : 16777215, color : 2236962, width : 150, height : 42, borderColor : 2236962, borderSize : 1, padding : 2, cornerRadius : 2, filter : new openfl.filters.DropShadowFilter(2,45,12566463,1,2,2,1,3,true), fontSize : 14, fontName : f.fontName, fontEmbedded : true}));
	this.addStyle("TextInput #placeholder",new haxe.ui.toolkit.style.Style({ color : 11184810}));
	this.addStyle("ListSelector, DateSelector",new haxe.ui.toolkit.style.Style({ icon : "styles/default/up_down.png", iconPosition : "right", selectionMethod : "popup", textAlign : "left"}));
	this.addStyle("CalendarView, Calendar",new haxe.ui.toolkit.style.Style({ width : 310, height : 310, spacing : 3, padding : 2}));
	this.addStyle("CalendarView",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848, filter : new openfl.filters.DropShadowFilter(1,45,2236962,1,2,2,1,3), borderColor : 4473924, borderSize : 1, cornerRadius : 2, padding : 5, spacing : 5}));
	this.addStyle("CalendarView Calendar",new haxe.ui.toolkit.style.Style({ borderSize : 0}));
	this.addStyle("CalendarPopupContent",new haxe.ui.toolkit.style.Style({ padding : 50}));
	this.addStyle("CalendarDay",new haxe.ui.toolkit.style.Style({ padding : 0, backgroundColor : 13421772}));
	this.addStyle("CalendarView #currentMonthYear",new haxe.ui.toolkit.style.Style({ textAlign : "center"}));
	this.addStyle("Calendar #selectedDay",new haxe.ui.toolkit.style.Style({ fontSize : 14, fontName : f.fontName, fontEmbedded : true, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 2236962, padding : 10, borderColor : 4473924, borderSize : 1, cornerRadius : 2, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), spacing : 5}));
	this.addStyle("CalendarDay:over, Calendar #selectedDay:over",new haxe.ui.toolkit.style.Style({ backgroundColor : 16758635, backgroundColorGradientEnd : 16744196, color : 2236962}));
	this.addStyle("CalendarDay:down, Calendar #selectedDay:down",new haxe.ui.toolkit.style.Style({ backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 4473924}));
	this.addStyle("TabView",new haxe.ui.toolkit.style.Style({ backgroundColor : 13421772, borderColor : -1, filter : null, spacing : 0}));
	this.addStyle("TabView Container",new haxe.ui.toolkit.style.Style({ backgroundColor : 13421772}));
	this.addStyle("TabBar",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848, height : 41, paddingTop : 0, paddingLeft : 0, paddingRight : 0, paddingBottom : 0, cornerRadius : 0, filter : null, borderColor : -1, borderSize : 0, spacing : 0}));
	this.addStyle("TabBar #content",new haxe.ui.toolkit.style.Style({ spacing : 1, borderColor : -1, backgroundColor : 8947848}));
	this.addStyle("TabBar #container",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848}));
	this.addStyle("TabBar Button",new haxe.ui.toolkit.style.Style({ height : 42, iconPosition : "left", cornerRadius : 0, autoSize : true, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 2236962, borderSize : 0, borderColor : -1, paddingLeft : 20, paddingRight : 20}));
	this.addStyle("TabBar Button:down",new haxe.ui.toolkit.style.Style({ backgroundColor : 15658734, backgroundColorGradientEnd : 13421772, color : 4473924}));
	this.addStyle("HProgress",new haxe.ui.toolkit.style.Style({ width : 150, height : 30, backgroundColor : 6710886, borderColor : -1, padding : 2, cornerRadius : 2, borderSize : 0, filter : new openfl.filters.DropShadowFilter(1,45,4473924,1,2,2,1,3,true)}));
	this.addStyle("HProgress #background",new haxe.ui.toolkit.style.Style({ percentWidth : 100, percentHeight : 100, backgroundColor : -1, borderSize : 0, borderColor : -1}));
	this.addStyle("HProgress #value",new haxe.ui.toolkit.style.Style({ percentHeight : 100, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, borderColor : -1, cornerRadius : 2}));
	this.addStyle("VProgress",new haxe.ui.toolkit.style.Style({ width : 30, height : 150, backgroundColor : 6710886, borderColor : -1, padding : 2, cornerRadius : 2, borderSize : 0, filter : new openfl.filters.DropShadowFilter(1,45,4473924,1,2,2,1,3,true)}));
	this.addStyle("VProgress #background",new haxe.ui.toolkit.style.Style({ percentWidth : 100, percentHeight : 100, backgroundColor : -1, borderSize : 0, borderColor : -1}));
	this.addStyle("VProgress #value",new haxe.ui.toolkit.style.Style({ percentWidth : 100, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, borderColor : -1, cornerRadius : 2, gradientType : "horizontal"}));
	this.addStyle("HSlider",new haxe.ui.toolkit.style.Style({ width : 150, height : 30, backgroundColor : 6710886, borderColor : -1, padding : 2, paddingLeft : 0, paddingRight : 0, cornerRadius : 2, borderSize : 0, filter : new openfl.filters.DropShadowFilter(1,45,4473924,1,2,2,1,3,true)}));
	this.addStyle("HSlider #background",new haxe.ui.toolkit.style.Style({ percentWidth : 100, percentHeight : 100, backgroundColor : -1, borderSize : 0, borderColor : -1}));
	this.addStyle("HSlider #value",new haxe.ui.toolkit.style.Style({ percentHeight : 0, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, borderColor : -1, cornerRadius : 2}));
	this.addStyle("HSlider Button",new haxe.ui.toolkit.style.Style({ width : 26, height : 26, gradientType : "vertical", filter : new openfl.filters.DropShadowFilter(2,45,6710886,1,2,2,1,3,false)}));
	this.addStyle("VSlider",new haxe.ui.toolkit.style.Style({ width : 30, height : 150, backgroundColor : 6710886, borderColor : -1, padding : 2, paddingLeft : 0, paddingRight : 0, cornerRadius : 2, borderSize : 0, filter : new openfl.filters.DropShadowFilter(1,45,4473924,1,2,2,1,3,true)}));
	this.addStyle("VSlider #background",new haxe.ui.toolkit.style.Style({ percentWidth : 100, percentHeight : 100, backgroundColor : -1, borderSize : 0, borderColor : -1}));
	this.addStyle("VSlider #value",new haxe.ui.toolkit.style.Style({ percentWidth : 0, backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, borderColor : -1, cornerRadius : 2}));
	this.addStyle("VSlider Button",new haxe.ui.toolkit.style.Style({ width : 26, height : 26, gradientType : "horizontal", filter : new openfl.filters.DropShadowFilter(2,45,6710886,1,2,2,1,3,false)}));
	this.addStyle("ScrollView",new haxe.ui.toolkit.style.Style({ backgroundColor : 4473924, borderColor : -1, padding : 1, cornerRadius : 2, borderSize : 0, filter : new openfl.filters.DropShadowFilter(1,45,4473924,1,2,2,1,3,true), inlineScrolls : true, autoHideScrolls : true, spacing : 0}));
	this.addStyle("ListView",new haxe.ui.toolkit.style.Style({ }));
	this.addStyle("ListView #content",new haxe.ui.toolkit.style.Style({ backgroundColor : 4473924, borderColor : -1, padding : 0, spacing : 1}));
	this.addStyle(".even, .odd",new haxe.ui.toolkit.style.Style({ padding : 10, backgroundColor : 6710886}));
	this.addStyle(".even:over, .odd:over",new haxe.ui.toolkit.style.Style({ backgroundColor : 16758635, backgroundColorGradientEnd : 16744196, color : 2236962}));
	this.addStyle(".even:selected, .odd:selected",new haxe.ui.toolkit.style.Style({ backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 4473924}));
	this.addStyle(".even #text, .odd #text",new haxe.ui.toolkit.style.Style({ color : 16754764}));
	this.addStyle(".even #text:over, .odd #text:over",new haxe.ui.toolkit.style.Style({ color : 2236962}));
	this.addStyle(".even #text:selected, .odd #text:selected",new haxe.ui.toolkit.style.Style({ color : 4473924}));
	this.addStyle("VScroll",new haxe.ui.toolkit.style.Style({ width : 10, height : 100, hasButtons : false}));
	this.addStyle("VScroll Button",new haxe.ui.toolkit.style.Style({ cornerRadius : 2, gradientType : "horizontal", filter : null}));
	this.addStyle("HScroll",new haxe.ui.toolkit.style.Style({ width : 100, height : 10, hasButtons : false}));
	this.addStyle("HScroll Button",new haxe.ui.toolkit.style.Style({ cornerRadius : 2, gradientType : "vertical", filter : null}));
	this.addStyle("MenuBar",new haxe.ui.toolkit.style.Style({ backgroundColor : 14671325, percentWidth : 100, height : 10, padding : 5, borderColor : -1, cornerRadius : 0, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), autoSize : true}));
	this.addStyle("MenuBar Container",new haxe.ui.toolkit.style.Style({ backgroundColor : 14671325}));
	this.addStyle("Popup",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), borderColor : 8947848, borderSize : 1, cornerRadius : 2, padding : 1, spacing : 1, width : 400}));
	this.addStyle("Popup Container",new haxe.ui.toolkit.style.Style({ backgroundColor : -2}));
	this.addStyle("Popup #titleBar",new haxe.ui.toolkit.style.Style({ backgroundColor : 13421772, height : 45, paddingTop : 5, paddingBottom : 5, paddingLeft : 5, paddingRight : 5}));
	this.addStyle("Popup #popupContent",new haxe.ui.toolkit.style.Style({ padding : 5, backgroundColor : 13421772}));
	this.addStyle("Popup #buttonBar",new haxe.ui.toolkit.style.Style({ paddingTop : 5, paddingBottom : 5, height : 55, backgroundColor : 13421772}));
	this.addStyle("Popup #titleBar #title",new haxe.ui.toolkit.style.Style({ fontName : fb.fontName, fontEmbedded : true, fontSize : 24, color : 8947848, horizontalAlignment : "right"}));
	this.addStyle("ListPopupContent ListView, ListPopupContent #popupContent",new haxe.ui.toolkit.style.Style({ padding : 2, borderSize : 0}));
	this.addStyle("Menu",new haxe.ui.toolkit.style.Style({ backgroundColor : 8947848, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), borderColor : 4473924, borderSize : 1, cornerRadius : 1, padding : 1, width : 175, spacing : 1}));
	this.addStyle("MenuButton",new haxe.ui.toolkit.style.Style({ backgroundColor : 14671325, backgroundColorGradientEnd : 14671325, color : 2236962, padding : 10, borderColor : -1, borderSize : 0, cornerRadius : 2, filter : null}));
	this.addStyle("MenuButton:over",new haxe.ui.toolkit.style.Style({ backgroundColor : 16758635, backgroundColorGradientEnd : 16744196, color : 2236962, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), borderSize : 1}));
	this.addStyle("MenuButton:down",new haxe.ui.toolkit.style.Style({ backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 4473924, filter : new openfl.filters.DropShadowFilter(2,45,4473924,1,2,2,1,3), borderSize : 1}));
	this.addStyle("MenuItem",new haxe.ui.toolkit.style.Style({ percentWidth : 100, iconPosition : "right", filter : null, borderSize : 0, cornerRadius : 0, backgroundColor : 13421772, color : 2236962}));
	this.addStyle("MenuItem:over",new haxe.ui.toolkit.style.Style({ backgroundColor : 16758635, backgroundColorGradientEnd : 16744196, color : 2236962}));
	this.addStyle("MenuItem:down",new haxe.ui.toolkit.style.Style({ backgroundColor : 16754764, backgroundColorGradientEnd : 16743181, color : 4473924}));
	this.addStyle("MenuItem.expandable",new haxe.ui.toolkit.style.Style({ icon : "styles/default/expand.png"}));
};
$hxClasses["haxe.ui.toolkit.style.DefaultStyles"] = haxe.ui.toolkit.style.DefaultStyles;
haxe.ui.toolkit.style.DefaultStyles.__name__ = ["haxe","ui","toolkit","style","DefaultStyles"];
haxe.ui.toolkit.style.DefaultStyles.__super__ = haxe.ui.toolkit.style.Styles;
haxe.ui.toolkit.style.DefaultStyles.prototype = $extend(haxe.ui.toolkit.style.Styles.prototype,{
	__class__: haxe.ui.toolkit.style.DefaultStyles
});
haxe.ui.toolkit.style.Style = function(defaults) {
	this._inlineScrolls = -1;
	this._autoHideScrolls = -1;
	this._hasButtons = -1;
	this._fontUnderline = -1;
	this._fontItalic = -1;
	this._fontBold = -1;
	this._fontEmbedded = -1;
	this._fontScale = -1;
	this._fontSize = -1;
	this._alpha = -1;
	this._filterSet = false;
	this._cornerRadiusBottomRight = -1;
	this._cornerRadiusBottomLeft = -1;
	this._cornerRadiusTopRight = -1;
	this._cornerRadiusTopLeft = -1;
	this._spacingY = -1;
	this._spacingX = -1;
	this._paddingBottom = -1;
	this._paddingTop = -1;
	this._paddingRight = -1;
	this._paddingLeft = -1;
	this._color = -1;
	this._borderSize = -1;
	this._borderColor = -1;
	this._backgroundColorGradientEnd = -1;
	this._backgroundColor = -1;
	this._autoSize = -1;
	this._percentHeight = -1;
	this._percentWidth = -1;
	this._height = -1;
	this._width = -1;
	this._autoApply = true;
	var _g = 0;
	var _g1 = Reflect.fields(defaults);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(Reflect.getProperty(this,"set_" + field) != null) Reflect.setProperty(this,field,Reflect.field(defaults,field));
	}
};
$hxClasses["haxe.ui.toolkit.style.Style"] = haxe.ui.toolkit.style.Style;
haxe.ui.toolkit.style.Style.__name__ = ["haxe","ui","toolkit","style","Style"];
haxe.ui.toolkit.style.Style.__interfaces__ = [haxe.ui.toolkit.core.interfaces.IClonable];
haxe.ui.toolkit.style.Style.prototype = {
	get_target: function() {
		return this._target;
	}
	,set_target: function(value) {
		this._target = value;
		this.apply();
		return value;
	}
	,get_autoApply: function() {
		return this._autoApply;
	}
	,set_autoApply: function(value) {
		this._autoApply = value;
		return value;
	}
	,get_width: function() {
		if(this.hasDynamicValue("width")) return this.getDynamicValue("width");
		return this._width;
	}
	,set_width: function(value) {
		if(value != this._width) {
			this._width = value;
			this.apply();
		}
		return value;
	}
	,get_height: function() {
		if(this.hasDynamicValue("height")) return this.getDynamicValue("height");
		return this._height;
	}
	,set_height: function(value) {
		if(value != this._height) {
			this._height = value;
			this.apply();
		}
		return value;
	}
	,get_percentWidth: function() {
		if(this.hasDynamicValue("percentWidth")) return this.getDynamicValue("percentWidth");
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(value != this._percentWidth) {
			this._percentWidth = value;
			this.apply();
		}
		return value;
	}
	,get_percentHeight: function() {
		if(this.hasDynamicValue("percentHeight")) return this.getDynamicValue("percentHeight");
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(value != this._percentHeight) {
			this._percentHeight = value;
			this.apply();
		}
		return value;
	}
	,get_autoSize: function() {
		if(this.hasDynamicValue("autoSize")) return this.getDynamicValue("autoSize");
		if(this._autoSize == -1) return true;
		return this._autoSize == 1;
	}
	,set_autoSize: function(value) {
		if(value) this._autoSize = 1; else this._autoSize = 0;
		this.apply();
		return value;
	}
	,get_autoSizeSet: function() {
		if(this.hasDynamicValue("autoSize")) return true;
		if(this._autoSize != -1) return true;
		return false;
	}
	,get_backgroundImage: function() {
		if(this.hasDynamicValue("backgroundImage")) return this.getDynamicValue("backgroundImage");
		return this._backgroundImage;
	}
	,set_backgroundImage: function(value) {
		if(value != this._backgroundImage) {
			this._backgroundImage = value;
			this.apply();
		}
		return value;
	}
	,get_backgroundImageScale9: function() {
		if(this.hasDynamicValue("backgroundImageScale9")) return this.getDynamicValue("backgroundImageScale9");
		return this._backgroundImageScale9;
	}
	,set_backgroundImageScale9: function(value) {
		if(value != this._backgroundImageScale9) {
			this._backgroundImageScale9 = value;
			this.apply();
		}
		return value;
	}
	,get_backgroundImageRect: function() {
		if(this.hasDynamicValue("backgroundImageRect")) return this.getDynamicValue("backgroundImageRect");
		return this._backgroundImageRect;
	}
	,set_backgroundImageRect: function(value) {
		if(value != this._backgroundImageRect) {
			this._backgroundImageRect = value;
			this.apply();
		}
		return value;
	}
	,get_backgroundColor: function() {
		if(this.hasDynamicValue("backgroundColor")) return this.getDynamicValue("backgroundColor");
		return this._backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(value != this._backgroundColor) {
			this._backgroundColor = value;
			this.apply();
		}
		return value;
	}
	,get_backgroundColorGradientEnd: function() {
		if(this.hasDynamicValue("backgroundColorGradientEnd")) return this.getDynamicValue("backgroundColorGradientEnd");
		return this._backgroundColorGradientEnd;
	}
	,set_backgroundColorGradientEnd: function(value) {
		if(value != this._backgroundColorGradientEnd) {
			this._backgroundColorGradientEnd = value;
			this.apply();
		}
		return value;
	}
	,get_borderColor: function() {
		if(this.hasDynamicValue("borderColor")) return this.getDynamicValue("borderColor");
		return this._borderColor;
	}
	,set_borderColor: function(value) {
		if(value != this._borderColor) {
			this._borderColor = value;
			this.apply();
		}
		return value;
	}
	,get_borderSize: function() {
		if(this.hasDynamicValue("borderSize")) return this.getDynamicValue("borderSize");
		return this._borderSize;
	}
	,set_borderSize: function(value) {
		if(value != this._borderSize) {
			this._borderSize = value;
			this.apply();
		}
		return value;
	}
	,get_color: function() {
		if(this.hasDynamicValue("color")) return this.getDynamicValue("color");
		return this._color;
	}
	,set_color: function(value) {
		if(value != this._color) {
			this._color = value;
			this.apply();
		}
		return value;
	}
	,get_paddingLeft: function() {
		if(this.hasDynamicValue("paddingLeft")) return this.getDynamicValue("paddingRight");
		if(this.hasDynamicValue("padding")) return this.getDynamicValue("padding");
		return this._paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(value != this._paddingLeft) {
			this._paddingLeft = value;
			this.apply();
		}
		return value;
	}
	,get_paddingRight: function() {
		if(this.hasDynamicValue("paddingRight")) return this.getDynamicValue("paddingRight");
		if(this.hasDynamicValue("padding")) return this.getDynamicValue("padding");
		return this._paddingRight;
	}
	,set_paddingRight: function(value) {
		if(value != this._paddingRight) {
			this._paddingRight = value;
			this.apply();
		}
		return value;
	}
	,get_paddingTop: function() {
		if(this.hasDynamicValue("paddingTop")) return this.getDynamicValue("paddingTop");
		if(this.hasDynamicValue("padding")) return this.getDynamicValue("padding");
		return this._paddingTop;
	}
	,set_paddingTop: function(value) {
		if(value != this._paddingTop) {
			this._paddingTop = value;
			this.apply();
		}
		return value;
	}
	,get_paddingBottom: function() {
		if(this.hasDynamicValue("paddingBottom")) return this.getDynamicValue("paddingBottom");
		if(this.hasDynamicValue("padding")) return this.getDynamicValue("padding");
		return this._paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(value != this._paddingBottom) {
			this._paddingBottom = value;
			this.apply();
		}
		return value;
	}
	,get_padding: function() {
		if(this.hasDynamicValue("padding")) return this.getDynamicValue("padding");
		return js.Boot.__cast(this._paddingLeft | this._paddingRight | this._paddingTop | this._paddingBottom , Int);
	}
	,set_padding: function(value) {
		if(value != this._paddingLeft || value != this._paddingRight || value != this._paddingTop || value != this._paddingBottom) {
			this._paddingLeft = value;
			this._paddingRight = value;
			this._paddingTop = value;
			this._paddingBottom = value;
			this.apply();
		}
		return value;
	}
	,get_spacingX: function() {
		if(this.hasDynamicValue("spacingX")) return this.getDynamicValue("spacingX");
		if(this.hasDynamicValue("spacing")) return this.getDynamicValue("spacing");
		return this._spacingX;
	}
	,set_spacingX: function(value) {
		if(value != this._spacingX) {
			this._spacingX = value;
			this.apply();
		}
		return value;
	}
	,get_spacingY: function() {
		if(this.hasDynamicValue("spacingY")) return this.getDynamicValue("spacingY");
		if(this.hasDynamicValue("spacing")) return this.getDynamicValue("spacing");
		return this._spacingY;
	}
	,set_spacingY: function(value) {
		if(value != this._spacingY) {
			this._spacingY = value;
			this.apply();
		}
		return value;
	}
	,get_spacing: function() {
		if(this.hasDynamicValue("spacing")) return this.getDynamicValue("spacing");
		return this._spacingX | this._spacingY;
	}
	,set_spacing: function(value) {
		if(value != this._spacingX || value != this._spacingY) {
			this._spacingX = value;
			this._spacingY = value;
			this.apply();
		}
		return value;
	}
	,get_horizontalAlignment: function() {
		if(this.hasDynamicValue("horizontalAlignment")) return this.getDynamicValue("horizontalAlignment");
		return this._horizontalAlignment;
	}
	,set_horizontalAlignment: function(value) {
		if(value != this._horizontalAlignment) {
			this._horizontalAlignment = value;
			this.apply();
		}
		return value;
	}
	,get_verticalAlignment: function() {
		if(this.hasDynamicValue("verticalAlignment")) return this.getDynamicValue("verticalAlignment");
		return this._verticalAlignment;
	}
	,set_verticalAlignment: function(value) {
		if(value != this._verticalAlignment) {
			this._verticalAlignment = value;
			this.apply();
		}
		return value;
	}
	,get_cornerRadiusTopLeft: function() {
		if(this.hasDynamicValue("cornerRadiusTopLeft")) return this.getDynamicValue("cornerRadiusTopLeft");
		if(this.hasDynamicValue("cornerRadius")) return this.getDynamicValue("cornerRadius");
		return this._cornerRadiusTopLeft;
	}
	,set_cornerRadiusTopLeft: function(value) {
		if(value != this._cornerRadiusTopLeft) {
			this._cornerRadiusTopLeft = value;
			this.apply();
		}
		return value;
	}
	,get_cornerRadiusTopRight: function() {
		if(this.hasDynamicValue("cornerRadiusTopRight")) return this.getDynamicValue("cornerRadiusTopRight");
		if(this.hasDynamicValue("cornerRadius")) return this.getDynamicValue("cornerRadius");
		return this._cornerRadiusTopRight;
	}
	,set_cornerRadiusTopRight: function(value) {
		if(value != this._cornerRadiusTopRight) {
			this._cornerRadiusTopRight = value;
			this.apply();
		}
		return value;
	}
	,get_cornerRadiusBottomLeft: function() {
		if(this.hasDynamicValue("cornerRadiusBottomLeft")) return this.getDynamicValue("cornerRadiusBottomLeft");
		if(this.hasDynamicValue("cornerRadius")) return this.getDynamicValue("cornerRadius");
		return this._cornerRadiusBottomLeft;
	}
	,set_cornerRadiusBottomLeft: function(value) {
		if(value != this._cornerRadiusBottomLeft) {
			this._cornerRadiusBottomLeft = value;
			this.apply();
		}
		return value;
	}
	,get_cornerRadiusBottomRight: function() {
		if(this.hasDynamicValue("cornerRadiusBottomRight")) return this.getDynamicValue("cornerRadiusBottomRight");
		if(this.hasDynamicValue("cornerRadius")) return this.getDynamicValue("cornerRadius");
		return this._cornerRadiusBottomRight;
	}
	,set_cornerRadiusBottomRight: function(value) {
		if(value != this._cornerRadiusBottomRight) {
			this._cornerRadiusBottomRight = value;
			this.apply();
		}
		return value;
	}
	,get_cornerRadius: function() {
		if(this.hasDynamicValue("cornerRadius")) return this.getDynamicValue("cornerRadius");
		return this._cornerRadiusTopLeft | this._cornerRadiusTopRight | this._cornerRadiusBottomLeft | this._cornerRadiusBottomRight;
	}
	,set_cornerRadius: function(value) {
		if(value != this._cornerRadiusTopLeft || value != this._cornerRadiusTopRight || value != this._cornerRadiusBottomLeft || value != this._cornerRadiusBottomRight) {
			this._cornerRadiusTopLeft = value;
			this._cornerRadiusTopRight = value;
			this._cornerRadiusBottomLeft = value;
			this._cornerRadiusBottomRight = value;
			this.apply();
		}
		return value;
	}
	,get_filter: function() {
		if(this.hasDynamicValue("filter")) return this.getDynamicValue("filter");
		return this._filter;
	}
	,set_filter: function(value) {
		this._filterSet = true;
		if(value != this._filter) {
			this._filter = value;
			this.apply();
		}
		return this._filter;
	}
	,get_alpha: function() {
		if(this.hasDynamicValue("alpha")) return this.getDynamicValue("alpha");
		return this._alpha;
	}
	,set_alpha: function(value) {
		if(value != this._alpha) {
			this._alpha = value;
			this.apply();
		}
		return value;
	}
	,get_fontName: function() {
		if(this.hasDynamicValue("fontName")) return this.getDynamicValue("fontName");
		return this._fontName;
	}
	,set_fontName: function(value) {
		if(value != this._fontName) {
			this._fontName = value;
			this.apply();
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.hasDynamicValue("fontSize")) return this.getDynamicValue("fontSize");
		var size = this._fontSize;
		if(this._fontScale > 0) size = this._fontSize * this._fontScale;
		return size;
	}
	,set_fontSize: function(value) {
		if(value != this._fontSize) {
			this._fontSize = value;
			this.apply();
		}
		return value;
	}
	,get_fontScale: function() {
		if(this.hasDynamicValue("fontScale")) return this.getDynamicValue("fontScale");
		return this._fontScale;
	}
	,set_fontScale: function(value) {
		if(value != this._fontScale) {
			this._fontScale = value;
			this.apply();
		}
		return value;
	}
	,get_fontEmbedded: function() {
		if(this.hasDynamicValue("fontEmbedded")) return this.getDynamicValue("fontEmbedded");
		if(this._fontEmbedded == -1) return false;
		return this._fontEmbedded == 1;
	}
	,set_fontEmbedded: function(value) {
		if(value) this._fontEmbedded = 1; else this._fontEmbedded = 0;
		this.apply();
		return value;
	}
	,get_fontBold: function() {
		if(this.hasDynamicValue("fontBold")) return this.getDynamicValue("fontBold");
		if(this._fontBold == -1) return false;
		return this._fontBold == 1;
	}
	,set_fontBold: function(value) {
		if(value) this._fontBold = 1; else this._fontBold = 0;
		this.apply();
		return value;
	}
	,get_fontItalic: function() {
		if(this.hasDynamicValue("fontItalic")) return this.getDynamicValue("fontItalic");
		if(this._fontItalic == -1) return false;
		return this._fontItalic == 1;
	}
	,set_fontItalic: function(value) {
		if(value) this._fontItalic = 1; else this._fontItalic = 0;
		this.apply();
		return value;
	}
	,get_fontUnderline: function() {
		if(this.hasDynamicValue("fontUnderline")) return this.getDynamicValue("fontUnderline");
		if(this._fontUnderline == -1) return false;
		return this._fontUnderline == 1;
	}
	,set_fontUnderline: function(value) {
		if(value) this._fontUnderline = 1; else this._fontUnderline = 0;
		this.apply();
		return value;
	}
	,get_textAlign: function() {
		if(this.hasDynamicValue("textAlign")) return this.getDynamicValue("textAlign");
		return this._textAlign;
	}
	,set_textAlign: function(value) {
		if(value != this._textAlign) {
			this._textAlign = value;
			this.apply();
		}
		return value;
	}
	,get_iconPosition: function() {
		if(this.hasDynamicValue("iconPosition")) return this.getDynamicValue("iconPosition");
		return this._iconPosition;
	}
	,set_iconPosition: function(value) {
		if(value != this._iconPosition) {
			this._iconPosition = value;
			this.apply();
		}
		return value;
	}
	,get_icon: function() {
		if(this.hasDynamicValue("icon")) return this.getDynamicValue("icon");
		return this._icon;
	}
	,set_icon: function(value) {
		if(value != this._icon) {
			this._icon = value;
			this.apply();
		}
		return value;
	}
	,get_hasButtons: function() {
		if(this.hasDynamicValue("hasButtons")) return this.getDynamicValue("hasButtons");
		if(this._hasButtons == -1) return true;
		return this._hasButtons == 1;
	}
	,set_hasButtons: function(value) {
		if(value) this._hasButtons = 1; else this._hasButtons = 0;
		this.apply();
		return value;
	}
	,get_gradientType: function() {
		if(this.hasDynamicValue("gradientType")) return this.getDynamicValue("gradientType");
		return this._gradientType;
	}
	,set_gradientType: function(value) {
		if(value != this._gradientType) {
			this._gradientType = value;
			this.apply();
		}
		return value;
	}
	,get_selectionMethod: function() {
		if(this.hasDynamicValue("selectionMethod")) return this.getDynamicValue("selectionMethod");
		return this._selectionMethod;
	}
	,set_selectionMethod: function(value) {
		if(value != this._selectionMethod) {
			this._selectionMethod = value;
			this.apply();
		}
		return value;
	}
	,get_autoHideScrolls: function() {
		if(this.hasDynamicValue("autoHideScrolls")) return this.getDynamicValue("autoHideScrolls");
		if(this._autoHideScrolls == -1) return false;
		return this._autoHideScrolls == 1;
	}
	,set_autoHideScrolls: function(value) {
		if(value) this._autoHideScrolls = 1; else this._autoHideScrolls = 0;
		this.apply();
		return value;
	}
	,get_inlineScrolls: function() {
		if(this.hasDynamicValue("inlineScrolls")) return this.getDynamicValue("inlineScrolls");
		if(this._inlineScrolls == -1) return false;
		return this._inlineScrolls == 1;
	}
	,set_inlineScrolls: function(value) {
		if(value) this._inlineScrolls = 1; else this._inlineScrolls = 0;
		this.apply();
		return value;
	}
	,apply: function() {
		if(this._target != null && this._autoApply == true) {
			if(js.Boot.__instanceof(this._target,haxe.ui.toolkit.core.StyleableDisplayObject)) (js.Boot.__cast(this._target , haxe.ui.toolkit.core.StyleableDisplayObject)).applyStyle();
		}
	}
	,addDynamicValue: function(property,script) {
		if(this._dynamicValues == null) this._dynamicValues = new haxe.ds.StringMap();
		this._dynamicValues.set(property,script);
	}
	,hasDynamicValue: function(property) {
		if(this._dynamicValues == null) return false;
		return this._dynamicValues.get(property) != null;
	}
	,getDynamicValue: function(property) {
		var script = this._dynamicValues.get(property);
		var retVal = haxe.ui.toolkit.hscript.ScriptManager.get_instance().executeScript(script);
		return retVal;
	}
	,merge: function($with) {
		if($with == null) return;
		if($with._width != -1) this._width = $with._width;
		if($with._height != -1) this._height = $with._height;
		if($with._percentWidth != -1) this._percentWidth = $with._percentWidth;
		if($with._percentHeight != -1) this._percentHeight = $with._percentHeight;
		if($with._autoSize != -1) this._autoSize = $with._autoSize;
		if($with._backgroundImage != null) {
			this._backgroundImage = $with._backgroundImage;
			this._backgroundImageScale9 = null;
			this._backgroundImageRect = null;
		}
		if($with._backgroundImageScale9 != null) this._backgroundImageScale9 = $with._backgroundImageScale9;
		if($with._backgroundImageRect != null) this._backgroundImageRect = $with._backgroundImageRect;
		if($with._backgroundColor == -2) {
			this._backgroundColor = -1;
			this._backgroundColorGradientEnd = -1;
		} else if($with._backgroundColor != -1) {
			this._backgroundColor = $with._backgroundColor;
			this._backgroundColorGradientEnd = -1;
		}
		if($with._backgroundColorGradientEnd != -1) this._backgroundColorGradientEnd = $with._backgroundColorGradientEnd;
		if($with._borderColor != -1) this._borderColor = $with._borderColor;
		if($with._borderSize != -1) this._borderSize = $with._borderSize;
		if($with._color != -1) this._color = $with._color;
		if($with._paddingLeft != -1) this._paddingLeft = $with._paddingLeft;
		if($with._paddingRight != -1) this._paddingRight = $with._paddingRight;
		if($with._paddingTop != -1) this._paddingTop = $with._paddingTop;
		if($with._paddingBottom != -1) this._paddingBottom = $with._paddingBottom;
		if($with._spacingX != -1) this._spacingX = $with._spacingX;
		if($with._spacingY != -1) this._spacingY = $with._spacingY;
		if($with._horizontalAlignment != null) this._horizontalAlignment = $with._horizontalAlignment;
		if($with._verticalAlignment != null) this._verticalAlignment = $with._verticalAlignment;
		if($with._cornerRadiusTopLeft != -1) this._cornerRadiusTopLeft = $with._cornerRadiusTopLeft;
		if($with._cornerRadiusTopRight != -1) this._cornerRadiusTopRight = $with._cornerRadiusTopRight;
		if($with._cornerRadiusBottomLeft != -1) this._cornerRadiusBottomLeft = $with._cornerRadiusBottomLeft;
		if($with._cornerRadiusBottomRight != -1) this._cornerRadiusBottomRight = $with._cornerRadiusBottomRight;
		if($with._filterSet == true) this._filter = $with._filter;
		if($with._alpha != -1) this._alpha = $with._alpha;
		if($with._fontName != null) this._fontName = $with._fontName;
		if($with._fontSize != -1) this._fontSize = $with._fontSize;
		if($with._fontScale != -1) this._fontScale = $with._fontScale;
		if($with._fontEmbedded != -1) this._fontEmbedded = $with._fontEmbedded;
		if($with._fontBold != -1) this._fontBold = $with._fontBold;
		if($with._fontItalic != -1) this._fontItalic = $with._fontItalic;
		if($with._fontUnderline != -1) this._fontUnderline = $with._fontUnderline;
		if($with._textAlign != null) this._textAlign = $with._textAlign;
		if($with._iconPosition != null) this._iconPosition = $with._iconPosition;
		if($with._icon != null) this._icon = $with._icon;
		if($with._hasButtons != -1) this._hasButtons = $with._hasButtons;
		if($with._gradientType != null) this._gradientType = $with._gradientType;
		if($with._selectionMethod != null) this._selectionMethod = $with._selectionMethod;
		if($with._autoHideScrolls != -1) this._autoHideScrolls = $with._autoHideScrolls;
		if($with._inlineScrolls != -1) this._inlineScrolls = $with._inlineScrolls;
		if($with._dynamicValues != null) {
			if(this._dynamicValues == null) this._dynamicValues = new haxe.ds.StringMap();
			var $it0 = $with._dynamicValues.keys();
			while( $it0.hasNext() ) {
				var property = $it0.next();
				var script = $with._dynamicValues.get(property);
				this._dynamicValues.set(property,script);
			}
		}
	}
	,toString: function() {
		var s = "";
		if(this._width != -1 || this.hasDynamicValue("width")) s += "width: " + (this._width != -1?Std.string(this._width):this._dynamicValues.get("width")) + ";\n";
		if(this._height != -1 || this.hasDynamicValue("height")) s += "height: " + (this._height != -1?Std.string(this._height):this._dynamicValues.get("height")) + ";\n";
		if(this._percentWidth != -1 || this.hasDynamicValue("percentWidth")) s += "width: " + (this._percentWidth != -1?Std.string(this._percentWidth):this._dynamicValues.get("percentWidth")) + "%;\n";
		if(this._percentHeight != -1 || this.hasDynamicValue("percentHeight")) s += "height: " + (this._percentHeight != -1?Std.string(this._percentHeight):this._dynamicValues.get("percentHeight")) + "%;\n";
		if(this._backgroundImage != null || this.hasDynamicValue("backgroundImage")) s += "backgroundImage: \"" + (this._backgroundImage != null?Std.string(this._backgroundImage):this._dynamicValues.get("backgroundImage")) + "\";\n";
		if(this._backgroundColor != -1 || this.hasDynamicValue("backgroundColor")) s += "backgroundColor: #" + (this._backgroundColor != -1?StringTools.hex(this._backgroundColor,6):this._dynamicValues.get("backgroundColor")) + ";\n";
		if(this._backgroundColorGradientEnd != -1 || this.hasDynamicValue("backgroundColorGradientEnd")) s += "backgroundColorGradientEnd: #" + (this._backgroundColorGradientEnd != -1?StringTools.hex(this._backgroundColorGradientEnd,6):this._dynamicValues.get("backgroundColorGradientEnd")) + ";\n";
		return s;
	}
	,self: function() {
		return new haxe.ui.toolkit.style.Style();
	}
	,clone: function() {
		var c = this.self();
		c.merge(this);
		return c;
	}
	,__class__: haxe.ui.toolkit.style.Style
	,__properties__: {set_autoApply:"set_autoApply",get_autoApply:"get_autoApply",set_target:"set_target",get_target:"get_target",set_inlineScrolls:"set_inlineScrolls",get_inlineScrolls:"get_inlineScrolls",set_autoHideScrolls:"set_autoHideScrolls",get_autoHideScrolls:"get_autoHideScrolls",set_selectionMethod:"set_selectionMethod",get_selectionMethod:"get_selectionMethod",set_gradientType:"set_gradientType",get_gradientType:"get_gradientType",set_hasButtons:"set_hasButtons",get_hasButtons:"get_hasButtons",set_icon:"set_icon",get_icon:"get_icon",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontUnderline:"set_fontUnderline",get_fontUnderline:"get_fontUnderline",set_fontItalic:"set_fontItalic",get_fontItalic:"get_fontItalic",set_fontBold:"set_fontBold",get_fontBold:"get_fontBold",set_fontEmbedded:"set_fontEmbedded",get_fontEmbedded:"get_fontEmbedded",set_fontScale:"set_fontScale",get_fontScale:"get_fontScale",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_fontName:"set_fontName",get_fontName:"get_fontName",set_alpha:"set_alpha",get_alpha:"get_alpha",set_filter:"set_filter",get_filter:"get_filter",set_cornerRadius:"set_cornerRadius",get_cornerRadius:"get_cornerRadius",set_cornerRadiusBottomRight:"set_cornerRadiusBottomRight",get_cornerRadiusBottomRight:"get_cornerRadiusBottomRight",set_cornerRadiusBottomLeft:"set_cornerRadiusBottomLeft",get_cornerRadiusBottomLeft:"get_cornerRadiusBottomLeft",set_cornerRadiusTopRight:"set_cornerRadiusTopRight",get_cornerRadiusTopRight:"get_cornerRadiusTopRight",set_cornerRadiusTopLeft:"set_cornerRadiusTopLeft",get_cornerRadiusTopLeft:"get_cornerRadiusTopLeft",set_horizontalAlignment:"set_horizontalAlignment",get_horizontalAlignment:"get_horizontalAlignment",set_verticalAlignment:"set_verticalAlignment",get_verticalAlignment:"get_verticalAlignment",set_spacing:"set_spacing",get_spacing:"get_spacing",set_spacingY:"set_spacingY",get_spacingY:"get_spacingY",set_spacingX:"set_spacingX",get_spacingX:"get_spacingX",set_padding:"set_padding",get_padding:"get_padding",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_color:"set_color",get_color:"get_color",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundColorGradientEnd:"set_backgroundColorGradientEnd",get_backgroundColorGradientEnd:"get_backgroundColorGradientEnd",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_backgroundImageRect:"set_backgroundImageRect",get_backgroundImageRect:"get_backgroundImageRect",set_backgroundImageScale9:"set_backgroundImageScale9",get_backgroundImageScale9:"get_backgroundImageScale9",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",get_autoSizeSet:"get_autoSizeSet",set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
haxe.ui.toolkit.style.StyleHelper = function() { };
$hxClasses["haxe.ui.toolkit.style.StyleHelper"] = haxe.ui.toolkit.style.StyleHelper;
haxe.ui.toolkit.style.StyleHelper.__name__ = ["haxe","ui","toolkit","style","StyleHelper"];
haxe.ui.toolkit.style.StyleHelper.clearCache = function() {
	haxe.ui.toolkit.style.StyleHelper.sectionCache = new haxe.ds.StringMap();
};
haxe.ui.toolkit.style.StyleHelper.paintStyle = function(g,style,rc) {
	g.clear();
	if(style == null || rc.width == 0 || rc.height == 0) return;
	if(style.get_backgroundColor() != -1 || style.get_borderColor() != -1) {
		if(style.get_borderColor() != -1) {
			var borderSize = 1;
			if(style.get_borderSize() != -1) borderSize = style.get_borderSize();
			if(borderSize > 0) {
				g.lineStyle(borderSize,style.get_borderColor());
				rc.inflate(-(borderSize / 2),-(borderSize / 2));
				rc.x = rc.x | 0;
				rc.y = rc.y | 0;
			}
		}
		if(style.get_backgroundColor() != -1) {
			if(style.get_backgroundColorGradientEnd() != -1) {
				var w = rc.width | 0;
				var h = rc.height | 0;
				var colors = [style.get_backgroundColor(),style.get_backgroundColorGradientEnd()];
				var alphas = [1,1];
				var ratios = [0,255];
				var matrix = new openfl.geom.Matrix();
				var gradientType = "vertical";
				if(style.get_gradientType() != null) gradientType = style.get_gradientType();
				if(gradientType == "vertical") matrix.createGradientBox(w - 2,h - 2,Math.PI / 2,0,0); else if(gradientType == "horizontal") matrix.createGradientBox(w - 2,h - 2,0,0,0);
				g.beginGradientFill(openfl.display.GradientType.LINEAR,colors,alphas,ratios,matrix,openfl.display.SpreadMethod.PAD,openfl.display.InterpolationMethod.LINEAR_RGB,0);
			} else g.beginFill(style.get_backgroundColor());
		}
		if(style.get_cornerRadiusTopLeft() != -1 || style.get_cornerRadiusTopRight() != -1 || style.get_cornerRadiusBottomLeft() != -1 || style.get_cornerRadiusBottomRight() != -1) {
			var radiusTopLeft = style.get_cornerRadiusTopLeft();
			var radiusTopRight = style.get_cornerRadiusTopRight();
			var radiusBottomLeft = style.get_cornerRadiusBottomLeft();
			var radiusBottomRight = style.get_cornerRadiusBottomRight();
			if(((radiusTopLeft | 0) & (radiusTopRight | 0) & (radiusBottomLeft | 0) & (radiusBottomRight | 0)) == radiusTopLeft) g.drawRoundRect(rc.get_left(),rc.get_top(),rc.width,rc.height,radiusTopLeft + 2,radiusTopLeft + 2); else g.drawRect(rc.get_left(),rc.get_top(),rc.width,rc.height);
		} else g.drawRect(rc.get_left(),rc.get_top(),rc.width,rc.height);
		g.endFill();
	}
	if(style.get_backgroundImage() != null) {
		var backgroundImageRect = null;
		if(style.get_backgroundImageRect() != null) backgroundImageRect = style.get_backgroundImageRect();
		if(((function($this) {
			var $r;
			var _this = style.get_backgroundImage();
			$r = HxOverrides.substr(_this,-3,null);
			return $r;
		}(this))).toLowerCase() != "svg") {
			if(style.get_backgroundImageScale9() != null) haxe.ui.toolkit.style.StyleHelper.paintScale9(g,style.get_backgroundImage(),backgroundImageRect,style.get_backgroundImageScale9(),rc); else {
				var rects = new haxe.ds.StringMap();
				var bitmapData = haxe.ui.toolkit.style.StyleHelper.getBitmapSection(style.get_backgroundImage(),backgroundImageRect);
				if(bitmapData != null) {
					rects.set("middle",new openfl.geom.Rectangle(0,0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0));
					haxe.ui.toolkit.style.StyleHelper.paintCompoundBitmap(g,style.get_backgroundImage(),backgroundImageRect,rects,rc);
				}
			}
		} else {
			var svg = haxe.ui.toolkit.resources.ResourceManager.get_instance().getSVG(style.get_backgroundImage());
			svg.render(g,rc.get_left(),rc.get_top(),rc.width,rc.height);
		}
	}
	null;
};
haxe.ui.toolkit.style.StyleHelper.paintScale9 = function(g,resourceId,resourceRect,scale9,rc) {
	if(scale9 != null) {
		var resource = haxe.ui.toolkit.style.StyleHelper.getBitmapSection(resourceId,resourceRect);
		if(resource == null) return;
		var w;
		if(resource.___textureBuffer != null) w = resource.___textureBuffer.width; else w = 0;
		var h;
		if(resource.___textureBuffer != null) h = resource.___textureBuffer.height; else h = 0;
		var x1 = Std["int"](scale9.get_left());
		var y1 = Std["int"](scale9.get_top());
		var x2 = Std["int"](scale9.get_right());
		var y2 = Std["int"](scale9.get_bottom());
		var rects = new haxe.ds.StringMap();
		rects.set("top.left",new openfl.geom.Rectangle(0,0,x1,y1));
		rects.set("top",new openfl.geom.Rectangle(x1,0,x2 - x1,y1));
		rects.set("top.right",new openfl.geom.Rectangle(x2,0,w - x2,y1));
		rects.set("left",new openfl.geom.Rectangle(0,y1,x1,y2 - y1));
		rects.set("middle",new openfl.geom.Rectangle(x1,y1,x2 - x1,y2 - y1));
		rects.set("right",new openfl.geom.Rectangle(x2,y1,w - x2,y2 - y1));
		rects.set("bottom.left",new openfl.geom.Rectangle(0,y2,x1,h - y2));
		rects.set("bottom",new openfl.geom.Rectangle(x1,y2,x2 - x1,h - y2));
		rects.set("bottom.right",new openfl.geom.Rectangle(x2,y2,w - x2,h - y2));
		haxe.ui.toolkit.style.StyleHelper.paintCompoundBitmap(g,resourceId,resourceRect,rects,rc);
	}
};
haxe.ui.toolkit.style.StyleHelper.paintCompoundBitmap = function(g,resourceId,resourceRect,sourceRects,targetRect) {
	targetRect.set_left(Std["int"](targetRect.get_left()));
	targetRect.set_top(Std["int"](targetRect.get_top()));
	targetRect.set_right(Std["int"](targetRect.get_right()));
	targetRect.set_bottom(Std["int"](targetRect.get_bottom()));
	var tl = sourceRects.get("top.left");
	if(tl != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,tl,new openfl.geom.Rectangle(0,0,tl.width,tl.height)); else tl = new openfl.geom.Rectangle();
	var tr = sourceRects.get("top.right");
	if(tr != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,tr,new openfl.geom.Rectangle(targetRect.width - tr.width,0,tr.width,tr.height)); else tr = new openfl.geom.Rectangle();
	var t = sourceRects.get("top");
	if(t != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,t,new openfl.geom.Rectangle(tl.width,0,targetRect.width - tl.width - tr.width,t.height)); else t = new openfl.geom.Rectangle();
	var bl = sourceRects.get("bottom.left");
	if(bl != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,bl,new openfl.geom.Rectangle(0,targetRect.height - bl.height,bl.width,bl.height)); else bl = new openfl.geom.Rectangle();
	var br = sourceRects.get("bottom.right");
	if(br != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,br,new openfl.geom.Rectangle(targetRect.width - br.width,targetRect.height - br.height,br.width,br.height)); else br = new openfl.geom.Rectangle();
	var b = sourceRects.get("bottom");
	if(b != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,b,new openfl.geom.Rectangle(bl.width,targetRect.height - b.height,targetRect.width - bl.width - br.width,b.height)); else b = new openfl.geom.Rectangle();
	var l = sourceRects.get("left");
	if(l != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,l,new openfl.geom.Rectangle(0,tl.height,l.width,targetRect.height - tl.height - bl.height)); else l = new openfl.geom.Rectangle();
	var r = sourceRects.get("right");
	if(r != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,r,new openfl.geom.Rectangle(targetRect.width - r.width,tr.height,r.width,targetRect.height - tl.height - bl.height)); else r = new openfl.geom.Rectangle();
	var m = sourceRects.get("middle");
	if(m != null) haxe.ui.toolkit.style.StyleHelper.paintBitmapSection(g,resourceId,resourceRect,m,new openfl.geom.Rectangle(l.width,t.height,targetRect.width - l.width - r.width,targetRect.height - t.height - b.height)); else m = new openfl.geom.Rectangle();
};
haxe.ui.toolkit.style.StyleHelper.paintBitmapSection = function(g,resourceId,resourceRect,src,dst) {
	var srcData = haxe.ui.toolkit.style.StyleHelper.getBitmapSection(resourceId,resourceRect);
	if(srcData == null) return;
	if(src.width <= 0 || src.height <= 0 || dst.width <= 0 || dst.height <= 0) return;
	if(resourceRect == null) resourceRect = new openfl.geom.Rectangle(0,0,srcData.___textureBuffer != null?srcData.___textureBuffer.width:0,srcData.___textureBuffer != null?srcData.___textureBuffer.height:0);
	var cacheId = resourceId + "_" + resourceRect.get_left() + "_" + resourceRect.get_top() + "_" + resourceRect.width + "_" + resourceRect.height + "___" + src.get_left() + "_" + src.get_top() + "_" + src.width + "_" + src.height;
	var section = haxe.ui.toolkit.style.StyleHelper.sectionCache.get(cacheId);
	if(section == null) {
		var fillcolor = 16777215;
		section = new openfl.display.BitmapData(src.width | 0,src.height | 0,true,fillcolor);
		section.copyPixels(srcData,src,new openfl.geom.Point(0,0));
		haxe.ui.toolkit.style.StyleHelper.sectionCache.set(cacheId,section);
	}
	src.set_left(Std["int"](src.get_left()));
	src.set_top(Std["int"](src.get_top()));
	src.set_bottom(Std["int"](src.get_bottom()));
	src.set_right(Std["int"](src.get_right()));
	dst.set_left(Std["int"](dst.get_left()));
	dst.set_top(Std["int"](dst.get_top()));
	dst.set_bottom(Std["int"](dst.get_bottom()));
	dst.set_right(Std["int"](dst.get_right()));
	var mat = new openfl.geom.Matrix();
	mat.scale(dst.width / (section.___textureBuffer != null?section.___textureBuffer.width:0),dst.height / (section.___textureBuffer != null?section.___textureBuffer.height:0));
	mat.translate(dst.get_left(),dst.get_top());
	g.lineStyle(0,0,0);
	g.beginBitmapFill(section,mat,false,false);
	g.drawRect(dst.x,dst.y,dst.width,dst.height);
	g.endFill();
};
haxe.ui.toolkit.style.StyleHelper.getBitmapSection = function(resourceId,rc) {
	if(resourceId == null || resourceId.length == 0) return null;
	if(haxe.ui.toolkit.style.StyleHelper.sectionCache == null) haxe.ui.toolkit.style.StyleHelper.sectionCache = new haxe.ds.StringMap();
	if(rc == null) {
		var resource = haxe.ui.toolkit.resources.ResourceManager.get_instance().getBitmapData(resourceId);
		if(resource != null) rc = new openfl.geom.Rectangle(0,0,resource.___textureBuffer != null?resource.___textureBuffer.width:0,resource.___textureBuffer != null?resource.___textureBuffer.height:0);
	}
	var cacheId = resourceId + "_" + rc.get_left() + "_" + rc.get_top() + "_" + rc.width + "_" + rc.height;
	var section = haxe.ui.toolkit.style.StyleHelper.sectionCache.get(cacheId);
	if(section == null) {
		var resource1 = haxe.ui.toolkit.resources.ResourceManager.get_instance().getBitmapData(resourceId);
		if(resource1 != null) {
			var fillcolor = 16777215;
			section = new openfl.display.BitmapData(rc.width | 0,rc.height | 0,true,fillcolor);
			section.copyPixels(resource1,rc,new openfl.geom.Point(0,0));
			haxe.ui.toolkit.style.StyleHelper.sectionCache.set(cacheId,section);
		}
	}
	return section;
};
haxe.ui.toolkit.style.StyleManager = function() {
	this._cacheStyles = true;
	this.stylesBuilt = 0;
	this._styles = new haxe.ds.StringMap();
	this._rules = new Array();
	this.stylesBuiltFor = new haxe.ds.StringMap();
};
$hxClasses["haxe.ui.toolkit.style.StyleManager"] = haxe.ui.toolkit.style.StyleManager;
haxe.ui.toolkit.style.StyleManager.__name__ = ["haxe","ui","toolkit","style","StyleManager"];
haxe.ui.toolkit.style.StyleManager.__properties__ = {get_instance:"get_instance"}
haxe.ui.toolkit.style.StyleManager.get_instance = function() {
	if(haxe.ui.toolkit.style.StyleManager._instance == null) haxe.ui.toolkit.style.StyleManager._instance = new haxe.ui.toolkit.style.StyleManager();
	return haxe.ui.toolkit.style.StyleManager._instance;
};
haxe.ui.toolkit.style.StyleManager.prototype = {
	getRules: function() {
		return this._rules;
	}
	,removeStyle: function(rule) {
		this._styles.remove(rule);
		HxOverrides.remove(this._rules,rule);
	}
	,addStyle: function(rule,style) {
		this._cachedStyles = null;
		var arr = rule.split(",");
		var _g = 0;
		while(_g < arr.length) {
			var a = arr[_g];
			++_g;
			a = StringTools.trim(a);
			var existingStyleRule = this._styles.get(a);
			var existingStyle = null;
			if(existingStyleRule != null) {
				var existingStyle1 = existingStyleRule.style;
				existingStyle1.merge(style);
				var styleRule = new haxe.ui.toolkit.style._StyleManager.StyleRule(a,existingStyle1);
				this._styles.set(a,styleRule);
			} else {
				var styleRule1 = new haxe.ui.toolkit.style._StyleManager.StyleRule(a,style);
				this._styles.set(a,styleRule1);
				this._rules.push(a);
			}
		}
	}
	,addStyles: function(styles) {
		var $it0 = styles.get_rules();
		while( $it0.hasNext() ) {
			var rule = $it0.next();
			this.addStyle(rule,styles.getStyle(rule));
		}
	}
	,findStyle: function(rule) {
		var existingStyleRule = this._styles.get(rule);
		if(existingStyleRule != null) return existingStyleRule.style;
		return null;
	}
	,clear: function() {
		this._styles = new haxe.ds.StringMap();
		this._rules = new Array();
		haxe.ui.toolkit.style.StyleHelper.clearCache();
	}
	,findAncestor: function(c,rulePart) {
		var a = null;
		var t = c;
		while(a == null) if(this.rulePartMatch(t,rulePart,null) == true) a = t; else {
			t = t.get_parent();
			if(t == null) break;
		}
		return a;
	}
	,rulePartMatch: function(c,rulePart,state,overriddenClassName) {
		var match = false;
		if(state == "normal") state = null;
		var className = Type.getClassName(Type.getClass(c));
		var n = className.lastIndexOf(".");
		className = HxOverrides.substr(className,n + 1,className.length);
		if(overriddenClassName != null) className = overriddenClassName;
		var id = c.get_id();
		var styleName = null;
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)) styleName = (js.Boot.__cast(c , haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)).get_styleName();
		var rulePartId = rulePart.id;
		var rulePartClassName = rulePart.className;
		var rulePartState = rulePart.state;
		var rulePartStyleName = rulePart.styleName;
		if(rulePartStyleName != null && rulePartStyleName.length == 0) rulePartStyleName = null;
		var s = new haxe.ui.toolkit.style.Style();
		if(rulePartId != null) {
			match = rulePartId == id;
			if(rulePartStyleName != null && match == true) match = rulePartStyleName == styleName;
		} else if(rulePartClassName != null) {
			match = rulePartClassName == className;
			if(rulePartStyleName != null && match == true) match = rulePartStyleName == styleName;
		} else if(rulePartStyleName != null) match = rulePartStyleName == styleName;
		if(rulePartState != null && match == true) match = rulePartState == state;
		return match;
	}
	,ruleMatch: function(c,rule,state,overriddenClassName) {
		var match = true;
		if(state == "normal") state = null;
		var className = Type.getClassName(Type.getClass(c));
		var n = className.lastIndexOf(".");
		className = HxOverrides.substr(className,n + 1,className.length);
		if(overriddenClassName != null) className = overriddenClassName;
		var id = c.get_id();
		var styleName = null;
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)) styleName = (js.Boot.__cast(c , haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)).get_styleName();
		var styleRule = this._styles.get(rule);
		var skipRule = true;
		if(styleRule.isRelevant(id,className,state,styleName) == true) skipRule = false;
		if(styleName != null && rule.indexOf("." + styleName) != -1) skipRule = false;
		if(skipRule == true) return false;
		var t = c;
		var _g = 0;
		var _g1 = styleRule.ruleParts;
		while(_g < _g1.length) {
			var rulePart = _g1[_g];
			++_g;
			var partMatch = this.rulePartMatch(t,rulePart,state,overriddenClassName);
			if(partMatch == false) {
				t = this.findAncestor(t,rulePart);
				if(t == null) {
					match = false;
					break;
				} else state = null;
			}
		}
		return match;
	}
	,buildStyleFor: function(c,state) {
		if(state == "normal") state = null;
		var cacheKey = null;
		if(this._cacheStyles == true) {
			cacheKey = this.buildFullCacheKey(c,state);
			if(this._cachedStyles == null) this._cachedStyles = new haxe.ds.StringMap();
			if(this._cachedStyles.get(cacheKey) != null) return this._cachedStyles.get(cacheKey);
		}
		var style = new haxe.ui.toolkit.style.Style();
		style.set_autoApply(false);
		var superClass = Type.getSuperClass(Type.getClass(c));
		while(superClass != haxe.ui.toolkit.core.Component && superClass != haxe.ui.toolkit.core.StateComponent && superClass != haxe.ui.toolkit.core.StyleableDisplayObject && superClass != haxe.ui.toolkit.core.DisplayObjectContainer && superClass != haxe.ui.toolkit.core.DisplayObject && superClass != null) {
			var superClassName = Type.getClassName(superClass);
			var n = superClassName.lastIndexOf(".");
			superClassName = HxOverrides.substr(superClassName,n + 1,superClassName.length);
			var _g = 0;
			var _g1 = this._rules;
			while(_g < _g1.length) {
				var rule = _g1[_g];
				++_g;
				if(this.ruleMatch(c,rule,state,superClassName) == true) {
					var matchedStyle = this._styles.get(rule).style;
					style.merge(matchedStyle);
				}
			}
			superClass = Type.getSuperClass(superClass);
		}
		var _g2 = 0;
		var _g11 = this._rules;
		while(_g2 < _g11.length) {
			var rule1 = _g11[_g2];
			++_g2;
			if(this.ruleMatch(c,rule1,state) == true) {
				var matchedStyle1 = this._styles.get(rule1).style;
				style.merge(matchedStyle1);
			}
		}
		this.stylesBuilt++;
		var className = Type.getClassName(Type.getClass(c));
		if(this.stylesBuiltFor.get(className) == null) this.stylesBuiltFor.set(className,0);
		var n1 = this.stylesBuiltFor.get(className);
		n1++;
		this.stylesBuiltFor.set(className,n1);
		if(this._cacheStyles == true && cacheKey != null) this._cachedStyles.set(cacheKey,style);
		style.set_target(c);
		style.set_autoApply(true);
		return style;
	}
	,buildCacheKey: function(c,state) {
		if(state == "normal") state = null;
		var className = Type.getClassName(Type.getClass(c));
		var n = className.lastIndexOf(".");
		className = HxOverrides.substr(className,n + 1,className.length);
		var id = c.get_id();
		var styleName = null;
		if(js.Boot.__instanceof(c,haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)) styleName = (js.Boot.__cast(c , haxe.ui.toolkit.core.interfaces.IStyleableDisplayObject)).get_styleName();
		var s = className;
		if(id != null) s += "#" + id;
		if(styleName != null) s += "." + styleName;
		if(state != null) s += ":" + state;
		return s;
	}
	,buildFullCacheKey: function(c,state) {
		if(state == "normal") state = null;
		var key = this.buildCacheKey(c,state);
		var p = c.get_parent();
		while(p != null) {
			key += ">" + this.buildCacheKey(p,null);
			p = p.get_parent();
		}
		return key;
	}
	,dump: function() {
		var $it0 = this.stylesBuiltFor.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			haxe.Log.trace("> " + key + " = " + this.stylesBuiltFor.get(key),{ fileName : "StyleManager.hx", lineNumber : 325, className : "haxe.ui.toolkit.style.StyleManager", methodName : "dump"});
		}
		haxe.Log.trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>",{ fileName : "StyleManager.hx", lineNumber : 327, className : "haxe.ui.toolkit.style.StyleManager", methodName : "dump"});
	}
	,get_hasStyles: function() {
		if(this._styles == null) return false;
		return this._styles.keys().hasNext();
	}
	,__class__: haxe.ui.toolkit.style.StyleManager
	,__properties__: {get_hasStyles:"get_hasStyles"}
};
haxe.ui.toolkit.style._StyleManager = {};
haxe.ui.toolkit.style._StyleManager.StyleRule = function(rule,style) {
	this.style = style;
	this.ruleParts = new Array();
	var ruleArr = rule.split(" ");
	ruleArr.reverse();
	var _g = 0;
	while(_g < ruleArr.length) {
		var rulePart = ruleArr[_g];
		++_g;
		this.ruleParts.push(new haxe.ui.toolkit.style._StyleManager.StyleRulePart(rulePart));
	}
};
$hxClasses["haxe.ui.toolkit.style._StyleManager.StyleRule"] = haxe.ui.toolkit.style._StyleManager.StyleRule;
haxe.ui.toolkit.style._StyleManager.StyleRule.__name__ = ["haxe","ui","toolkit","style","_StyleManager","StyleRule"];
haxe.ui.toolkit.style._StyleManager.StyleRule.prototype = {
	containsClassName: function(className) {
		var found = false;
		var _g = 0;
		var _g1 = this.ruleParts;
		while(_g < _g1.length) {
			var rulePart = _g1[_g];
			++_g;
			if(rulePart.className != null && rulePart.className == className) {
				found = true;
				break;
			}
		}
		return found;
	}
	,isRelevant: function(id,className,state,styleName) {
		var relevant = false;
		var _g = 0;
		var _g1 = this.ruleParts;
		while(_g < _g1.length) {
			var rulePart = _g1[_g];
			++_g;
			if(rulePart.id != null && rulePart.id == id) {
				relevant = true;
				break;
			}
			if(rulePart.className != null && rulePart.className == className) {
				relevant = true;
				break;
			}
			if(rulePart.state != null && rulePart.state == state) {
				relevant = true;
				break;
			}
			if(rulePart.styleName != null && rulePart.styleName == styleName) {
				relevant = true;
				break;
			}
		}
		return relevant;
	}
	,__class__: haxe.ui.toolkit.style._StyleManager.StyleRule
};
haxe.ui.toolkit.style._StyleManager.StyleRulePart = function(rulePart) {
	var n = rulePart.indexOf(":");
	if(n != -1) {
		this.state = HxOverrides.substr(rulePart,n + 1,rulePart.length);
		rulePart = HxOverrides.substr(rulePart,0,n);
	}
	if(StringTools.startsWith(rulePart,"#")) {
		this.id = HxOverrides.substr(rulePart,1,rulePart.length);
		n = this.id.indexOf(".");
		if(n != -1) {
			this.styleName = HxOverrides.substr(this.id,n + 1,this.id.length);
			this.id = HxOverrides.substr(this.id,0,n);
		}
	} else {
		this.className = rulePart;
		n = this.className.indexOf(".");
		if(n != -1) {
			this.styleName = HxOverrides.substr(this.className,n + 1,this.className.length);
			this.className = HxOverrides.substr(this.className,0,n);
			if(this.className.length == 0) this.className = null;
		}
	}
	if(this.styleName != null && this.styleName.length == 0) this.styleName = null;
};
$hxClasses["haxe.ui.toolkit.style._StyleManager.StyleRulePart"] = haxe.ui.toolkit.style._StyleManager.StyleRulePart;
haxe.ui.toolkit.style._StyleManager.StyleRulePart.__name__ = ["haxe","ui","toolkit","style","_StyleManager","StyleRulePart"];
haxe.ui.toolkit.style._StyleManager.StyleRulePart.prototype = {
	__class__: haxe.ui.toolkit.style._StyleManager.StyleRulePart
};
haxe.ui.toolkit.style.StyleParser = function() { };
$hxClasses["haxe.ui.toolkit.style.StyleParser"] = haxe.ui.toolkit.style.StyleParser;
haxe.ui.toolkit.style.StyleParser.__name__ = ["haxe","ui","toolkit","style","StyleParser"];
haxe.ui.toolkit.style.StyleParser.fromString = function(styleString) {
	if(styleString == null || styleString.length == 0) return new haxe.ui.toolkit.style.Styles();
	var styles = new haxe.ui.toolkit.style.Styles();
	var n1 = -1;
	var n2 = styleString.indexOf("{",0);
	while(n2 > -1) {
		var n3 = styleString.indexOf("}",n2);
		var styleName = StringTools.trim(HxOverrides.substr(styleString,n1 + 1,n2 - n1 - 1));
		var styleData = HxOverrides.substr(styleString,n2 + 1,n3 - n2 - 1);
		var style = new haxe.ui.toolkit.style.Style();
		var props = styleData.split(";");
		var _g = 0;
		while(_g < props.length) {
			var prop = props[_g];
			++_g;
			prop = StringTools.trim(prop);
			if(StringTools.startsWith(prop,"//")) continue;
			if(prop != null && prop.length > 0) {
				var temp = prop.split(":");
				var propName = StringTools.trim(temp[0]);
				propName = haxe.ui.toolkit.util.StringUtil.capitalizeHyphens(propName);
				if(Reflect.field(style,"set_" + propName) == null) {
					haxe.Log.trace("Warning: " + propName + " not found",{ fileName : "StyleParser.hx", lineNumber : 36, className : "haxe.ui.toolkit.style.StyleParser", methodName : "fromString"});
					continue;
				}
				var propValue = StringTools.trim(temp[1]);
				if(temp.length == 3) propValue += ":" + StringTools.trim(temp[2]);
				propValue = StringTools.replace(propValue,"\"","");
				propValue = StringTools.replace(propValue,"'","");
				if(haxe.ui.toolkit.hscript.ScriptUtils.isScript(propValue) && !haxe.ui.toolkit.hscript.ScriptUtils.isCssException(propName)) {
					style.addDynamicValue(propName,propValue);
					continue;
				}
				if(propName == "width" && propValue.indexOf("%") != -1) {
					propName = "percentWidth";
					propValue = HxOverrides.substr(propValue,0,propValue.length - 1);
				} else if(propName == "height" && propValue.indexOf("%") != -1) {
					propName = "percentHeight";
					propValue = HxOverrides.substr(propValue,0,propValue.length - 1);
				} else if(propName == "filter") {
					style.set_filter(haxe.ui.toolkit.util.FilterParser.parseFilter(propValue));
					continue;
				} else if(propName == "backgroundImageScale9") {
					var coords = propValue.split(",");
					var x1 = Std.parseInt(coords[0]);
					var y1 = Std.parseInt(coords[1]);
					var x2 = Std.parseInt(coords[2]);
					var y2 = Std.parseInt(coords[3]);
					var scale9 = new openfl.geom.Rectangle();
					scale9.set_left(x1);
					scale9.set_top(y1);
					scale9.set_right(x2);
					scale9.set_bottom(y2);
					style.set_backgroundImageScale9(scale9);
					continue;
				} else if(propName == "backgroundImageRect") {
					var arr = propValue.split(",");
					style.set_backgroundImageRect(new openfl.geom.Rectangle(Std.parseInt(arr[0]),Std.parseInt(arr[1]),Std.parseInt(arr[2]),Std.parseInt(arr[3])));
					continue;
				}
				if(propValue.indexOf(",") != -1 || !StringTools.startsWith(propValue,"#") && Std.string(Std.parseFloat(propValue)) == Std.string(Math.NaN)) {
					if(propValue == "true" || propValue == "false") Reflect.setProperty(style,propName,propValue == "true"); else Reflect.setProperty(style,propName,propValue);
				} else {
					if(StringTools.startsWith(propValue,"#")) propValue = "0x" + HxOverrides.substr(propValue,1,propValue.length - 1);
					if(StringTools.startsWith(propValue,"0x")) Reflect.setProperty(style,propName,Std.parseInt(propValue)); else Reflect.setProperty(style,propName,Std.parseFloat(propValue));
				}
			}
		}
		if(styleName.indexOf(",") == -1) styles.addStyle(styleName,style); else {
			var arr1 = styleName.split(",");
			var _g1 = 0;
			while(_g1 < arr1.length) {
				var s = arr1[_g1];
				++_g1;
				s = StringTools.trim(s);
				styles.addStyle(s,style);
			}
		}
		n1 = n3;
		n2 = styleString.indexOf("{",n1);
	}
	return styles;
};
haxe.ui.toolkit.text = {};
haxe.ui.toolkit.text.ITextDisplay = function() { };
$hxClasses["haxe.ui.toolkit.text.ITextDisplay"] = haxe.ui.toolkit.text.ITextDisplay;
haxe.ui.toolkit.text.ITextDisplay.__name__ = ["haxe","ui","toolkit","text","ITextDisplay"];
haxe.ui.toolkit.text.ITextDisplay.prototype = {
	__class__: haxe.ui.toolkit.text.ITextDisplay
};
haxe.ui.toolkit.text.TextDisplay = function() {
	this._autoSize = true;
	this._tf = new openfl.text.TextField();
	this._tf.set_type(openfl.text.TextFieldType.DYNAMIC);
	this._tf.selectable = false;
	this._tf.multiline = false;
	this._tf.mouseEnabled = false;
	this._tf.set_wordWrap(false);
	this._tf.set_autoSize(openfl.text.TextFieldAutoSize.LEFT);
	this._tf.set_text("");
};
$hxClasses["haxe.ui.toolkit.text.TextDisplay"] = haxe.ui.toolkit.text.TextDisplay;
haxe.ui.toolkit.text.TextDisplay.__name__ = ["haxe","ui","toolkit","text","TextDisplay"];
haxe.ui.toolkit.text.TextDisplay.__interfaces__ = [haxe.ui.toolkit.text.ITextDisplay];
haxe.ui.toolkit.text.TextDisplay.prototype = {
	get_text: function() {
		return this._tf.get_text();
	}
	,set_text: function(value) {
		if(value != null) {
			if(this._tf.multiline == false) this._tf.set_text(StringTools.replace(value,"\\n","\n")); else this._tf.set_text(StringTools.replace(value,"\\n","\n"));
		}
		this.set_style(this._style);
		return value;
	}
	,get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		if(value == null) return value;
		this._style = value;
		var format = this._tf.getTextFormat();
		if(this._style.get_fontName() != null) {
			this._tf.embedFonts = this._style.get_fontEmbedded();
			format.font = this._style.get_fontName();
		}
		if(this._style.get_fontSize() != -1) format.size = this._style.get_fontSize();
		if(this._style.get_color() != -1) format.color = this._style.get_color();
		format.bold = this._style.get_fontBold();
		format.italic = this._style.get_fontItalic();
		format.underline = this._style.get_fontUnderline();
		this._tf.set_defaultTextFormat(format);
		this._tf.setTextFormat(format);
		if(this._style.get_textAlign() != null) this.set_textAlign(this._style.get_textAlign());
		return value;
	}
	,get_display: function() {
		return this._tf;
	}
	,get_interactive: function() {
		return this._tf.get_type() == openfl.text.TextFieldType.INPUT;
	}
	,set_interactive: function(value) {
		if(value == true) {
			this._tf.set_type(openfl.text.TextFieldType.INPUT);
			this._tf.selectable = true;
			this._tf.mouseEnabled = true;
		} else {
			this._tf.set_type(openfl.text.TextFieldType.DYNAMIC);
			this._tf.selectable = false;
			this._tf.mouseEnabled = false;
		}
		return value;
	}
	,get_multiline: function() {
		return this._tf.multiline;
	}
	,set_multiline: function(value) {
		this._tf.multiline = value;
		return value;
	}
	,get_wrapLines: function() {
		return this._tf.get_wordWrap();
	}
	,set_wrapLines: function(value) {
		this._tf.set_wordWrap(value);
		return value;
	}
	,get_displayAsPassword: function() {
		return this._tf.displayAsPassword;
	}
	,set_displayAsPassword: function(value) {
		this._tf.displayAsPassword = value;
		return value;
	}
	,get_visible: function() {
		return this._tf.get_visible();
	}
	,set_visible: function(value) {
		this._tf.set_visible(value);
		return value;
	}
	,get_selectable: function() {
		return this._tf.selectable;
	}
	,set_selectable: function(value) {
		this._tf.mouseEnabled = value;
		return this._tf.selectable = value;
	}
	,get_autoSize: function() {
		return this._tf.autoSize != openfl.text.TextFieldAutoSize.NONE;
	}
	,set_autoSize: function(value) {
		if(value == true) this._tf.set_autoSize(openfl.text.TextFieldAutoSize.LEFT); else this._tf.set_autoSize(openfl.text.TextFieldAutoSize.NONE);
		return value;
	}
	,get_textAlign: function() {
		var format = this._tf.getTextFormat();
		var align = "left";
		switch(format.align) {
		case openfl.text.TextFormatAlign.LEFT:
			align = "left";
			break;
		case openfl.text.TextFormatAlign.CENTER:
			align = "center";
			break;
		case openfl.text.TextFormatAlign.RIGHT:
			align = "right";
			break;
		default:
			align = "left";
		}
		return align;
	}
	,set_textAlign: function(value) {
		var format = this._tf.getTextFormat();
		switch(value) {
		case "left":
			format.align = openfl.text.TextFormatAlign.LEFT;
			break;
		case "center":
			format.align = openfl.text.TextFormatAlign.CENTER;
			break;
		case "right":
			format.align = openfl.text.TextFormatAlign.RIGHT;
			break;
		default:
			format.align = openfl.text.TextFormatAlign.LEFT;
		}
		this._tf.set_defaultTextFormat(format);
		this._tf.setTextFormat(format);
		return value;
	}
	,get_maxChars: function() {
		return this._tf.maxChars;
	}
	,set_maxChars: function(value) {
		return this._tf.maxChars = value;
	}
	,get_restrictChars: function() {
		return null;
	}
	,set_restrictChars: function(value) {
		return value;
	}
	,__class__: haxe.ui.toolkit.text.TextDisplay
	,__properties__: {set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",set_selectable:"set_selectable",get_selectable:"get_selectable",set_visible:"set_visible",get_visible:"get_visible",set_displayAsPassword:"set_displayAsPassword",get_displayAsPassword:"get_displayAsPassword",set_wrapLines:"set_wrapLines",get_wrapLines:"get_wrapLines",set_multiline:"set_multiline",get_multiline:"get_multiline",set_interactive:"set_interactive",get_interactive:"get_interactive",get_display:"get_display",set_style:"set_style",get_style:"get_style",set_text:"set_text",get_text:"get_text"}
};
haxe.ui.toolkit.themes = {};
haxe.ui.toolkit.themes.Theme = function() {
};
$hxClasses["haxe.ui.toolkit.themes.Theme"] = haxe.ui.toolkit.themes.Theme;
haxe.ui.toolkit.themes.Theme.__name__ = ["haxe","ui","toolkit","themes","Theme"];
haxe.ui.toolkit.themes.Theme.addPublicAsset = function(asset) {
	haxe.ui.toolkit.themes.Theme.addAsset("__PUBLIC__",asset);
};
haxe.ui.toolkit.themes.Theme.addAsset = function(t,asset) {
	var list = haxe.ui.toolkit.themes.Theme.assets.get(t);
	if(list == null) {
		list = new Array();
		haxe.ui.toolkit.themes.Theme.assets.set(t,list);
	}
	list.push(asset);
};
haxe.ui.toolkit.themes.Theme.prototype = {
	apply: function() {
		this.applyAssetList(this.name);
		this.applyAssetList("__PUBLIC__");
	}
	,applyAssetList: function(n) {
		var list = haxe.ui.toolkit.themes.Theme.assets.get(n);
		if(list == null) return;
		var _g = 0;
		while(_g < list.length) {
			var asset = list[_g];
			++_g;
			this.applyAsset(asset);
		}
	}
	,applyAsset: function(asset) {
		if(typeof(asset) == "string") {
			if(StringTools.endsWith(asset,".css")) haxe.ui.toolkit.style.StyleManager.get_instance().addStyles(haxe.ui.toolkit.style.StyleParser.fromString(haxe.ui.toolkit.resources.ResourceManager.get_instance().getText(asset)));
		} else if(js.Boot.__instanceof(asset,Class)) {
			var styles = Type.createInstance(asset,[]);
			if(styles != null) haxe.ui.toolkit.style.StyleManager.get_instance().addStyles(styles);
		}
	}
	,__class__: haxe.ui.toolkit.themes.Theme
};
haxe.ui.toolkit.themes.DefaultTheme = function() {
	haxe.ui.toolkit.themes.Theme.call(this);
	this.name = "default";
};
$hxClasses["haxe.ui.toolkit.themes.DefaultTheme"] = haxe.ui.toolkit.themes.DefaultTheme;
haxe.ui.toolkit.themes.DefaultTheme.__name__ = ["haxe","ui","toolkit","themes","DefaultTheme"];
haxe.ui.toolkit.themes.DefaultTheme.__super__ = haxe.ui.toolkit.themes.Theme;
haxe.ui.toolkit.themes.DefaultTheme.prototype = $extend(haxe.ui.toolkit.themes.Theme.prototype,{
	__class__: haxe.ui.toolkit.themes.DefaultTheme
});
haxe.ui.toolkit.themes.GradientTheme = function() {
	haxe.ui.toolkit.themes.Theme.call(this);
	this.name = "gradient";
};
$hxClasses["haxe.ui.toolkit.themes.GradientTheme"] = haxe.ui.toolkit.themes.GradientTheme;
haxe.ui.toolkit.themes.GradientTheme.__name__ = ["haxe","ui","toolkit","themes","GradientTheme"];
haxe.ui.toolkit.themes.GradientTheme.__super__ = haxe.ui.toolkit.themes.Theme;
haxe.ui.toolkit.themes.GradientTheme.prototype = $extend(haxe.ui.toolkit.themes.Theme.prototype,{
	__class__: haxe.ui.toolkit.themes.GradientTheme
});
haxe.ui.toolkit.themes.WindowsTheme = function() {
	haxe.ui.toolkit.themes.Theme.call(this);
	this.name = "windows";
};
$hxClasses["haxe.ui.toolkit.themes.WindowsTheme"] = haxe.ui.toolkit.themes.WindowsTheme;
haxe.ui.toolkit.themes.WindowsTheme.__name__ = ["haxe","ui","toolkit","themes","WindowsTheme"];
haxe.ui.toolkit.themes.WindowsTheme.__super__ = haxe.ui.toolkit.themes.Theme;
haxe.ui.toolkit.themes.WindowsTheme.prototype = $extend(haxe.ui.toolkit.themes.Theme.prototype,{
	__class__: haxe.ui.toolkit.themes.WindowsTheme
});
haxe.ui.toolkit.util.ByteConverter = function() { };
$hxClasses["haxe.ui.toolkit.util.ByteConverter"] = haxe.ui.toolkit.util.ByteConverter;
haxe.ui.toolkit.util.ByteConverter.__name__ = ["haxe","ui","toolkit","util","ByteConverter"];
haxe.ui.toolkit.util.ByteConverter.fromHaxeBytes = function(bytes) {
	var ba = new openfl.utils.ByteArray();
	var _g1 = 0;
	var _g = bytes.length;
	while(_g1 < _g) {
		var a = _g1++;
		ba.writeByte(bytes.b[a]);
	}
	return ba;
};
haxe.ui.toolkit.util.FilterParser = function() { };
$hxClasses["haxe.ui.toolkit.util.FilterParser"] = haxe.ui.toolkit.util.FilterParser;
haxe.ui.toolkit.util.FilterParser.__name__ = ["haxe","ui","toolkit","util","FilterParser"];
haxe.ui.toolkit.util.FilterParser.parseFilter = function(filterString) {
	return null;
	var filter = null;
	var filterName = null;
	var filterParams = null;
	var n1 = filterString.indexOf("(");
	var n2 = filterString.indexOf(")");
	if(n1 != -1 && n2 != -1) {
		filterName = HxOverrides.substr(filterString,0,n1);
		filterParams = HxOverrides.substr(filterString,n1 + 1,n2 - n1 - 1);
	} else filterName = filterString;
	if(filterName != null) {
		filterName = StringTools.trim(filterName);
		filter = haxe.ui.toolkit.util.FilterParser.createFilter(filterName,filterParams);
	}
	return filter;
};
haxe.ui.toolkit.util.FilterParser.createFilter = function(filterName,filterParams) {
	var filter = null;
	var params = null;
	if(filterParams != null) params = filterParams.split(",");
	params = haxe.ui.toolkit.util.FilterParser.copyFilterDefaults(filterName,params);
	if(filterName == "blur") filter = haxe.ui.toolkit.util.FilterParser.createBlurFilter(params); else if(filterName == "dropShadow") filter = haxe.ui.toolkit.util.FilterParser.createDropShadowFilter(params); else if(filterName == "glow") filter = haxe.ui.toolkit.util.FilterParser.createGlowFilter(params);
	return filter;
};
haxe.ui.toolkit.util.FilterParser.createBlurFilter = function(params) {
	var filter = new openfl.filters.BlurFilter(haxe.ui.toolkit.util.TypeParser.parseFloat(params[0]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[1]),haxe.ui.toolkit.util.TypeParser.parseInt(params[2]));
	return filter;
};
haxe.ui.toolkit.util.FilterParser.createDropShadowFilter = function(params) {
	var filter = new openfl.filters.DropShadowFilter(haxe.ui.toolkit.util.TypeParser.parseFloat(params[0]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[1]),haxe.ui.toolkit.util.TypeParser.parseInt(params[2]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[3]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[4]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[5]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[6]),haxe.ui.toolkit.util.TypeParser.parseInt(params[7]),haxe.ui.toolkit.util.TypeParser.parseBool(params[8]),haxe.ui.toolkit.util.TypeParser.parseBool(params[9]),haxe.ui.toolkit.util.TypeParser.parseBool(params[10]));
	return filter;
};
haxe.ui.toolkit.util.FilterParser.createGlowFilter = function(params) {
	var filter = new openfl.filters.GlowFilter(haxe.ui.toolkit.util.TypeParser.parseInt(params[0]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[1]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[2]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[3]),haxe.ui.toolkit.util.TypeParser.parseFloat(params[4]),haxe.ui.toolkit.util.TypeParser.parseInt(params[5]),haxe.ui.toolkit.util.TypeParser.parseBool(params[6]),haxe.ui.toolkit.util.TypeParser.parseBool(params[7]));
	return filter;
};
haxe.ui.toolkit.util.FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = new Array();
	var defaultParams = Reflect.field(haxe.ui.toolkit.util.FilterParser.filterParamDefaults,filterName);
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g1 = 0;
		while(_g1 < params.length) {
			var p1 = params[_g1];
			++_g1;
			copy[n] = p1;
			n++;
		}
	}
	return copy;
};
haxe.ui.toolkit.util.Identifier = function() { };
$hxClasses["haxe.ui.toolkit.util.Identifier"] = haxe.ui.toolkit.util.Identifier;
haxe.ui.toolkit.util.Identifier.__name__ = ["haxe","ui","toolkit","util","Identifier"];
haxe.ui.toolkit.util.Identifier.createObjectId = function(instance) {
	return haxe.ui.toolkit.util.Identifier.createClassId(Type.getClass(instance));
};
haxe.ui.toolkit.util.Identifier.createClassId = function(type) {
	var className = Type.getClassName(type);
	var c = haxe.ui.toolkit.util.Identifier._objectCount.get(className);
	if(haxe.ui.toolkit.util.Identifier._objectCount.exists(className) == false) {
		haxe.ui.toolkit.util.Identifier._objectCount.set(className,-1);
		c = -1;
	}
	c++;
	haxe.ui.toolkit.util.Identifier._objectCount.set(className,c);
	var id = className + c;
	return id;
};
haxe.ui.toolkit.util.Identifier.guid = function() {
	return haxe.ui.toolkit.util.Identifier.S4() + haxe.ui.toolkit.util.Identifier.S4() + "-" + haxe.ui.toolkit.util.Identifier.S4() + "-" + haxe.ui.toolkit.util.Identifier.S4() + "-" + haxe.ui.toolkit.util.Identifier.S4() + "-" + haxe.ui.toolkit.util.Identifier.S4() + haxe.ui.toolkit.util.Identifier.S4() + haxe.ui.toolkit.util.Identifier.S4();
};
haxe.ui.toolkit.util.Identifier.S4 = function() {
	var n = (1 + Std.random(65536)) * 65536 | 0;
	var _this = StringTools.hex(n,4);
	return HxOverrides.substr(_this,0,4);
};
haxe.ui.toolkit.util.StringUtil = function() { };
$hxClasses["haxe.ui.toolkit.util.StringUtil"] = haxe.ui.toolkit.util.StringUtil;
haxe.ui.toolkit.util.StringUtil.__name__ = ["haxe","ui","toolkit","util","StringUtil"];
haxe.ui.toolkit.util.StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe.ui.toolkit.util.StringUtil.capitalizeHyphens = function(s) {
	var r = s;
	var n = r.indexOf("-");
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe.ui.toolkit.util.StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf("-",n + 1);
	}
	return r;
};
haxe.ui.toolkit.util.TypeParser = function() { };
$hxClasses["haxe.ui.toolkit.util.TypeParser"] = haxe.ui.toolkit.util.TypeParser;
haxe.ui.toolkit.util.TypeParser.__name__ = ["haxe","ui","toolkit","util","TypeParser"];
haxe.ui.toolkit.util.TypeParser.parseInt = function(s) {
	var i = 0;
	if(s != null) {
		s = StringTools.trim(s);
		i = Std.parseInt(s);
	}
	return i;
};
haxe.ui.toolkit.util.TypeParser.parseFloat = function(s) {
	var f = 0;
	if(s != null) {
		s = StringTools.trim(s);
		f = Std.parseFloat(s);
	}
	return f;
};
haxe.ui.toolkit.util.TypeParser.parseBool = function(s) {
	var b = false;
	if(s != null) {
		s = StringTools.trim(s);
		s = s.toLowerCase();
		if(s == "true" || s == "yes" || s == "1") b = true;
	}
	return b;
};
haxe.ui.toolkit.util.TypeParser.parseColor = function(s) {
	var c = 0;
	if(s != null) {
		s = StringTools.trim(s);
		if(StringTools.startsWith(s,"#")) s = "0x" + HxOverrides.substr(s,1,s.length - 1);
		c = Std.parseInt(s);
	}
	return c;
};
haxe.ui.toolkit.util.XmlUtil = function() { };
$hxClasses["haxe.ui.toolkit.util.XmlUtil"] = haxe.ui.toolkit.util.XmlUtil;
haxe.ui.toolkit.util.XmlUtil.__name__ = ["haxe","ui","toolkit","util","XmlUtil"];
haxe.ui.toolkit.util.XmlUtil.getPathValues = function(xml,path) {
	var values = new Array();
	var parts = path.split("/");
	var _g = 0;
	while(_g < parts.length) {
		var p = parts[_g];
		++_g;
		if(p.length == 0) HxOverrides.remove(parts,p);
	}
	var matchToFind = parts[0];
	HxOverrides.remove(parts,matchToFind);
	if(xml.get_nodeName() == matchToFind) {
		if(parts.length > 1) {
			var $it0 = xml.elements();
			while( $it0.hasNext() ) {
				var child = $it0.next();
				values = values.concat(haxe.ui.toolkit.util.XmlUtil.getPathValues(child,parts.join("/")));
			}
		} else {
			matchToFind = parts.pop();
			if(StringTools.startsWith(matchToFind,"@")) {
				var attrName = HxOverrides.substr(matchToFind,1,matchToFind.length);
				var attrValue = xml.get(attrName);
				if(attrValue != null) values.push(attrValue);
			} else if(matchToFind == "text()") {
				var nodeValue = xml.firstChild().get_nodeValue();
				if(nodeValue != null) values.push(nodeValue);
			}
		}
	}
	return values;
};
haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller = function(runnable) {
	this._cancel = false;
	this._runs = 0;
	openfl.events.EventDispatcher.call(this);
	this._runnableWorker = runnable;
	this._runnableWorker.set_needToExit($bind(this,this.needToExit));
};
$hxClasses["haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller"] = haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller;
haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller.__name__ = ["haxe","ui","toolkit","util","pseudothreads","AsyncThreadCaller"];
haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller.__super__ = openfl.events.EventDispatcher;
haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	start: function() {
		this._startTime = openfl.Lib.getTimer();
		openfl.Lib.get_current().get_stage().addEventListener(openfl.events.Event.ENTER_FRAME,$bind(this,this.run),false,100);
		this.run(null);
	}
	,cancel: function() {
		this._cancel = true;
	}
	,needToExit: function() {
		return this._cancel || openfl.Lib.getTimer() >= this._workerExitTime;
	}
	,run: function(event) {
		var frameRate = Math.floor(1000 / openfl.Lib.get_current().get_stage().get_frameRate());
		this._workerExitTime = openfl.Lib.getTimer() + frameRate * this._runnableWorker.get_runningTimeShare();
		this._runnableWorker.run();
		this._runs++;
		if(this._cancel == true) {
			this._endTime = openfl.Lib.getTimer();
			this.dispose();
			this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CANCEL));
		} else if(this._runnableWorker.get_isComplete()) {
			this._data = this._runnableWorker.get_data();
			this._endTime = openfl.Lib.getTimer();
			this.dispose();
			this.dispatchEvent(new openfl.events.Event(openfl.events.Event.COMPLETE));
		} else this.dispatchEvent(new openfl.events.ProgressEvent(openfl.events.ProgressEvent.PROGRESS,false,false,this._runnableWorker.get_progress(),this._runnableWorker.get_total()));
	}
	,dispose: function() {
		openfl.Lib.get_current().get_stage().removeEventListener(openfl.events.Event.ENTER_FRAME,$bind(this,this.run));
		this._runnableWorker = null;
	}
	,get_data: function() {
		return this._data;
	}
	,get_runs: function() {
		return this._runs;
	}
	,get_executionTime: function() {
		return this._endTime - this._startTime;
	}
	,get_worker: function() {
		return this._runnableWorker;
	}
	,__class__: haxe.ui.toolkit.util.pseudothreads.AsyncThreadCaller
	,__properties__: {get_worker:"get_worker",get_executionTime:"get_executionTime",get_runs:"get_runs",get_data:"get_data"}
});
haxe.ui.webview = {};
haxe.ui.webview.WebView = function() {
	haxe.ui.toolkit.containers.ScrollView.call(this);
	this.set_virtualScrolling(true);
	this._cv = new cocktail.api.CocktailView();
	this.addEventListener("haxeui_" + "scroll",$bind(this,this._onScroll));
};
$hxClasses["haxe.ui.webview.WebView"] = haxe.ui.webview.WebView;
haxe.ui.webview.WebView.__name__ = ["haxe","ui","webview","WebView"];
haxe.ui.webview.WebView.__super__ = haxe.ui.toolkit.containers.ScrollView;
haxe.ui.webview.WebView.prototype = $extend(haxe.ui.toolkit.containers.ScrollView.prototype,{
	initialize: function() {
		haxe.ui.toolkit.containers.ScrollView.prototype.initialize.call(this);
	}
	,invalidate: function(type,recursive) {
		if(recursive == null) recursive = false;
		if(type == null) type = 1118481;
		if(!this._ready || this._invalidating) return;
		haxe.ui.toolkit.containers.ScrollView.prototype.invalidate.call(this,type,recursive);
		this._invalidating = true;
		if((type & 256) == 256) this.updateCocktailView();
		this._invalidating = false;
	}
	,_onScroll: function(event) {
		this._cv.document.documentElement.set_scrollTop(Std["int"](this.get_vscrollPos()));
	}
	,updateCocktailView: function() {
		if(this._cv == null || this._cv.document == null) return;
		this.set_vscrollMax(this._cv.document.documentElement.get_scrollHeight() - this.get_layout().get_usableHeight());
		this.set_vscrollPageSize(this.get_layout().get_usableHeight());
		var cx = Std["int"](this.get_layout().get_usableWidth());
		var cy = Std["int"](this.get_layout().get_innerHeight());
		if(cx <= 0 || cy <= 0) return;
		this._cv.set_viewport({ x : Std["int"](this.get_layout().get_padding().get_left()), y : Std["int"](this.get_layout().get_padding().get_top()), width : cx, height : cy});
		this._cv.root.scrollRect = new openfl.geom.Rectangle(0,0,this.get_layout().get_usableWidth(),this.get_layout().get_usableHeight());
	}
	,set_text: function(value) {
		var _g = this;
		value = haxe.ui.toolkit.containers.ScrollView.prototype.set_text.call(this,value);
		this._cv.loadHTML(value);
		this._cv.window.set_onload(function(e) {
			if(_g.get_sprite().contains(_g._cv.root) == false) _g.get_sprite().addChild(_g._cv.root);
			_g._cv.document.addStyleSheet(_g.buildThemeStyleSheet());
		});
		return value;
	}
	,get_url: function() {
		return this._url;
	}
	,set_url: function(value) {
		var _g = this;
		this._url = value;
		this._cv.loadURL(this._url);
		this._cv.window.set_onload(function(e) {
			try {
				if(_g.get_sprite().contains(_g._cv.root) == false) _g.get_sprite().addChild(_g._cv.root);
			} catch( e1 ) {
				haxe.Log.trace(e1,{ fileName : "WebView.hx", lineNumber : 103, className : "haxe.ui.webview.WebView", methodName : "set_url"});
			}
		});
		return value;
	}
	,buildThemeStyleSheet: function() {
		var button = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(new haxe.ui.toolkit.controls.Button());
		var button_hover = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(new haxe.ui.toolkit.controls.Button(),"over");
		var button_active = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(new haxe.ui.toolkit.controls.Button(),"down");
		var button_disabled = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(new haxe.ui.toolkit.controls.Button(),"disabled");
		var textfield = haxe.ui.toolkit.style.StyleManager.get_instance().buildStyleFor(new haxe.ui.toolkit.controls.TextInput());
		var s = "";
		s += "html, body {";
		s += "\toverflow-x:scroll;overflow-y:scroll;";
		s += "}";
		s += "input[type=button], input[type=reset], input[type=submit] {";
		s += "\tfont:" + button.get_fontSize() + "px arial;";
		s += "\ttext-align:center;";
		s += "\tcolor:#" + StringTools.hex(button.get_color(),6) + ";";
		s += "\tpadding-top:" + button.get_paddingTop() + "px;";
		s += "\tpadding-bottom:" + button.get_paddingBottom() + "px;";
		s += "\tpadding-left:" + button.get_paddingLeft() + "px;";
		s += "\tpadding-right:" + button.get_paddingRight() + "px;";
		s += "\tborder:1px #" + StringTools.hex(button.get_borderColor(),6) + " solid;";
		s += "\tbackground-color: #" + StringTools.hex(button.get_backgroundColor(),6) + ";";
		s += "\toutline:none;";
		s += "}";
		s += "input[type=button]:hover, input[type=reset]:hover, input[type=submit]:hover {";
		s += "\tcolor:#" + StringTools.hex(button_hover.get_color(),6) + ";";
		s += "\tborder:1px #" + StringTools.hex(button_hover.get_borderColor(),6) + " solid;";
		s += "\tbackground-color: #" + StringTools.hex(button_hover.get_backgroundColor(),6) + ";";
		s += "}";
		s += "input[type=button]:active, input[type=reset]:active, input[type=submit]:active {";
		s += "\tcolor:#" + StringTools.hex(button_active.get_color(),6) + ";";
		s += "\tborder:1px #" + StringTools.hex(button_active.get_borderColor(),6) + " solid;";
		s += "\tbackground-color: #" + StringTools.hex(button_active.get_backgroundColor(),6) + ";";
		s += "}";
		s += "input[type=button]:disabled, input[type=reset]:disabled, input[type=submit]:disabled {";
		s += "\tcolor:#" + StringTools.hex(button_disabled.get_color(),6) + ";";
		s += "\tborder:1px #" + StringTools.hex(button_disabled.get_borderColor(),6) + " solid;";
		s += "\tbackground-color: #" + StringTools.hex(button_disabled.get_backgroundColor(),6) + ";";
		s += "}";
		s += "input[type=text], input[type=password] {";
		s += "\twidth:150px;";
		s += "\theight:20px;";
		s += "\tpadding-top: 3px;";
		s += "\tpadding-bottom: 3px;";
		s += "\tpadding-left: 0px;";
		s += "\tpadding-right: 0px;";
		s += "\tcolor:#" + StringTools.hex(textfield.get_color(),6) + ";";
		s += "\tborder:1px #" + StringTools.hex(textfield.get_borderColor(),6) + " solid;";
		s += "\tbackground-color: #" + StringTools.hex(textfield.get_backgroundColor(),6) + ";";
		s += "\toutline: none;";
		s += "}";
		return new cocktail.core.css.CSSStyleSheet(s,cocktail.core.css.PropertyOriginValue.AUTHOR);
	}
	,clone: function() {
		var c = haxe.ui.toolkit.containers.ScrollView.prototype.clone.call(this);
		return c;
	}
	,self: function() {
		return new haxe.ui.webview.WebView();
	}
	,__class__: haxe.ui.webview.WebView
	,__properties__: $extend(haxe.ui.toolkit.containers.ScrollView.prototype.__properties__,{set_url:"set_url",get_url:"get_url"})
});
haxe.xml = {};
haxe.xml.Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe.xml.Parser;
haxe.xml.Parser.__name__ = ["haxe","xml","Parser"];
haxe.xml.Parser.parse = function(str) {
	var doc = Xml.createDocument();
	haxe.xml.Parser.doParse(str,0,doc);
	return doc;
};
haxe.xml.Parser.doParse = function(str,p,parent) {
	if(p == null) p = 0;
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			switch(c) {
			case 60:
				state = 0;
				next = 2;
				break;
			default:
				start = p;
				state = 13;
				continue;
			}
			break;
		case 13:
			if(c == 60) {
				var child = Xml.createPCData(buf.b + HxOverrides.substr(str,start,p - start));
				buf = new StringBuf();
				parent.addChild(child);
				nsubs++;
				state = 0;
				next = 2;
			} else if(c == 38) {
				buf.addSub(str,start,p - start);
				state = 18;
				next = 13;
				start = p + 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") throw "Expected <![CDATA[";
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") throw "Expected <!DOCTYPE";
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) throw "Expected <!--"; else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 63:
				state = 14;
				start = p;
				break;
			case 47:
				if(parent == null) throw "Expected node name";
				start = p + 1;
				state = 0;
				next = 10;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) throw "Expected node name";
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				nsubs++;
				break;
			case 62:
				state = 9;
				nsubs++;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) throw "Expected attribute name";
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) throw "Duplicate attribute";
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			switch(c) {
			case 61:
				state = 0;
				next = 7;
				break;
			default:
				throw "Expected =";
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				state = 8;
				start = p;
				break;
			default:
				throw "Expected \"";
			}
			break;
		case 8:
			if(c == str.charCodeAt(start)) {
				var val = HxOverrides.substr(str,start + 1,p - start - 1);
				xml.set(aname,val);
				state = 0;
				next = 4;
			}
			break;
		case 9:
			p = haxe.xml.Parser.doParse(str,p,xml);
			start = p;
			state = 1;
			break;
		case 11:
			switch(c) {
			case 62:
				state = 1;
				break;
			default:
				throw "Expected >";
			}
			break;
		case 12:
			switch(c) {
			case 62:
				if(nsubs == 0) parent.addChild(Xml.createPCData(""));
				return p;
			default:
				throw "Expected >";
			}
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) throw "Expected node name";
				var v = HxOverrides.substr(str,start,p - start);
				if(v != parent.get_nodeName()) throw "Expected </" + parent.get_nodeName() + ">";
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) nbrackets++; else if(c == 93) nbrackets--; else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				state = 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				p++;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var i;
					if(s.charCodeAt(1) == 120) i = Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)); else i = Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.add(String.fromCharCode(i));
				} else if(!haxe.xml.Parser.escapes.exists(s)) buf.b += Std.string("&" + s + ";"); else buf.add(haxe.xml.Parser.escapes.get(s));
				start = p + 1;
				state = next;
			}
			break;
		}
		c = StringTools.fastCodeAt(str,++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) parent.addChild(Xml.createPCData(buf.b + HxOverrides.substr(str,start,p - start)));
		return p;
	}
	throw "Unexpected end";
};
hscript.Const = $hxClasses["hscript.Const"] = { __ename__ : ["hscript","Const"], __constructs__ : ["CInt","CFloat","CString"] };
hscript.Const.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = hscript.Const; $x.toString = $estr; return $x; };
hscript.Const.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = hscript.Const; $x.toString = $estr; return $x; };
hscript.Const.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = hscript.Const; $x.toString = $estr; return $x; };
hscript.Expr = $hxClasses["hscript.Expr"] = { __ename__ : ["hscript","Expr"], __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch"] };
hscript.Expr.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EIdent = function(v) { var $x = ["EIdent",1,v]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EVar = function(n,t,e) { var $x = ["EVar",2,n,t,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EParent = function(e) { var $x = ["EParent",3,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EBlock = function(e) { var $x = ["EBlock",4,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EField = function(e,f) { var $x = ["EField",5,e,f]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EBinop = function(op,e1,e2) { var $x = ["EBinop",6,op,e1,e2]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EUnop = function(op,prefix,e) { var $x = ["EUnop",7,op,prefix,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.ECall = function(e,params) { var $x = ["ECall",8,e,params]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EIf = function(cond,e1,e2) { var $x = ["EIf",9,cond,e1,e2]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EWhile = function(cond,e) { var $x = ["EWhile",10,cond,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EFor = function(v,it,e) { var $x = ["EFor",11,v,it,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EBreak = ["EBreak",12];
hscript.Expr.EBreak.toString = $estr;
hscript.Expr.EBreak.__enum__ = hscript.Expr;
hscript.Expr.EContinue = ["EContinue",13];
hscript.Expr.EContinue.toString = $estr;
hscript.Expr.EContinue.__enum__ = hscript.Expr;
hscript.Expr.EFunction = function(args,e,name,ret) { var $x = ["EFunction",14,args,e,name,ret]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EReturn = function(e) { var $x = ["EReturn",15,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EArray = function(e,index) { var $x = ["EArray",16,e,index]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EArrayDecl = function(e) { var $x = ["EArrayDecl",17,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.ENew = function(cl,params) { var $x = ["ENew",18,cl,params]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EThrow = function(e) { var $x = ["EThrow",19,e]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.ETry = function(e,v,t,ecatch) { var $x = ["ETry",20,e,v,t,ecatch]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.EObject = function(fl) { var $x = ["EObject",21,fl]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.ETernary = function(cond,e1,e2) { var $x = ["ETernary",22,cond,e1,e2]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.Expr.ESwitch = function(e,cases,defaultExpr) { var $x = ["ESwitch",23,e,cases,defaultExpr]; $x.__enum__ = hscript.Expr; $x.toString = $estr; return $x; };
hscript.CType = $hxClasses["hscript.CType"] = { __ename__ : ["hscript","CType"], __constructs__ : ["CTPath","CTFun","CTAnon","CTParent"] };
hscript.CType.CTPath = function(path,params) { var $x = ["CTPath",0,path,params]; $x.__enum__ = hscript.CType; $x.toString = $estr; return $x; };
hscript.CType.CTFun = function(args,ret) { var $x = ["CTFun",1,args,ret]; $x.__enum__ = hscript.CType; $x.toString = $estr; return $x; };
hscript.CType.CTAnon = function(fields) { var $x = ["CTAnon",2,fields]; $x.__enum__ = hscript.CType; $x.toString = $estr; return $x; };
hscript.CType.CTParent = function(t) { var $x = ["CTParent",3,t]; $x.__enum__ = hscript.CType; $x.toString = $estr; return $x; };
hscript.Error = $hxClasses["hscript.Error"] = { __ename__ : ["hscript","Error"], __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess"] };
hscript.Error.EInvalidChar = function(c) { var $x = ["EInvalidChar",0,c]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript.Error.EUnexpected = function(s) { var $x = ["EUnexpected",1,s]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript.Error.EUnterminatedString = ["EUnterminatedString",2];
hscript.Error.EUnterminatedString.toString = $estr;
hscript.Error.EUnterminatedString.__enum__ = hscript.Error;
hscript.Error.EUnterminatedComment = ["EUnterminatedComment",3];
hscript.Error.EUnterminatedComment.toString = $estr;
hscript.Error.EUnterminatedComment.__enum__ = hscript.Error;
hscript.Error.EUnknownVariable = function(v) { var $x = ["EUnknownVariable",4,v]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript.Error.EInvalidIterator = function(v) { var $x = ["EInvalidIterator",5,v]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript.Error.EInvalidOp = function(op) { var $x = ["EInvalidOp",6,op]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript.Error.EInvalidAccess = function(f) { var $x = ["EInvalidAccess",7,f]; $x.__enum__ = hscript.Error; $x.toString = $estr; return $x; };
hscript._Interp = {};
hscript._Interp.Stop = $hxClasses["hscript._Interp.Stop"] = { __ename__ : ["hscript","_Interp","Stop"], __constructs__ : ["SBreak","SContinue","SReturn"] };
hscript._Interp.Stop.SBreak = ["SBreak",0];
hscript._Interp.Stop.SBreak.toString = $estr;
hscript._Interp.Stop.SBreak.__enum__ = hscript._Interp.Stop;
hscript._Interp.Stop.SContinue = ["SContinue",1];
hscript._Interp.Stop.SContinue.toString = $estr;
hscript._Interp.Stop.SContinue.__enum__ = hscript._Interp.Stop;
hscript._Interp.Stop.SReturn = function(v) { var $x = ["SReturn",2,v]; $x.__enum__ = hscript._Interp.Stop; $x.toString = $estr; return $x; };
hscript.Token = $hxClasses["hscript.Token"] = { __ename__ : ["hscript","Token"], __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot"] };
hscript.Token.TEof = ["TEof",0];
hscript.Token.TEof.toString = $estr;
hscript.Token.TEof.__enum__ = hscript.Token;
hscript.Token.TConst = function(c) { var $x = ["TConst",1,c]; $x.__enum__ = hscript.Token; $x.toString = $estr; return $x; };
hscript.Token.TId = function(s) { var $x = ["TId",2,s]; $x.__enum__ = hscript.Token; $x.toString = $estr; return $x; };
hscript.Token.TOp = function(s) { var $x = ["TOp",3,s]; $x.__enum__ = hscript.Token; $x.toString = $estr; return $x; };
hscript.Token.TPOpen = ["TPOpen",4];
hscript.Token.TPOpen.toString = $estr;
hscript.Token.TPOpen.__enum__ = hscript.Token;
hscript.Token.TPClose = ["TPClose",5];
hscript.Token.TPClose.toString = $estr;
hscript.Token.TPClose.__enum__ = hscript.Token;
hscript.Token.TBrOpen = ["TBrOpen",6];
hscript.Token.TBrOpen.toString = $estr;
hscript.Token.TBrOpen.__enum__ = hscript.Token;
hscript.Token.TBrClose = ["TBrClose",7];
hscript.Token.TBrClose.toString = $estr;
hscript.Token.TBrClose.__enum__ = hscript.Token;
hscript.Token.TDot = ["TDot",8];
hscript.Token.TDot.toString = $estr;
hscript.Token.TDot.__enum__ = hscript.Token;
hscript.Token.TComma = ["TComma",9];
hscript.Token.TComma.toString = $estr;
hscript.Token.TComma.__enum__ = hscript.Token;
hscript.Token.TSemicolon = ["TSemicolon",10];
hscript.Token.TSemicolon.toString = $estr;
hscript.Token.TSemicolon.__enum__ = hscript.Token;
hscript.Token.TBkOpen = ["TBkOpen",11];
hscript.Token.TBkOpen.toString = $estr;
hscript.Token.TBkOpen.__enum__ = hscript.Token;
hscript.Token.TBkClose = ["TBkClose",12];
hscript.Token.TBkClose.toString = $estr;
hscript.Token.TBkClose.__enum__ = hscript.Token;
hscript.Token.TQuestion = ["TQuestion",13];
hscript.Token.TQuestion.toString = $estr;
hscript.Token.TQuestion.__enum__ = hscript.Token;
hscript.Token.TDoubleDot = ["TDoubleDot",14];
hscript.Token.TDoubleDot.toString = $estr;
hscript.Token.TDoubleDot.__enum__ = hscript.Token;
hscript.Parser = function() {
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^="]];
	this.opPriority = new haxe.ds.StringMap();
	this.opRightAssoc = new haxe.ds.StringMap();
	this.unops = new haxe.ds.StringMap();
	var _g1 = 0;
	var _g = priorities.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			this.opPriority.set(x,i);
			if(i == 9) this.opRightAssoc.set(x,true);
		}
	}
	var _g4 = 0;
	var _g11 = ["!","++","--","-","~"];
	while(_g4 < _g11.length) {
		var x1 = _g11[_g4];
		++_g4;
		this.unops.set(x1,x1 == "++" || x1 == "--");
	}
};
$hxClasses["hscript.Parser"] = hscript.Parser;
hscript.Parser.__name__ = ["hscript","Parser"];
hscript.Parser.prototype = {
	error: function(err,pmin,pmax) {
		throw err;
	}
	,invalidChar: function(c) {
		this.error(hscript.Error.EInvalidChar(c),0,0);
	}
	,parseString: function(s) {
		this.line = 1;
		return this.parse(new haxe.io.StringInput(s));
	}
	,parse: function(s) {
		this.tokens = new haxe.ds.GenericStack();
		this["char"] = -1;
		this.input = s;
		this.ops = new Array();
		this.idents = new Array();
		var _g1 = 0;
		var _g = this.opChars.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g11 = 0;
		var _g2 = this.identChars.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
		var a = new Array();
		while(true) {
			var tk = this.token();
			if(tk == hscript.Token.TEof) break;
			this.tokens.add(tk);
			a.push(this.parseFullExpr());
		}
		if(a.length == 1) return a[0]; else return this.mk(hscript.Expr.EBlock(a),0,null);
	}
	,unexpected: function(tk) {
		this.error(hscript.Error.EUnexpected(this.tokenString(tk)),0,0);
		return null;
	}
	,push: function(tk) {
		this.tokens.add(tk);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) this.unexpected(t);
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e[1]) {
		case 4:case 21:case 23:
			return true;
		case 14:
			var e1 = e[3];
			return this.isBlock(e1);
		case 2:
			var e2 = e[4];
			return e2 != null && this.isBlock(e2);
		case 9:
			var e21 = e[4];
			var e11 = e[3];
			if(e21 != null) return this.isBlock(e21); else return this.isBlock(e11);
			break;
		case 6:
			var e3 = e[4];
			return this.isBlock(e3);
		case 7:
			var e4 = e[4];
			var prefix = e[3];
			return !prefix && this.isBlock(e4);
		case 10:
			var e5 = e[3];
			return this.isBlock(e5);
		case 11:
			var e6 = e[4];
			return this.isBlock(e6);
		case 15:
			var e7 = e[2];
			return e7 != null && this.isBlock(e7);
		default:
			return false;
		}
	}
	,parseFullExpr: function() {
		var e = this.parseExpr();
		var tk = this.token();
		if(tk != hscript.Token.TSemicolon && tk != hscript.Token.TEof) {
			if(this.isBlock(e)) this.tokens.add(tk); else this.unexpected(tk);
		}
		return e;
	}
	,parseObject: function(p1) {
		var fl = new Array();
		try {
			while(true) {
				var tk = this.token();
				var id = null;
				switch(tk[1]) {
				case 2:
					var i = tk[2];
					id = i;
					break;
				case 1:
					var c = tk[2];
					if(!this.allowJSON) this.unexpected(tk);
					switch(c[1]) {
					case 2:
						var s = c[2];
						id = s;
						break;
					default:
						this.unexpected(tk);
					}
					break;
				case 7:
					throw "__break__";
					break;
				default:
					this.unexpected(tk);
				}
				this.ensure(hscript.Token.TDoubleDot);
				fl.push({ name : id, e : this.parseExpr()});
				tk = this.token();
				switch(tk[1]) {
				case 7:
					throw "__break__";
					break;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		return this.parseExprNext(this.mk(hscript.Expr.EObject(fl),p1,null));
	}
	,parseExpr: function() {
		var tk = this.token();
		switch(tk[1]) {
		case 2:
			var id = tk[2];
			var e = this.parseStructure(id);
			if(e == null) e = this.mk(hscript.Expr.EIdent(id),null,null);
			return this.parseExprNext(e);
		case 1:
			var c = tk[2];
			return this.parseExprNext(this.mk(hscript.Expr.EConst(c),null,null));
		case 4:
			var e1 = this.parseExpr();
			this.ensure(hscript.Token.TPClose);
			return this.parseExprNext(this.mk(hscript.Expr.EParent(e1),0,0));
		case 6:
			tk = this.token();
			switch(tk[1]) {
			case 7:
				return this.parseExprNext(this.mk(hscript.Expr.EObject([]),0,null));
			case 2:
				var tk2 = this.token();
				this.tokens.add(tk2);
				this.tokens.add(tk);
				switch(tk2[1]) {
				case 14:
					return this.parseExprNext(this.parseObject(0));
				default:
				}
				break;
			case 1:
				var c1 = tk[2];
				if(this.allowJSON) switch(c1[1]) {
				case 2:
					var tk21 = this.token();
					this.tokens.add(tk21);
					this.tokens.add(tk);
					switch(tk21[1]) {
					case 14:
						return this.parseExprNext(this.parseObject(0));
					default:
					}
					break;
				default:
					this.tokens.add(tk);
				} else this.tokens.add(tk);
				break;
			default:
				this.tokens.add(tk);
			}
			var a = new Array();
			while(true) {
				a.push(this.parseFullExpr());
				tk = this.token();
				if(tk == hscript.Token.TBrClose) break;
				this.tokens.add(tk);
			}
			return this.mk(hscript.Expr.EBlock(a),0,null);
		case 3:
			var op = tk[2];
			if(this.unops.exists(op)) return this.makeUnop(op,this.parseExpr());
			return this.unexpected(tk);
		case 11:
			var a1 = new Array();
			tk = this.token();
			while(tk != hscript.Token.TBkClose) {
				this.tokens.add(tk);
				a1.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript.Token.TComma) tk = this.token();
			}
			return this.parseExprNext(this.mk(hscript.Expr.EArrayDecl(a1),0,null));
		default:
			return this.unexpected(tk);
		}
	}
	,makeUnop: function(op,e) {
		switch(e[1]) {
		case 6:
			var e2 = e[4];
			var e1 = e[3];
			var bop = e[2];
			return this.mk(hscript.Expr.EBinop(bop,this.makeUnop(op,e1),e2),0,0);
		case 22:
			var e3 = e[4];
			var e21 = e[3];
			var e11 = e[2];
			return this.mk(hscript.Expr.ETernary(this.makeUnop(op,e11),e21,e3),0,0);
		default:
			return this.mk(hscript.Expr.EUnop(op,true,e),0,0);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e[1]) {
		case 6:
			var e3 = e[4];
			var e2 = e[3];
			var op2 = e[2];
			if(this.opPriority.get(op) <= this.opPriority.get(op2) && !this.opRightAssoc.exists(op)) return this.mk(hscript.Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3),0,0); else return this.mk(hscript.Expr.EBinop(op,e1,e),0,0);
			break;
		case 22:
			var e4 = e[4];
			var e31 = e[3];
			var e21 = e[2];
			if(this.opRightAssoc.exists(op)) return this.mk(hscript.Expr.EBinop(op,e1,e),0,0); else return this.mk(hscript.Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4),0,0);
			break;
		default:
			return this.mk(hscript.Expr.EBinop(op,e1,e),0,0);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "if":
			var cond = this.parseExpr();
			var e1 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk = this.token();
			if(tk == hscript.Token.TSemicolon) {
				semic = true;
				tk = this.token();
			}
			if(Type.enumEq(tk,hscript.Token.TId("else"))) e2 = this.parseExpr(); else {
				this.tokens.add(tk);
				if(semic) this.tokens.add(hscript.Token.TSemicolon);
			}
			return this.mk(hscript.Expr.EIf(cond,e1,e2),0,e2 == null?0:0);
		case "var":
			var tk1 = this.token();
			var ident = null;
			switch(tk1[1]) {
			case 2:
				var id1 = tk1[2];
				ident = id1;
				break;
			default:
				this.unexpected(tk1);
			}
			tk1 = this.token();
			var t = null;
			if(tk1 == hscript.Token.TDoubleDot && this.allowTypes) {
				t = this.parseType();
				tk1 = this.token();
			}
			var e = null;
			if(Type.enumEq(tk1,hscript.Token.TOp("="))) e = this.parseExpr(); else this.tokens.add(tk1);
			return this.mk(hscript.Expr.EVar(ident,t,e),0,e == null?0:0);
		case "while":
			var econd = this.parseExpr();
			var e3 = this.parseExpr();
			return this.mk(hscript.Expr.EWhile(econd,e3),0,0);
		case "for":
			this.ensure(hscript.Token.TPOpen);
			var tk2 = this.token();
			var vname = null;
			switch(tk2[1]) {
			case 2:
				var id2 = tk2[2];
				vname = id2;
				break;
			default:
				this.unexpected(tk2);
			}
			tk2 = this.token();
			if(!Type.enumEq(tk2,hscript.Token.TId("in"))) this.unexpected(tk2);
			var eiter = this.parseExpr();
			this.ensure(hscript.Token.TPClose);
			var e4 = this.parseExpr();
			return this.mk(hscript.Expr.EFor(vname,eiter,e4),0,0);
		case "break":
			return hscript.Expr.EBreak;
		case "continue":
			return hscript.Expr.EContinue;
		case "else":
			return this.unexpected(hscript.Token.TId(id));
		case "function":
			var tk3 = this.token();
			var name = null;
			switch(tk3[1]) {
			case 2:
				var id3 = tk3[2];
				name = id3;
				break;
			default:
				this.tokens.add(tk3);
			}
			this.ensure(hscript.Token.TPOpen);
			var args = new Array();
			tk3 = this.token();
			if(tk3 != hscript.Token.TPClose) {
				var done = false;
				while(!done) {
					var name1 = null;
					var opt = false;
					switch(tk3[1]) {
					case 13:
						opt = true;
						tk3 = this.token();
						break;
					default:
					}
					switch(tk3[1]) {
					case 2:
						var id4 = tk3[2];
						name1 = id4;
						break;
					default:
						this.unexpected(tk3);
					}
					tk3 = this.token();
					var arg = { name : name1};
					args.push(arg);
					if(opt) arg.opt = true;
					if(tk3 == hscript.Token.TDoubleDot && this.allowTypes) {
						arg.t = this.parseType();
						tk3 = this.token();
					}
					switch(tk3[1]) {
					case 9:
						tk3 = this.token();
						break;
					case 5:
						done = true;
						break;
					default:
						this.unexpected(tk3);
					}
				}
			}
			var ret = null;
			if(this.allowTypes) {
				tk3 = this.token();
				if(tk3 != hscript.Token.TDoubleDot) this.tokens.add(tk3); else ret = this.parseType();
			}
			var body = this.parseExpr();
			return this.mk(hscript.Expr.EFunction(args,body,name,ret),0,0);
		case "return":
			var tk4 = this.token();
			this.tokens.add(tk4);
			var e5;
			if(tk4 == hscript.Token.TSemicolon) e5 = null; else e5 = this.parseExpr();
			return this.mk(hscript.Expr.EReturn(e5),0,e5 == null?0:0);
		case "new":
			var a = new Array();
			var tk5 = this.token();
			switch(tk5[1]) {
			case 2:
				var id5 = tk5[2];
				a.push(id5);
				break;
			default:
				this.unexpected(tk5);
			}
			var next = true;
			while(next) {
				tk5 = this.token();
				switch(tk5[1]) {
				case 8:
					tk5 = this.token();
					switch(tk5[1]) {
					case 2:
						var id6 = tk5[2];
						a.push(id6);
						break;
					default:
						this.unexpected(tk5);
					}
					break;
				case 4:
					next = false;
					break;
				default:
					this.unexpected(tk5);
				}
			}
			var args1 = this.parseExprList(hscript.Token.TPClose);
			return this.mk(hscript.Expr.ENew(a.join("."),args1),0,null);
		case "throw":
			var e6 = this.parseExpr();
			return this.mk(hscript.Expr.EThrow(e6),0,0);
		case "try":
			var e7 = this.parseExpr();
			var tk6 = this.token();
			if(!Type.enumEq(tk6,hscript.Token.TId("catch"))) this.unexpected(tk6);
			this.ensure(hscript.Token.TPOpen);
			tk6 = this.token();
			var vname1;
			switch(tk6[1]) {
			case 2:
				var id7 = tk6[2];
				vname1 = id7;
				break;
			default:
				vname1 = this.unexpected(tk6);
			}
			this.ensure(hscript.Token.TDoubleDot);
			var t1 = null;
			if(this.allowTypes) t1 = this.parseType(); else {
				tk6 = this.token();
				if(!Type.enumEq(tk6,hscript.Token.TId("Dynamic"))) this.unexpected(tk6);
			}
			this.ensure(hscript.Token.TPClose);
			var ec = this.parseExpr();
			return this.mk(hscript.Expr.ETry(e7,vname1,t1,ec),0,0);
		case "switch":
			var e8 = this.parseExpr();
			var def = null;
			var cases = [];
			this.ensure(hscript.Token.TBrOpen);
			try {
				while(true) {
					var tk7 = this.token();
					switch(tk7[1]) {
					case 2:
						switch(tk7[2]) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							try {
								while(true) {
									var e9 = this.parseExpr();
									c.values.push(e9);
									tk7 = this.token();
									switch(tk7[1]) {
									case 9:
										break;
									case 14:
										throw "__break__";
										break;
									default:
										this.unexpected(tk7);
									}
								}
							} catch( e ) { if( e != "__break__" ) throw e; }
							c.expr = this.parseFullExpr();
							break;
						case "default":
							if(def != null) this.unexpected(tk7);
							this.ensure(hscript.Token.TSemicolon);
							def = this.parseExpr();
							break;
						default:
							this.unexpected(tk7);
						}
						break;
					case 7:
						throw "__break__";
						break;
					default:
						this.unexpected(tk7);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			return this.mk(hscript.Expr.ESwitch(e8,cases,def),0,0);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk[1]) {
		case 3:
			var op = tk[2];
			if(this.unops.get(op)) {
				if(this.isBlock(e1) || (function($this) {
					var $r;
					switch(e1[1]) {
					case 3:
						$r = true;
						break;
					default:
						$r = false;
					}
					return $r;
				}(this))) {
					this.tokens.add(tk);
					return e1;
				}
				return this.parseExprNext(this.mk(hscript.Expr.EUnop(op,false,e1),0,null));
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 8:
			tk = this.token();
			var field = null;
			switch(tk[1]) {
			case 2:
				var id = tk[2];
				field = id;
				break;
			default:
				this.unexpected(tk);
			}
			return this.parseExprNext(this.mk(hscript.Expr.EField(e1,field),0,null));
		case 4:
			return this.parseExprNext(this.mk(hscript.Expr.ECall(e1,this.parseExprList(hscript.Token.TPClose)),0,null));
		case 11:
			var e2 = this.parseExpr();
			this.ensure(hscript.Token.TBkClose);
			return this.parseExprNext(this.mk(hscript.Expr.EArray(e1,e2),0,null));
		case 13:
			var e21 = this.parseExpr();
			this.ensure(hscript.Token.TDoubleDot);
			var e3 = this.parseExpr();
			return this.mk(hscript.Expr.ETernary(e1,e21,e3),0,0);
		default:
			this.tokens.add(tk);
			return e1;
		}
	}
	,parseType: function() {
		var t = this.token();
		switch(t[1]) {
		case 2:
			var v = t[2];
			var path = [v];
			while(true) {
				t = this.token();
				if(t != hscript.Token.TDot) break;
				t = this.token();
				switch(t[1]) {
				case 2:
					var v1 = t[2];
					path.push(v1);
					break;
				default:
					this.unexpected(t);
				}
			}
			var params = null;
			switch(t[1]) {
			case 3:
				var op = t[2];
				if(op == "<") {
					params = [];
					try {
						while(true) {
							params.push(this.parseType());
							t = this.token();
							switch(t[1]) {
							case 9:
								continue;
								break;
							case 3:
								var op1 = t[2];
								if(op1 == ">") throw "__break__";
								break;
							default:
							}
							this.unexpected(t);
						}
					} catch( e ) { if( e != "__break__" ) throw e; }
				}
				break;
			default:
				this.tokens.add(t);
			}
			return this.parseTypeNext(hscript.CType.CTPath(path,params));
		case 4:
			var t1 = this.parseType();
			this.ensure(hscript.Token.TPClose);
			return this.parseTypeNext(hscript.CType.CTParent(t1));
		case 6:
			var fields = [];
			try {
				while(true) {
					t = this.token();
					switch(t[1]) {
					case 7:
						throw "__break__";
						break;
					case 2:
						var name = t[2];
						this.ensure(hscript.Token.TDoubleDot);
						fields.push({ name : name, t : this.parseType()});
						t = this.token();
						switch(t[1]) {
						case 9:
							break;
						case 7:
							throw "__break__";
							break;
						default:
							this.unexpected(t);
						}
						break;
					default:
						this.unexpected(t);
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			return this.parseTypeNext(hscript.CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		switch(tk[1]) {
		case 3:
			var op = tk[2];
			if(op != "->") {
				this.tokens.add(tk);
				return t;
			}
			break;
		default:
			this.tokens.add(tk);
			return t;
		}
		var t2 = this.parseType();
		switch(t2[1]) {
		case 1:
			var args = t2[2];
			args.unshift(t);
			return t2;
		default:
			return hscript.CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = new Array();
		var tk = this.token();
		if(tk == etk) return args;
		this.tokens.add(tk);
		try {
			while(true) {
				args.push(this.parseExpr());
				tk = this.token();
				switch(tk[1]) {
				case 9:
					break;
				default:
					if(tk == etk) throw "__break__";
					this.unexpected(tk);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		return args;
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe.io.BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				this.line = old;
				throw hscript.Error.EUnterminatedString;
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 39:case 34:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) b.writeByte(c); else this.invalidChar(c);
					break;
				case 117:
					if(!this.allowJSON) throw this.invalidChar(c);
					var code = null;
					try {
						code = s.readString(4);
					} catch( e1 ) {
						this.line = old;
						throw hscript.Error.EUnterminatedString;
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var $char = HxOverrides.cca(code,i);
						switch($char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += $char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += $char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += $char - 87;
							break;
						default:
							this.invalidChar($char);
						}
					}
					if(k <= 127) b.writeByte(k); else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) esc = true; else if(c == until) break; else {
				if(c == 10) this.line++;
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(!(this.tokens.head == null)) return this.tokens.pop();
		var $char;
		if(this["char"] < 0) $char = this.readChar(); else {
			$char = this["char"];
			this["char"] = -1;
		}
		while(true) {
			switch($char) {
			case 0:
				return hscript.Token.TEof;
			case 32:case 9:case 13:
				break;
			case 10:
				this.line++;
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n = ($char - 48) * 1.0;
				var exp = 0.;
				while(true) {
					$char = this.readChar();
					exp *= 10;
					switch($char) {
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n = n * 10 + ($char - 48);
						break;
					case 46:
						if(exp > 0) {
							if(exp == 10 && this.readChar() == 46) {
								this.push(hscript.Token.TOp("..."));
								var i = n | 0;
								return hscript.Token.TConst(i == n?hscript.Const.CInt(i):hscript.Const.CFloat(n));
							}
							this.invalidChar($char);
						}
						exp = 1.;
						break;
					case 120:
						if(n > 0 || exp > 0) this.invalidChar($char);
						var n1 = 0;
						while(true) {
							$char = this.readChar();
							switch($char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n1 = (n1 << 4) + $char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n1 = (n1 << 4) + ($char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n1 = (n1 << 4) + ($char - 87);
								break;
							default:
								this["char"] = $char;
								return hscript.Token.TConst(hscript.Const.CInt(n1));
							}
						}
						break;
					default:
						this["char"] = $char;
						var i1 = n | 0;
						return hscript.Token.TConst(exp > 0?hscript.Const.CFloat(n * 10 / exp):i1 == n?hscript.Const.CInt(i1):hscript.Const.CFloat(n));
					}
				}
				break;
			case 59:
				return hscript.Token.TSemicolon;
			case 40:
				return hscript.Token.TPOpen;
			case 41:
				return hscript.Token.TPClose;
			case 44:
				return hscript.Token.TComma;
			case 46:
				$char = this.readChar();
				switch($char) {
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n2 = $char - 48;
					var exp1 = 1;
					while(true) {
						$char = this.readChar();
						exp1 *= 10;
						switch($char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n2 = n2 * 10 + ($char - 48);
							break;
						default:
							this["char"] = $char;
							return hscript.Token.TConst(hscript.Const.CFloat(n2 / exp1));
						}
					}
					break;
				case 46:
					$char = this.readChar();
					if($char != 46) this.invalidChar($char);
					return hscript.Token.TOp("...");
				default:
					this["char"] = $char;
					return hscript.Token.TDot;
				}
				break;
			case 123:
				return hscript.Token.TBrOpen;
			case 125:
				return hscript.Token.TBrClose;
			case 91:
				return hscript.Token.TBkOpen;
			case 93:
				return hscript.Token.TBkClose;
			case 39:
				return hscript.Token.TConst(hscript.Const.CString(this.readString(39)));
			case 34:
				return hscript.Token.TConst(hscript.Const.CString(this.readString(34)));
			case 63:
				return hscript.Token.TQuestion;
			case 58:
				return hscript.Token.TDoubleDot;
			default:
				if(this.ops[$char]) {
					var op = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.ops[$char]) {
							if(HxOverrides.cca(op,0) == 47) return this.tokenComment(op,$char);
							this["char"] = $char;
							return hscript.Token.TOp(op);
						}
						op += String.fromCharCode($char);
					}
				}
				if(this.idents[$char]) {
					var id = String.fromCharCode($char);
					while(true) {
						$char = this.readChar();
						if(!this.idents[$char]) {
							this["char"] = $char;
							return hscript.Token.TId(id);
						}
						id += String.fromCharCode($char);
					}
				}
				this.invalidChar($char);
			}
			$char = this.readChar();
		}
		return null;
	}
	,tokenComment: function(op,$char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while($char != 10 && $char != 13) $char = s.readByte();
				this["char"] = $char;
			} catch( e ) {
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			try {
				while(true) {
					while($char != 42) {
						if($char == 10) this.line++;
						$char = s.readByte();
					}
					$char = s.readByte();
					if($char == 47) break;
				}
			} catch( e1 ) {
				this.line = old;
				throw hscript.Error.EUnterminatedComment;
			}
			return this.token();
		}
		this["char"] = $char;
		return hscript.Token.TOp(op);
	}
	,constString: function(c) {
		switch(c[1]) {
		case 0:
			var v = c[2];
			if(v == null) return "null"; else return "" + v;
			break;
		case 1:
			var f = c[2];
			if(f == null) return "null"; else return "" + f;
			break;
		case 2:
			var s = c[2];
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t[1]) {
		case 0:
			return "<eof>";
		case 1:
			var c = t[2];
			return this.constString(c);
		case 2:
			var s = t[2];
			return s;
		case 3:
			var s1 = t[2];
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		}
	}
	,__class__: hscript.Parser
};
var js = {};
js.Boot = function() { };
$hxClasses["js.Boot"] = js.Boot;
js.Boot.__name__ = ["js","Boot"];
js.Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js.Boot.__trace = function(v,i) {
	var msg;
	if(i != null) msg = i.fileName + ":" + i.lineNumber + ": "; else msg = "";
	msg += js.Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js.Boot.__string_rec(v1,"");
		}
	}
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js.Boot.__unhtml(msg) + "<br/>"; else if(typeof console != "undefined" && console.log != null) console.log(msg);
};
js.Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else return o.__class__;
};
js.Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) str += "," + js.Boot.__string_rec(o[i],s); else str += js.Boot.__string_rec(o[i],s);
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js.Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString) {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) str2 += ", \n";
		str2 += s + k + " : " + js.Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js.Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js.Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js.Boot.__interfLoop(cc.__super__,cl);
};
js.Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js.Boot.__interfLoop(js.Boot.getClass(o),cl)) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js.Boot.__cast = function(o,t) {
	if(js.Boot.__instanceof(o,t)) return o; else throw "Cannot cast " + Std.string(o) + " to " + Std.string(t);
};
js.Browser = function() { };
$hxClasses["js.Browser"] = js.Browser;
js.Browser.__name__ = ["js","Browser"];
js.Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
var motion = {};
motion.actuators = {};
motion.actuators.IGenericActuator = function() { };
$hxClasses["motion.actuators.IGenericActuator"] = motion.actuators.IGenericActuator;
motion.actuators.IGenericActuator.__name__ = ["motion","actuators","IGenericActuator"];
motion.actuators.IGenericActuator.prototype = {
	__class__: motion.actuators.IGenericActuator
};
motion.actuators.GenericActuator = function(target,duration,properties) {
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = motion.Actuate.defaultEase;
};
$hxClasses["motion.actuators.GenericActuator"] = motion.actuators.GenericActuator;
motion.actuators.GenericActuator.__name__ = ["motion","actuators","GenericActuator"];
motion.actuators.GenericActuator.__interfaces__ = [motion.actuators.IGenericActuator];
motion.actuators.GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) Reflect.setField(this.target,i,Reflect.field(this.properties,i)); else Reflect.setProperty(this.target,i,Reflect.field(this.properties,i));
		}
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) params = [];
		return method.apply(method,params);
	}
	,change: function() {
		if(this._onUpdate != null) this.callMethod(this._onUpdate,this._onUpdateParams);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) this.callMethod(this._onComplete,this._onCompleteParams);
		}
		motion.Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) this._onCompleteParams = []; else this._onCompleteParams = parameters;
		if(this.duration == 0) this.complete();
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) this._onRepeatParams = []; else this._onRepeatParams = parameters;
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		return this;
	}
	,pause: function() {
	}
	,reflect: function(value) {
		if(value == null) value = true;
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) times = -1;
		this._repeat = times;
		return this;
	}
	,resume: function() {
	}
	,reverse: function(value) {
		if(value == null) value = true;
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) value = true;
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) value = true;
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: motion.actuators.GenericActuator
};
motion.actuators.SimpleActuator = function(target,duration,properties) {
	this.active = true;
	this.propertyDetails = new Array();
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = openfl.Lib.getTimer() / 1000;
	motion.actuators.GenericActuator.call(this,target,duration,properties);
	if(!motion.actuators.SimpleActuator.addedEvent) {
		motion.actuators.SimpleActuator.addedEvent = true;
		openfl.Lib.get_current().get_stage().addEventListener(openfl.events.Event.ENTER_FRAME,motion.actuators.SimpleActuator.stage_onEnterFrame);
	}
};
$hxClasses["motion.actuators.SimpleActuator"] = motion.actuators.SimpleActuator;
motion.actuators.SimpleActuator.__name__ = ["motion","actuators","SimpleActuator"];
motion.actuators.SimpleActuator.stage_onEnterFrame = function(event) {
	var currentTime = openfl.Lib.getTimer() / 1000;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = motion.actuators.SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = motion.actuators.SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(currentTime > actuator.timeOffset) actuator.update(currentTime);
			j++;
		} else {
			motion.actuators.SimpleActuator.actuators.splice(j,1);
			--motion.actuators.SimpleActuator.actuatorsLength;
		}
	}
};
motion.actuators.SimpleActuator.__super__ = motion.actuators.GenericActuator;
motion.actuators.SimpleActuator.prototype = $extend(motion.actuators.GenericActuator.prototype,{
	autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) this.setField(this.target,"visible",this.cacheVisible);
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) value = Reflect.field(target,propertyName); else value = Reflect.getProperty(target,propertyName);
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && (!this.target.__properties__ || !this.target.__properties__["set_" + i])) start = Reflect.field(this.target,i); else {
				isField = false;
				start = Reflect.getProperty(this.target,i);
			}
			if(typeof(start) == "number") {
				details = new motion.actuators.PropertyDetails(this.target,i,start,this.getField(this.properties,i) - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && js.Boot.__instanceof(this.target,openfl.display.DisplayObject);
		if(this.toggleVisible && this.properties.alpha != 0 && !this.getField(this.target,"visible")) {
			this.setVisible = true;
			this.cacheVisible = this.getField(this.target,"visible");
			this.setField(this.target,"visible",true);
		}
		this.timeOffset = this.startTime;
		motion.actuators.SimpleActuator.actuators.push(this);
		++motion.actuators.SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		this.paused = true;
		this.pauseTime = openfl.Lib.getTimer();
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (openfl.Lib.getTimer() - this.pauseTime) / 1000;
		}
	}
	,setField: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setProperty: function(details,value) {
		if(details.isField) details.target[details.propertyName] = value; else Reflect.setProperty(details.target,details.propertyName,value);
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) this.apply();
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) this.apply();
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					this.setProperty(details,details.start + details.change * easing);
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) rotation -= 360; else if(rotation < -180) rotation += 360;
						endValue = details.start + rotation * easing;
					} else endValue = details.start + details.change * easing;
					if(!this._snapping) {
						if(details.isField) details.target[details.propertyName] = endValue; else Reflect.setProperty(details.target,details.propertyName,endValue);
					} else this.setProperty(details,Math.round(endValue));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion.actuators.SimpleActuator
});
motion.easing = {};
motion.easing.Expo = function() { };
$hxClasses["motion.easing.Expo"] = motion.easing.Expo;
motion.easing.Expo.__name__ = ["motion","easing","Expo"];
motion.easing.Expo.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion.easing.Expo.get_easeIn = function() {
	return new motion.easing.ExpoEaseIn();
};
motion.easing.Expo.get_easeInOut = function() {
	return new motion.easing.ExpoEaseInOut();
};
motion.easing.Expo.get_easeOut = function() {
	return new motion.easing.ExpoEaseOut();
};
motion.easing.IEasing = function() { };
$hxClasses["motion.easing.IEasing"] = motion.easing.IEasing;
motion.easing.IEasing.__name__ = ["motion","easing","IEasing"];
motion.easing.IEasing.prototype = {
	__class__: motion.easing.IEasing
};
motion.easing.ExpoEaseOut = function() {
};
$hxClasses["motion.easing.ExpoEaseOut"] = motion.easing.ExpoEaseOut;
motion.easing.ExpoEaseOut.__name__ = ["motion","easing","ExpoEaseOut"];
motion.easing.ExpoEaseOut.__interfaces__ = [motion.easing.IEasing];
motion.easing.ExpoEaseOut.prototype = {
	calculate: function(k) {
		if(k == 1) return 1; else return 1 - Math.pow(2,-10 * k);
	}
	,ease: function(t,b,c,d) {
		if(t == d) return b + c; else return c * (1 - Math.pow(2,-10 * t / d)) + b;
	}
	,__class__: motion.easing.ExpoEaseOut
};
motion.Actuate = function() { };
$hxClasses["motion.Actuate"] = motion.Actuate;
motion.Actuate.__name__ = ["motion","Actuate"];
motion.Actuate.apply = function(target,properties,customActuator) {
	motion.Actuate.stop(target,properties);
	if(customActuator == null) customActuator = motion.Actuate.defaultActuator;
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
motion.Actuate.effects = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	return new motion._Actuate.EffectsOptions(target,duration,overwrite);
};
motion.Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) allowCreation = true;
	if(!motion.Actuate.targetLibraries.exists(target) && allowCreation) motion.Actuate.targetLibraries.set(target,new Array());
	return motion.Actuate.targetLibraries.get(target);
};
motion.Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) overwrite = true;
	return motion.Actuate.tween(target,duration,properties,overwrite,motion.actuators.MotionPathActuator);
};
motion.Actuate.pause = function(target) {
	if(js.Boot.__instanceof(target,motion.actuators.GenericActuator)) (js.Boot.__cast(target , motion.actuators.GenericActuator)).pause(); else {
		var library = motion.Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.pause();
			}
		}
	}
};
motion.Actuate.pauseAll = function() {
	var $it0 = motion.Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.pause();
		}
	}
};
motion.Actuate.reset = function() {
	var $it0 = motion.Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var i = library.length - 1;
		while(i >= 0) {
			library[i].stop(null,false,false);
			i--;
		}
	}
	motion.Actuate.targetLibraries = new haxe.ds.ObjectMap();
};
motion.Actuate.resume = function(target) {
	if(js.Boot.__instanceof(target,motion.actuators.GenericActuator)) (js.Boot.__cast(target , motion.actuators.GenericActuator)).resume(); else {
		var library = motion.Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.resume();
			}
		}
	}
};
motion.Actuate.resumeAll = function() {
	var $it0 = motion.Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.resume();
		}
	}
};
motion.Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) sendEvent = true;
	if(complete == null) complete = false;
	if(target != null) {
		if(js.Boot.__instanceof(target,motion.actuators.GenericActuator)) (js.Boot.__cast(target , motion.actuators.GenericActuator)).stop(null,complete,sendEvent); else {
			var library = motion.Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					Reflect.setField(temp,properties,null);
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1;
					_g1 = js.Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						Reflect.setField(temp1,property,null);
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					i--;
				}
			}
		}
	}
};
motion.Actuate.timer = function(duration,customActuator) {
	return motion.Actuate.tween(new motion._Actuate.TweenTimer(0),duration,new motion._Actuate.TweenTimer(1),false,customActuator);
};
motion.Actuate.transform = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	if(duration == null) duration = 0;
	return new motion._Actuate.TransformOptions(target,duration,overwrite);
};
motion.Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) overwrite = true;
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) customActuator = motion.Actuate.defaultActuator;
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = motion.Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					i--;
				}
				library = motion.Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else return motion.Actuate.apply(target,properties,customActuator);
	}
	return null;
};
motion.Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(motion.Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(motion.Actuate.targetLibraries.h[target.__id__],actuator);
		if(motion.Actuate.targetLibraries.h[target.__id__].length == 0) motion.Actuate.targetLibraries.remove(target);
	}
};
motion.Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) overwrite = true;
	var properties = { start : start, end : end};
	return motion.Actuate.tween(target,duration,properties,overwrite,motion.actuators.MethodActuator);
};
motion._Actuate = {};
motion._Actuate.EffectsOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.EffectsOptions"] = motion._Actuate.EffectsOptions;
motion._Actuate.EffectsOptions.__name__ = ["motion","_Actuate","EffectsOptions"];
motion._Actuate.EffectsOptions.prototype = {
	filter: function(reference,properties) {
		properties.filter = reference;
		return motion.Actuate.tween(this.target,this.duration,properties,this.overwrite,motion.actuators.FilterActuator);
	}
	,__class__: motion._Actuate.EffectsOptions
};
motion._Actuate.TransformOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.TransformOptions"] = motion._Actuate.TransformOptions;
motion._Actuate.TransformOptions.__name__ = ["motion","_Actuate","TransformOptions"];
motion._Actuate.TransformOptions.prototype = {
	color: function(value,strength,alpha) {
		if(strength == null) strength = 1;
		if(value == null) value = 0;
		var properties = { colorValue : value, colorStrength : strength};
		if(alpha != null) properties.colorAlpha = alpha;
		return motion.Actuate.tween(this.target,this.duration,properties,this.overwrite,motion.actuators.TransformActuator);
	}
	,sound: function(volume,pan) {
		var properties = { };
		if(volume != null) properties.soundVolume = volume;
		if(pan != null) properties.soundPan = pan;
		return motion.Actuate.tween(this.target,this.duration,properties,this.overwrite,motion.actuators.TransformActuator);
	}
	,__class__: motion._Actuate.TransformOptions
};
motion._Actuate.TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["motion._Actuate.TweenTimer"] = motion._Actuate.TweenTimer;
motion._Actuate.TweenTimer.__name__ = ["motion","_Actuate","TweenTimer"];
motion._Actuate.TweenTimer.prototype = {
	__class__: motion._Actuate.TweenTimer
};
motion.MotionPath = function() {
	this._x = new motion.ComponentPath();
	this._y = new motion.ComponentPath();
	this._rotation = null;
};
$hxClasses["motion.MotionPath"] = motion.MotionPath;
motion.MotionPath.__name__ = ["motion","MotionPath"];
motion.MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion.BezierPath(x,controlX,strength));
		this._y.addPath(new motion.BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion.LinearPath(x,strength));
		this._y.addPath(new motion.LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) this._rotation = new motion.RotationPath(this._x,this._y);
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: motion.MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
motion.IComponentPath = function() { };
$hxClasses["motion.IComponentPath"] = motion.IComponentPath;
motion.IComponentPath.__name__ = ["motion","IComponentPath"];
motion.IComponentPath.prototype = {
	__class__: motion.IComponentPath
};
motion.ComponentPath = function() {
	this.paths = new Array();
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["motion.ComponentPath"] = motion.ComponentPath;
motion.ComponentPath.__name__ = ["motion","ComponentPath"];
motion.ComponentPath.__interfaces__ = [motion.IComponentPath];
motion.ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) return this.paths[0].calculate(this.start,k); else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else return path.calculate(lastEnd,ratio / path.strength);
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			var path = this.paths[this.paths.length - 1];
			return path.end;
		} else return this.start;
	}
	,__class__: motion.ComponentPath
	,__properties__: {get_end:"get_end"}
};
motion.BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["motion.BezierPath"] = motion.BezierPath;
motion.BezierPath.__name__ = ["motion","BezierPath"];
motion.BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: motion.BezierPath
};
motion.LinearPath = function(end,strength) {
	motion.BezierPath.call(this,end,0,strength);
};
$hxClasses["motion.LinearPath"] = motion.LinearPath;
motion.LinearPath.__name__ = ["motion","LinearPath"];
motion.LinearPath.__super__ = motion.BezierPath;
motion.LinearPath.prototype = $extend(motion.BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: motion.LinearPath
});
motion.RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["motion.RotationPath"] = motion.RotationPath;
motion.RotationPath.__name__ = ["motion","RotationPath"];
motion.RotationPath.__interfaces__ = [motion.IComponentPath];
motion.RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var dY = this._y.calculate(k) - this._y.calculate(k + this.step);
		var angle = Math.atan2(dY,dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: motion.RotationPath
	,__properties__: {get_end:"get_end"}
};
motion.actuators.FilterActuator = function(target,duration,properties) {
	this.filterIndex = -1;
	motion.actuators.SimpleActuator.call(this,target,duration,properties);
	if(js.Boot.__instanceof(properties.filter,Class)) {
		this.filterClass = properties.filter;
		var _g = 0;
		var _g1 = (js.Boot.__cast(target , openfl.display.DisplayObject)).get_filters();
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			if(js.Boot.__instanceof(filter,this.filterClass)) this.filter = filter;
		}
	} else {
		this.filterIndex = properties.filter;
		this.filter = (js.Boot.__cast(target , openfl.display.DisplayObject)).get_filters()[this.filterIndex];
	}
};
$hxClasses["motion.actuators.FilterActuator"] = motion.actuators.FilterActuator;
motion.actuators.FilterActuator.__name__ = ["motion","actuators","FilterActuator"];
motion.actuators.FilterActuator.__super__ = motion.actuators.SimpleActuator;
motion.actuators.FilterActuator.prototype = $extend(motion.actuators.SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") Reflect.setField(this.filter,propertyName,Reflect.field(this.properties,propertyName));
		}
		var filters = this.getField(this.target,"filters");
		Reflect.setField(filters,this.properties.filter,this.filter);
		this.setField(this.target,"filters",filters);
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") {
				start = this.getField(this.filter,propertyName);
				details = new motion.actuators.PropertyDetails(this.filter,propertyName,start,Reflect.field(this.properties,propertyName) - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion.actuators.SimpleActuator.prototype.update.call(this,currentTime);
		var filters = (js.Boot.__cast(this.target , openfl.display.DisplayObject)).get_filters();
		if(this.filterIndex > -1) Reflect.setField(filters,this.properties.filter,this.filter); else {
			var _g1 = 0;
			var _g = filters.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(js.Boot.__instanceof(filters[i],this.filterClass)) filters[i] = this.filter;
			}
		}
		this.setField(this.target,"filters",filters);
	}
	,__class__: motion.actuators.FilterActuator
});
motion.actuators.MethodActuator = function(target,duration,properties) {
	this.currentParameters = new Array();
	this.tweenProperties = { };
	motion.actuators.SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) this.properties.start = new Array();
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) this.properties.end = this.properties.start;
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(null);
	}
};
$hxClasses["motion.actuators.MethodActuator"] = motion.actuators.MethodActuator;
motion.actuators.MethodActuator.__name__ = ["motion","actuators","MethodActuator"];
motion.actuators.MethodActuator.__super__ = motion.actuators.SimpleActuator;
motion.actuators.MethodActuator.prototype = $extend(motion.actuators.SimpleActuator.prototype,{
	apply: function() {
		this.callMethod(this.target,this.properties.end);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		this.callMethod(this.target,this.currentParameters);
		motion.actuators.SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || ((start | 0) === start)) {
				details = new motion.actuators.PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion.actuators.SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			this.callMethod(this.target,this.currentParameters);
		}
	}
	,__class__: motion.actuators.MethodActuator
});
motion.actuators.MotionPathActuator = function(target,duration,properties) {
	motion.actuators.SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.MotionPathActuator"] = motion.actuators.MotionPathActuator;
motion.actuators.MotionPathActuator.__name__ = ["motion","actuators","MotionPathActuator"];
motion.actuators.MotionPathActuator.__super__ = motion.actuators.SimpleActuator;
motion.actuators.MotionPathActuator.prototype = $extend(motion.actuators.SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) Reflect.setField(this.target,propertyName,(js.Boot.__cast(Reflect.field(this.properties,propertyName) , motion.IComponentPath)).get_end()); else Reflect.setProperty(this.target,propertyName,(js.Boot.__cast(Reflect.field(this.properties,propertyName) , motion.IComponentPath)).get_end());
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js.Boot.__cast(Reflect.field(this.properties,propertyName) , motion.IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) path.start = Reflect.field(this.target,propertyName); else {
					isField = false;
					path.start = Reflect.getProperty(this.target,propertyName);
				}
				details = new motion.actuators.PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) Reflect.setField(details1.target,details1.propertyName,(js.Boot.__cast(details1 , motion.actuators.PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details1.target,details1.propertyName,(js.Boot.__cast(details1 , motion.actuators.PropertyPathDetails)).path.calculate(easing));
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) Reflect.setField(details2.target,details2.propertyName,(js.Boot.__cast(details2 , motion.actuators.PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details2.target,details2.propertyName,(js.Boot.__cast(details2 , motion.actuators.PropertyPathDetails)).path.calculate(easing));
					} else if(details2.isField) Reflect.setField(details2.target,details2.propertyName,Math.round((js.Boot.__cast(details2 , motion.actuators.PropertyPathDetails)).path.calculate(easing))); else Reflect.setProperty(details2.target,details2.propertyName,Math.round((js.Boot.__cast(details2 , motion.actuators.PropertyPathDetails)).path.calculate(easing)));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion.actuators.MotionPathActuator
});
motion.actuators.PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) isField = true;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["motion.actuators.PropertyDetails"] = motion.actuators.PropertyDetails;
motion.actuators.PropertyDetails.__name__ = ["motion","actuators","PropertyDetails"];
motion.actuators.PropertyDetails.prototype = {
	__class__: motion.actuators.PropertyDetails
};
motion.actuators.PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) isField = true;
	motion.actuators.PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["motion.actuators.PropertyPathDetails"] = motion.actuators.PropertyPathDetails;
motion.actuators.PropertyPathDetails.__name__ = ["motion","actuators","PropertyPathDetails"];
motion.actuators.PropertyPathDetails.__super__ = motion.actuators.PropertyDetails;
motion.actuators.PropertyPathDetails.prototype = $extend(motion.actuators.PropertyDetails.prototype,{
	__class__: motion.actuators.PropertyPathDetails
});
motion.actuators.TransformActuator = function(target,duration,properties) {
	motion.actuators.SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.TransformActuator"] = motion.actuators.TransformActuator;
motion.actuators.TransformActuator.__name__ = ["motion","actuators","TransformActuator"];
motion.actuators.TransformActuator.__super__ = motion.actuators.SimpleActuator;
motion.actuators.TransformActuator.prototype = $extend(motion.actuators.SimpleActuator.prototype,{
	apply: function() {
		this.initialize();
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField(transform,"colorTransform",this.endColorTransform);
		}
		if(this.endSoundTransform != null) this.setField(this.target,"soundTransform",this.endSoundTransform);
	}
	,initialize: function() {
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorValue") && js.Boot.__instanceof(this.target,openfl.display.DisplayObject)) this.initializeColor();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume") || Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) this.initializeSound();
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,initializeColor: function() {
		this.endColorTransform = new openfl.geom.ColorTransform();
		var color = this.properties.colorValue;
		var strength = this.properties.colorStrength;
		if(strength < 1) {
			var multiplier;
			var offset;
			if(strength < 0.5) {
				multiplier = 1;
				offset = strength * 2;
			} else {
				multiplier = 1 - (strength - 0.5) * 2;
				offset = 1;
			}
			this.endColorTransform.redMultiplier = multiplier;
			this.endColorTransform.greenMultiplier = multiplier;
			this.endColorTransform.blueMultiplier = multiplier;
			this.endColorTransform.redOffset = offset * (color >> 16 & 255);
			this.endColorTransform.greenOffset = offset * (color >> 8 & 255);
			this.endColorTransform.blueOffset = offset * (color & 255);
		} else {
			this.endColorTransform.redMultiplier = 0;
			this.endColorTransform.greenMultiplier = 0;
			this.endColorTransform.blueMultiplier = 0;
			this.endColorTransform.redOffset = color >> 16 & 255;
			this.endColorTransform.greenOffset = color >> 8 & 255;
			this.endColorTransform.blueOffset = color & 255;
		}
		var propertyNames = ["redMultiplier","greenMultiplier","blueMultiplier","redOffset","greenOffset","blueOffset"];
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorAlpha")) {
			this.endColorTransform.alphaMultiplier = this.properties.colorAlpha;
			propertyNames.push("alphaMultiplier");
		} else this.endColorTransform.alphaMultiplier = this.getField(this.target,"alpha");
		var transform = this.getField(this.target,"transform");
		var begin = this.getField(transform,"colorTransform");
		this.tweenColorTransform = new openfl.geom.ColorTransform();
		var details;
		var start;
		var _g = 0;
		while(_g < propertyNames.length) {
			var propertyName = propertyNames[_g];
			++_g;
			start = this.getField(begin,propertyName);
			details = new motion.actuators.PropertyDetails(this.tweenColorTransform,propertyName,start,this.getField(this.endColorTransform,propertyName) - start);
			this.propertyDetails.push(details);
		}
	}
	,initializeSound: function() {
		if(this.getField(this.target,"soundTransform") == null) this.setField(this.target,"soundTransform",new openfl.media.SoundTransform());
		var start = this.getField(this.target,"soundTransform");
		this.endSoundTransform = this.getField(this.target,"soundTransform");
		this.tweenSoundTransform = new openfl.media.SoundTransform();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume")) {
			this.endSoundTransform.volume = this.properties.soundVolume;
			this.propertyDetails.push(new motion.actuators.PropertyDetails(this.tweenSoundTransform,"volume",start.volume,this.endSoundTransform.volume - start.volume));
		}
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) {
			this.endSoundTransform.pan = this.properties.soundPan;
			this.propertyDetails.push(new motion.actuators.PropertyDetails(this.tweenSoundTransform,"pan",start.pan,this.endSoundTransform.pan - start.pan));
		}
	}
	,update: function(currentTime) {
		motion.actuators.SimpleActuator.prototype.update.call(this,currentTime);
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField(transform,"colorTransform",this.tweenColorTransform);
		}
		if(this.endSoundTransform != null) this.setField(this.target,"soundTransform",this.tweenSoundTransform);
	}
	,__class__: motion.actuators.TransformActuator
});
motion.easing.ExpoEaseIn = function() {
};
$hxClasses["motion.easing.ExpoEaseIn"] = motion.easing.ExpoEaseIn;
motion.easing.ExpoEaseIn.__name__ = ["motion","easing","ExpoEaseIn"];
motion.easing.ExpoEaseIn.__interfaces__ = [motion.easing.IEasing];
motion.easing.ExpoEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) return 0; else return Math.pow(2,10 * (k - 1));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b; else return c * Math.pow(2,10 * (t / d - 1)) + b;
	}
	,__class__: motion.easing.ExpoEaseIn
};
motion.easing.ExpoEaseInOut = function() {
};
$hxClasses["motion.easing.ExpoEaseInOut"] = motion.easing.ExpoEaseInOut;
motion.easing.ExpoEaseInOut.__name__ = ["motion","easing","ExpoEaseInOut"];
motion.easing.ExpoEaseInOut.__interfaces__ = [motion.easing.IEasing];
motion.easing.ExpoEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if(k == 1) return 1;
		if((k /= 0.5) < 1.0) return 0.5 * Math.pow(2,10 * (k - 1));
		return 0.5 * (2 - Math.pow(2,-10 * --k));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if(t == d) return b + c;
		if((t /= d / 2.0) < 1.0) return c / 2 * Math.pow(2,10 * (t - 1)) + b;
		return c / 2 * (2 - Math.pow(2,-10 * --t)) + b;
	}
	,__class__: motion.easing.ExpoEaseInOut
};
motion.easing.Linear = function() { };
$hxClasses["motion.easing.Linear"] = motion.easing.Linear;
motion.easing.Linear.__name__ = ["motion","easing","Linear"];
motion.easing.Linear.__properties__ = {get_easeNone:"get_easeNone"}
motion.easing.Linear.get_easeNone = function() {
	return new motion.easing.LinearEaseNone();
};
motion.easing.LinearEaseNone = function() {
};
$hxClasses["motion.easing.LinearEaseNone"] = motion.easing.LinearEaseNone;
motion.easing.LinearEaseNone.__name__ = ["motion","easing","LinearEaseNone"];
motion.easing.LinearEaseNone.__interfaces__ = [motion.easing.IEasing];
motion.easing.LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: motion.easing.LinearEaseNone
};
openfl.AssetCache = function() {
	this.enabled = true;
	this.bitmapData = new haxe.ds.StringMap();
	this.font = new haxe.ds.StringMap();
	this.sound = new haxe.ds.StringMap();
};
$hxClasses["openfl.AssetCache"] = openfl.AssetCache;
openfl.AssetCache.__name__ = ["openfl","AssetCache"];
openfl.AssetCache.prototype = {
	clear: function(prefix) {
		if(prefix == null) {
			this.bitmapData = new haxe.ds.StringMap();
			this.font = new haxe.ds.StringMap();
			this.sound = new haxe.ds.StringMap();
		} else {
			var keys = this.bitmapData.keys();
			while( keys.hasNext() ) {
				var key = keys.next();
				if(StringTools.startsWith(key,prefix)) this.bitmapData.remove(key);
			}
			var keys1 = this.font.keys();
			while( keys1.hasNext() ) {
				var key1 = keys1.next();
				if(StringTools.startsWith(key1,prefix)) this.font.remove(key1);
			}
			var keys2 = this.sound.keys();
			while( keys2.hasNext() ) {
				var key2 = keys2.next();
				if(StringTools.startsWith(key2,prefix)) this.sound.remove(key2);
			}
		}
	}
	,__class__: openfl.AssetCache
};
openfl.Assets = function() { };
$hxClasses["openfl.Assets"] = openfl.Assets;
openfl.Assets.__name__ = ["openfl","Assets"];
openfl.Assets.addEventListener = function(type,listener,useCapture,priority,useWeakReference) {
	if(useWeakReference == null) useWeakReference = false;
	if(priority == null) priority = 0;
	if(useCapture == null) useCapture = false;
	openfl.Assets.initialize();
	openfl.Assets.dispatcher.addEventListener(type,listener,useCapture,priority,useWeakReference);
};
openfl.Assets.dispatchEvent = function(event) {
	openfl.Assets.initialize();
	return openfl.Assets.dispatcher.dispatchEvent(event);
};
openfl.Assets.exists = function(id,type) {
	openfl.Assets.initialize();
	if(type == null) type = openfl.AssetType.BINARY;
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) return library.exists(symbolName,type);
	return false;
};
openfl.Assets.getBitmapData = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.bitmapData.exists(id)) {
		var bitmapData = openfl.Assets.cache.bitmapData.get(id);
		if(openfl.Assets.isValidBitmapData(bitmapData)) return bitmapData;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.IMAGE)) {
			if(library.isLocal(symbolName,openfl.AssetType.IMAGE)) {
				var bitmapData1 = library.getBitmapData(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.bitmapData.set(id,bitmapData1);
				return bitmapData1;
			} else haxe.Log.trace("[openfl.Assets] BitmapData asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 139, className : "openfl.Assets", methodName : "getBitmapData"});
		} else haxe.Log.trace("[openfl.Assets] There is no BitmapData asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 145, className : "openfl.Assets", methodName : "getBitmapData"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 151, className : "openfl.Assets", methodName : "getBitmapData"});
	return null;
};
openfl.Assets.getBytes = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.BINARY)) {
			if(library.isLocal(symbolName,openfl.AssetType.BINARY)) return library.getBytes(symbolName); else haxe.Log.trace("[openfl.Assets] String or ByteArray asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 188, className : "openfl.Assets", methodName : "getBytes"});
		} else haxe.Log.trace("[openfl.Assets] There is no String or ByteArray asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 194, className : "openfl.Assets", methodName : "getBytes"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 200, className : "openfl.Assets", methodName : "getBytes"});
	return null;
};
openfl.Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.font.exists(id)) return openfl.Assets.cache.font.get(id);
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.FONT)) {
			if(library.isLocal(symbolName,openfl.AssetType.FONT)) {
				var font = library.getFont(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.font.set(id,font);
				return font;
			} else haxe.Log.trace("[openfl.Assets] Font asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 251, className : "openfl.Assets", methodName : "getFont"});
		} else haxe.Log.trace("[openfl.Assets] There is no Font asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 257, className : "openfl.Assets", methodName : "getFont"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 263, className : "openfl.Assets", methodName : "getFont"});
	return null;
};
openfl.Assets.getLibrary = function(name) {
	if(name == null || name == "") name = "default";
	return openfl.Assets.libraries.get(name);
};
openfl.Assets.getMovieClip = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MOVIE_CLIP)) {
			if(library.isLocal(symbolName,openfl.AssetType.MOVIE_CLIP)) return library.getMovieClip(symbolName); else haxe.Log.trace("[openfl.Assets] MovieClip asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 313, className : "openfl.Assets", methodName : "getMovieClip"});
		} else haxe.Log.trace("[openfl.Assets] There is no MovieClip asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 319, className : "openfl.Assets", methodName : "getMovieClip"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 325, className : "openfl.Assets", methodName : "getMovieClip"});
	return null;
};
openfl.Assets.getMusic = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) return sound;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MUSIC)) {
			if(library.isLocal(symbolName,openfl.AssetType.MUSIC)) {
				var sound1 = library.getMusic(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.sound.set(id,sound1);
				return sound1;
			} else haxe.Log.trace("[openfl.Assets] Sound asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 382, className : "openfl.Assets", methodName : "getMusic"});
		} else haxe.Log.trace("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 388, className : "openfl.Assets", methodName : "getMusic"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 394, className : "openfl.Assets", methodName : "getMusic"});
	return null;
};
openfl.Assets.getPath = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,null)) return library.getPath(symbolName); else haxe.Log.trace("[openfl.Assets] There is no asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 429, className : "openfl.Assets", methodName : "getPath"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 435, className : "openfl.Assets", methodName : "getPath"});
	return null;
};
openfl.Assets.getSound = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) return sound;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.SOUND)) {
			if(library.isLocal(symbolName,openfl.AssetType.SOUND)) {
				var sound1 = library.getSound(symbolName);
				if(useCache && openfl.Assets.cache.enabled) openfl.Assets.cache.sound.set(id,sound1);
				return sound1;
			} else haxe.Log.trace("[openfl.Assets] Sound asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 492, className : "openfl.Assets", methodName : "getSound"});
		} else haxe.Log.trace("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 498, className : "openfl.Assets", methodName : "getSound"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 504, className : "openfl.Assets", methodName : "getSound"});
	return null;
};
openfl.Assets.getText = function(id) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.TEXT)) {
			if(library.isLocal(symbolName,openfl.AssetType.TEXT)) return library.getText(symbolName); else haxe.Log.trace("[openfl.Assets] String asset \"" + id + "\" exists, but only asynchronously",{ fileName : "Assets.hx", lineNumber : 541, className : "openfl.Assets", methodName : "getText"});
		} else haxe.Log.trace("[openfl.Assets] There is no String asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 547, className : "openfl.Assets", methodName : "getText"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 553, className : "openfl.Assets", methodName : "getText"});
	return null;
};
openfl.Assets.hasEventListener = function(type) {
	openfl.Assets.initialize();
	return openfl.Assets.dispatcher.hasEventListener(type);
};
openfl.Assets.initialize = function() {
	if(!openfl.Assets.initialized) {
		openfl.Assets.registerLibrary("default",new DefaultAssetLibrary());
		openfl.Assets.initialized = true;
	}
};
openfl.Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled) {
		if(type == openfl.AssetType.IMAGE || type == null) {
			if(openfl.Assets.cache.bitmapData.exists(id)) return true;
		}
		if(type == openfl.AssetType.FONT || type == null) {
			if(openfl.Assets.cache.font.exists(id)) return true;
		}
		if(type == openfl.AssetType.SOUND || type == openfl.AssetType.MUSIC || type == null) {
			if(openfl.Assets.cache.sound.exists(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
};
openfl.Assets.isValidBitmapData = function(bitmapData) {
	return bitmapData.__sourceImage != null || bitmapData.__sourceCanvas != null;
	return true;
};
openfl.Assets.isValidSound = function(sound) {
	return true;
};
openfl.Assets.list = function(type) {
	openfl.Assets.initialize();
	var items = [];
	var $it0 = openfl.Assets.libraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var libraryItems = library.list(type);
		if(libraryItems != null) items = items.concat(libraryItems);
	}
	return items;
};
openfl.Assets.loadBitmapData = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.bitmapData.exists(id)) {
		var bitmapData = openfl.Assets.cache.bitmapData.get(id);
		if(openfl.Assets.isValidBitmapData(bitmapData)) {
			handler(bitmapData);
			return;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.IMAGE)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadBitmapData(symbolName,function(bitmapData1) {
				openfl.Assets.cache.bitmapData.set(id,bitmapData1);
				handler(bitmapData1);
			}); else library.loadBitmapData(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no BitmapData asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 750, className : "openfl.Assets", methodName : "loadBitmapData"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 756, className : "openfl.Assets", methodName : "loadBitmapData"});
	handler(null);
};
openfl.Assets.loadBytes = function(id,handler) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.BINARY)) {
			library.loadBytes(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no String or ByteArray asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 786, className : "openfl.Assets", methodName : "loadBytes"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 792, className : "openfl.Assets", methodName : "loadBytes"});
	handler(null);
};
openfl.Assets.loadFont = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.font.exists(id)) {
		handler(openfl.Assets.cache.font.get(id));
		return;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.FONT)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadFont(symbolName,function(font) {
				openfl.Assets.cache.font.set(id,font);
				handler(font);
			}); else library.loadFont(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no Font asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 843, className : "openfl.Assets", methodName : "loadFont"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 849, className : "openfl.Assets", methodName : "loadFont"});
	handler(null);
};
openfl.Assets.loadLibrary = function(name,handler) {
	openfl.Assets.initialize();
	var data = openfl.Assets.getText("libraries/" + name + ".dat");
	if(data != null && data != "") {
		var unserializer = new haxe.Unserializer(data);
		unserializer.setResolver({ resolveEnum : openfl.Assets.resolveEnum, resolveClass : openfl.Assets.resolveClass});
		var library = unserializer.unserialize();
		openfl.Assets.libraries.set(name,library);
		library.eventCallback = openfl.Assets.library_onEvent;
		library.load(handler);
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + name + "\"",{ fileName : "Assets.hx", lineNumber : 880, className : "openfl.Assets", methodName : "loadLibrary"});
};
openfl.Assets.loadMusic = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) {
			handler(sound);
			return;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MUSIC)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadMusic(symbolName,function(sound1) {
				openfl.Assets.cache.sound.set(id,sound1);
				handler(sound1);
			}); else library.loadMusic(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 935, className : "openfl.Assets", methodName : "loadMusic"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 941, className : "openfl.Assets", methodName : "loadMusic"});
	handler(null);
};
openfl.Assets.loadMovieClip = function(id,handler) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.MOVIE_CLIP)) {
			library.loadMovieClip(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no MovieClip asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 971, className : "openfl.Assets", methodName : "loadMovieClip"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 977, className : "openfl.Assets", methodName : "loadMovieClip"});
	handler(null);
};
openfl.Assets.loadSound = function(id,handler,useCache) {
	if(useCache == null) useCache = true;
	openfl.Assets.initialize();
	if(useCache && openfl.Assets.cache.enabled && openfl.Assets.cache.sound.exists(id)) {
		var sound = openfl.Assets.cache.sound.get(id);
		if(openfl.Assets.isValidSound(sound)) {
			handler(sound);
			return;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.SOUND)) {
			if(useCache && openfl.Assets.cache.enabled) library.loadSound(symbolName,function(sound1) {
				openfl.Assets.cache.sound.set(id,sound1);
				handler(sound1);
			}); else library.loadSound(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no Sound asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 1034, className : "openfl.Assets", methodName : "loadSound"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 1040, className : "openfl.Assets", methodName : "loadSound"});
	handler(null);
};
openfl.Assets.loadText = function(id,handler) {
	openfl.Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl.Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,openfl.AssetType.TEXT)) {
			library.loadText(symbolName,handler);
			return;
		} else haxe.Log.trace("[openfl.Assets] There is no String asset with an ID of \"" + id + "\"",{ fileName : "Assets.hx", lineNumber : 1070, className : "openfl.Assets", methodName : "loadText"});
	} else haxe.Log.trace("[openfl.Assets] There is no asset library named \"" + libraryName + "\"",{ fileName : "Assets.hx", lineNumber : 1076, className : "openfl.Assets", methodName : "loadText"});
	handler(null);
};
openfl.Assets.registerLibrary = function(name,library) {
	if(openfl.Assets.libraries.exists(name)) openfl.Assets.unloadLibrary(name);
	if(library != null) library.eventCallback = openfl.Assets.library_onEvent;
	openfl.Assets.libraries.set(name,library);
};
openfl.Assets.removeEventListener = function(type,listener,capture) {
	if(capture == null) capture = false;
	openfl.Assets.initialize();
	openfl.Assets.dispatcher.removeEventListener(type,listener,capture);
};
openfl.Assets.resolveClass = function(name) {
	return Type.resolveClass(name);
};
openfl.Assets.resolveEnum = function(name) {
	var value = Type.resolveEnum(name);
	return value;
};
openfl.Assets.unloadLibrary = function(name) {
	openfl.Assets.initialize();
	var library = openfl.Assets.libraries.get(name);
	if(library != null) {
		openfl.Assets.cache.clear(name + ":");
		library.eventCallback = null;
	}
	openfl.Assets.libraries.remove(name);
};
openfl.Assets.library_onEvent = function(library,type) {
	if(type == "change") {
		openfl.Assets.cache.clear();
		openfl.Assets.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE));
	}
};
openfl.AssetData = function() {
};
$hxClasses["openfl.AssetData"] = openfl.AssetData;
openfl.AssetData.__name__ = ["openfl","AssetData"];
openfl.AssetData.prototype = {
	__class__: openfl.AssetData
};
openfl.AssetType = $hxClasses["openfl.AssetType"] = { __ename__ : ["openfl","AssetType"], __constructs__ : ["BINARY","FONT","IMAGE","MOVIE_CLIP","MUSIC","SOUND","TEMPLATE","TEXT"] };
openfl.AssetType.BINARY = ["BINARY",0];
openfl.AssetType.BINARY.toString = $estr;
openfl.AssetType.BINARY.__enum__ = openfl.AssetType;
openfl.AssetType.FONT = ["FONT",1];
openfl.AssetType.FONT.toString = $estr;
openfl.AssetType.FONT.__enum__ = openfl.AssetType;
openfl.AssetType.IMAGE = ["IMAGE",2];
openfl.AssetType.IMAGE.toString = $estr;
openfl.AssetType.IMAGE.__enum__ = openfl.AssetType;
openfl.AssetType.MOVIE_CLIP = ["MOVIE_CLIP",3];
openfl.AssetType.MOVIE_CLIP.toString = $estr;
openfl.AssetType.MOVIE_CLIP.__enum__ = openfl.AssetType;
openfl.AssetType.MUSIC = ["MUSIC",4];
openfl.AssetType.MUSIC.toString = $estr;
openfl.AssetType.MUSIC.__enum__ = openfl.AssetType;
openfl.AssetType.SOUND = ["SOUND",5];
openfl.AssetType.SOUND.toString = $estr;
openfl.AssetType.SOUND.__enum__ = openfl.AssetType;
openfl.AssetType.TEMPLATE = ["TEMPLATE",6];
openfl.AssetType.TEMPLATE.toString = $estr;
openfl.AssetType.TEMPLATE.__enum__ = openfl.AssetType;
openfl.AssetType.TEXT = ["TEXT",7];
openfl.AssetType.TEXT.toString = $estr;
openfl.AssetType.TEXT.__enum__ = openfl.AssetType;
openfl.Lib = function(rootElement,width,height) {
	this.mKilled = false;
	this.__scr = rootElement;
	if(this.__scr == null) throw "Root element not found";
	this.__scr.style.setProperty("overflow","hidden","");
	if(this.__scr.style.getPropertyValue("width") != "100%") this.__scr.style.width = width + "px";
	if(this.__scr.style.getPropertyValue("height") != "100%") this.__scr.style.height = height + "px";
};
$hxClasses["openfl.Lib"] = openfl.Lib;
openfl.Lib.__name__ = ["openfl","Lib"];
openfl.Lib.__properties__ = {get_freeSnap:"get_freeSnap",get_stageSnap:"get_stageSnap",get_snap:"get_snap",get_current:"get_current"}
openfl.Lib.addCallback = function(functionName,closure) {
	openfl.Lib.mMe.__scr[functionName] = closure;
};
openfl.Lib["as"] = function(v,c) {
	if(js.Boot.__instanceof(v,c)) return v; else return null;
};
openfl.Lib.attach = function(name) {
	return new openfl.display.MovieClip();
};
openfl.Lib.getTimer = function() {
	return Std["int"]((haxe.Timer.stamp() - openfl.Lib.starttime) * 1000);
};
openfl.Lib.getURL = function(request,target) {
	if(target == null) target = "_blank";
	window.open(request.url,target);
};
openfl.Lib.preventDefaultTouchMove = function() {
	window.document.addEventListener("touchmove",function(evt) {
		evt.preventDefault();
	},false);
};
openfl.Lib.Run = function(tgt,width,height) {
	openfl.Lib.mMe = new openfl.Lib(tgt,width,height);
	var _g1 = 0;
	var _g = tgt.attributes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var attr = tgt.attributes.item(i);
		if(StringTools.startsWith(attr.name,"data-")) {
			if(attr.name == "data-" + "framerate") openfl.Lib.__getStage().set_frameRate(Std.parseFloat(attr.value));
		}
	}
	var _g2 = 0;
	var _g11 = openfl.Lib.HTML_TOUCH_EVENT_TYPES;
	while(_g2 < _g11.length) {
		var type = _g11[_g2];
		++_g2;
		tgt.addEventListener(type,($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	var _g3 = 0;
	var _g12 = openfl.Lib.HTML_TOUCH_ALT_EVENT_TYPES;
	while(_g3 < _g12.length) {
		var type1 = _g12[_g3];
		++_g3;
		tgt.addEventListener(type1,($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	var _g4 = 0;
	var _g13 = openfl.Lib.HTML_DIV_EVENT_TYPES;
	while(_g4 < _g13.length) {
		var type2 = _g13[_g4];
		++_g4;
		tgt.addEventListener(type2,($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	}
	if(Reflect.hasField(window,"on" + "devicemotion")) window.addEventListener("devicemotion",($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	if(Reflect.hasField(window,"on" + "orientationchange")) window.addEventListener("orientationchange",($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),true);
	var _g5 = 0;
	var _g14 = openfl.Lib.HTML_WINDOW_EVENT_TYPES;
	while(_g5 < _g14.length) {
		var type3 = _g14[_g5];
		++_g5;
		window.addEventListener(type3,($_=openfl.Lib.__getStage(),$bind($_,$_.__queueStageEvent)),false);
	}
	return openfl.Lib.mMe;
};
openfl.Lib.setUserScalable = function(isScalable) {
	if(isScalable == null) isScalable = true;
	var meta = window.document.createElement("meta");
	meta.name = "viewport";
	meta.content = "user-scalable=" + (isScalable?"yes":"no");
};
openfl.Lib.trace = function(arg) {
	if(window.console != null) window.console.log(arg);
};
openfl.Lib.__appendSurface = function(surface,before,after,parent) {
	if(openfl.Lib.mMe.__scr != null) {
		if(before != null) surface.insertBefore(before); else if(after != null) surface.insertAfter(after); else if(parent != null) parent.append(surface); else openfl.Lib.get_stageSnap().append(surface);
	}
};
openfl.Lib.__appendText = function(surface,container,text,wrap,isHtml) {
	var _g1 = 0;
	var _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		surface.removeChild(surface.childNodes[i]);
	}
	if(isHtml) container.innerHTML = text; else container.appendChild(window.document.createTextNode(text));
	container.style.setProperty("position","relative","");
	container.style.setProperty("cursor","default","");
	if(!wrap) container.style.setProperty("white-space","nowrap","");
	surface.appendChild(container);
};
openfl.Lib.__bootstrap = function() {
	if(openfl.Lib.mMe == null) {
		var target = window.document.getElementById("haxe:openfl");
		if(target == null) target = window.document.createElement("div");
		openfl.Lib.Run(target,openfl.Lib.__getWidth(),openfl.Lib.__getHeight());
	}
};
openfl.Lib.__copyStyle = function(src,tgt) {
	tgt.id = src.id;
	var _g = 0;
	var _g1 = ["left","top","transform","transform-origin","-moz-transform","-moz-transform-origin","-webkit-transform","-webkit-transform-origin","-o-transform","-o-transform-origin","opacity","display"];
	while(_g < _g1.length) {
		var prop = _g1[_g];
		++_g;
		tgt.style.setProperty(prop,src.style.getPropertyValue(prop),"");
	}
};
openfl.Lib.__createSurfaceAnimationCSS = function(surface,data,template,templateFunc,fps,discrete,infinite) {
	if(infinite == null) infinite = false;
	if(discrete == null) discrete = false;
	if(fps == null) fps = 25;
	if(surface.id == null || surface.id == "") {
		openfl.Lib.trace("Failed to create a CSS Style tag for a surface without an id attribute");
		return null;
	}
	var style = null;
	if(surface.getAttribute("data-openfl-anim") != null) style = window.document.getElementById(surface.getAttribute("data-openfl-anim")); else {
		style = openfl.Lib.mMe.__scr.appendChild(window.document.createElement("style"));
		style.sheet.id = "__openfl_anim_" + surface.id + "__";
		surface.setAttribute("data-openfl-anim",style.sheet.id);
	}
	var keyframeStylesheetRule = "";
	var _g1 = 0;
	var _g = data.length;
	while(_g1 < _g) {
		var i = _g1++;
		var perc = i / (data.length - 1) * 100;
		var frame = data[i];
		keyframeStylesheetRule += perc + "% { " + template.execute(templateFunc(frame)) + " } ";
	}
	var animationDiscreteRule;
	if(discrete) animationDiscreteRule = "steps(::steps::, end)"; else animationDiscreteRule = "";
	var animationInfiniteRule;
	if(infinite) animationInfiniteRule = "infinite"; else animationInfiniteRule = "";
	var animationTpl = "";
	var _g2 = 0;
	var _g11 = ["animation","-moz-animation","-webkit-animation","-o-animation","-ms-animation"];
	while(_g2 < _g11.length) {
		var prefix = _g11[_g2];
		++_g2;
		animationTpl += prefix + ": ::id:: ::duration::s " + animationDiscreteRule + " " + animationInfiniteRule + "; ";
	}
	var animationStylesheetRule = new haxe.Template(animationTpl).execute({ id : surface.id, duration : data.length / fps, steps : 1});
	var rules;
	if(style.sheet.rules != null) rules = style.sheet.rules; else rules = style.sheet.cssRules;
	var _g3 = 0;
	var _g12 = ["","-moz-","-webkit-","-o-","-ms-"];
	while(_g3 < _g12.length) {
		var variant = _g12[_g3];
		++_g3;
		try {
			style.sheet.insertRule("@" + variant + "keyframes " + surface.id + " {" + keyframeStylesheetRule + "}",rules.length);
		} catch( e ) {
		}
	}
	style.sheet.insertRule("#" + surface.id + " { " + animationStylesheetRule + " } ",rules.length);
	return style;
};
openfl.Lib.__designMode = function(mode) {
	if(mode) window.document.designMode = "on"; else window.document.designMode = "off";
};
openfl.Lib.__disableFullScreen = function() {
};
openfl.Lib.__disableRightClick = function() {
	if(openfl.Lib.mMe != null) try {
		openfl.Lib.mMe.__scr.oncontextmenu = function() {
			return false;
		};
	} catch( e ) {
		openfl.Lib.trace("Disable right click not supported in this browser.");
	}
};
openfl.Lib.__drawClippedImage = function(surface,tgtCtx,clipRect) {
	if(clipRect != null) {
		if(clipRect.x < 0) {
			clipRect.width += clipRect.x;
			clipRect.x = 0;
		}
		if(clipRect.y < 0) {
			clipRect.height += clipRect.y;
			clipRect.y = 0;
		}
		if(clipRect.width > surface.width - clipRect.x) clipRect.width = surface.width - clipRect.x;
		if(clipRect.height > surface.height - clipRect.y) clipRect.height = surface.height - clipRect.y;
		tgtCtx.drawImage(surface,clipRect.x,clipRect.y,clipRect.width,clipRect.height,clipRect.x,clipRect.y,clipRect.width,clipRect.height);
	} else tgtCtx.drawImage(surface,0,0);
};
openfl.Lib.__drawSurfaceRect = function(surface,tgt,x,y,rect) {
	var tgtCtx = tgt.getContext("2d");
	tgt.width = rect.width;
	tgt.height = rect.height;
	tgtCtx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,0,0,rect.width,rect.height);
	tgt.style.left = x + "px";
	tgt.style.top = y + "px";
};
openfl.Lib.__drawToSurface = function(surface,tgt,matrix,alpha,clipRect,smoothing) {
	if(smoothing == null) smoothing = true;
	if(alpha == null) alpha = 1.0;
	var srcCtx = surface.getContext("2d");
	var tgtCtx = tgt.getContext("2d");
	tgtCtx.globalAlpha = alpha;
	openfl.Lib.__setImageSmoothing(tgtCtx,smoothing);
	if(surface.width > 0 && surface.height > 0) {
		if(matrix != null) {
			tgtCtx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) tgtCtx.translate(matrix.tx,matrix.ty); else tgtCtx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			openfl.Lib.__drawClippedImage(surface,tgtCtx,clipRect);
			tgtCtx.restore();
		} else openfl.Lib.__drawClippedImage(surface,tgtCtx,clipRect);
	}
};
openfl.Lib.__enableFullScreen = function() {
	if(openfl.Lib.mMe != null) {
		var origWidth = openfl.Lib.mMe.__scr.style.getPropertyValue("width");
		var origHeight = openfl.Lib.mMe.__scr.style.getPropertyValue("height");
		openfl.Lib.mMe.__scr.style.setProperty("width","100%","");
		openfl.Lib.mMe.__scr.style.setProperty("height","100%","");
		openfl.Lib.__disableFullScreen = function() {
			openfl.Lib.mMe.__scr.style.setProperty("width",origWidth,"");
			openfl.Lib.mMe.__scr.style.setProperty("height",origHeight,"");
		};
	}
};
openfl.Lib.__enableRightClick = function() {
	if(openfl.Lib.mMe != null) try {
		openfl.Lib.mMe.__scr.oncontextmenu = null;
	} catch( e ) {
		openfl.Lib.trace("Enable right click not supported in this browser.");
	}
};
openfl.Lib.__fullScreenHeight = function() {
	return window.innerHeight;
};
openfl.Lib.__fullScreenWidth = function() {
	return window.innerWidth;
};
openfl.Lib.__getHeight = function() {
	var tgt;
	if(openfl.Lib.mMe != null) tgt = openfl.Lib.mMe.__scr; else tgt = window.document.getElementById("haxe:openfl");
	if(tgt != null && tgt.clientHeight > 0) return tgt.clientHeight; else return 500;
};
openfl.Lib.__getStage = function() {
	if(openfl.Lib.mStage == null) {
		var width = openfl.Lib.__getWidth();
		var height = openfl.Lib.__getHeight();
		openfl.Lib.mStage = new openfl.display.Stage(width,height);
	}
	return openfl.Lib.mStage;
};
openfl.Lib.__getWidth = function() {
	var tgt;
	if(openfl.Lib.mMe != null) tgt = openfl.Lib.mMe.__scr; else tgt = window.document.getElementById("haxe:openfl");
	if(tgt != null && tgt.clientWidth > 0) return tgt.clientWidth; else return 500;
};
openfl.Lib.__isOnStage = function(p) {
	while(p != null && p.node != openfl.Lib.get_stageSnap().node) p = p.parent();
	return p != null;
};
openfl.Lib.__parseColor = function(str,cb) {
	var re = new EReg("rgb\\(([0-9]*), ?([0-9]*), ?([0-9]*)\\)","");
	var hex = new EReg("#([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])","");
	if(re.match(str)) {
		var col = 0;
		var _g = 1;
		while(_g < 4) {
			var pos = _g++;
			var v = Std.parseInt(re.matched(pos));
			col = cb(col,pos - 1,v);
		}
		return col;
	} else if(hex.match(str)) {
		var col1 = 0;
		var _g1 = 1;
		while(_g1 < 4) {
			var pos1 = _g1++;
			var v1 = "0x" + hex.matched(pos1) & 255;
			v1 = cb(col1,pos1 - 1,v1);
		}
		return col1;
	} else throw "Cannot parse color '" + str + "'.";
};
openfl.Lib.__removeSurface = function(surface) {
	surface.remove();
	return surface;
};
openfl.Lib.__setSurfaceBorder = function(surface,color,size) {
	surface.style.setProperty("border-color","#" + StringTools.hex(color),"");
	surface.style.setProperty("border-style","solid","");
	surface.style.setProperty("border-width",size + "px","");
	surface.style.setProperty("border-collapse","collapse","");
};
openfl.Lib.__setSurfaceClipping = function(surface,rect) {
};
openfl.Lib.__setSurfaceFont = function(surface,font,bold,size,color,align,lineHeight) {
	surface.style.setProperty("font-family",font,"");
	surface.style.setProperty("font-weight",bold == null?"null":"" + bold,"");
	surface.style.setProperty("color","#" + StringTools.hex(color),"");
	surface.style.setProperty("font-size",size + "px","");
	surface.style.setProperty("text-align",align,"");
	surface.style.setProperty("line-height",lineHeight + "px","");
};
openfl.Lib.__setSurfaceOpacity = function(surface,alpha) {
	surface.attr({ opacity : alpha == null?"null":"" + alpha});
};
openfl.Lib.__setSurfacePadding = function(surface,padding,margin,display) {
	surface.style.setProperty("padding",padding + "px","");
	surface.style.setProperty("margin",margin + "px","");
	surface.style.setProperty("top",padding + 2 + "px","");
	surface.style.setProperty("right",padding + 1 + "px","");
	surface.style.setProperty("left",padding + 1 + "px","");
	surface.style.setProperty("bottom",padding + 1 + "px","");
	surface.style.setProperty("display",display?"inline":"block","");
};
openfl.Lib.__setSurfaceZIndexAfter = function(surface1,surface2) {
	if(surface1 != null && surface2 != null) {
		if(surface1.parentNode != surface2.parentNode && surface2.parentNode != null) surface2.parentNode.appendChild(surface1);
		if(surface2.parentNode != null) {
			var nextSibling = surface2.nextSibling;
			if(surface1.previousSibling != surface2) {
				var swap = openfl.Lib.__removeSurface(surface1);
				if(nextSibling == null) surface2.parentNode.appendChild(swap); else surface2.parentNode.insertBefore(swap,nextSibling);
			}
		}
	}
};
openfl.Lib.__swapSurface = function(snap1,snap2) {
	var surface1 = snap1.node;
	var surface2 = snap2.node;
	var parent1 = surface1.parentNode;
	var parent2 = surface2.parentNode;
	if(parent1 != null && parent2 != null) {
		if(parent1 == parent2) {
			var next1 = surface1.nextSibling;
			var next2 = surface2.nextSibling;
			if(next1 == surface2) parent1.insertBefore(surface2,surface1); else if(next2 == surface1) parent1.insertBefore(surface1,surface2); else {
				parent1.replaceChild(surface2,surface1);
				if(next2 != null) parent1.insertBefore(surface1,next2); else parent1.appendChild(surface1);
			}
		} else {
			var next21 = surface2.nextSibling;
			parent1.replaceChild(surface2,surface1);
			if(next21 != null) parent2.insertBefore(surface1,next21); else parent2.appendChild(surface1);
		}
	}
};
openfl.Lib.__setContentEditable = function(surface,contentEditable) {
	if(contentEditable == null) contentEditable = true;
	surface.setAttribute("contentEditable",contentEditable?"true":"false");
};
openfl.Lib.__setCursor = function(type) {
	if(openfl.Lib.mMe != null) switch(type[1]) {
	case 0:
		openfl.Lib.mMe.__scr.style.cursor = "pointer";
		break;
	case 1:
		openfl.Lib.mMe.__scr.style.cursor = "text";
		break;
	default:
		openfl.Lib.mMe.__scr.style.cursor = "default";
	}
};
openfl.Lib.__setImageSmoothing = function(context,enabled) {
	var _g = 0;
	var _g1 = ["imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled"];
	while(_g < _g1.length) {
		var variant = _g1[_g];
		++_g;
		context[variant] = enabled;
	}
};
openfl.Lib.__setSurfaceAlign = function(surface,align) {
	surface.style.setProperty("text-align",align,"");
};
openfl.Lib.__setSurfaceId = function(surface,name) {
	var regex = new EReg("[^a-zA-Z0-9\\-]","g");
	surface.attr({ id : regex.replace(name,"_")});
};
openfl.Lib.__setSurfaceRotation = function(surface,rotate) {
	surface.style.setProperty("transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-moz-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-webkit-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-o-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-ms-transform","rotate(" + rotate + "deg)","");
};
openfl.Lib.__setSurfaceScale = function(surface,scale) {
	surface.style.setProperty("transform","scale(" + scale + ")","");
	surface.style.setProperty("-moz-transform","scale(" + scale + ")","");
	surface.style.setProperty("-webkit-transform","scale(" + scale + ")","");
	surface.style.setProperty("-o-transform","scale(" + scale + ")","");
	surface.style.setProperty("-ms-transform","scale(" + scale + ")","");
};
openfl.Lib.__setSurfaceSpritesheetAnimation = function(surface,spec,fps) {
	return null;
};
openfl.Lib.__setSurfaceVisible = function(snap,visible) {
	snap.attr({ visibility : visible?"visible":"hidden"});
};
openfl.Lib.__setTextDimensions = function(surface,width,height,align) {
	surface.style.setProperty("width",width + "px","");
	surface.style.setProperty("height",height + "px","");
	surface.style.setProperty("overflow","hidden","");
	surface.style.setProperty("text-align",align,"");
};
openfl.Lib.__surfaceHitTest = function(surface,x,y) {
	var _g1 = 0;
	var _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var node = surface.childNodes[i];
		if(x >= node.offsetLeft && x <= node.offsetLeft + node.offsetWidth && y >= node.offsetTop && y <= node.offsetTop + node.offsetHeight) return true;
	}
	return false;
};
openfl.Lib.get_current = function() {
	if(openfl.Lib.mMainClassRoot == null) {
		openfl.Lib.mMainClassRoot = new openfl.display.MovieClip();
		openfl.Lib.mCurrent = openfl.Lib.mMainClassRoot;
		openfl.Lib.__getStage().addChild(openfl.Lib.mCurrent);
		openfl.Lib.mMainClassRoot.get_graphics().beginFill(openfl.Lib.__getStage().get_backgroundColor(),0);
		openfl.Lib.mMainClassRoot.get_graphics().drawRect(0,0,openfl.Lib.__getWidth(),openfl.Lib.__getHeight());
		openfl.Lib.__setSurfaceId(openfl.Lib.mMainClassRoot.snap,"Root MovieClip");
		openfl.Lib.__getStage().__updateNextWake();
	}
	return openfl.Lib.mMainClassRoot;
};
openfl.Lib.get_snap = function() {
	if(openfl.Lib.mSnap == null) openfl.Lib.mSnap = new Snap("#" + "haxe-openfl-svg");
	return openfl.Lib.mSnap;
};
openfl.Lib.get_stageSnap = function() {
	if(openfl.Lib.mStageSnap == null) {
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		openfl.Lib.mStageSnap = me123.group.apply(me123, e123);
		openfl.Lib.mStageSnap.attr({ id : "haxe-openfl-svg" + "-stage"});
	}
	return openfl.Lib.mStageSnap;
};
openfl.Lib.get_freeSnap = function() {
	if(openfl.Lib.mFreeSnap == null) {
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		openfl.Lib.mFreeSnap = me123.group.apply(me123, e123);
		openfl.Lib.mFreeSnap.attr({ id : "haxe-openfl-svg" + "-free", visibility : "hidden"});
	}
	return openfl.Lib.mFreeSnap;
};
openfl.Lib.prototype = {
	__class__: openfl.Lib
};
openfl._Lib = {};
openfl._Lib.CursorType = $hxClasses["openfl._Lib.CursorType"] = { __ename__ : ["openfl","_Lib","CursorType"], __constructs__ : ["Pointer","Text","Default"] };
openfl._Lib.CursorType.Pointer = ["Pointer",0];
openfl._Lib.CursorType.Pointer.toString = $estr;
openfl._Lib.CursorType.Pointer.__enum__ = openfl._Lib.CursorType;
openfl._Lib.CursorType.Text = ["Text",1];
openfl._Lib.CursorType.Text.toString = $estr;
openfl._Lib.CursorType.Text.__enum__ = openfl._Lib.CursorType;
openfl._Lib.CursorType.Default = ["Default",2];
openfl._Lib.CursorType.Default.toString = $estr;
openfl._Lib.CursorType.Default.__enum__ = openfl._Lib.CursorType;
openfl._Vector = {};
openfl._Vector.Vector_Impl_ = function() { };
$hxClasses["openfl._Vector.Vector_Impl_"] = openfl._Vector.Vector_Impl_;
openfl._Vector.Vector_Impl_.__name__ = ["openfl","_Vector","Vector_Impl_"];
openfl._Vector.Vector_Impl_.__properties__ = {set_fixed:"set_fixed",get_fixed:"get_fixed",set_length:"set_length",get_length:"get_length"}
openfl._Vector.Vector_Impl_._new = function(length,fixed) {
	return new Array();
};
openfl._Vector.Vector_Impl_.concat = function(this1,a) {
	var a1 = this1.concat(a);
	return a1;
};
openfl._Vector.Vector_Impl_.copy = function(this1) {
	var a = this1.slice();
	return a;
};
openfl._Vector.Vector_Impl_.iterator = function(this1) {
	return HxOverrides.iter(this1);
};
openfl._Vector.Vector_Impl_.join = function(this1,sep) {
	return this1.join(sep);
};
openfl._Vector.Vector_Impl_.pop = function(this1) {
	return this1.pop();
};
openfl._Vector.Vector_Impl_.push = function(this1,x) {
	return this1.push(x);
};
openfl._Vector.Vector_Impl_.reverse = function(this1) {
	this1.reverse();
};
openfl._Vector.Vector_Impl_.shift = function(this1) {
	return this1.shift();
};
openfl._Vector.Vector_Impl_.unshift = function(this1,x) {
	this1.unshift(x);
};
openfl._Vector.Vector_Impl_.slice = function(this1,pos,end) {
	var a = this1.slice(pos,end);
	return a;
};
openfl._Vector.Vector_Impl_.sort = function(this1,f) {
	this1.sort(f);
};
openfl._Vector.Vector_Impl_.splice = function(this1,pos,len) {
	var a = this1.splice(pos,len);
	return a;
};
openfl._Vector.Vector_Impl_.toString = function(this1) {
	return this1.toString();
};
openfl._Vector.Vector_Impl_.indexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var _g1 = from;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1[i] == x) return i;
	}
	return -1;
};
openfl._Vector.Vector_Impl_.lastIndexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var i = this1.length - 1;
	while(i >= from) {
		if(this1[i] == x) return i;
		i--;
	}
	return -1;
};
openfl._Vector.Vector_Impl_.ofArray = function(a) {
	return openfl._Vector.Vector_Impl_.concat(openfl._Vector.Vector_Impl_._new(),a);
};
openfl._Vector.Vector_Impl_.convert = function(v) {
	return v;
};
openfl._Vector.Vector_Impl_.fromArray = function(a) {
	return a;
};
openfl._Vector.Vector_Impl_.toArray = function(this1) {
	return this1;
};
openfl._Vector.Vector_Impl_.get_length = function(this1) {
	return this1.length;
};
openfl._Vector.Vector_Impl_.set_length = function(this1,value) {
	if(value < this1.length) this1 = this1.slice(0,value);
	while(value > this1.length) this1.push(null);
	return value;
};
openfl._Vector.Vector_Impl_.get_fixed = function(this1) {
	return false;
};
openfl._Vector.Vector_Impl_.set_fixed = function(this1,value) {
	return value;
};
openfl.accessibility = {};
openfl.accessibility.AccessibilityProperties = function() {
	this.description = "";
	this.forceSimple = false;
	this.name = "";
	this.noAutoLabeling = false;
	this.shortcut = "";
	this.silent = false;
};
$hxClasses["openfl.accessibility.AccessibilityProperties"] = openfl.accessibility.AccessibilityProperties;
openfl.accessibility.AccessibilityProperties.__name__ = ["openfl","accessibility","AccessibilityProperties"];
openfl.accessibility.AccessibilityProperties.prototype = {
	__class__: openfl.accessibility.AccessibilityProperties
};
openfl.display.Bitmap = function(inBitmapData,inPixelSnapping,inSmoothing) {
	if(inSmoothing == null) inSmoothing = false;
	openfl.display.DisplayObject.call(this);
	this.pixelSnapping = inPixelSnapping;
	this.smoothing = inSmoothing;
	if(inBitmapData != null) {
		this.set_bitmapData(inBitmapData);
		this.bitmapData.__referenceCount++;
	}
	if(this.pixelSnapping == null) this.pixelSnapping = openfl.display.PixelSnapping.AUTO;
	if(this.__graphics == null) {
		this.__graphics = new openfl.display.Graphics();
		this.__graphics.displayObject = this;
	}
	if(this.bitmapData != null) this.__render();
};
$hxClasses["openfl.display.Bitmap"] = openfl.display.Bitmap;
openfl.display.Bitmap.__name__ = ["openfl","display","Bitmap"];
openfl.display.Bitmap.__super__ = openfl.display.DisplayObject;
openfl.display.Bitmap.prototype = $extend(openfl.display.DisplayObject.prototype,{
	getBitmapSurfaceTransform: function(gfx) {
		var extent = gfx.__extentWithFilters;
		var fm = this.transform.__getFullMatrix(null);
		fm.__translateTransformed(extent.get_topLeft());
		return fm;
	}
	,toString: function() {
		return "[Bitmap name=" + this.name + " id=" + this.___id + "]";
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			openfl.display.DisplayObject.prototype.validateBounds.call(this);
			if(this.bitmapData != null) {
				var r = new openfl.geom.Rectangle(0,0,this.bitmapData.get_width(),this.bitmapData.get_height());
				if(r.width != 0 || r.height != 0) {
					if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null; else if(this.bitmapData != null) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.get_width() / this.get_scaleX() || local.y > this.get_height() / this.get_scaleY()) return null; else return this;
		} else return openfl.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		if(this.bitmapData == null) return;
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		var imageDataLease = this.bitmapData.__lease;
		if(imageDataLease != null && (this.__currentLease == null || imageDataLease.seed != this.__currentLease.seed || imageDataLease.time != this.__currentLease.time)) {
			var srcCanvas = this.bitmapData.___textureBuffer;
			var child = this.snap.select("*");
			if(null != child) child.remove();
			this.snap.append(openfl.Lib.get_snap().image(srcCanvas.toDataURL("image/png"),0,0,srcCanvas.width,srcCanvas.height));
			this.__currentLease = imageDataLease.clone();
			this.__applyFilters(this.snap);
			this.___renderFlags |= 32;
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		if(inMask != null) {
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m = this.transform.get_matrix();
				this.__setTransform(m);
				this.___renderFlags &= -33;
			}
			var el = this.snap.node;
			el.setAttribute("opacity",Std.string(this.alpha));
		}
	}
	,set_bitmapData: function(inBitmapData) {
		if(inBitmapData != this.bitmapData) {
			if(this.bitmapData != null) this.bitmapData.__referenceCount--;
			if(inBitmapData != null) inBitmapData.__referenceCount++;
		}
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
		this.bitmapData = inBitmapData;
		return inBitmapData;
	}
	,__class__: openfl.display.Bitmap
	,__properties__: $extend(openfl.display.DisplayObject.prototype.__properties__,{set_bitmapData:"set_bitmapData"})
});
openfl.display.BitmapData = function(width,height,transparent,inFillColor) {
	if(inFillColor == null) inFillColor = -1;
	if(transparent == null) transparent = true;
	this.__locked = false;
	this.__referenceCount = 0;
	this.__leaseNum = 0;
	this.__lease = new openfl.display.ImageDataLease();
	this.__lease.set(this.__leaseNum++,new Date().getTime());
	this.___textureBuffer = window.document.createElement("canvas");
	this.___textureBuffer.width = width;
	this.___textureBuffer.height = height;
	this.__sourceCanvas = this.___textureBuffer;
	this.___id = openfl.utils.Uuid.uuid();
	this.__transparent = transparent;
	this.rect = new openfl.geom.Rectangle(0,0,width,height);
	if(this.__transparent) {
		this.__transparentFiller = window.document.createElement("canvas");
		this.__transparentFiller.width = width;
		this.__transparentFiller.height = height;
		var ctx = this.__transparentFiller.getContext("2d");
		ctx.fillStyle = "rgba(0,0,0,0);";
		ctx.fill();
	}
	if(inFillColor != null && width > 0 && height > 0) {
		if(!this.__transparent) inFillColor |= -16777216;
		this.__initColor = inFillColor;
		this.__fillRect(this.rect,inFillColor);
	}
};
$hxClasses["openfl.display.BitmapData"] = openfl.display.BitmapData;
openfl.display.BitmapData.__name__ = ["openfl","display","BitmapData"];
openfl.display.BitmapData.__interfaces__ = [openfl.display.IBitmapDrawable];
openfl.display.BitmapData.getRGBAPixels = function(bitmapData) {
	var p = bitmapData.getPixels(new openfl.geom.Rectangle(0,0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0,bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0));
	var num;
	num = (bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.width:0) * (bitmapData.___textureBuffer != null?bitmapData.___textureBuffer.height:0);
	p.position = 0;
	var _g = 0;
	while(_g < num) {
		var i = _g++;
		var pos = p.position;
		var alpha = p.readByte();
		var red = p.readByte();
		var green = p.readByte();
		var blue = p.readByte();
		p.position = pos;
		p.writeByte(red);
		p.writeByte(green);
		p.writeByte(blue);
		p.writeByte(alpha);
	}
	return p;
};
openfl.display.BitmapData.loadFromBase64 = function(base64,type,onload) {
	var bitmapData = new openfl.display.BitmapData(0,0);
	bitmapData.__loadFromBase64(base64,type,onload);
	return bitmapData;
};
openfl.display.BitmapData.loadFromBytes = function(bytes,inRawAlpha,onload) {
	var bitmapData = new openfl.display.BitmapData(0,0);
	bitmapData.__loadFromBytes(bytes,inRawAlpha,onload);
	return bitmapData;
};
openfl.display.BitmapData.__base64Encode = function(bytes) {
	var blob = "";
	var codex = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	bytes.position = 0;
	while(bytes.position < bytes.length) {
		var by1 = 0;
		var by2 = 0;
		var by3 = 0;
		by1 = bytes.readByte();
		if(bytes.position < bytes.length) by2 = bytes.readByte();
		if(bytes.position < bytes.length) by3 = bytes.readByte();
		var by4 = 0;
		var by5 = 0;
		var by6 = 0;
		var by7 = 0;
		by4 = by1 >> 2;
		by5 = (by1 & 3) << 4 | by2 >> 4;
		by6 = (by2 & 15) << 2 | by3 >> 6;
		by7 = by3 & 63;
		blob += codex.charAt(by4);
		blob += codex.charAt(by5);
		if(bytes.position < bytes.length) blob += codex.charAt(by6); else blob += "=";
		if(bytes.position < bytes.length) blob += codex.charAt(by7); else blob += "=";
	}
	return blob;
};
openfl.display.BitmapData.__createFromHandle = function(inHandle) {
	var result = new openfl.display.BitmapData(0,0);
	result.___textureBuffer = inHandle;
	return result;
};
openfl.display.BitmapData.__isJPG = function(bytes) {
	bytes.position = 0;
	return bytes.readByte() == 255 && bytes.readByte() == 216;
};
openfl.display.BitmapData.__isPNG = function(bytes) {
	bytes.position = 0;
	return bytes.readByte() == 137 && bytes.readByte() == 80 && bytes.readByte() == 78 && bytes.readByte() == 71 && bytes.readByte() == 13 && bytes.readByte() == 10 && bytes.readByte() == 26 && bytes.readByte() == 10;
};
openfl.display.BitmapData.__isGIF = function(bytes) {
	bytes.position = 0;
	if(bytes.readByte() == 71 && bytes.readByte() == 73 && bytes.readByte() == 70 && bytes.readByte() == 38) {
		var b = bytes.readByte();
		return (b == 7 || b == 9) && bytes.readByte() == 97;
	}
	return false;
};
openfl.display.BitmapData.prototype = {
	applyFilter: function(sourceBitmapData,sourceRect,destPoint,filter) {
		if(sourceBitmapData == this && sourceRect.x == destPoint.x && sourceRect.y == destPoint.y) filter.__applyFilter(this.___textureBuffer,sourceRect); else {
			var bitmapData = new openfl.display.BitmapData(sourceRect.width | 0,sourceRect.height | 0);
			bitmapData.copyPixels(sourceBitmapData,sourceRect,new openfl.geom.Point());
			filter.__applyFilter(bitmapData.___textureBuffer);
			this.copyPixels(bitmapData,bitmapData.rect,destPoint);
		}
	}
	,clear: function(color) {
		this.fillRect(this.rect,color);
	}
	,clipRect: function(r) {
		if(r.x < 0) {
			r.width -= -r.x;
			r.x = 0;
			if(r.x + r.width <= 0) return null;
		}
		if(r.y < 0) {
			r.height -= -r.y;
			r.y = 0;
			if(r.y + r.height <= 0) return null;
		}
		if(r.x + r.width >= (this.___textureBuffer != null?this.___textureBuffer.width:0)) {
			r.width -= r.x + r.width - (this.___textureBuffer != null?this.___textureBuffer.width:0);
			if(r.width <= 0) return null;
		}
		if(r.y + r.height >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) {
			r.height -= r.y + r.height - (this.___textureBuffer != null?this.___textureBuffer.height:0);
			if(r.height <= 0) return null;
		}
		return r;
	}
	,clone: function() {
		var bitmapData = new openfl.display.BitmapData(this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0,this.__transparent);
		var rect = new openfl.geom.Rectangle(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
		bitmapData.setPixels(rect,this.getPixels(rect));
		bitmapData.__lease.set(bitmapData.__leaseNum++,new Date().getTime());
		return bitmapData;
	}
	,colorTransform: function(rect,colorTransform) {
		if(rect == null) return;
		rect = this.clipRect(rect);
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var offsetX;
			var _g1 = 0;
			var _g = imagedata.data.length >> 2;
			while(_g1 < _g) {
				var i = _g1++;
				offsetX = i * 4;
				imagedata.data[offsetX] = imagedata.data[offsetX] * colorTransform.redMultiplier + colorTransform.redOffset | 0;
				imagedata.data[offsetX + 1] = imagedata.data[offsetX + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset | 0;
				imagedata.data[offsetX + 2] = imagedata.data[offsetX + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset | 0;
				imagedata.data[offsetX + 3] = imagedata.data[offsetX + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset | 0;
			}
			ctx.putImageData(imagedata,rect.x,rect.y);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.__imageData.width);
			var offsetY;
			var offsetX1;
			var _g11 = 0;
			var _g2 = Math.round(rect.height);
			while(_g11 < _g2) {
				var i1 = _g11++;
				offsetY = i1 * this.__imageData.width;
				var _g3 = 0;
				var _g21 = Math.round(rect.width);
				while(_g3 < _g21) {
					var j = _g3++;
					offsetX1 = 4 * (j + offsetY);
					this.__imageData.data[s + offsetX1] = this.__imageData.data[s + offsetX1] * colorTransform.redMultiplier + colorTransform.redOffset | 0;
					this.__imageData.data[s + offsetX1 + 1] = this.__imageData.data[s + offsetX1 + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset | 0;
					this.__imageData.data[s + offsetX1 + 2] = this.__imageData.data[s + offsetX1 + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset | 0;
					this.__imageData.data[s + offsetX1 + 3] = this.__imageData.data[s + offsetX1 + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset | 0;
				}
			}
			this.__imageDataChanged = true;
		}
	}
	,compare: function(inBitmapTexture) {
		throw "bitmapData.compare is currently not supported for HTML5";
		return 0;
	}
	,copyChannel: function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel) {
		this.rect = this.clipRect(this.rect);
		if(this.rect == null) return;
		if(destChannel == 8 && !this.__transparent) return;
		if(sourceBitmapData.___textureBuffer == null || this.___textureBuffer == null || sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceBitmapData.___textureBuffer.width) sourceRect.width = sourceBitmapData.___textureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.___textureBuffer.height) sourceRect.height = sourceBitmapData.___textureBuffer.height - sourceRect.y;
		var doChannelCopy = function(imageData) {
			var srcCtx = sourceBitmapData.___textureBuffer.getContext("2d");
			var srcImageData = srcCtx.getImageData(sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height);
			var destIdx = -1;
			if(destChannel == 8) destIdx = 3; else if(destChannel == 4) destIdx = 2; else if(destChannel == 2) destIdx = 1; else if(destChannel == 1) destIdx = 0; else throw "Invalid destination BitmapDataChannel passed to BitmapData::copyChannel.";
			var pos = 4 * (Math.round(destPoint.x) + Math.round(destPoint.y) * imageData.width) + destIdx;
			var boundR = Math.round(4 * (destPoint.x + sourceRect.width));
			var setPos = function(val) {
				if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
				imageData.data[pos] = val;
				pos += 4;
			};
			var srcIdx = -1;
			if(sourceChannel == 8) srcIdx = 3; else if(sourceChannel == 4) srcIdx = 2; else if(sourceChannel == 2) srcIdx = 1; else if(sourceChannel == 1) srcIdx = 0; else throw "Invalid source BitmapDataChannel passed to BitmapData::copyChannel.";
			while(srcIdx < srcImageData.data.length) {
				setPos(srcImageData.data[srcIdx]);
				srcIdx += 4;
			}
		};
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData1 = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			doChannelCopy(imageData1);
			ctx.putImageData(imageData1,0,0);
		} else {
			doChannelCopy(this.__imageData);
			this.__imageDataChanged = true;
		}
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(sourceBitmapData.___textureBuffer == null || this.___textureBuffer == null || sourceBitmapData.___textureBuffer.width == 0 || sourceBitmapData.___textureBuffer.height == 0 || sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceBitmapData.___textureBuffer.width) sourceRect.width = sourceBitmapData.___textureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.___textureBuffer.height) sourceRect.height = sourceBitmapData.___textureBuffer.height - sourceRect.y;
		if(alphaBitmapData != null && alphaBitmapData.__transparent) {
			if(alphaPoint == null) alphaPoint = new openfl.geom.Point();
			var bitmapData = new openfl.display.BitmapData(sourceBitmapData.___textureBuffer != null?sourceBitmapData.___textureBuffer.width:0,sourceBitmapData.___textureBuffer != null?sourceBitmapData.___textureBuffer.height:0,true);
			bitmapData.copyPixels(sourceBitmapData,sourceRect,new openfl.geom.Point(sourceRect.x,sourceRect.y));
			bitmapData.copyChannel(alphaBitmapData,new openfl.geom.Rectangle(alphaPoint.x,alphaPoint.y,sourceRect.width,sourceRect.height),new openfl.geom.Point(sourceRect.x,sourceRect.y),8,8);
			sourceBitmapData = bitmapData;
		}
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			if(!mergeAlpha) {
				if(this.__transparent && sourceBitmapData.__transparent) {
					var trpCtx = sourceBitmapData.__transparentFiller.getContext("2d");
					var trpData = trpCtx.getImageData(sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height);
					ctx.putImageData(trpData,destPoint.x,destPoint.y);
				}
			}
			ctx.drawImage(sourceBitmapData.___textureBuffer,sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height,destPoint.x,destPoint.y,sourceRect.width,sourceRect.height);
		} else this.__copyPixelList[this.__copyPixelList.length] = { handle : sourceBitmapData.___textureBuffer, transparentFiller : mergeAlpha?null:sourceBitmapData.__transparentFiller, sourceX : sourceRect.x, sourceY : sourceRect.y, sourceWidth : sourceRect.width, sourceHeight : sourceRect.height, destX : destPoint.x, destY : destPoint.y};
	}
	,destroy: function() {
		this.___textureBuffer = null;
	}
	,dispose: function() {
		this.__clearCanvas();
		this.___textureBuffer = null;
		this.__leaseNum = 0;
		this.__lease = null;
		this.__imageData = null;
	}
	,draw: function(source,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		if(smoothing == null) smoothing = false;
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		source.drawToSurface(this.___textureBuffer,matrix,inColorTransform,blendMode,clipRect,smoothing);
		if(inColorTransform != null) {
			var rect = new openfl.geom.Rectangle();
			var object = source;
			if(matrix != null) rect.x = matrix.tx; else rect.x = 0;
			if(matrix != null) rect.y = matrix.ty; else rect.y = 0;
			try {
				rect.width = Reflect.getProperty(source,"width");
				rect.height = Reflect.getProperty(source,"height");
			} catch( e ) {
				rect.width = this.___textureBuffer.width;
				rect.height = this.___textureBuffer.height;
			}
			this.colorTransform(rect,inColorTransform);
		}
	}
	,drawToSurface: function(inSurface,matrix,inColorTransform,blendMode,clipRect,smoothing) {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		var ctx = inSurface.getContext("2d");
		if(blendMode == openfl.display.BlendMode.ADD) ctx.globalCompositeOperation = "lighter";
		if(matrix != null) {
			ctx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) ctx.translate(matrix.tx,matrix.ty); else {
				openfl.Lib.__setImageSmoothing(ctx,smoothing);
				ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			}
			ctx.drawImage(this.___textureBuffer,0,0);
			ctx.restore();
		} else ctx.drawImage(this.___textureBuffer,0,0);
		if(inColorTransform != null) this.colorTransform(new openfl.geom.Rectangle(0,0,this.___textureBuffer.width,this.___textureBuffer.height),inColorTransform);
		if(blendMode == openfl.display.BlendMode.ADD) ctx.globalCompositeOperation = "source-over";
	}
	,fillRect: function(rect,color) {
		if(rect == null) return;
		if(rect.width <= 0 || rect.height <= 0) return;
		if(rect.x == 0 && rect.y == 0 && rect.width == this.___textureBuffer.width && rect.height == this.___textureBuffer.height) {
			if(this.__transparent) {
				if(color >>> 24 == 0 || color == this.__initColor) return this.__clearCanvas();
			} else if((color | -16777216) == (this.__initColor | -16777216)) return this.__clearCanvas();
		}
		return this.__fillRect(rect,color);
	}
	,floodFill: function(x,y,color) {
		var wasLocked = this.__locked;
		if(!this.__locked) this.lock();
		var queue = new Array();
		queue.push(new openfl.geom.Point(x,y));
		var old = this.getPixel32(x,y);
		var iterations = 0;
		var search = new Array();
		var _g1 = 0;
		var _g;
		_g = (this.___textureBuffer != null?this.___textureBuffer.width:0) + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var column = new Array();
			var _g3 = 0;
			var _g2;
			_g2 = (this.___textureBuffer != null?this.___textureBuffer.height:0) + 1;
			while(_g3 < _g2) {
				var i1 = _g3++;
				column.push(false);
			}
			search.push(column);
		}
		var currPoint;
		var newPoint;
		while(queue.length > 0) {
			currPoint = queue.shift();
			++iterations;
			var x1 = currPoint.x | 0;
			var y1 = currPoint.y | 0;
			if(x1 < 0 || x1 >= (this.___textureBuffer != null?this.___textureBuffer.width:0)) continue;
			if(y1 < 0 || y1 >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) continue;
			search[x1][y1] = true;
			if(this.getPixel32(x1,y1) == old) {
				this.setPixel32(x1,y1,color);
				if(!search[x1 + 1][y1]) queue.push(new openfl.geom.Point(x1 + 1,y1));
				if(!search[x1][y1 + 1]) queue.push(new openfl.geom.Point(x1,y1 + 1));
				if(x1 > 0 && !search[x1 - 1][y1]) queue.push(new openfl.geom.Point(x1 - 1,y1));
				if(y1 > 0 && !search[x1][y1 - 1]) queue.push(new openfl.geom.Point(x1,y1 - 1));
			}
		}
		if(!wasLocked) this.unlock();
	}
	,getColorBoundsRect: function(mask,color,findColor) {
		if(findColor == null) findColor = true;
		var me = this;
		var doGetColorBoundsRect = function(data) {
			var minX;
			if(me.___textureBuffer != null) minX = me.___textureBuffer.width; else minX = 0;
			var maxX = 0;
			var minY;
			if(me.___textureBuffer != null) minY = me.___textureBuffer.height; else minY = 0;
			var maxY = 0;
			var i = 0;
			while(i < data.length) {
				var value = me.getInt32(i,data);
				if(findColor) {
					if((value & mask) == color) {
						var x = Math.round(i % ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4) / 4);
						var y = Math.round(i / ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4));
						if(x < minX) minX = x;
						if(x > maxX) maxX = x;
						if(y < minY) minY = y;
						if(y > maxY) maxY = y;
					}
				} else if((value & mask) != color) {
					var x1 = Math.round(i % ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4) / 4);
					var y1 = Math.round(i / ((me.___textureBuffer != null?me.___textureBuffer.width:0) * 4));
					if(x1 < minX) minX = x1;
					if(x1 > maxX) maxX = x1;
					if(y1 < minY) minY = y1;
					if(y1 > maxY) maxY = y1;
				}
				i += 4;
			}
			if(minX < maxX && minY < maxY) return new openfl.geom.Rectangle(minX,minY,maxX - minX + 1,maxY - minY); else return new openfl.geom.Rectangle(0,0,me.___textureBuffer != null?me.___textureBuffer.width:0,me.___textureBuffer != null?me.___textureBuffer.height:0);
		};
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			return doGetColorBoundsRect(imageData.data);
		} else return doGetColorBoundsRect(this.__imageData.data);
	}
	,getInt32: function(offset,data) {
		return (this.__transparent?data[offset + 3]:255) << 24 | data[offset] << 16 | data[offset + 1] << 8 | data[offset + 2];
	}
	,getPixel: function(x,y) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return 0;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(x,y,1,1);
			return imagedata.data[0] << 16 | imagedata.data[1] << 8 | imagedata.data[2];
		} else {
			var offset;
			offset = 4 * y * (this.___textureBuffer != null?this.___textureBuffer.width:0) + x * 4;
			return this.__imageData.data[offset] << 16 | this.__imageData.data[offset + 1] << 8 | this.__imageData.data[offset + 2];
		}
	}
	,getPixel32: function(x,y) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return 0;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			return this.getInt32(0,ctx.getImageData(x,y,1,1).data);
		} else return this.getInt32(4 * y * this.___textureBuffer.width + x * 4,this.__imageData.data);
	}
	,getPixels: function(rect) {
		var len = Math.round(4 * rect.width * rect.height);
		var byteArray = new openfl.utils.ByteArray();
		if(byteArray.allocated < len) byteArray.___resizeBuffer(byteArray.allocated = Std["int"](Math.max(len,byteArray.allocated * 2))); else if(byteArray.allocated > len) byteArray.___resizeBuffer(byteArray.allocated = len);
		byteArray.length = len;
		len;
		rect = this.clipRect(rect);
		if(rect == null) return byteArray;
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				byteArray.writeByte(imagedata.data[i]);
			}
		} else {
			var offset = Math.round(4 * this.__imageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g1 = 0;
			while(_g1 < len) {
				var i1 = _g1++;
				if(pos % (this.__imageData.width * 4) > boundR - 1) pos += this.__imageData.width * 4 - boundR;
				byteArray.writeByte(this.__imageData.data[pos]);
				pos++;
			}
		}
		byteArray.position = 0;
		return byteArray;
	}
	,handle: function() {
		return this.___textureBuffer;
	}
	,hitTest: function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold) {
		if(secondAlphaThreshold == null) secondAlphaThreshold = 1;
		var type = Type.getClassName(Type.getClass(secondObject));
		firstAlphaThreshold = firstAlphaThreshold & -1;
		var me = this;
		var doHitTest = function(imageData) {
			if(secondObject.__proto__ == null || secondObject.__proto__.__class__ == null || secondObject.__proto__.__class__.__name__ == null) return false;
			var _g = secondObject.__proto__.__class__.__name__[2];
			switch(_g) {
			case "Rectangle":
				var rect = secondObject;
				rect.x -= firstPoint.x;
				rect.y -= firstPoint.y;
				rect = me.clipRect(me.rect);
				if(me.rect == null) return false;
				var boundingBox = new openfl.geom.Rectangle(0,0,me.___textureBuffer != null?me.___textureBuffer.width:0,me.___textureBuffer != null?me.___textureBuffer.height:0);
				if(!rect.intersects(boundingBox)) return false;
				var diff = rect.intersection(boundingBox);
				var offset = 4 * (Math.round(diff.x) + Math.round(diff.y) * imageData.width) + 3;
				var pos = offset;
				var boundR = Math.round(4 * (diff.x + diff.width));
				while(pos < offset + Math.round(4 * (diff.width + imageData.width * diff.height))) {
					if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
					if(imageData.data[pos] - firstAlphaThreshold >= 0) return true;
					pos += 4;
				}
				return false;
			case "Point":
				var point = secondObject;
				var x = point.x - firstPoint.x;
				var y = point.y - firstPoint.y;
				if(x < 0 || y < 0 || x >= (me.___textureBuffer != null?me.___textureBuffer.width:0) || y >= (me.___textureBuffer != null?me.___textureBuffer.height:0)) return false;
				if(imageData.data[Math.round(4 * (y * (me.___textureBuffer != null?me.___textureBuffer.width:0) + x)) + 3] - firstAlphaThreshold > 0) return true;
				return false;
			case "Bitmap":
				throw "bitmapData.hitTest with a second object of type Bitmap is currently not supported for HTML5";
				return false;
			case "BitmapData":
				throw "bitmapData.hitTest with a second object of type BitmapData is currently not supported for HTML5";
				return false;
			default:
				throw "BitmapData::hitTest secondObject argument must be either a Rectangle, a Point, a Bitmap or a BitmapData object.";
				return false;
			}
		};
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData1 = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
			return doHitTest(imageData1);
		} else return doHitTest(this.__imageData);
	}
	,lock: function() {
		this.__locked = true;
		var ctx = this.___textureBuffer.getContext("2d");
		this.__imageData = ctx.getImageData(0,0,this.___textureBuffer != null?this.___textureBuffer.width:0,this.___textureBuffer != null?this.___textureBuffer.height:0);
		this.__imageDataChanged = false;
		this.__copyPixelList = [];
	}
	,noise: function(randomSeed,low,high,channelOptions,grayScale) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		if(high == null) high = 255;
		if(low == null) low = 0;
		var generator = new openfl.display._BitmapData.MinstdGenerator(randomSeed);
		var ctx = this.___textureBuffer.getContext("2d");
		var imageData = null;
		if(this.__locked) imageData = this.__imageData; else imageData = ctx.createImageData(this.___textureBuffer.width,this.___textureBuffer.height);
		var _g1 = 0;
		var _g = this.___textureBuffer.width * this.___textureBuffer.height;
		while(_g1 < _g) {
			var i = _g1++;
			if(grayScale) imageData.data[i * 4] = imageData.data[i * 4 + 1] = imageData.data[i * 4 + 2] = low + generator.nextValue() % (high - low + 1); else {
				if((channelOptions & 1) == 0) imageData.data[i * 4] = 0; else imageData.data[i * 4] = low + generator.nextValue() % (high - low + 1);
				if((channelOptions & 2) == 0) imageData.data[i * 4 + 1] = 0; else imageData.data[i * 4 + 1] = low + generator.nextValue() % (high - low + 1);
				if((channelOptions & 4) == 0) imageData.data[i * 4 + 2] = 0; else imageData.data[i * 4 + 2] = low + generator.nextValue() % (high - low + 1);
			}
			if((channelOptions & 8) == 0) imageData.data[i * 4 + 3] = 255; else imageData.data[i * 4 + 3] = low + generator.nextValue() % (high - low + 1);
		}
		if(this.__locked) this.__imageDataChanged = true; else ctx.putImageData(imageData,0,0);
	}
	,scroll: function(x,y) {
		throw "bitmapData.scroll is currently not supported for HTML5";
	}
	,setPixel: function(x,y,color) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return;
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.__transparent) imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.__imageData.width + x * 4;
			this.__imageData.data[offset] = (color & 16711680) >>> 16;
			this.__imageData.data[offset + 1] = (color & 65280) >>> 8;
			this.__imageData.data[offset + 2] = color & 255;
			if(this.__transparent) this.__imageData.data[offset + 3] = 255;
			this.__imageDataChanged = true;
		}
	}
	,setPixel32: function(x,y,color) {
		if(x < 0 || y < 0 || x >= (this.___textureBuffer != null?this.___textureBuffer.width:0) || y >= (this.___textureBuffer != null?this.___textureBuffer.height:0)) return;
		if(!this.__locked) {
			this.__lease.set(this.__leaseNum++,new Date().getTime());
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.__transparent) imageData.data[3] = (color & -16777216) >>> 24; else imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.__imageData.width + x * 4;
			this.__imageData.data[offset] = (color & 16711680) >>> 16;
			this.__imageData.data[offset + 1] = (color & 65280) >>> 8;
			this.__imageData.data[offset + 2] = color & 255;
			if(this.__transparent) this.__imageData.data[offset + 3] = (color & -16777216) >>> 24; else this.__imageData.data[offset + 3] = 255;
			this.__imageDataChanged = true;
		}
	}
	,setPixels: function(rect,byteArray) {
		rect = this.clipRect(rect);
		if(rect == null) return;
		var len = Math.round(4 * rect.width * rect.height);
		if(!this.__locked) {
			var ctx = this.___textureBuffer.getContext("2d");
			var imageData = ctx.createImageData(rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				imageData.data[i] = byteArray.readByte();
			}
			ctx.putImageData(imageData,rect.x,rect.y);
		} else {
			var offset = Math.round(4 * this.__imageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g1 = 0;
			while(_g1 < len) {
				var i1 = _g1++;
				if(pos % (this.__imageData.width * 4) > boundR - 1) pos += this.__imageData.width * 4 - boundR;
				this.__imageData.data[pos] = byteArray.readByte();
				pos++;
			}
			this.__imageDataChanged = true;
		}
	}
	,threshold: function(sourceBitmapData,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		haxe.Log.trace("BitmapData.threshold not implemented",{ fileName : "BitmapData.hx", lineNumber : 1178, className : "openfl.display.BitmapData", methodName : "threshold"});
		return 0;
	}
	,unlock: function(changeRect) {
		this.__locked = false;
		var ctx = this.___textureBuffer.getContext("2d");
		if(this.__imageDataChanged) {
			if(changeRect != null) ctx.putImageData(this.__imageData,0,0,changeRect.x,changeRect.y,changeRect.width,changeRect.height); else ctx.putImageData(this.__imageData,0,0);
		}
		var _g = 0;
		var _g1 = this.__copyPixelList;
		while(_g < _g1.length) {
			var copyCache = _g1[_g];
			++_g;
			if(this.__transparent && copyCache.transparentFiller != null) {
				var trpCtx = copyCache.transparentFiller.getContext("2d");
				var trpData = trpCtx.getImageData(copyCache.sourceX,copyCache.sourceY,copyCache.sourceWidth,copyCache.sourceHeight);
				ctx.putImageData(trpData,copyCache.destX,copyCache.destY);
			}
			ctx.drawImage(copyCache.handle,copyCache.sourceX,copyCache.sourceY,copyCache.sourceWidth,copyCache.sourceHeight,copyCache.destX,copyCache.destY,copyCache.sourceWidth,copyCache.sourceHeight);
		}
		this.__lease.set(this.__leaseNum++,new Date().getTime());
	}
	,__buildLease: function() {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
	}
	,__clearCanvas: function() {
		var ctx = this.___textureBuffer.getContext("2d");
		ctx.clearRect(0,0,this.___textureBuffer.width,this.___textureBuffer.height);
	}
	,__decrNumRefBitmaps: function() {
		this.__assignedBitmaps--;
	}
	,__fillRect: function(rect,color) {
		this.__lease.set(this.__leaseNum++,new Date().getTime());
		var ctx = this.___textureBuffer.getContext("2d");
		var r = (color & 16711680) >>> 16;
		var g = (color & 65280) >>> 8;
		var b = color & 255;
		var a;
		if(this.__transparent) a = color >>> 24; else a = 255;
		if(!this.__locked) {
			var style = "rgba(" + r + ", " + g + ", " + b + ", " + a / 255 + ")";
			ctx.fillStyle = style;
			ctx.fillRect(rect.x,rect.y,rect.width,rect.height);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.__imageData.width);
			var offsetY;
			var offsetX;
			var _g1 = 0;
			var _g = Math.round(rect.height);
			while(_g1 < _g) {
				var i = _g1++;
				offsetY = i * this.__imageData.width;
				var _g3 = 0;
				var _g2 = Math.round(rect.width);
				while(_g3 < _g2) {
					var j = _g3++;
					offsetX = 4 * (j + offsetY);
					this.__imageData.data[s + offsetX] = r;
					this.__imageData.data[s + offsetX + 1] = g;
					this.__imageData.data[s + offsetX + 2] = b;
					this.__imageData.data[s + offsetX + 3] = a;
				}
			}
			this.__imageDataChanged = true;
		}
	}
	,__getLease: function() {
		return this.__lease;
	}
	,__loadFromBase64: function(base64,type,onload) {
		var _g = this;
		var img = window.document.createElement("img");
		var canvas = this.___textureBuffer;
		var drawImage = function(_) {
			canvas.width = img.width;
			canvas.height = img.height;
			var ctx = canvas.getContext("2d");
			ctx.drawImage(img,0,0);
			_g.rect = new openfl.geom.Rectangle(0,0,canvas.width,canvas.height);
			if(onload != null) onload(_g);
		};
		img.addEventListener("load",drawImage,false);
		img.src = "data:" + type + ";base64," + base64;
	}
	,__loadFromBytes: function(bytes,inRawAlpha,onload) {
		var _g = this;
		var type = "";
		if(openfl.display.BitmapData.__isPNG(bytes)) type = "image/png"; else if(openfl.display.BitmapData.__isJPG(bytes)) type = "image/jpeg"; else if(openfl.display.BitmapData.__isGIF(bytes)) type = "image/gif"; else throw new openfl.errors.IOError("BitmapData tried to read a PNG/JPG ByteArray, but found an invalid header.");
		if(inRawAlpha != null) this.__loadFromBase64(openfl.display.BitmapData.__base64Encode(bytes),type,function(_) {
			var ctx = _g.___textureBuffer.getContext("2d");
			var pixels = ctx.getImageData(0,0,_g.___textureBuffer.width,_g.___textureBuffer.height);
			var _g2 = 0;
			var _g1 = inRawAlpha.length;
			while(_g2 < _g1) {
				var i = _g2++;
				pixels.data[i * 4 + 3] = inRawAlpha.readUnsignedByte();
			}
			ctx.putImageData(pixels,0,0);
			if(onload != null) onload(_g);
		}); else this.__loadFromBase64(openfl.display.BitmapData.__base64Encode(bytes),type,onload);
	}
	,__getNumRefBitmaps: function() {
		return this.__assignedBitmaps;
	}
	,__incrNumRefBitmaps: function() {
		this.__assignedBitmaps++;
	}
	,__loadFromFile: function(inFilename,inLoader) {
		var _g = this;
		var image = window.document.createElement("img");
		if(inLoader != null) {
			var data = { image : image, texture : this.___textureBuffer, inLoader : inLoader, bitmapData : this};
			image.addEventListener("load",(function(f,a1) {
				return function(e) {
					return f(a1,e);
				};
			})($bind(this,this.__onLoad),data),false);
			image.addEventListener("error",function(e1) {
				if(!image.complete) _g.__onLoad(data,e1);
			},false);
		}
		image.src = inFilename;
		if(image.complete) {
		}
	}
	,__onLoad: function(data,e) {
		var canvas = data.texture;
		var width = data.image.width;
		var height = data.image.height;
		canvas.width = width;
		canvas.height = height;
		var ctx = canvas.getContext("2d");
		ctx.drawImage(data.image,0,0,width,height);
		data.bitmapData.width = width;
		data.bitmapData.height = height;
		data.bitmapData.rect = new openfl.geom.Rectangle(0,0,width,height);
		data.bitmapData.__buildLease();
		if(data.inLoader != null) {
			data.inLoader.bytesTotal = 1;
			data.inLoader.bytesLoaded = 1;
			var e1 = new openfl.events.Event(openfl.events.Event.COMPLETE);
			e1.target = data.inLoader;
			data.inLoader.dispatchEvent(e1);
		} else haxe.Log.trace("Error: loader is null",{ fileName : "BitmapData.hx", lineNumber : 1567, className : "openfl.display.BitmapData", methodName : "__onLoad"});
	}
	,get_height: function() {
		if(this.___textureBuffer != null) return this.___textureBuffer.height; else return 0;
	}
	,get_transparent: function() {
		return this.__transparent;
	}
	,get_width: function() {
		if(this.___textureBuffer != null) return this.___textureBuffer.width; else return 0;
	}
	,__class__: openfl.display.BitmapData
	,__properties__: {get_width:"get_width",get_transparent:"get_transparent",get_height:"get_height"}
};
openfl.display.ImageDataLease = function() {
};
$hxClasses["openfl.display.ImageDataLease"] = openfl.display.ImageDataLease;
openfl.display.ImageDataLease.__name__ = ["openfl","display","ImageDataLease"];
openfl.display.ImageDataLease.prototype = {
	clone: function() {
		var leaseClone = new openfl.display.ImageDataLease();
		leaseClone.seed = this.seed;
		leaseClone.time = this.time;
		return leaseClone;
	}
	,set: function(s,t) {
		this.seed = s;
		this.time = t;
	}
	,__class__: openfl.display.ImageDataLease
};
openfl.display._BitmapData = {};
openfl.display._BitmapData.MinstdGenerator = function(seed) {
	if(seed == 0) this.value = 1; else this.value = seed;
};
$hxClasses["openfl.display._BitmapData.MinstdGenerator"] = openfl.display._BitmapData.MinstdGenerator;
openfl.display._BitmapData.MinstdGenerator.__name__ = ["openfl","display","_BitmapData","MinstdGenerator"];
openfl.display._BitmapData.MinstdGenerator.prototype = {
	nextValue: function() {
		var lo = 16807 * (this.value & 65535);
		var hi = 16807 * (this.value >>> 16);
		lo += (hi & 32767) << 16;
		if(lo < 0 || lo > -2147483648 - 1) {
			lo &= -2147483648 - 1;
			++lo;
		}
		lo += hi >>> 15;
		if(lo < 0 || lo > -2147483648 - 1) {
			lo &= -2147483648 - 1;
			++lo;
		}
		return this.value = lo;
	}
	,__class__: openfl.display._BitmapData.MinstdGenerator
};
openfl.display.BitmapDataChannel = function() { };
$hxClasses["openfl.display.BitmapDataChannel"] = openfl.display.BitmapDataChannel;
openfl.display.BitmapDataChannel.__name__ = ["openfl","display","BitmapDataChannel"];
openfl.display.BlendMode = $hxClasses["openfl.display.BlendMode"] = { __ename__ : ["openfl","display","BlendMode"], __constructs__ : ["ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SUBTRACT"] };
openfl.display.BlendMode.ADD = ["ADD",0];
openfl.display.BlendMode.ADD.toString = $estr;
openfl.display.BlendMode.ADD.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.ALPHA = ["ALPHA",1];
openfl.display.BlendMode.ALPHA.toString = $estr;
openfl.display.BlendMode.ALPHA.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.DARKEN = ["DARKEN",2];
openfl.display.BlendMode.DARKEN.toString = $estr;
openfl.display.BlendMode.DARKEN.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.DIFFERENCE = ["DIFFERENCE",3];
openfl.display.BlendMode.DIFFERENCE.toString = $estr;
openfl.display.BlendMode.DIFFERENCE.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.ERASE = ["ERASE",4];
openfl.display.BlendMode.ERASE.toString = $estr;
openfl.display.BlendMode.ERASE.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.HARDLIGHT = ["HARDLIGHT",5];
openfl.display.BlendMode.HARDLIGHT.toString = $estr;
openfl.display.BlendMode.HARDLIGHT.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.INVERT = ["INVERT",6];
openfl.display.BlendMode.INVERT.toString = $estr;
openfl.display.BlendMode.INVERT.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.LAYER = ["LAYER",7];
openfl.display.BlendMode.LAYER.toString = $estr;
openfl.display.BlendMode.LAYER.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.LIGHTEN = ["LIGHTEN",8];
openfl.display.BlendMode.LIGHTEN.toString = $estr;
openfl.display.BlendMode.LIGHTEN.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.MULTIPLY = ["MULTIPLY",9];
openfl.display.BlendMode.MULTIPLY.toString = $estr;
openfl.display.BlendMode.MULTIPLY.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.NORMAL = ["NORMAL",10];
openfl.display.BlendMode.NORMAL.toString = $estr;
openfl.display.BlendMode.NORMAL.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.OVERLAY = ["OVERLAY",11];
openfl.display.BlendMode.OVERLAY.toString = $estr;
openfl.display.BlendMode.OVERLAY.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.SCREEN = ["SCREEN",12];
openfl.display.BlendMode.SCREEN.toString = $estr;
openfl.display.BlendMode.SCREEN.__enum__ = openfl.display.BlendMode;
openfl.display.BlendMode.SUBTRACT = ["SUBTRACT",13];
openfl.display.BlendMode.SUBTRACT.toString = $estr;
openfl.display.BlendMode.SUBTRACT.__enum__ = openfl.display.BlendMode;
openfl.display.GradientType = $hxClasses["openfl.display.GradientType"] = { __ename__ : ["openfl","display","GradientType"], __constructs__ : ["RADIAL","LINEAR"] };
openfl.display.GradientType.RADIAL = ["RADIAL",0];
openfl.display.GradientType.RADIAL.toString = $estr;
openfl.display.GradientType.RADIAL.__enum__ = openfl.display.GradientType;
openfl.display.GradientType.LINEAR = ["LINEAR",1];
openfl.display.GradientType.LINEAR.toString = $estr;
openfl.display.GradientType.LINEAR.__enum__ = openfl.display.GradientType;
openfl.display.Graphics = function(snap) {
	openfl.Lib.__bootstrap();
	if(snap == null) {
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		this.__snap = me123.group.apply(me123, e123);
		openfl.Lib.get_freeSnap().append(this.__snap);
		this.__snap.addClass("graphics");
	} else this.__snap = snap;
	this.mLastMoveID = 0;
	this.mPenX = 0.0;
	this.mPenY = 0.0;
	this.mDrawList = new Array();
	this.mPoints = [];
	this.mSolidGradient = null;
	this.mBitmap = null;
	this.mFilling = false;
	this.mFillColour = 0;
	this.mFillAlpha = 0.0;
	this.mLastMoveID = 0;
	this.boundsDirty = true;
	this.__clearLine();
	this.mLineJobs = [];
	this.set___changed(true);
	this.nextDrawIndex = 0;
	this.__extent = new openfl.geom.Rectangle();
	this.__extentWithFilters = new openfl.geom.Rectangle();
	this._padding = 0.0;
	this.__clearNextCycle = true;
};
$hxClasses["openfl.display.Graphics"] = openfl.display.Graphics;
openfl.display.Graphics.__name__ = ["openfl","display","Graphics"];
openfl.display.Graphics.__detectIsPointInPathMode = function() {
	var canvas = window.document.createElement("canvas");
	var ctx = canvas.getContext("2d");
	if(ctx.isPointInPath == null) return openfl.display.PointInPathMode.USER_SPACE;
	ctx.save();
	ctx.translate(1,0);
	ctx.beginPath();
	ctx.rect(0,0,1,1);
	var rv;
	if(ctx.isPointInPath(0.3,0.3)) rv = openfl.display.PointInPathMode.USER_SPACE; else rv = openfl.display.PointInPathMode.DEVICE_SPACE;
	ctx.restore();
	return rv;
};
openfl.display.Graphics.prototype = {
	addDrawable: function(inDrawable) {
		if(inDrawable == null) return;
		this.mDrawList.unshift(inDrawable);
	}
	,addLineSegment: function() {
		if(this.mCurrentLine.point_idx1 > 0) this.mLineJobs.push(new openfl.display.LineJob(this.mCurrentLine.grad,this.mCurrentLine.point_idx0,this.mCurrentLine.point_idx1,this.mCurrentLine.thickness,this.mCurrentLine.alpha,this.mCurrentLine.colour,this.mCurrentLine.pixel_hinting,this.mCurrentLine.joints,this.mCurrentLine.caps,this.mCurrentLine.scale_mode,this.mCurrentLine.miter_limit));
		this.mCurrentLine.point_idx0 = this.mCurrentLine.point_idx1 = -1;
	}
	,beginBitmapFill: function(bitmap,matrix,in_repeat,in_smooth) {
		if(in_smooth == null) in_smooth = false;
		if(in_repeat == null) in_repeat = true;
		this.closePolygon(true);
		var repeat;
		if(in_repeat == null) repeat = true; else repeat = in_repeat;
		var smooth;
		if(in_smooth == null) smooth = false; else smooth = in_smooth;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.__expandStandardExtent(bitmap.___textureBuffer != null?bitmap.___textureBuffer.width:0,bitmap.___textureBuffer != null?bitmap.___textureBuffer.height:0);
		this.mBitmap = { texture_buffer : bitmap.___textureBuffer, matrix : matrix == null?matrix:matrix.clone(), flags : (repeat?16:0) | (smooth?65536:0)};
	}
	,beginFill: function(color,alpha) {
		this.closePolygon(true);
		this.mFillColour = color;
		if(alpha == null) this.mFillAlpha = 1.0; else this.mFillAlpha = alpha;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.mBitmap = null;
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.closePolygon(true);
		this.mFilling = true;
		this.mBitmap = null;
		this.mSolidGradient = this.createGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,blit: function(inTexture) {
	}
	,clear: function() {
		this.__clearLine();
		this.mPenX = 0.0;
		this.mPenY = 0.0;
		this.mDrawList = new Array();
		this.nextDrawIndex = 0;
		this.mPoints = [];
		this.mSolidGradient = null;
		this.mFilling = false;
		this.mFillColour = 0;
		this.mFillAlpha = 0.0;
		this.mLastMoveID = 0;
		this.__clearNextCycle = true;
		this.boundsDirty = true;
		this.__extent.x = 0.0;
		this.__extent.y = 0.0;
		this.__extent.width = 0.0;
		this.__extent.height = 0.0;
		this._padding = 0.0;
		this.mLineJobs = [];
		this.set___changed(true);
	}
	,closePolygon: function(inCancelFill) {
		var l = this.mPoints.length;
		if(l > 0) {
			if(l > 1) {
				if(this.mFilling && l > 2) {
					if(this.mPoints[this.mLastMoveID].x != this.mPoints[l - 1].x || this.mPoints[this.mLastMoveID].y != this.mPoints[l - 1].y) this.lineTo(this.mPoints[this.mLastMoveID].x,this.mPoints[this.mLastMoveID].y);
				}
				this.addLineSegment();
				var drawable = new openfl.display.Drawable(this.mPoints,this.mFillColour,this.mFillAlpha,this.mSolidGradient,this.mBitmap,this.mLineJobs,null,openfl.display.SnapJob.getPathJob());
				this.addDrawable(drawable);
			}
			this.mLineJobs = [];
			this.mPoints = [];
		}
		if(inCancelFill) {
			this.mFillAlpha = 0;
			this.mSolidGradient = null;
			this.mBitmap = null;
			this.mFilling = false;
		}
		this.set___changed(true);
	}
	,createCanvasColor: function(color,alpha) {
		var r = (16711680 & color) >> 16;
		var g = (65280 & color) >> 8;
		var b = 255 & color;
		return "rgba" + "(" + r + "," + g + "," + b + "," + alpha + ")";
	}
	,createCanvasGradient: function(g) {
		var gradientString = new StringBuf();
		if((g.flags & 1) == 0) gradientString.b += "L(-819.2, 0, 819.2, 0)"; else gradientString.add(Snap.format("R(0, 0, 819.2, {x}, 0)",{ x : g.focal * 819.2}));
		var points = [];
		var _g = 0;
		var _g1 = g.points;
		while(_g < _g1.length) {
			var point = _g1[_g];
			++_g;
			points.push(Snap.format("{color}:{pos}",{ color : this.createCanvasColor(point.col,point.alpha), pos : point.ratio / 255 * 100 | 0}));
		}
		gradientString.add(points.join("-"));
		var gradient = openfl.Lib.get_snap().gradient(gradientString.b);
		gradient.attr({ gradientTransform : "matrix(" + g.matrix.a + "," + g.matrix.b + "," + g.matrix.c + "," + g.matrix.d + "," + g.matrix.tx + "," + g.matrix.ty + ")", spreadMethod : (g.flags & 4) != 0?"reflect":(g.flags & 2) != 0?"repeat":"pad"});
		return gradient;
	}
	,createGradient: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		var points = new Array();
		var _g1 = 0;
		var _g = colors.length;
		while(_g1 < _g) {
			var i = _g1++;
			points.push(new openfl.display.GradPoint(colors[i],alphas[i],ratios[i]));
		}
		var flags = 0;
		if(type == openfl.display.GradientType.RADIAL) flags |= 1;
		if(spreadMethod == openfl.display.SpreadMethod.REPEAT) flags |= 2; else if(spreadMethod == openfl.display.SpreadMethod.REFLECT) flags |= 4;
		if(matrix == null) {
			matrix = new openfl.geom.Matrix();
			matrix.createGradientBox(25,25);
		} else matrix = matrix.clone();
		var focal;
		if(focalPointRatio == null) focal = 0; else focal = focalPointRatio;
		return new openfl.display.Grad(points,matrix,flags,focal);
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new openfl.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY,this.mCurrentLine.thickness);
		this.mPoints.push(new openfl.display.GfxPoint(inX,inY,inCX,inCY,2));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
		this.set___changed(true);
	}
	,drawCircle: function(x,y,rad) {
		this.closePolygon(false);
		this.__drawCircle(x,y,rad);
	}
	,drawEllipse: function(x,y,rx,ry) {
		this.closePolygon(false);
		rx /= 2;
		ry /= 2;
		this.__drawEllipse(x + rx,y + ry,rx,ry);
	}
	,drawGraphicsData: function(points) {
		var $it0 = $iterator(openfl._Vector.Vector_Impl_)(points);
		while( $it0.hasNext() ) {
			var data = $it0.next();
			if(data == null) this.mFilling = true; else switch(data.__graphicsDataType) {
			case openfl.display.GraphicsDataType.STROKE:
				var stroke = data;
				if(stroke.fill == null) this.lineStyle(stroke.thickness,0,1.,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit); else switch(stroke.fill.__graphicsFillType) {
				case openfl.display.GraphicsFillType.SOLID_FILL:
					var fill = stroke.fill;
					this.lineStyle(stroke.thickness,fill.color,fill.alpha,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					break;
				case openfl.display.GraphicsFillType.GRADIENT_FILL:
					this.lineStyle(stroke.thickness,null,null,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					var fill1 = stroke.fill;
					this.lineGradientStyle(fill1.type,fill1.colors,fill1.alphas,fill1.ratios,fill1.matrix,fill1.spreadMethod,fill1.interpolationMethod,fill1.focalPointRatio);
					break;
				}
				break;
			case openfl.display.GraphicsDataType.PATH:
				var path = data;
				var j = 0;
				var _g1 = 0;
				var _g = openfl._Vector.Vector_Impl_.get_length(path.commands);
				while(_g1 < _g) {
					var i = _g1++;
					var command = path.commands[i];
					switch(command) {
					case 1:
						this.moveTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 2:
						this.lineTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 3:
						this.curveTo(path.data[j],path.data[j + 1],path.data[j + 2],path.data[j + 3]);
						j = j + 4;
						break;
					}
				}
				break;
			case openfl.display.GraphicsDataType.SOLID:
				var fill2 = data;
				this.beginFill(fill2.color,fill2.alpha);
				break;
			case openfl.display.GraphicsDataType.GRADIENT:
				var fill3 = data;
				this.beginGradientFill(fill3.type,fill3.colors == null?[]:fill3.colors,fill3.alphas == null?[]:fill3.alphas,fill3.ratios == null?[]:fill3.ratios,fill3.matrix,fill3.spreadMethod,fill3.interpolationMethod,fill3.focalPointRatio);
				break;
			case openfl.display.GraphicsDataType.BITMAP:
				var fill4 = data;
				this.beginBitmapFill(fill4.bitmapData,fill4.matrix,fill4.repeat,fill4.smooth);
				break;
			}
		}
		this.set___changed(true);
	}
	,drawRect: function(x,y,width,height) {
		this.closePolygon(false);
		this.__drawRect(x,y,width,height,0,0);
	}
	,drawRoundRect: function(x,y,width,height,rx,ry) {
		if(ry == null) ry = -1;
		this.closePolygon(false);
		this.__drawRect(x,y,width,height,rx,ry == -1?rx:ry);
	}
	,drawTiles: function(sheet,tileData,smooth,flags) {
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		this.__expandStandardExtent(openfl.Lib.get_current().get_stage().get_stageWidth(),openfl.Lib.get_current().get_stage().get_stageHeight());
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var index = 0;
		var numValues = 3;
		if(useScale) numValues++;
		if(useRotation) numValues++;
		if(useTransform) numValues += 4;
		if(useRGB) numValues += 3;
		if(useAlpha) numValues++;
		while(index < tileData.length) {
			this.__expandStandardExtent(tileData[index] + sheet.__bitmap.get_width(),tileData[index + 1] + sheet.__bitmap.get_height());
			index += numValues;
		}
		this.addDrawable(new openfl.display.Drawable(null,null,null,null,null,null,new openfl.display.TileJob(sheet,tileData,flags),null));
		this.set___changed(true);
	}
	,endFill: function() {
		this.closePolygon(true);
	}
	,flush: function() {
		this.closePolygon(true);
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.mCurrentLine.grad = this.createGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		this.addLineSegment();
		if(thickness == null) {
			this.__clearLine();
			return;
		} else {
			this.mCurrentLine.grad = null;
			this.mCurrentLine.thickness = thickness;
			if(color == null) this.mCurrentLine.colour = 0; else this.mCurrentLine.colour = color;
			if(alpha == null) this.mCurrentLine.alpha = 1.0; else this.mCurrentLine.alpha = alpha;
			if(miterLimit == null) this.mCurrentLine.miter_limit = 3.0; else this.mCurrentLine.miter_limit = miterLimit;
			if(pixelHinting == null || !pixelHinting) this.mCurrentLine.pixel_hinting = 0; else this.mCurrentLine.pixel_hinting = 16384;
		}
		if(caps != null) switch(caps[1]) {
		case 1:
			this.mCurrentLine.caps = 256;
			break;
		case 2:
			this.mCurrentLine.caps = 512;
			break;
		case 0:
			this.mCurrentLine.caps = 0;
			break;
		}
		this.mCurrentLine.scale_mode = 3;
		if(scaleMode != null) switch(scaleMode[1]) {
		case 2:
			this.mCurrentLine.scale_mode = 3;
			break;
		case 3:
			this.mCurrentLine.scale_mode = 1;
			break;
		case 0:
			this.mCurrentLine.scale_mode = 2;
			break;
		case 1:
			this.mCurrentLine.scale_mode = 0;
			break;
		}
		this.mCurrentLine.joints = 0;
		if(joints != null) switch(joints[1]) {
		case 1:
			this.mCurrentLine.joints = 0;
			break;
		case 0:
			this.mCurrentLine.joints = 4096;
			break;
		case 2:
			this.mCurrentLine.joints = 8192;
			break;
		}
	}
	,lineTo: function(inX,inY) {
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new openfl.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY,this.mCurrentLine.thickness);
		this.mPoints.push(new openfl.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,1));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
		if(!this.mFilling) this.closePolygon(false);
		this.set___changed(true);
	}
	,moveTo: function(inX,inY) {
		this.mPenX = inX;
		this.mPenY = inY;
		this.__expandStandardExtent(inX,inY);
		if(!this.mFilling) this.closePolygon(false); else {
			this.addLineSegment();
			this.mLastMoveID = this.mPoints.length;
			this.mPoints.push(new openfl.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,0));
		}
		this.set___changed(true);
	}
	,__adjustSurface: function(sx,sy) {
		if(sy == null) sy = 1.0;
		if(sx == null) sx = 1.0;
	}
	,__clearCanvas: function() {
		var node = this.__snap.node;
		while(null != node.firstChild) node.removeChild(node.firstChild);
	}
	,__clearLine: function() {
		this.mCurrentLine = new openfl.display.LineJob(null,-1,-1,0.0,0.0,0,1,0,256,3,3.0);
	}
	,__getCurrentLineJobs: function() {
		var result;
		if(this.mCurrentLine.thickness != 0) result = [new openfl.display.LineJob(this.mCurrentLine.grad,this.mCurrentLine.point_idx0,this.mCurrentLine.point_idx1,this.mCurrentLine.thickness,this.mCurrentLine.alpha,this.mCurrentLine.colour,this.mCurrentLine.pixel_hinting,this.mCurrentLine.joints,this.mCurrentLine.caps,this.mCurrentLine.scale_mode,this.mCurrentLine.miter_limit)]; else result = [];
		return result;
	}
	,__drawEllipse: function(x,y,rx,ry) {
		this.__expandStandardExtent(x + rx,y + ry,this.mCurrentLine.thickness);
		var drawable = new openfl.display.Drawable(null,this.mFillColour,this.mFillAlpha,this.mSolidGradient,this.mBitmap,this.__getCurrentLineJobs(),null,openfl.display.SnapJob.getEllipseJob(x,y,rx,ry));
		this.addDrawable(drawable);
	}
	,__drawCircle: function(x,y,rad) {
		this.__expandStandardExtent(x + rad,y + rad,this.mCurrentLine.thickness);
		var drawable = new openfl.display.Drawable(null,this.mFillColour,this.mFillAlpha,this.mSolidGradient,this.mBitmap,this.__getCurrentLineJobs(),null,openfl.display.SnapJob.getCircleJob(x,y,rad));
		this.addDrawable(drawable);
	}
	,__drawRect: function(x,y,width,height,rx,ry) {
		this.__expandStandardExtent(x + width,y + height,this.mCurrentLine.thickness);
		var drawable = new openfl.display.Drawable(null,this.mFillColour,this.mFillAlpha,this.mSolidGradient,this.mBitmap,this.__getCurrentLineJobs(),null,openfl.display.SnapJob.getRectJob(x,y,width,height,rx,ry));
		this.addDrawable(drawable);
	}
	,__drawTilesAsSingleImage: function(sheet,tileData,flags) {
		if(flags == null) flags = 0;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var scaleIndex = 0;
		var rotationIndex = 0;
		var rgbIndex = 0;
		var alphaIndex = 0;
		var transformIndex = 0;
		var numValues = 3;
		if(useScale) {
			scaleIndex = numValues;
			numValues++;
		}
		if(useRotation) {
			rotationIndex = numValues;
			numValues++;
		}
		if(useTransform) {
			transformIndex = numValues;
			numValues += 4;
		}
		if(useRGB) {
			rgbIndex = numValues;
			numValues += 3;
		}
		if(useAlpha) {
			alphaIndex = numValues;
			numValues++;
		}
		var totalCount = tileData.length;
		var itemCount = totalCount / numValues | 0;
		var index = 0;
		var rect = null;
		var center = null;
		var previousTileID = -1;
		var surface = sheet.__bitmap.___textureBuffer;
		var canvas = window.document.createElement("canvas");
		canvas.width = this.__extent.width | 0;
		canvas.height = this.__extent.height | 0;
		var ctx = canvas.getContext("2d");
		while(index < totalCount) {
			var tileID = tileData[index + 2] | 0;
			if(tileID != previousTileID) {
				rect = sheet.__tileRects[tileID];
				center = sheet.__centerPoints[tileID];
				previousTileID = tileID;
			}
			if(rect != null && center != null) {
				ctx.save();
				ctx.translate(tileData[index],tileData[index + 1]);
				if(useRotation) ctx.rotate(tileData[index + rotationIndex]);
				var scale = 1.0;
				if(useScale) scale = tileData[index + scaleIndex];
				if(useTransform) ctx.transform(tileData[index + transformIndex],tileData[index + transformIndex + 1],tileData[index + transformIndex + 2],tileData[index + transformIndex + 3],0,0);
				if(useAlpha) ctx.globalAlpha = tileData[index + alphaIndex];
				ctx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,-center.x * scale,-center.y * scale,rect.width * scale,rect.height * scale);
				ctx.restore();
			}
			index += numValues;
		}
		this.__clearCanvas();
		this.__snap.append(openfl.Lib.get_snap().image(canvas.toDataURL("image/png"),0,0,canvas.width,canvas.height));
	}
	,__drawTiles: function(sheet,tileData,flags) {
		if(flags == null) flags = 0;
		this.__clearCanvas();
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var scaleIndex = 0;
		var rotationIndex = 0;
		var rgbIndex = 0;
		var alphaIndex = 0;
		var transformIndex = 0;
		var numValues = 3;
		if(useScale) {
			scaleIndex = numValues;
			numValues++;
		}
		if(useRotation) {
			rotationIndex = numValues;
			numValues++;
		}
		if(useTransform) {
			transformIndex = numValues;
			numValues += 4;
		}
		if(useRGB) {
			rgbIndex = numValues;
			numValues += 3;
		}
		if(useAlpha) {
			alphaIndex = numValues;
			numValues++;
		}
		var totalCount = tileData.length;
		var itemCount = totalCount / numValues | 0;
		var index = 0;
		var rect = null;
		var center = null;
		var previousTileID = -1;
		var canvas = window.document.createElement("canvas");
		var ctx = canvas.getContext("2d");
		var surface = sheet.__bitmap.___textureBuffer;
		var imageDataUrl = "";
		while(index < totalCount) {
			var tileID = tileData[index + 2] | 0;
			if(tileID != previousTileID) {
				rect = sheet.__tileRects[tileID];
				center = sheet.__centerPoints[tileID];
				previousTileID = tileID;
				canvas.width = rect.width | 0;
				canvas.height = rect.height | 0;
				ctx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,0,0,rect.width,rect.height);
				imageDataUrl = canvas.toDataURL("image/png");
			}
			if(rect != null && center != null) {
				var image = openfl.Lib.get_snap().image(imageDataUrl,0,0,rect.width,rect.height);
				var el = image.node;
				var matrix = new openfl.geom.Matrix();
				if(useRotation) matrix.rotate(tileData[index + rotationIndex]);
				if(useScale) matrix.scale(tileData[index + scaleIndex],tileData[index + scaleIndex]);
				if(useTransform) matrix = new openfl.geom.Matrix(tileData[index + transformIndex],tileData[index + transformIndex + 1],tileData[index + transformIndex + 2],tileData[index + transformIndex + 3],0,0);
				matrix.translate(tileData[index],tileData[index + 1]);
				if(useAlpha) el.setAttribute("opacity",Std.string(tileData[index + alphaIndex]));
				el.setAttribute("transform","matrix(" + matrix.a + ", " + matrix.b + ", " + matrix.c + ", " + matrix.d + ", " + matrix.tx + ", " + matrix.ty + ")");
				this.__snap.append(image);
			}
			index += numValues;
		}
	}
	,__expandFilteredExtent: function(x,y) {
		var maxX;
		var minX;
		var maxY;
		var minY;
		minX = this.__extent.x;
		minY = this.__extent.y;
		maxX = this.__extent.width + minX;
		maxY = this.__extent.height + minY;
		if(x > maxX) maxX = x; else maxX = maxX;
		if(x < minX) minX = x; else minX = minX;
		if(y > maxY) maxY = y; else maxY = maxY;
		if(y < minY) minY = y; else minY = minY;
		this.__extentWithFilters.x = minX;
		this.__extentWithFilters.y = minY;
		this.__extentWithFilters.width = maxX - minX;
		this.__extentWithFilters.height = maxY - minY;
	}
	,__expandStandardExtent: function(x,y,thickness) {
		if(thickness == null) thickness = 0;
		if(this._padding > 0) {
			this.__extent.width -= this._padding;
			this.__extent.height -= this._padding;
		}
		if(thickness != null && thickness > this._padding) this._padding = thickness;
		var maxX;
		var minX;
		var maxY;
		var minY;
		minX = this.__extent.x;
		minY = this.__extent.y;
		maxX = this.__extent.width + minX;
		maxY = this.__extent.height + minY;
		if(x > maxX) maxX = x; else maxX = maxX;
		if(x < minX) minX = x; else minX = minX;
		if(y > maxY) maxY = y; else maxY = maxY;
		if(y < minY) minY = y; else minY = minY;
		this.__extent.x = minX;
		this.__extent.y = minY;
		this.__extent.width = maxX - minX + this._padding;
		this.__extent.height = maxY - minY + this._padding;
		this.__expandFilteredExtent(x,y);
		this.boundsDirty = true;
	}
	,__invalidate: function() {
		this.set___changed(true);
		this.__clearNextCycle = true;
	}
	,__addStrokeAttribute: function(element,lineJob) {
		if(lineJob != null) {
			if(lineJob.grad == null) element.attr({ stroke : this.createCanvasColor(lineJob.colour,lineJob.alpha)}); else element.attr({ stroke : this.createCanvasGradient(lineJob.grad)});
			element.attr({ 'stroke-width' : lineJob.thickness, 'stroke-linecap' : (function($this) {
				var $r;
				var _g = lineJob.caps;
				$r = (function($this) {
					var $r;
					switch(_g) {
					case 256:
						$r = "round";
						break;
					case 512:
						$r = "square";
						break;
					case 0:
						$r = "butt";
						break;
					default:
						$r = "round";
					}
					return $r;
				}($this));
				return $r;
			}(this)), 'stroke-linejoin' : (function($this) {
				var $r;
				var _g1 = lineJob.joints;
				$r = (function($this) {
					var $r;
					switch(_g1) {
					case 0:
						$r = "round";
						break;
					case 4096:
						$r = "miter";
						break;
					case 8192:
						$r = "bevel";
						break;
					default:
						$r = "round";
					}
					return $r;
				}($this));
				return $r;
			}(this)), 'stroke-miterlimit' : lineJob.miter_limit, 'vector-effect' : (function($this) {
				var $r;
				var _g2 = lineJob.scale_mode;
				$r = (function($this) {
					var $r;
					switch(_g2) {
					case 0:
						$r = "non-scaling-stroke";
						break;
					case 2:
						$r = "none";
						break;
					case 1:
						$r = "none";
						break;
					case 3:
						$r = "none";
						break;
					default:
						$r = "none";
					}
					return $r;
				}($this));
				return $r;
			}(this))});
		} else element.attr({ stroke : "none"});
	}
	,__addFillAttribute: function(element,fillColour,fillAlpha,solidGradient,bitmap) {
		if(solidGradient != null) element.attr({ fill : this.createCanvasGradient(solidGradient)}); else if(bitmap != null && (bitmap.flags & 16) > 0) {
			var bBox = element.getBBox();
			element.attr({ fill : openfl.Lib.get_snap().image(bitmap.texture_buffer.toDataURL(),0,0,bitmap.texture_buffer.width,bitmap.texture_buffer.height).pattern(bBox.x,bBox.y,bitmap.texture_buffer.width,bitmap.texture_buffer.height).attr({ patternContentUnits : "userSpaceOnUse", patternUnits : "userSpaceOnUse", viewBox : "0 0 " + Std.string(bitmap.texture_buffer.width) + " " + Std.string(bitmap.texture_buffer.height)})});
		} else if(bitmap != null && (bitmap.flags & 16) == 0) element.attr({ fill : openfl.Lib.get_snap().image(bitmap.texture_buffer.toDataURL(),0,0,1,1).pattern(0,0,"100%","100%").attr({ patternContentUnits : "objectBoundingBox", patternUnits : "objectBoundingBox"})}); else element.attr({ fill : this.createCanvasColor(fillColour,Math.min(1.0,Math.max(0.0,fillAlpha)))});
		element.attr({ 'fill-rule' : "evenodd"});
	}
	,__render: function(maskHandle,filters,sx,sy,clip0,clip1,clip2,clip3) {
		if(sy == null) sy = 1.0;
		if(sx == null) sx = 1.0;
		var _g2 = this;
		if(!this.get___changed()) return false;
		this.closePolygon(true);
		var padding = this._padding;
		if(filters != null) {
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(filter,"blurX")) padding += Math.max(Reflect.field(filter,"blurX"),Reflect.field(filter,"blurY")) * 4;
			}
		}
		this.__expandFilteredExtent(-(padding * sx) / 2,-(padding * sy) / 2);
		if(this.__clearNextCycle) {
			this.nextDrawIndex = 0;
			this.__clearCanvas();
			this.__clearNextCycle = false;
		}
		var len = this.mDrawList.length;
		var _g1 = this.nextDrawIndex;
		while(_g1 < len) {
			var i = _g1++;
			var d = this.mDrawList[len - 1 - i];
			var fillColour = [d.fillColour];
			var fillAlpha = [d.fillAlpha];
			var g = [d.solidGradient];
			var bitmap = [d.bitmap];
			if(d.tileJob != null) this.__drawTiles(d.tileJob.sheet,d.tileJob.drawList,d.tileJob.flags); else {
				var snapElements = [];
				{
					var _g11 = d.snapJob.jobType;
					switch(_g11[1]) {
					case 0:
						break;
					case 2:
						var ry = _g11[5];
						var rx = _g11[4];
						var y = _g11[3];
						var x = _g11[2];
						var ellipse = openfl.Lib.get_snap().ellipse(x,y,rx,ry);
						this.__addStrokeAttribute(ellipse,d.lineJobs.length == 1?d.lineJobs[0]:null);
						this.__addFillAttribute(ellipse,fillColour[0],fillAlpha[0],g[0],bitmap[0]);
						this.__snap.append(ellipse);
						break;
					case 3:
						var rad = _g11[4];
						var y1 = _g11[3];
						var x1 = _g11[2];
						var circle = openfl.Lib.get_snap().circle(x1,y1,rad);
						this.__addStrokeAttribute(circle,d.lineJobs.length == 1?d.lineJobs[0]:null);
						this.__addFillAttribute(circle,fillColour[0],fillAlpha[0],g[0],bitmap[0]);
						this.__snap.append(circle);
						break;
					case 4:
						var ry1 = _g11[7];
						var rx1 = _g11[6];
						var height = _g11[5];
						var width = _g11[4];
						var y2 = _g11[3];
						var x2 = _g11[2];
						var rect = openfl.Lib.get_snap().rect(x2,y2,width,height,rx1,ry1);
						this.__addStrokeAttribute(rect,d.lineJobs.length == 1?d.lineJobs[0]:null);
						this.__addFillAttribute(rect,fillColour[0],fillAlpha[0],g[0],bitmap[0]);
						this.__snap.append(rect);
						break;
					case 1:
						var pathString = [new StringBuf()];
						if(d.lineJobs.length > 0) {
							var _g21 = 0;
							var _g3 = d.lineJobs;
							while(_g21 < _g3.length) {
								var lj = _g3[_g21];
								++_g21;
								var _g5 = lj.point_idx0;
								var _g4 = lj.point_idx1 + 1;
								while(_g5 < _g4) {
									var i1 = _g5++;
									pathString[0].add(this.getSvgPathStringFor(d.points[i1]));
								}
								pathString[0].b += "Z";
								var path = openfl.Lib.get_snap().path(pathString[0].b);
								this.__addStrokeAttribute(path,lj);
								snapElements.push(path);
							}
						} else {
							Lambda.iter(d.points,(function(pathString) {
								return function(p) {
									pathString[0].add(_g2.getSvgPathStringFor(p));
								};
							})(pathString));
							pathString[0].b += "Z";
							snapElements.push(openfl.Lib.get_snap().path(pathString[0].b).attr({ stroke : "none"}));
						}
						Lambda.iter(snapElements,(function(bitmap,g,fillAlpha,fillColour) {
							return function(path1) {
								_g2.__addFillAttribute(path1,fillColour[0],fillAlpha[0],g[0],bitmap[0]);
								_g2.__snap.append(path1);
							};
						})(bitmap,g,fillAlpha,fillColour));
						break;
					}
				}
			}
		}
		this.set___changed(false);
		if(len > 0) this.nextDrawIndex = len - 1; else this.nextDrawIndex = 0;
		this.mDrawList = [];
		return true;
	}
	,getSvgPathStringFor: function(p) {
		var _g = p.type;
		switch(_g) {
		case 0:
			return "M" + p.x + " " + p.y + " ";
		case 2:
			return "Q" + p.cx + " " + p.cy + " " + p.x + " " + p.y + " ";
		default:
			return "L" + p.x + " " + p.y + " ";
		}
	}
	,closeSvgPathString: function(pathString) {
		pathString.b += "Z";
	}
	,get___changed: function() {
		return this.__changedData;
	}
	,set___changed: function(v) {
		if(v != this.__changedData) {
			this.__changedData = v;
			if(null != this.displayObject) this.displayObject.renderNextWake();
		}
		return this.__changedData;
	}
	,__class__: openfl.display.Graphics
	,__properties__: {set___changed:"set___changed",get___changed:"get___changed"}
};
openfl.display.Drawable = function(inPoints,inFillColour,inFillAlpha,inSolidGradient,inBitmap,inLineJobs,inTileJob,inSnapJob) {
	this.points = inPoints;
	this.fillColour = inFillColour;
	this.fillAlpha = inFillAlpha;
	this.solidGradient = inSolidGradient;
	this.bitmap = inBitmap;
	this.lineJobs = inLineJobs;
	this.tileJob = inTileJob;
	this.snapJob = inSnapJob;
};
$hxClasses["openfl.display.Drawable"] = openfl.display.Drawable;
openfl.display.Drawable.__name__ = ["openfl","display","Drawable"];
openfl.display.Drawable.prototype = {
	__class__: openfl.display.Drawable
};
openfl.display.GfxPoint = function(inX,inY,inCX,inCY,inType) {
	this.x = inX;
	this.y = inY;
	this.cx = inCX;
	this.cy = inCY;
	this.type = inType;
};
$hxClasses["openfl.display.GfxPoint"] = openfl.display.GfxPoint;
openfl.display.GfxPoint.__name__ = ["openfl","display","GfxPoint"];
openfl.display.GfxPoint.prototype = {
	__class__: openfl.display.GfxPoint
};
openfl.display.Grad = function(inPoints,inMatrix,inFlags,inFocal) {
	this.points = inPoints;
	this.matrix = inMatrix;
	this.flags = inFlags;
	this.focal = inFocal;
};
$hxClasses["openfl.display.Grad"] = openfl.display.Grad;
openfl.display.Grad.__name__ = ["openfl","display","Grad"];
openfl.display.Grad.prototype = {
	__class__: openfl.display.Grad
};
openfl.display.GradPoint = function(inCol,inAlpha,inRatio) {
	this.col = inCol;
	this.alpha = inAlpha;
	this.ratio = inRatio;
};
$hxClasses["openfl.display.GradPoint"] = openfl.display.GradPoint;
openfl.display.GradPoint.__name__ = ["openfl","display","GradPoint"];
openfl.display.GradPoint.prototype = {
	__class__: openfl.display.GradPoint
};
openfl.display.LineJob = function(inGrad,inPoint_idx0,inPoint_idx1,inThickness,inAlpha,inColour,inPixel_hinting,inJoints,inCaps,inScale_mode,inMiter_limit) {
	this.grad = inGrad;
	this.point_idx0 = inPoint_idx0;
	this.point_idx1 = inPoint_idx1;
	this.thickness = inThickness;
	this.alpha = inAlpha;
	this.colour = inColour;
	this.pixel_hinting = inPixel_hinting;
	this.joints = inJoints;
	this.caps = inCaps;
	this.scale_mode = inScale_mode;
	this.miter_limit = inMiter_limit;
};
$hxClasses["openfl.display.LineJob"] = openfl.display.LineJob;
openfl.display.LineJob.__name__ = ["openfl","display","LineJob"];
openfl.display.LineJob.prototype = {
	__class__: openfl.display.LineJob
};
openfl.display.PointInPathMode = $hxClasses["openfl.display.PointInPathMode"] = { __ename__ : ["openfl","display","PointInPathMode"], __constructs__ : ["USER_SPACE","DEVICE_SPACE"] };
openfl.display.PointInPathMode.USER_SPACE = ["USER_SPACE",0];
openfl.display.PointInPathMode.USER_SPACE.toString = $estr;
openfl.display.PointInPathMode.USER_SPACE.__enum__ = openfl.display.PointInPathMode;
openfl.display.PointInPathMode.DEVICE_SPACE = ["DEVICE_SPACE",1];
openfl.display.PointInPathMode.DEVICE_SPACE.toString = $estr;
openfl.display.PointInPathMode.DEVICE_SPACE.__enum__ = openfl.display.PointInPathMode;
openfl.display.TileJob = function(sheet,drawList,flags) {
	this.sheet = sheet;
	this.drawList = drawList;
	this.flags = flags;
};
$hxClasses["openfl.display.TileJob"] = openfl.display.TileJob;
openfl.display.TileJob.__name__ = ["openfl","display","TileJob"];
openfl.display.TileJob.prototype = {
	__class__: openfl.display.TileJob
};
openfl.display.SnapDrawable = $hxClasses["openfl.display.SnapDrawable"] = { __ename__ : ["openfl","display","SnapDrawable"], __constructs__ : ["NONE","PATH","ELLIPSE","CIRCLE","RECT"] };
openfl.display.SnapDrawable.NONE = ["NONE",0];
openfl.display.SnapDrawable.NONE.toString = $estr;
openfl.display.SnapDrawable.NONE.__enum__ = openfl.display.SnapDrawable;
openfl.display.SnapDrawable.PATH = ["PATH",1];
openfl.display.SnapDrawable.PATH.toString = $estr;
openfl.display.SnapDrawable.PATH.__enum__ = openfl.display.SnapDrawable;
openfl.display.SnapDrawable.ELLIPSE = function(x,y,rx,ry) { var $x = ["ELLIPSE",2,x,y,rx,ry]; $x.__enum__ = openfl.display.SnapDrawable; $x.toString = $estr; return $x; };
openfl.display.SnapDrawable.CIRCLE = function(x,y,rad) { var $x = ["CIRCLE",3,x,y,rad]; $x.__enum__ = openfl.display.SnapDrawable; $x.toString = $estr; return $x; };
openfl.display.SnapDrawable.RECT = function(x,y,width,height,rx,ry) { var $x = ["RECT",4,x,y,width,height,rx,ry]; $x.__enum__ = openfl.display.SnapDrawable; $x.toString = $estr; return $x; };
openfl.display.SnapJob = function() {
	this.jobType = openfl.display.SnapDrawable.NONE;
};
$hxClasses["openfl.display.SnapJob"] = openfl.display.SnapJob;
openfl.display.SnapJob.__name__ = ["openfl","display","SnapJob"];
openfl.display.SnapJob.getPathJob = function() {
	var result = new openfl.display.SnapJob();
	result.jobType = openfl.display.SnapDrawable.PATH;
	return result;
};
openfl.display.SnapJob.getEllipseJob = function(x,y,rx,ry) {
	var result = new openfl.display.SnapJob();
	result.jobType = openfl.display.SnapDrawable.ELLIPSE(x,y,rx,ry);
	return result;
};
openfl.display.SnapJob.getCircleJob = function(x,y,rad) {
	var result = new openfl.display.SnapJob();
	result.jobType = openfl.display.SnapDrawable.CIRCLE(x,y,rad);
	return result;
};
openfl.display.SnapJob.getRectJob = function(x,y,width,height,rx,ry) {
	var result = new openfl.display.SnapJob();
	result.jobType = openfl.display.SnapDrawable.RECT(x,y,width,height,rx,ry);
	return result;
};
openfl.display.SnapJob.prototype = {
	__class__: openfl.display.SnapJob
};
openfl.display.IGraphicsFill = function() { };
$hxClasses["openfl.display.IGraphicsFill"] = openfl.display.IGraphicsFill;
openfl.display.IGraphicsFill.__name__ = ["openfl","display","IGraphicsFill"];
openfl.display.IGraphicsFill.prototype = {
	__class__: openfl.display.IGraphicsFill
};
openfl.display.IGraphicsData = function() { };
$hxClasses["openfl.display.IGraphicsData"] = openfl.display.IGraphicsData;
openfl.display.IGraphicsData.__name__ = ["openfl","display","IGraphicsData"];
openfl.display.IGraphicsData.prototype = {
	__class__: openfl.display.IGraphicsData
};
openfl.display.GraphicsBitmapFill = function(bitmapData,matrix,repeat,smooth) {
	if(smooth == null) smooth = false;
	if(repeat == null) repeat = true;
	this.bitmapData = bitmapData;
	this.matrix = matrix;
	this.repeat = repeat;
	this.smooth = smooth;
	this.__graphicsDataType = openfl.display.GraphicsDataType.BITMAP;
	this.__graphicsFillType = openfl.display.GraphicsFillType.BITMAP_FILL;
};
$hxClasses["openfl.display.GraphicsBitmapFill"] = openfl.display.GraphicsBitmapFill;
openfl.display.GraphicsBitmapFill.__name__ = ["openfl","display","GraphicsBitmapFill"];
openfl.display.GraphicsBitmapFill.__interfaces__ = [openfl.display.IGraphicsFill,openfl.display.IGraphicsData];
openfl.display.GraphicsBitmapFill.prototype = {
	__class__: openfl.display.GraphicsBitmapFill
};
openfl.display.GraphicsGradientFill = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	if(focalPointRatio == null) focalPointRatio = 0;
	this.type = type;
	this.colors = colors;
	this.alphas = alphas;
	this.ratios = ratios;
	this.matrix = matrix;
	this.spreadMethod = spreadMethod;
	this.interpolationMethod = interpolationMethod;
	this.focalPointRatio = focalPointRatio;
	this.__graphicsDataType = openfl.display.GraphicsDataType.GRADIENT;
	this.__graphicsFillType = openfl.display.GraphicsFillType.GRADIENT_FILL;
};
$hxClasses["openfl.display.GraphicsGradientFill"] = openfl.display.GraphicsGradientFill;
openfl.display.GraphicsGradientFill.__name__ = ["openfl","display","GraphicsGradientFill"];
openfl.display.GraphicsGradientFill.__interfaces__ = [openfl.display.IGraphicsFill,openfl.display.IGraphicsData];
openfl.display.GraphicsGradientFill.prototype = {
	__class__: openfl.display.GraphicsGradientFill
};
openfl.display.IGraphicsPath = function() { };
$hxClasses["openfl.display.IGraphicsPath"] = openfl.display.IGraphicsPath;
openfl.display.IGraphicsPath.__name__ = ["openfl","display","IGraphicsPath"];
openfl.display.GraphicsPath = function(commands,data,winding) {
	this.commands = commands;
	this.data = data;
	this.winding = winding;
	this.__graphicsDataType = openfl.display.GraphicsDataType.PATH;
};
$hxClasses["openfl.display.GraphicsPath"] = openfl.display.GraphicsPath;
openfl.display.GraphicsPath.__name__ = ["openfl","display","GraphicsPath"];
openfl.display.GraphicsPath.__interfaces__ = [openfl.display.IGraphicsPath,openfl.display.IGraphicsData];
openfl.display.GraphicsPath.prototype = {
	curveTo: function(controlX,controlY,anchorX,anchorY) {
		if(this.commands != null && this.data != null) {
			openfl._Vector.Vector_Impl_.push(this.commands,3);
			openfl._Vector.Vector_Impl_.push(this.data,anchorX);
			openfl._Vector.Vector_Impl_.push(this.data,anchorY);
			openfl._Vector.Vector_Impl_.push(this.data,controlX);
			openfl._Vector.Vector_Impl_.push(this.data,controlY);
		}
	}
	,lineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			openfl._Vector.Vector_Impl_.push(this.commands,2);
			openfl._Vector.Vector_Impl_.push(this.data,x);
			openfl._Vector.Vector_Impl_.push(this.data,y);
		}
	}
	,moveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			openfl._Vector.Vector_Impl_.push(this.commands,1);
			openfl._Vector.Vector_Impl_.push(this.data,x);
			openfl._Vector.Vector_Impl_.push(this.data,y);
		}
	}
	,__class__: openfl.display.GraphicsPath
};
openfl.display.GraphicsPathCommand = function() { };
$hxClasses["openfl.display.GraphicsPathCommand"] = openfl.display.GraphicsPathCommand;
openfl.display.GraphicsPathCommand.__name__ = ["openfl","display","GraphicsPathCommand"];
openfl.display.GraphicsPathWinding = $hxClasses["openfl.display.GraphicsPathWinding"] = { __ename__ : ["openfl","display","GraphicsPathWinding"], __constructs__ : ["EVEN_ODD","NON_ZERO"] };
openfl.display.GraphicsPathWinding.EVEN_ODD = ["EVEN_ODD",0];
openfl.display.GraphicsPathWinding.EVEN_ODD.toString = $estr;
openfl.display.GraphicsPathWinding.EVEN_ODD.__enum__ = openfl.display.GraphicsPathWinding;
openfl.display.GraphicsPathWinding.NON_ZERO = ["NON_ZERO",1];
openfl.display.GraphicsPathWinding.NON_ZERO.toString = $estr;
openfl.display.GraphicsPathWinding.NON_ZERO.__enum__ = openfl.display.GraphicsPathWinding;
openfl.display.GraphicsSolidFill = function(color,alpha) {
	if(alpha == null) alpha = 1;
	if(color == null) color = 0;
	this.alpha = alpha;
	this.color = color;
	this.__graphicsDataType = openfl.display.GraphicsDataType.SOLID;
	this.__graphicsFillType = openfl.display.GraphicsFillType.SOLID_FILL;
};
$hxClasses["openfl.display.GraphicsSolidFill"] = openfl.display.GraphicsSolidFill;
openfl.display.GraphicsSolidFill.__name__ = ["openfl","display","GraphicsSolidFill"];
openfl.display.GraphicsSolidFill.__interfaces__ = [openfl.display.IGraphicsFill,openfl.display.IGraphicsData];
openfl.display.GraphicsSolidFill.prototype = {
	__class__: openfl.display.GraphicsSolidFill
};
openfl.display.IGraphicsStroke = function() { };
$hxClasses["openfl.display.IGraphicsStroke"] = openfl.display.IGraphicsStroke;
openfl.display.IGraphicsStroke.__name__ = ["openfl","display","IGraphicsStroke"];
openfl.display.GraphicsStroke = function(thickness,pixelHinting,scaleMode,caps,joints,miterLimit,fill) {
	if(miterLimit == null) miterLimit = 3;
	if(pixelHinting == null) pixelHinting = false;
	if(thickness == null) thickness = 0.0;
	if(caps != null) this.caps = caps; else this.caps = null;
	this.fill = fill;
	if(joints != null) this.joints = joints; else this.joints = null;
	this.miterLimit = miterLimit;
	this.pixelHinting = pixelHinting;
	if(scaleMode != null) this.scaleMode = scaleMode; else this.scaleMode = null;
	this.thickness = thickness;
	this.__graphicsDataType = openfl.display.GraphicsDataType.STROKE;
};
$hxClasses["openfl.display.GraphicsStroke"] = openfl.display.GraphicsStroke;
openfl.display.GraphicsStroke.__name__ = ["openfl","display","GraphicsStroke"];
openfl.display.GraphicsStroke.__interfaces__ = [openfl.display.IGraphicsStroke,openfl.display.IGraphicsData];
openfl.display.GraphicsStroke.prototype = {
	__class__: openfl.display.GraphicsStroke
};
openfl.display.GraphicsDataType = $hxClasses["openfl.display.GraphicsDataType"] = { __ename__ : ["openfl","display","GraphicsDataType"], __constructs__ : ["STROKE","SOLID","GRADIENT","PATH","BITMAP"] };
openfl.display.GraphicsDataType.STROKE = ["STROKE",0];
openfl.display.GraphicsDataType.STROKE.toString = $estr;
openfl.display.GraphicsDataType.STROKE.__enum__ = openfl.display.GraphicsDataType;
openfl.display.GraphicsDataType.SOLID = ["SOLID",1];
openfl.display.GraphicsDataType.SOLID.toString = $estr;
openfl.display.GraphicsDataType.SOLID.__enum__ = openfl.display.GraphicsDataType;
openfl.display.GraphicsDataType.GRADIENT = ["GRADIENT",2];
openfl.display.GraphicsDataType.GRADIENT.toString = $estr;
openfl.display.GraphicsDataType.GRADIENT.__enum__ = openfl.display.GraphicsDataType;
openfl.display.GraphicsDataType.PATH = ["PATH",3];
openfl.display.GraphicsDataType.PATH.toString = $estr;
openfl.display.GraphicsDataType.PATH.__enum__ = openfl.display.GraphicsDataType;
openfl.display.GraphicsDataType.BITMAP = ["BITMAP",4];
openfl.display.GraphicsDataType.BITMAP.toString = $estr;
openfl.display.GraphicsDataType.BITMAP.__enum__ = openfl.display.GraphicsDataType;
openfl.display.GraphicsFillType = $hxClasses["openfl.display.GraphicsFillType"] = { __ename__ : ["openfl","display","GraphicsFillType"], __constructs__ : ["SOLID_FILL","GRADIENT_FILL","BITMAP_FILL"] };
openfl.display.GraphicsFillType.SOLID_FILL = ["SOLID_FILL",0];
openfl.display.GraphicsFillType.SOLID_FILL.toString = $estr;
openfl.display.GraphicsFillType.SOLID_FILL.__enum__ = openfl.display.GraphicsFillType;
openfl.display.GraphicsFillType.GRADIENT_FILL = ["GRADIENT_FILL",1];
openfl.display.GraphicsFillType.GRADIENT_FILL.toString = $estr;
openfl.display.GraphicsFillType.GRADIENT_FILL.__enum__ = openfl.display.GraphicsFillType;
openfl.display.GraphicsFillType.BITMAP_FILL = ["BITMAP_FILL",2];
openfl.display.GraphicsFillType.BITMAP_FILL.toString = $estr;
openfl.display.GraphicsFillType.BITMAP_FILL.__enum__ = openfl.display.GraphicsFillType;
openfl.display.Loader = function() {
	openfl.display.Sprite.call(this);
	this.contentLoaderInfo = openfl.display.LoaderInfo.create(this);
};
$hxClasses["openfl.display.Loader"] = openfl.display.Loader;
openfl.display.Loader.__name__ = ["openfl","display","Loader"];
openfl.display.Loader.__super__ = openfl.display.Sprite;
openfl.display.Loader.prototype = $extend(openfl.display.Sprite.prototype,{
	load: function(request,context) {
		var extension = "";
		var parts = request.url.split(".");
		if(parts.length > 0) extension = parts[parts.length - 1].toLowerCase();
		var transparent = true;
		this.contentLoaderInfo.url = request.url;
		if(request.contentType == null && request.contentType != "") switch(extension) {
		case "swf":
			this.contentLoaderInfo.contentType = "application/x-shockwave-flash";
			break;
		case "jpg":case "jpeg":
			transparent = false;
			this.contentLoaderInfo.contentType = "image/jpeg";
			break;
		case "png":
			this.contentLoaderInfo.contentType = "image/png";
			break;
		case "gif":
			this.contentLoaderInfo.contentType = "image/gif";
			break;
		default:
			this.contentLoaderInfo.contentType = "application/x-www-form-urlencoded";
		} else this.contentLoaderInfo.contentType = request.contentType;
		this.mImage = new openfl.display.BitmapData(0,0,transparent);
		try {
			this.contentLoaderInfo.addEventListener(openfl.events.Event.COMPLETE,$bind(this,this.handleLoad),false,2147483647);
			this.contentLoaderInfo.addEventListener(openfl.events.IOErrorEvent.IO_ERROR,$bind(this,this.handleError),false,2147483647);
			this.mImage.__loadFromFile(request.url,this.contentLoaderInfo);
			this.content = new openfl.display.Bitmap(this.mImage);
			this.contentLoaderInfo.content = this.content;
			this.addChild(this.content);
		} catch( e ) {
			var evt = new openfl.events.IOErrorEvent(openfl.events.IOErrorEvent.IO_ERROR);
			evt.currentTarget = this;
			this.contentLoaderInfo.dispatchEvent(evt);
			return;
		}
		if(this.mShape == null) {
			this.mShape = new openfl.display.Shape();
			this.addChild(this.mShape);
		}
	}
	,unload: function() {
		if(this.__children.length > 0) {
			while(this.__children.length > 0) this.removeChildAt(0);
			this.content = null;
			this.contentLoaderInfo.url = null;
			this.contentLoaderInfo.contentType = null;
			this.contentLoaderInfo.content = null;
			this.contentLoaderInfo.bytesLoaded = this.contentLoaderInfo.bytesTotal = 0;
			this.contentLoaderInfo.width = 0;
			this.contentLoaderInfo.height = 0;
			var event = new openfl.events.Event(openfl.events.Event.UNLOAD);
			event.currentTarget = this;
			this.dispatchEvent(event);
		}
	}
	,loadBytes: function(buffer) {
		var _g = this;
		try {
			this.contentLoaderInfo.addEventListener(openfl.events.Event.COMPLETE,$bind(this,this.handleLoad),false,2147483647);
			openfl.display.BitmapData.loadFromBytes(buffer,null,function(bmd) {
				_g.content = new openfl.display.Bitmap(bmd);
				_g.contentLoaderInfo.content = _g.content;
				_g.addChild(_g.content);
				var evt = new openfl.events.Event(openfl.events.Event.COMPLETE);
				evt.currentTarget = _g;
				_g.contentLoaderInfo.dispatchEvent(evt);
			});
		} catch( e ) {
			var evt1 = new openfl.events.IOErrorEvent(openfl.events.IOErrorEvent.IO_ERROR);
			evt1.currentTarget = this;
			this.contentLoaderInfo.dispatchEvent(evt1);
		}
	}
	,toString: function() {
		return "[Loader name=" + this.name + " id=" + this.___id + "]";
	}
	,validateBounds: function() {
		if(this.get__boundsInvalid()) {
			openfl.display.Sprite.prototype.validateBounds.call(this);
			if(this.mImage != null) {
				var r = new openfl.geom.Rectangle(0,0,this.mImage.get_width(),this.mImage.get_height());
				if(r.width != 0 || r.height != 0) {
					if(this.__boundsRect.width == 0 && this.__boundsRect.height == 0) this.__boundsRect = r.clone(); else this.__boundsRect.extendBounds(r);
				}
			}
			if(this.scale9Grid != null) {
				this.__boundsRect.width *= this.__scaleX;
				this.__boundsRect.height *= this.__scaleY;
				this.__width = this.__boundsRect.width;
				this.__height = this.__boundsRect.height;
			} else {
				this.__width = this.__boundsRect.width * this.__scaleX;
				this.__height = this.__boundsRect.height * this.__scaleY;
			}
		}
	}
	,handleLoad: function(e) {
		e.currentTarget = this;
		if(this.content != null) {
			this.content.__invalidateBounds();
			this.content.__render(null,null);
			this.contentLoaderInfo.removeEventListener(openfl.events.Event.COMPLETE,$bind(this,this.handleLoad));
		}
		this.dispatchEvent(e);
	}
	,handleError: function(e) {
		e.currentTarget = this;
		if(this.content != null) {
			this.content.__invalidateBounds();
			this.content.__render(null,null);
			this.contentLoaderInfo.removeEventListener(openfl.events.IOErrorEvent.IO_ERROR,$bind(this,this.handleError));
		}
		this.dispatchEvent(e);
	}
	,__class__: openfl.display.Loader
});
openfl.display.LoaderInfo = function() {
	openfl.events.EventDispatcher.call(this);
	this.applicationDomain = openfl.system.ApplicationDomain.currentDomain;
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
};
$hxClasses["openfl.display.LoaderInfo"] = openfl.display.LoaderInfo;
openfl.display.LoaderInfo.__name__ = ["openfl","display","LoaderInfo"];
openfl.display.LoaderInfo.create = function(ldr) {
	var li = new openfl.display.LoaderInfo();
	if(ldr != null) li.loader = ldr; else li.url = "";
	return li;
};
openfl.display.LoaderInfo.__super__ = openfl.events.EventDispatcher;
openfl.display.LoaderInfo.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	__class__: openfl.display.LoaderInfo
});
openfl.display.MovieClip = function() {
	openfl.display.Sprite.call(this);
	this.enabled = true;
	this.__currentFrame = 0;
	this.__totalFrames = 0;
	this.loaderInfo = openfl.display.LoaderInfo.create(null);
};
$hxClasses["openfl.display.MovieClip"] = openfl.display.MovieClip;
openfl.display.MovieClip.__name__ = ["openfl","display","MovieClip"];
openfl.display.MovieClip.__super__ = openfl.display.Sprite;
openfl.display.MovieClip.prototype = $extend(openfl.display.Sprite.prototype,{
	gotoAndPlay: function(frame,scene) {
		if(scene == null) scene = "";
	}
	,gotoAndStop: function(frame,scene) {
		if(scene == null) scene = "";
	}
	,nextFrame: function() {
	}
	,play: function() {
	}
	,prevFrame: function() {
	}
	,stop: function() {
	}
	,toString: function() {
		return "[MovieClip name=" + this.name + " id=" + this.___id + "]";
	}
	,get_currentFrame: function() {
		return this.__currentFrame;
	}
	,get_framesLoaded: function() {
		return this.__totalFrames;
	}
	,get_totalFrames: function() {
		return this.__totalFrames;
	}
	,__class__: openfl.display.MovieClip
	,__properties__: $extend(openfl.display.Sprite.prototype.__properties__,{get_totalFrames:"get_totalFrames",get_framesLoaded:"get_framesLoaded",get_currentFrame:"get_currentFrame"})
});
openfl.display.PixelSnapping = $hxClasses["openfl.display.PixelSnapping"] = { __ename__ : ["openfl","display","PixelSnapping"], __constructs__ : ["NEVER","AUTO","ALWAYS"] };
openfl.display.PixelSnapping.NEVER = ["NEVER",0];
openfl.display.PixelSnapping.NEVER.toString = $estr;
openfl.display.PixelSnapping.NEVER.__enum__ = openfl.display.PixelSnapping;
openfl.display.PixelSnapping.AUTO = ["AUTO",1];
openfl.display.PixelSnapping.AUTO.toString = $estr;
openfl.display.PixelSnapping.AUTO.__enum__ = openfl.display.PixelSnapping;
openfl.display.PixelSnapping.ALWAYS = ["ALWAYS",2];
openfl.display.PixelSnapping.ALWAYS.toString = $estr;
openfl.display.PixelSnapping.ALWAYS.__enum__ = openfl.display.PixelSnapping;
openfl.display.Shape = function() {
	openfl.display.DisplayObject.call(this);
	this.__graphics = new openfl.display.Graphics(this.snap);
	this.__graphics.displayObject = this;
};
$hxClasses["openfl.display.Shape"] = openfl.display.Shape;
openfl.display.Shape.__name__ = ["openfl","display","Shape"];
openfl.display.Shape.__super__ = openfl.display.DisplayObject;
openfl.display.Shape.prototype = $extend(openfl.display.DisplayObject.prototype,{
	toString: function() {
		return "[Shape name=" + this.name + " id=" + this.___id + "]";
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,__getObjectUnderPoint: function(point) {
		if(this.parent == null) return null;
		if(this.parent.mouseEnabled && openfl.display.DisplayObject.prototype.__getObjectUnderPoint.call(this,point) == this) return this.parent; else return null;
	}
	,get_graphics: function() {
		return this.__graphics;
	}
	,__class__: openfl.display.Shape
	,__properties__: $extend(openfl.display.DisplayObject.prototype.__properties__,{get_graphics:"get_graphics"})
});
openfl.events.MouseEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.clickCount = clickCount;
};
$hxClasses["openfl.events.MouseEvent"] = openfl.events.MouseEvent;
openfl.events.MouseEvent.__name__ = ["openfl","events","MouseEvent"];
openfl.events.MouseEvent.__create = function(type,event,local,target) {
	var __mouseDown = false;
	var delta = 2;
	if(type == openfl.events.MouseEvent.MOUSE_WHEEL) {
		var mouseEvent = event;
		if(mouseEvent.wheelDelta) delta = mouseEvent.wheelDelta / 120 | 0; else if(mouseEvent.detail) -mouseEvent.detail | 0;
	}
	if(type == openfl.events.MouseEvent.MOUSE_DOWN) if(event.which != null) __mouseDown = event.which == 1; else if(event.button != null) __mouseDown = event.button == 0; else __mouseDown = false; else if(type == openfl.events.MouseEvent.MOUSE_UP) {
		if(event.which != null) {
			if(event.which == 1) __mouseDown = false; else if(event.button != null) {
				if(event.button == 0) __mouseDown = false; else __mouseDown = false;
			}
		}
	}
	var pseudoEvent = new openfl.events.MouseEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,__mouseDown,delta);
	pseudoEvent.stageX = openfl.Lib.get_current().get_stage().get_mouseX();
	pseudoEvent.stageY = openfl.Lib.get_current().get_stage().get_mouseY();
	pseudoEvent.target = target;
	return pseudoEvent;
};
openfl.events.MouseEvent.__super__ = openfl.events.Event;
openfl.events.MouseEvent.prototype = $extend(openfl.events.Event.prototype,{
	__createSimilar: function(type,related,targ) {
		var result = new openfl.events.MouseEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey,this.clickCount);
		if(targ != null) result.target = targ;
		return result;
	}
	,updateAfterEvent: function() {
	}
	,__class__: openfl.events.MouseEvent
});
openfl.display.Stage = function(width,height) {
	openfl.display.DisplayObjectContainer.call(this);
	this.__focusObject = null;
	this.__focusObjectActivated = false;
	this.__windowWidth = width;
	this.__windowHeight = height;
	this.stageFocusRect = false;
	this.scaleMode = openfl.display.StageScaleMode.SHOW_ALL;
	this.__stageMatrix = new openfl.geom.Matrix();
	this.tabEnabled = true;
	this.set_frameRate(0.0);
	this.set_backgroundColor(16777215);
	this.name = "Stage";
	this.loaderInfo = openfl.display.LoaderInfo.create(null);
	this.loaderInfo.parameters.width = Std.string(this.__windowWidth);
	this.loaderInfo.parameters.height = Std.string(this.__windowHeight);
	this.__pointInPathMode = openfl.display.Graphics.__detectIsPointInPathMode();
	this.__mouseOverObjects = [];
	this.set_showDefaultContextMenu(true);
	this.__touchInfo = [];
	this.__uIEventsQueue = new Array(1000);
	this.__uIEventsQueueIndex = 0;
	this.snapIdToDisplayObjects = new haxe.ds.StringMap();
	this.snap.remove();
	this.snap = openfl.Lib.get_stageSnap();
	var graphicsSnap = ((function($this) {
		var $r;
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		$r = me123.group.apply(me123, e123);
		return $r;
	}(this))).addClass("graphics");
	this.snap.append(graphicsSnap);
	this.__graphics = new openfl.display.Graphics(graphicsSnap);
	this.__graphics.displayObject = this;
};
$hxClasses["openfl.display.Stage"] = openfl.display.Stage;
openfl.display.Stage.__name__ = ["openfl","display","Stage"];
openfl.display.Stage.getOrientation = function() {
	var rotation = window.orientation;
	var orientation = openfl.display.Stage.OrientationPortrait;
	switch(rotation) {
	case -90:
		orientation = openfl.display.Stage.OrientationLandscapeLeft;
		break;
	case 180:
		orientation = openfl.display.Stage.OrientationPortraitUpsideDown;
		break;
	case 90:
		orientation = openfl.display.Stage.OrientationLandscapeRight;
		break;
	default:
		orientation = openfl.display.Stage.OrientationPortrait;
	}
	return orientation;
};
openfl.display.Stage.__super__ = openfl.display.DisplayObjectContainer;
openfl.display.Stage.prototype = $extend(openfl.display.DisplayObjectContainer.prototype,{
	invalidate: function() {
		this.__invalid = true;
	}
	,toString: function() {
		return "[Stage id=" + this.___id + "]";
	}
	,__checkInOuts: function(event,stack,touchInfo) {
		var prev;
		if(touchInfo == null) prev = this.__mouseOverObjects; else prev = touchInfo.touchOverObjects;
		var changeEvents;
		if(touchInfo == null) changeEvents = openfl.display.Stage.__mouseChanges; else changeEvents = openfl.display.Stage.__touchChanges;
		var new_n = stack.length;
		var new_obj;
		if(new_n > 0) new_obj = stack[new_n - 1]; else new_obj = null;
		var old_n = prev.length;
		var old_obj;
		if(old_n > 0) old_obj = prev[old_n - 1]; else old_obj = null;
		if(new_obj != old_obj) {
			if(old_obj != null) old_obj.__fireEvent(event.__createSimilar(changeEvents[0],new_obj,old_obj));
			if(new_obj != null) new_obj.__fireEvent(event.__createSimilar(changeEvents[1],old_obj,new_obj));
			var common = 0;
			while(common < new_n && common < old_n && stack[common] == prev[common]) common++;
			var rollOut = event.__createSimilar(changeEvents[2],new_obj,old_obj);
			var i = old_n - 1;
			while(i >= common) {
				prev[i].dispatchEvent(rollOut);
				i--;
			}
			var rollOver = event.__createSimilar(changeEvents[3],old_obj);
			var i1 = new_n - 1;
			while(i1 >= common) {
				stack[i1].dispatchEvent(rollOver);
				i1--;
			}
			if(touchInfo == null) this.__mouseOverObjects = stack; else touchInfo.touchOverObjects = stack;
		}
	}
	,__drag: function(point) {
		var p = this.__dragObject.parent;
		if(p != null) point = p.globalToLocal(point);
		var x = point.x + this.__dragOffsetX;
		var y = point.y + this.__dragOffsetY;
		if(this.__dragBounds != null) {
			if(x < this.__dragBounds.x) x = this.__dragBounds.x; else if(x > this.__dragBounds.get_right()) x = this.__dragBounds.get_right();
			if(y < this.__dragBounds.y) y = this.__dragBounds.y; else if(y > this.__dragBounds.get_bottom()) y = this.__dragBounds.get_bottom();
		}
		this.__dragObject.set_x(x);
		this.__dragObject.set_y(y);
	}
	,__isOnStage: function() {
		return true;
	}
	,getTextFromPasteElement: function() {
		var document = window.document;
		var curFocus = document.activeElement;
		var input = document.getElementById("openfl-snapsvg-input");
		if(null == input.innerText || "" == input.innerText) return StringTools.trim(input.innerHTML); else return input.innerText;
	}
	,__processStageEvent: function(evt) {
		var document = window.document;
		var curFocus = document.activeElement;
		evt.stopPropagation();
		var _g = evt.type;
		switch(_g) {
		case "resize":
			this.__onResize(openfl.Lib.__getWidth(),openfl.Lib.__getHeight());
			break;
		case "focus":
			this.__onFocus(this);
			if(!this.__focusObjectActivated) {
				this.__focusObjectActivated = true;
				this.dispatchEvent(new openfl.events.Event(openfl.events.Event.ACTIVATE));
			}
			break;
		case "blur":
			if(this.__focusObjectActivated) {
				this.__focusObjectActivated = false;
				this.dispatchEvent(new openfl.events.Event(openfl.events.Event.DEACTIVATE));
			}
			break;
		case "mousemove":
			this.__onMouse(evt,openfl.events.MouseEvent.MOUSE_MOVE);
			break;
		case "mousedown":
			this.__onMouse(evt,openfl.events.MouseEvent.MOUSE_DOWN);
			break;
		case "mouseup":
			this.__onMouse(evt,openfl.events.MouseEvent.MOUSE_UP);
			break;
		case "click":
			this.__onMouse(evt,openfl.events.MouseEvent.CLICK);
			break;
		case "mousewheel":
			this.__onMouse(evt,openfl.events.MouseEvent.MOUSE_WHEEL);
			break;
		case "dblclick":
			this.__onMouse(evt,openfl.events.MouseEvent.DOUBLE_CLICK);
			break;
		case "keydown":
			var evt1 = evt;
			var keyCode;
			if(evt1.keyCode != null) keyCode = evt1.keyCode; else keyCode = evt1.which;
			keyCode = openfl.ui.Keyboard.__convertMozillaCode(keyCode);
			this.__onKey(keyCode,true,evt1.charCode,evt1.ctrlKey || evt1.metaKey,evt1.altKey,evt1.shiftKey,evt1.keyLocation);
			break;
		case "keyup":
			var evt2 = evt;
			var keyCode1;
			if(evt2.keyCode != null) keyCode1 = evt2.keyCode; else keyCode1 = evt2.which;
			keyCode1 = openfl.ui.Keyboard.__convertMozillaCode(keyCode1);
			this.__onKey(keyCode1,false,evt2.charCode,evt2.ctrlKey || evt2.metaKey,evt2.altKey,evt2.shiftKey,evt2.keyLocation);
			break;
		case "keypress":
			var evt3 = evt;
			var keyCode2;
			if(evt3.keyCode != null) keyCode2 = evt3.keyCode; else keyCode2 = evt3.which;
			keyCode2 = openfl.ui.Keyboard.__convertMozillaCode(keyCode2);
			this.__onKeyPress(keyCode2,true,evt3.charCode,evt3.ctrlKey || evt3.metaKey,evt3.altKey,evt3.shiftKey,evt3.keyLocation);
			break;
		case "paste":
			var windowClipboardData = window.clipboardData;
			var eventClipboardData = evt.clipboardData;
			var clipboardData;
			if(null != windowClipboardData) clipboardData = windowClipboardData; else clipboardData = eventClipboardData;
			this.__onPaste(null != clipboardData && clipboardData.types.length > 0?clipboardData.getData("text/plain"):this.getTextFromPasteElement());
			break;
		case "touchstart":
			var evt4 = evt;
			evt4.preventDefault();
			var touchInfo = new openfl.display._Stage.TouchInfo();
			this.__touchInfo[evt4.changedTouches[0].identifier] = touchInfo;
			this.__onTouch(evt4,evt4.changedTouches[0],"touchBegin",touchInfo,false);
			break;
		case "touchmove":
			var evt5 = evt;
			evt5.preventDefault();
			var touchInfo1 = this.__touchInfo[evt5.changedTouches[0].identifier];
			this.__onTouch(evt5,evt5.changedTouches[0],"touchMove",touchInfo1,true);
			break;
		case "touchend":
			var evt6 = evt;
			evt6.preventDefault();
			var touchInfo2 = this.__touchInfo[evt6.changedTouches[0].identifier];
			this.__onTouch(evt6,evt6.changedTouches[0],"touchEnd",touchInfo2,true);
			this.__touchInfo[evt6.changedTouches[0].identifier] = null;
			break;
		case "devicemotion":
			var evt7 = evt;
			this.__handleAccelerometer(evt7);
			break;
		case "orientationchange":
			this.__handleOrientationChange();
			break;
		default:
		}
	}
	,stopPropagationOfEvent: function(e) {
		e.stopPropagation();
	}
	,__queueStageEvent: function(evt) {
		var _g = this;
		var target = evt.target;
		if(evt.type == "keydown") {
			var e = evt;
			if(e.keyCode == 86 && (e.ctrlKey || e.commandKey || e.controlKey || e.metaKey)) {
				var document = window.document;
				var curFocus = document.activeElement;
				var input = document.getElementById("openfl-snapsvg-input");
				input.innerText = "";
				e.stopImmediatePropagation();
				input.addEventListener("focusin",$bind(this,this.stopPropagationOfEvent));
				input.addEventListener("focusout",$bind(this,this.stopPropagationOfEvent));
				input.addEventListener("beforedeactivate",$bind(this,this.stopPropagationOfEvent));
				curFocus.blur();
				input.focus();
				var t = new haxe.Timer(30);
				t.run = function() {
					input.blur();
					curFocus.focus();
					input.addEventListener("focusin",$bind(_g,_g.stopPropagationOfEvent));
					input.addEventListener("focusout",$bind(_g,_g.stopPropagationOfEvent));
					input.addEventListener("beforedeactivate",$bind(_g,_g.stopPropagationOfEvent));
					t.stop();
				};
			}
		}
		if(target.id == "openfl-snapsvg-input" && evt.type != "paste") return;
		this.__uIEventsQueue[this.__uIEventsQueueIndex++] = evt;
	}
	,__renderAll: function() {
		this.__render(null,null);
	}
	,__renderToCanvas: function(canvas) {
		this.__render(canvas);
	}
	,__stageRender: function(_) {
		if(!this.__stageActive) {
			this.__onResize(this.__windowWidth,this.__windowHeight);
			var event = new openfl.events.Event(openfl.events.Event.ACTIVATE);
			event.target = this;
			this.__broadcast(event);
			this.__stageActive = true;
		}
		var _g1 = 0;
		var _g = this.__uIEventsQueueIndex;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__uIEventsQueue[i] != null) this.__processStageEvent(this.__uIEventsQueue[i]);
		}
		this.__uIEventsQueueIndex = 0;
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.ENTER_FRAME));
		if(this.__invalid) this.dispatchEvent(new openfl.events.Event(openfl.events.Event.RENDER));
		this.__renderAll();
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.STAGE_RENDERED));
	}
	,__startDrag: function(sprite,lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		if(bounds == null) this.__dragBounds = null; else this.__dragBounds = bounds.clone();
		this.__dragObject = sprite;
		if(this.__dragObject != null) {
			var mouse = new openfl.geom.Point(this._mouseX,this._mouseY);
			var p = this.__dragObject.parent;
			if(p != null) mouse = p.globalToLocal(mouse);
			if(lockCenter) {
				var bounds1 = sprite.getBounds(this);
				this.__dragOffsetX = this.__dragObject.get_x() - (bounds1.width / 2 + bounds1.x);
				this.__dragOffsetY = this.__dragObject.get_y() - (bounds1.height / 2 + bounds1.y);
			} else {
				this.__dragOffsetX = this.__dragObject.get_x() - mouse.x;
				this.__dragOffsetY = this.__dragObject.get_y() - mouse.y;
			}
		}
	}
	,__stopDrag: function(sprite) {
		this.__dragBounds = null;
		this.__dragObject = null;
	}
	,__updateNextWake: function() {
		if(this.__frameRate == 0) {
			var __requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
			__requestAnimationFrame($bind(this,this.__updateNextWake));
			this.__stageRender();
		} else {
			window.clearInterval(this.__timer);
			this.__timer = window.setInterval($bind(this,this.__stageRender),this.__interval);
		}
	}
	,__handleAccelerometer: function(evt) {
		openfl.display.Stage.__acceleration.x = evt.accelerationIncludingGravity.x;
		openfl.display.Stage.__acceleration.y = evt.accelerationIncludingGravity.y;
		openfl.display.Stage.__acceleration.z = evt.accelerationIncludingGravity.z;
	}
	,__handleOrientationChange: function() {
	}
	,__onKey: function(code,pressed,inChar,ctrl,alt,shift,keyLocation) {
		var stack = new Array();
		if(this.__focusObject == null) this.__getInteractiveObjectStack(stack); else this.__focusObject.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			var obj = stack[0];
			var evt = new openfl.events.KeyboardEvent(pressed?openfl.events.KeyboardEvent.KEY_DOWN:openfl.events.KeyboardEvent.KEY_UP,true,false,inChar,code,keyLocation,ctrl,alt,shift);
			obj.__fireEvent(evt);
		}
	}
	,__onKeyPress: function(code,pressed,inChar,ctrl,alt,shift,keyLocation) {
		var stack = new Array();
		if(this.__focusObject == null) this.__getInteractiveObjectStack(stack); else this.__focusObject.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			var obj = stack[0];
			var evt = new openfl.events.KeyboardEvent(openfl.events.KeyboardEvent.KEY_PRESS,true,false,inChar,code,keyLocation,ctrl,alt,shift);
			obj.__fireEvent(evt);
		}
	}
	,__onPaste: function(text) {
		var stack = new Array();
		if(this.__focusObject == null) this.__getInteractiveObjectStack(stack); else this.__focusObject.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			var obj = stack[0];
			var evt = new openfl.events.PasteEvent(text);
			obj.__fireEvent(evt);
		}
	}
	,__onFocus: function(target) {
		if(target != this.__focusObject) {
			if(this.__focusObject != null) this.__focusObject.__fireEvent(new openfl.events.FocusEvent(openfl.events.FocusEvent.FOCUS_OUT,true,false,this.__focusObject,false,0));
			target.__fireEvent(new openfl.events.FocusEvent(openfl.events.FocusEvent.FOCUS_IN,true,false,target,false,0));
			this.__focusObject = target;
		}
	}
	,__getObjectByElement: function(element) {
		if(!this.get_visible()) return null;
		while(null != element) {
			var id = element.id;
			if(null != id && "" != id && this.get_stage().snapIdToDisplayObjects.exists(id)) {
				var obj = this.get_stage().snapIdToDisplayObjects.get(id);
				var p = obj;
				while(null != p) {
					if(p.mouseEnabled) {
						obj = p;
						break;
					}
					p = p.parent;
				}
				p = obj;
				while(null != p) {
					if(this == p) return obj;
					p = p.parent;
				}
				return null;
			}
			element = element.parentElement;
		}
		return null;
	}
	,__onMouse: function(event,type) {
		var rect = openfl.Lib.mMe.__scr.getBoundingClientRect();
		var point = new openfl.geom.Point(event.clientX - rect.left,event.clientY - rect.top);
		if(this.__dragObject != null) this.__drag(point);
		var obj = this.__getObjectByElement(event.target);
		this._mouseX = point.x;
		this._mouseY = point.y;
		var stack = new Array();
		if(obj != null) obj.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = openfl.events.MouseEvent.__create(type,event,local,obj);
			this.__checkInOuts(evt,stack);
			if(type == openfl.events.MouseEvent.MOUSE_DOWN) this.__onFocus(stack[stack.length - 1]);
			obj.__fireEvent(evt);
			this.emulateClickEvent(type,event,local,obj);
		} else {
			var evt1 = openfl.events.MouseEvent.__create(type,event,point,null);
			this.__checkInOuts(evt1,stack);
		}
	}
	,emulateClickEvent: function(type,event,point,obj) {
		if(type == openfl.events.MouseEvent.MOUSE_DOWN) this.clickPosition = new openfl.geom.Point(point.x,point.y); else if(type == openfl.events.MouseEvent.MOUSE_UP) {
			if(Math.abs(point.x - this.clickPosition.x) < 3 && Math.abs(point.y - this.clickPosition.y) < 3) obj.__fireEvent(openfl.events.MouseEvent.__create(openfl.events.MouseEvent.CLICK,event,point,obj));
		}
	}
	,__onResize: function(inW,inH) {
		this.__windowWidth = inW;
		this.__windowHeight = inH;
		var event = new openfl.events.Event(openfl.events.Event.RESIZE);
		event.target = this;
		this.__broadcast(event);
	}
	,__onTouch: function(event,touch,type,touchInfo,isPrimaryTouchPoint) {
		var rect = openfl.Lib.mMe.__scr.getBoundingClientRect();
		var point = new openfl.geom.Point(touch.pageX - rect.left,touch.pageY - rect.top);
		var obj = this.__getObjectByElement(event.target);
		this._mouseX = point.x;
		this._mouseY = point.y;
		var stack = new Array();
		if(obj != null) obj.__getInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = openfl.events.TouchEvent.__create(type,event,touch,local,obj);
			evt.touchPointID = touch.identifier;
			evt.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.__checkInOuts(evt,stack,touchInfo);
			obj.__fireEvent(evt);
			var mouseType;
			switch(type) {
			case "touchBegin":
				mouseType = openfl.events.MouseEvent.MOUSE_DOWN;
				break;
			case "touchEnd":
				mouseType = openfl.events.MouseEvent.MOUSE_UP;
				break;
			default:
				if(this.__dragObject != null) this.__drag(point);
				mouseType = openfl.events.MouseEvent.MOUSE_MOVE;
			}
			obj.__fireEvent(openfl.events.MouseEvent.__create(mouseType,evt,local,obj));
		} else {
			var evt1 = openfl.events.TouchEvent.__create(type,event,touch,point,null);
			evt1.touchPointID = touch.identifier;
			evt1.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.__checkInOuts(evt1,stack,touchInfo);
		}
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,get_backgroundColor: function() {
		return this.__backgroundColour;
	}
	,set_backgroundColor: function(col) {
		return this.__backgroundColour = col;
	}
	,get_color: function() {
		return this.__backgroundColour;
	}
	,set_color: function(col) {
		return this.__backgroundColour = col;
	}
	,get_displayState: function() {
		return this.displayState;
	}
	,set_displayState: function(displayState) {
		if(displayState != this.displayState && this.displayState != null) switch(displayState[1]) {
		case 0:
			openfl.Lib.__disableFullScreen();
			break;
		case 1:case 2:
			openfl.Lib.__enableFullScreen();
			break;
		}
		this.displayState = displayState;
		return displayState;
	}
	,get_focus: function() {
		return this.__focusObject;
	}
	,set_focus: function(inObj) {
		this.__onFocus(inObj);
		return this.__focusObject;
	}
	,get_frameRate: function() {
		return this.__frameRate;
	}
	,set_frameRate: function(speed) {
		if(speed == 0) {
			var $window = window;
			var __requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
			if(__requestAnimationFrame == null) speed = 60;
		}
		if(speed != 0) this.__interval = 1000.0 / speed | 0;
		this.__frameRate = speed;
		this.__updateNextWake();
		return speed;
	}
	,get_fullScreenWidth: function() {
		return window.innerWidth;
	}
	,get_fullScreenHeight: function() {
		return window.innerHeight;
	}
	,get_mouseX: function() {
		return this._mouseX;
	}
	,get_mouseY: function() {
		return this._mouseY;
	}
	,get_quality: function() {
		if(this.quality != null) return this.quality; else return openfl.display.StageQuality.BEST;
	}
	,set_quality: function(inQuality) {
		return this.quality = inQuality;
	}
	,get_showDefaultContextMenu: function() {
		return this.__showDefaultContextMenu;
	}
	,set_showDefaultContextMenu: function(showDefaultContextMenu) {
		if(showDefaultContextMenu != this.__showDefaultContextMenu && this.__showDefaultContextMenu != null) {
			if(!showDefaultContextMenu) openfl.Lib.__disableRightClick(); else openfl.Lib.__enableRightClick();
		}
		this.__showDefaultContextMenu = showDefaultContextMenu;
		return showDefaultContextMenu;
	}
	,get_stage: function() {
		return openfl.Lib.__getStage();
	}
	,get_stageHeight: function() {
		return this.__windowHeight;
	}
	,get_stageWidth: function() {
		return this.__windowWidth;
	}
	,__class__: openfl.display.Stage
	,__properties__: $extend(openfl.display.DisplayObjectContainer.prototype.__properties__,{get_stageWidth:"get_stageWidth",get_stageHeight:"get_stageHeight",set_showDefaultContextMenu:"set_showDefaultContextMenu",get_showDefaultContextMenu:"get_showDefaultContextMenu",set_quality:"set_quality",get_quality:"get_quality",get_fullScreenWidth:"get_fullScreenWidth",get_fullScreenHeight:"get_fullScreenHeight",set_frameRate:"set_frameRate",get_frameRate:"get_frameRate",set_focus:"set_focus",get_focus:"get_focus",set_displayState:"set_displayState",get_displayState:"get_displayState",set_color:"set_color",get_color:"get_color",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor"})
});
openfl.display._Stage = {};
openfl.display._Stage.TouchInfo = function() {
	this.touchOverObjects = [];
};
$hxClasses["openfl.display._Stage.TouchInfo"] = openfl.display._Stage.TouchInfo;
openfl.display._Stage.TouchInfo.__name__ = ["openfl","display","_Stage","TouchInfo"];
openfl.display._Stage.TouchInfo.prototype = {
	__class__: openfl.display._Stage.TouchInfo
};
openfl.display.StageAlign = $hxClasses["openfl.display.StageAlign"] = { __ename__ : ["openfl","display","StageAlign"], __constructs__ : ["TOP_RIGHT","TOP_LEFT","TOP","RIGHT","LEFT","BOTTOM_RIGHT","BOTTOM_LEFT","BOTTOM"] };
openfl.display.StageAlign.TOP_RIGHT = ["TOP_RIGHT",0];
openfl.display.StageAlign.TOP_RIGHT.toString = $estr;
openfl.display.StageAlign.TOP_RIGHT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.TOP_LEFT = ["TOP_LEFT",1];
openfl.display.StageAlign.TOP_LEFT.toString = $estr;
openfl.display.StageAlign.TOP_LEFT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.TOP = ["TOP",2];
openfl.display.StageAlign.TOP.toString = $estr;
openfl.display.StageAlign.TOP.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.RIGHT = ["RIGHT",3];
openfl.display.StageAlign.RIGHT.toString = $estr;
openfl.display.StageAlign.RIGHT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.LEFT = ["LEFT",4];
openfl.display.StageAlign.LEFT.toString = $estr;
openfl.display.StageAlign.LEFT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.BOTTOM_RIGHT = ["BOTTOM_RIGHT",5];
openfl.display.StageAlign.BOTTOM_RIGHT.toString = $estr;
openfl.display.StageAlign.BOTTOM_RIGHT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.BOTTOM_LEFT = ["BOTTOM_LEFT",6];
openfl.display.StageAlign.BOTTOM_LEFT.toString = $estr;
openfl.display.StageAlign.BOTTOM_LEFT.__enum__ = openfl.display.StageAlign;
openfl.display.StageAlign.BOTTOM = ["BOTTOM",7];
openfl.display.StageAlign.BOTTOM.toString = $estr;
openfl.display.StageAlign.BOTTOM.__enum__ = openfl.display.StageAlign;
openfl.display.StageDisplayState = $hxClasses["openfl.display.StageDisplayState"] = { __ename__ : ["openfl","display","StageDisplayState"], __constructs__ : ["NORMAL","FULL_SCREEN","FULL_SCREEN_INTERACTIVE"] };
openfl.display.StageDisplayState.NORMAL = ["NORMAL",0];
openfl.display.StageDisplayState.NORMAL.toString = $estr;
openfl.display.StageDisplayState.NORMAL.__enum__ = openfl.display.StageDisplayState;
openfl.display.StageDisplayState.FULL_SCREEN = ["FULL_SCREEN",1];
openfl.display.StageDisplayState.FULL_SCREEN.toString = $estr;
openfl.display.StageDisplayState.FULL_SCREEN.__enum__ = openfl.display.StageDisplayState;
openfl.display.StageDisplayState.FULL_SCREEN_INTERACTIVE = ["FULL_SCREEN_INTERACTIVE",2];
openfl.display.StageDisplayState.FULL_SCREEN_INTERACTIVE.toString = $estr;
openfl.display.StageDisplayState.FULL_SCREEN_INTERACTIVE.__enum__ = openfl.display.StageDisplayState;
openfl.display.StageQuality = function() { };
$hxClasses["openfl.display.StageQuality"] = openfl.display.StageQuality;
openfl.display.StageQuality.__name__ = ["openfl","display","StageQuality"];
openfl.display.StageScaleMode = $hxClasses["openfl.display.StageScaleMode"] = { __ename__ : ["openfl","display","StageScaleMode"], __constructs__ : ["SHOW_ALL","NO_SCALE","NO_BORDER","EXACT_FIT"] };
openfl.display.StageScaleMode.SHOW_ALL = ["SHOW_ALL",0];
openfl.display.StageScaleMode.SHOW_ALL.toString = $estr;
openfl.display.StageScaleMode.SHOW_ALL.__enum__ = openfl.display.StageScaleMode;
openfl.display.StageScaleMode.NO_SCALE = ["NO_SCALE",1];
openfl.display.StageScaleMode.NO_SCALE.toString = $estr;
openfl.display.StageScaleMode.NO_SCALE.__enum__ = openfl.display.StageScaleMode;
openfl.display.StageScaleMode.NO_BORDER = ["NO_BORDER",2];
openfl.display.StageScaleMode.NO_BORDER.toString = $estr;
openfl.display.StageScaleMode.NO_BORDER.__enum__ = openfl.display.StageScaleMode;
openfl.display.StageScaleMode.EXACT_FIT = ["EXACT_FIT",3];
openfl.display.StageScaleMode.EXACT_FIT.toString = $estr;
openfl.display.StageScaleMode.EXACT_FIT.__enum__ = openfl.display.StageScaleMode;
openfl.display.Tilesheet = function(image) {
	this.__bitmap = image;
	this.__centerPoints = new Array();
	this.__tileRects = new Array();
	this.__tileUVs = new Array();
};
$hxClasses["openfl.display.Tilesheet"] = openfl.display.Tilesheet;
openfl.display.Tilesheet.__name__ = ["openfl","display","Tilesheet"];
openfl.display.Tilesheet.prototype = {
	addTileRect: function(rectangle,centerPoint) {
		this.__tileRects.push(rectangle);
		if(centerPoint == null) centerPoint = new openfl.geom.Point();
		this.__centerPoints.push(centerPoint);
		this.__tileUVs.push(new openfl.geom.Rectangle(rectangle.get_left() / this.__bitmap.get_width(),rectangle.get_top() / this.__bitmap.get_height(),rectangle.get_right() / this.__bitmap.get_width(),rectangle.get_bottom() / this.__bitmap.get_height()));
		return this.__tileRects.length - 1;
	}
	,drawTiles: function(graphics,tileData,smooth,flags) {
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		graphics.drawTiles(this,tileData,smooth,flags);
	}
	,getTileCenter: function(index) {
		return this.__centerPoints[index];
	}
	,getTileRect: function(index) {
		return this.__tileRects[index];
	}
	,getTileUVs: function(index) {
		return this.__tileUVs[index];
	}
	,__class__: openfl.display.Tilesheet
};
openfl.errors = {};
openfl.errors.Error = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
};
$hxClasses["openfl.errors.Error"] = openfl.errors.Error;
openfl.errors.Error.__name__ = ["openfl","errors","Error"];
openfl.errors.Error.prototype = {
	getStackTrace: function() {
		return haxe.CallStack.toString(haxe.CallStack.exceptionStack());
	}
	,toString: function() {
		if(this.message != null) return this.message; else return "Error";
	}
	,__class__: openfl.errors.Error
};
openfl.errors.IOError = function(message) {
	if(message == null) message = "";
	openfl.errors.Error.call(this,message);
};
$hxClasses["openfl.errors.IOError"] = openfl.errors.IOError;
openfl.errors.IOError.__name__ = ["openfl","errors","IOError"];
openfl.errors.IOError.__super__ = openfl.errors.Error;
openfl.errors.IOError.prototype = $extend(openfl.errors.Error.prototype,{
	__class__: openfl.errors.IOError
});
openfl.errors.RangeError = function(inMessage) {
	if(inMessage == null) inMessage = "";
	openfl.errors.Error.call(this,inMessage,0);
};
$hxClasses["openfl.errors.RangeError"] = openfl.errors.RangeError;
openfl.errors.RangeError.__name__ = ["openfl","errors","RangeError"];
openfl.errors.RangeError.__super__ = openfl.errors.Error;
openfl.errors.RangeError.prototype = $extend(openfl.errors.Error.prototype,{
	__class__: openfl.errors.RangeError
});
openfl.events.TextEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.TextEvent"] = openfl.events.TextEvent;
openfl.events.TextEvent.__name__ = ["openfl","events","TextEvent"];
openfl.events.TextEvent.__super__ = openfl.events.Event;
openfl.events.TextEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.TextEvent
});
openfl.events.ErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	openfl.events.TextEvent.call(this,type,bubbles,cancelable);
	this.text = text;
	this.errorID = id;
};
$hxClasses["openfl.events.ErrorEvent"] = openfl.events.ErrorEvent;
openfl.events.ErrorEvent.__name__ = ["openfl","events","ErrorEvent"];
openfl.events.ErrorEvent.__super__ = openfl.events.TextEvent;
openfl.events.ErrorEvent.prototype = $extend(openfl.events.TextEvent.prototype,{
	__class__: openfl.events.ErrorEvent
});
openfl.events.Listener = function(inListener,inUseCapture,inPriority) {
	this.mListner = inListener;
	this.mUseCapture = inUseCapture;
	this.mPriority = inPriority;
	this.mID = openfl.events.Listener.sIDs++;
};
$hxClasses["openfl.events.Listener"] = openfl.events.Listener;
openfl.events.Listener.__name__ = ["openfl","events","Listener"];
openfl.events.Listener.prototype = {
	dispatchEvent: function(event) {
		this.mListner(event);
	}
	,Is: function(inListener,inCapture) {
		return Reflect.compareMethods(this.mListner,inListener) && this.mUseCapture == inCapture;
	}
	,__class__: openfl.events.Listener
};
openfl.events.EventPhase = function() { };
$hxClasses["openfl.events.EventPhase"] = openfl.events.EventPhase;
openfl.events.EventPhase.__name__ = ["openfl","events","EventPhase"];
openfl.events.FocusEvent = function(type,bubbles,cancelable,inObject,inShiftKey,inKeyCode) {
	if(inKeyCode == null) inKeyCode = 0;
	if(inShiftKey == null) inShiftKey = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.keyCode = inKeyCode;
	if(inShiftKey == null) this.shiftKey = false; else this.shiftKey = inShiftKey;
	this.relatedObject = inObject;
};
$hxClasses["openfl.events.FocusEvent"] = openfl.events.FocusEvent;
openfl.events.FocusEvent.__name__ = ["openfl","events","FocusEvent"];
openfl.events.FocusEvent.__super__ = openfl.events.Event;
openfl.events.FocusEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.FocusEvent
});
openfl.events.HTTPStatusEvent = function(type,bubbles,cancelable,status) {
	if(status == null) status = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.status = status;
	openfl.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.HTTPStatusEvent"] = openfl.events.HTTPStatusEvent;
openfl.events.HTTPStatusEvent.__name__ = ["openfl","events","HTTPStatusEvent"];
openfl.events.HTTPStatusEvent.__super__ = openfl.events.Event;
openfl.events.HTTPStatusEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.HTTPStatusEvent
});
openfl.events.IOErrorEvent = function(type,bubbles,cancelable,inText) {
	if(inText == null) inText = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.text = inText;
};
$hxClasses["openfl.events.IOErrorEvent"] = openfl.events.IOErrorEvent;
openfl.events.IOErrorEvent.__name__ = ["openfl","events","IOErrorEvent"];
openfl.events.IOErrorEvent.__super__ = openfl.events.Event;
openfl.events.IOErrorEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.IOErrorEvent
});
openfl.events.KeyboardEvent = function(type,bubbles,cancelable,inCharCode,inKeyCode,inKeyLocation,inCtrlKey,inAltKey,inShiftKey,controlKeyValue,commandKeyValue) {
	if(commandKeyValue == null) commandKeyValue = false;
	if(controlKeyValue == null) controlKeyValue = false;
	if(inShiftKey == null) inShiftKey = false;
	if(inAltKey == null) inAltKey = false;
	if(inCtrlKey == null) inCtrlKey = false;
	if(inKeyLocation == null) inKeyLocation = 0;
	if(inKeyCode == null) inKeyCode = 0;
	if(inCharCode == null) inCharCode = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	if(inAltKey == null) this.altKey = false; else this.altKey = inAltKey;
	if(inCharCode == null) this.charCode = 0; else this.charCode = inCharCode;
	if(inCtrlKey == null) this.ctrlKey = false; else this.ctrlKey = inCtrlKey;
	this.commandKey = commandKeyValue;
	this.controlKey = controlKeyValue;
	this.keyCode = inKeyCode;
	if(inKeyLocation == null) this.keyLocation = 0; else this.keyLocation = inKeyLocation;
	if(inShiftKey == null) this.shiftKey = false; else this.shiftKey = inShiftKey;
};
$hxClasses["openfl.events.KeyboardEvent"] = openfl.events.KeyboardEvent;
openfl.events.KeyboardEvent.__name__ = ["openfl","events","KeyboardEvent"];
openfl.events.KeyboardEvent.__super__ = openfl.events.Event;
openfl.events.KeyboardEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.KeyboardEvent
});
openfl.events.PasteEvent = function(text) {
	openfl.events.Event.call(this,openfl.events.Event.PASTE);
	this.text = text;
};
$hxClasses["openfl.events.PasteEvent"] = openfl.events.PasteEvent;
openfl.events.PasteEvent.__name__ = ["openfl","events","PasteEvent"];
openfl.events.PasteEvent.__super__ = openfl.events.Event;
openfl.events.PasteEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.PasteEvent
});
openfl.events.ProgressEvent = function(type,bubbles,cancelable,bytesLoaded,bytesTotal) {
	if(bytesTotal == null) bytesTotal = 0;
	if(bytesLoaded == null) bytesLoaded = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.bytesLoaded = bytesLoaded;
	this.bytesTotal = bytesTotal;
};
$hxClasses["openfl.events.ProgressEvent"] = openfl.events.ProgressEvent;
openfl.events.ProgressEvent.__name__ = ["openfl","events","ProgressEvent"];
openfl.events.ProgressEvent.__super__ = openfl.events.Event;
openfl.events.ProgressEvent.prototype = $extend(openfl.events.Event.prototype,{
	__class__: openfl.events.ProgressEvent
});
openfl.events.SecurityErrorEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.ErrorEvent.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.SecurityErrorEvent"] = openfl.events.SecurityErrorEvent;
openfl.events.SecurityErrorEvent.__name__ = ["openfl","events","SecurityErrorEvent"];
openfl.events.SecurityErrorEvent.__super__ = openfl.events.ErrorEvent;
openfl.events.SecurityErrorEvent.prototype = $extend(openfl.events.ErrorEvent.prototype,{
	__class__: openfl.events.SecurityErrorEvent
});
openfl.events.TimerEvent = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl.events.Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.TimerEvent"] = openfl.events.TimerEvent;
openfl.events.TimerEvent.__name__ = ["openfl","events","TimerEvent"];
openfl.events.TimerEvent.__super__ = openfl.events.Event;
openfl.events.TimerEvent.prototype = $extend(openfl.events.Event.prototype,{
	updateAfterEvent: function() {
	}
	,__class__: openfl.events.TimerEvent
});
openfl.events.TouchEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.touchPointID = 0;
	this.isPrimaryTouchPoint = true;
};
$hxClasses["openfl.events.TouchEvent"] = openfl.events.TouchEvent;
openfl.events.TouchEvent.__name__ = ["openfl","events","TouchEvent"];
openfl.events.TouchEvent.__create = function(type,event,touch,local,target) {
	var evt = new openfl.events.TouchEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,false,0,null,0);
	evt.stageX = openfl.Lib.get_current().get_stage().get_mouseX();
	evt.stageY = openfl.Lib.get_current().get_stage().get_mouseY();
	evt.target = target;
	return evt;
};
openfl.events.TouchEvent.__super__ = openfl.events.Event;
openfl.events.TouchEvent.prototype = $extend(openfl.events.Event.prototype,{
	__createSimilar: function(type,related,targ) {
		var result = new openfl.events.TouchEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey);
		result.touchPointID = this.touchPointID;
		result.isPrimaryTouchPoint = this.isPrimaryTouchPoint;
		if(targ != null) result.target = targ;
		return result;
	}
	,__class__: openfl.events.TouchEvent
});
openfl.filters = {};
openfl.filters.BitmapFilter = function(inType) {
	this._mType = inType;
};
$hxClasses["openfl.filters.BitmapFilter"] = openfl.filters.BitmapFilter;
openfl.filters.BitmapFilter.__name__ = ["openfl","filters","BitmapFilter"];
openfl.filters.BitmapFilter.prototype = {
	clone: function() {
		return new openfl.filters.BitmapFilter(this._mType);
	}
	,__preFilter: function(surface) {
	}
	,__applyFilter: function(surface,rect,refreshCache) {
		if(refreshCache == null) refreshCache = false;
	}
	,__getSvg: function() {
		return null;
	}
	,__class__: openfl.filters.BitmapFilter
};
openfl.filters.BlurFilter = function(inBlurX,inBlurY,inQuality) {
	if(inQuality == null) inQuality = 1;
	if(inBlurY == null) inBlurY = 4;
	if(inBlurX == null) inBlurX = 4;
	openfl.filters.BitmapFilter.call(this,"BlurFilter");
	if(inBlurX == null) this.blurX = 4.0; else this.blurX = inBlurX;
	if(inBlurY == null) this.blurY = 4.0; else this.blurY = inBlurY;
	this.MAX_BLUR_WIDTH = openfl.Lib.get_current().get_stage().get_stageWidth();
	this.MAX_BLUR_HEIGHT = openfl.Lib.get_current().get_stage().get_stageHeight();
	if(inQuality == null) this.quality = 1; else this.quality = inQuality;
	var bgColor = openfl.Lib.get_current().get_stage().get_color();
	this.__bG = [(bgColor & 16711680) >>> 16,(bgColor & 65280) >>> 8,bgColor & 255];
};
$hxClasses["openfl.filters.BlurFilter"] = openfl.filters.BlurFilter;
openfl.filters.BlurFilter.__name__ = ["openfl","filters","BlurFilter"];
openfl.filters.BlurFilter.__super__ = openfl.filters.BitmapFilter;
openfl.filters.BlurFilter.prototype = $extend(openfl.filters.BitmapFilter.prototype,{
	applyFilter: function(inBitmapData,inRect,inPoint,inBitmapFilter) {
	}
	,clone: function() {
		return new openfl.filters.BlurFilter(this.blurX,this.blurY,this.quality);
	}
	,__preFilter: function(surface) {
		var ctx = surface.getContext("2d");
		this.__kernel = openfl._Vector.Vector_Impl_._new();
		if(surface.width == 0 || surface.height == 0) return;
		var width;
		if(surface.width > this.MAX_BLUR_WIDTH) width = this.MAX_BLUR_WIDTH; else width = surface.width;
		var height;
		if(surface.height > this.MAX_BLUR_HEIGHT) height = this.MAX_BLUR_HEIGHT; else height = surface.height;
		this.__buildKernel(ctx.getImageData(0,0,width,height).data,width,height,this.__kernel);
	}
	,__buildKernel: function(src,srcW,srcH,dst) {
		var i = 0;
		var j = 0;
		var tot = [];
		var maxW = srcW * 4;
		var _g = 0;
		while(_g < srcH) {
			var y = _g++;
			var _g1 = 0;
			while(_g1 < srcW) {
				var x = _g1++;
				tot[0] = src[j];
				tot[1] = src[j + 1];
				tot[2] = src[j + 2];
				tot[3] = src[j + 3];
				if(x > 0) {
					tot[0] += dst[i - 4];
					tot[1] += dst[i - 3];
					tot[2] += dst[i - 2];
					tot[3] += dst[i - 1];
				}
				if(y > 0) {
					tot[0] += dst[i - maxW];
					tot[1] += dst[i + 1 - maxW];
					tot[2] += dst[i + 2 - maxW];
					tot[3] += dst[i + 3 - maxW];
				}
				if(x > 0 && y > 0) {
					tot[0] -= dst[i - maxW - 4];
					tot[1] -= dst[i - maxW - 3];
					tot[2] -= dst[i - maxW - 2];
					tot[3] -= dst[i - maxW - 1];
				}
				dst[i] = tot[0];
				dst[i + 1] = tot[1];
				dst[i + 2] = tot[2];
				dst[i + 3] = tot[3];
				i += 4;
				j += 4;
			}
		}
	}
	,__boxBlur: function(dst,srcW,srcH,p,boxW,boxH) {
		var mul1 = 1.0 / ((boxW * 2 + 1) * (boxH * 2 + 1));
		var i = 0;
		var tot = [];
		var h1 = 0;
		var l1 = 0;
		var h2 = 0;
		var l2 = 0;
		var mul2 = 1.7 / ((boxW * 2 + 1) * (boxH * 2 + 1));
		var _g = 0;
		while(_g < srcH) {
			var y = _g++;
			var _g1 = 0;
			while(_g1 < srcW) {
				var x = _g1++;
				if(x + boxW >= srcW) h1 = srcW - 1; else h1 = x + boxW;
				if(y + boxH >= srcH) l1 = srcH - 1; else l1 = y + boxH;
				if(x - boxW < 0) h2 = 0; else h2 = x - boxW;
				if(y - boxH < 0) l2 = 0; else l2 = y - boxH;
				tot[0] = p[(h1 + l1 * srcW) * 4] + p[(h2 + l2 * srcW) * 4] - p[(h2 + l1 * srcW) * 4] - p[(h1 + l2 * srcW) * 4];
				tot[1] = p[(h1 + l1 * srcW) * 4 + 1] + p[(h2 + l2 * srcW) * 4 + 1] - p[(h2 + l1 * srcW) * 4 + 1] - p[(h1 + l2 * srcW) * 4 + 1];
				tot[2] = p[(h1 + l1 * srcW) * 4 + 2] + p[(h2 + l2 * srcW) * 4 + 2] - p[(h2 + l1 * srcW) * 4 + 2] - p[(h1 + l2 * srcW) * 4 + 2];
				tot[3] = p[(h1 + l1 * srcW) * 4 + 3] + p[(h2 + l2 * srcW) * 4 + 3] - p[(h2 + l1 * srcW) * 4 + 3] - p[(h1 + l2 * srcW) * 4 + 3];
				dst[i] = Math.floor(Math.abs(255 - this.__bG[0] - tot[0] * mul1));
				dst[i + 1] = Math.floor(Math.abs(255 - this.__bG[1] - tot[1] * mul1));
				dst[i + 2] = Math.floor(Math.abs(255 - this.__bG[2] - tot[2] * mul1));
				dst[i + 3] = Math.floor(tot[3] * mul2);
				i += 4;
			}
		}
	}
	,__applyFilter: function(surface,rect,refreshCache) {
		if(refreshCache == null) refreshCache = false;
		if(surface.width > 0 && surface.height > 0) {
			if(this.__kernel == null) this.__preFilter(surface);
			var ctx = surface.getContext("2d");
			var width;
			if(surface.width > this.MAX_BLUR_WIDTH) width = this.MAX_BLUR_WIDTH; else width = surface.width;
			var height;
			if(surface.height > this.MAX_BLUR_HEIGHT) height = this.MAX_BLUR_HEIGHT; else height = surface.height;
			var __imageData = ctx.getImageData(0,0,width,height);
			this.__boxBlur(__imageData.data,Math.floor(__imageData.width),Math.floor(__imageData.height),this.__kernel,Math.floor(this.blurX),Math.floor(this.blurY));
			ctx.putImageData(__imageData,0,0);
		}
	}
	,__getSvg: function() {
		var x1 = this.blurX;
		var y1 = this.blurY;
		return Snap.filter.blur(x1, y1);
	}
	,__class__: openfl.filters.BlurFilter
});
openfl.filters.DropShadowFilter = function(in_distance,in_angle,in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout,in_hideObject) {
	if(in_hideObject == null) in_hideObject = false;
	if(in_knockout == null) in_knockout = false;
	if(in_inner == null) in_inner = false;
	if(in_quality == null) in_quality = 1;
	if(in_strength == null) in_strength = 1.0;
	if(in_blurY == null) in_blurY = 4.0;
	if(in_blurX == null) in_blurX = 4.0;
	if(in_alpha == null) in_alpha = 1.0;
	if(in_color == null) in_color = 0;
	if(in_angle == null) in_angle = 45.0;
	if(in_distance == null) in_distance = 4.0;
	openfl.filters.BitmapFilter.call(this,"DropShadowFilter");
	this.distance = in_distance;
	this.angle = in_angle;
	this.color = in_color;
	this.alpha = in_alpha;
	this.blurX = in_blurX;
	this.blurY = in_blurX;
	this.strength = in_strength;
	this.quality = in_quality;
	this.inner = in_inner;
	this.knockout = in_knockout;
	this.hideObject = in_hideObject;
	this.___cached = false;
};
$hxClasses["openfl.filters.DropShadowFilter"] = openfl.filters.DropShadowFilter;
openfl.filters.DropShadowFilter.__name__ = ["openfl","filters","DropShadowFilter"];
openfl.filters.DropShadowFilter.__super__ = openfl.filters.BitmapFilter;
openfl.filters.DropShadowFilter.prototype = $extend(openfl.filters.BitmapFilter.prototype,{
	clone: function() {
		return new openfl.filters.DropShadowFilter(this.distance,this.angle,this.color,this.alpha,this.blurX,this.blurY,this.strength,this.quality,this.inner,this.knockout,this.hideObject);
	}
	,__applyFilter: function(surface,rect,refreshCache) {
		if(refreshCache == null) refreshCache = false;
		if(!this.___cached || refreshCache) {
			var distanceX = this.distance * Math.sin(2 * Math.PI * this.angle / 360.0);
			var distanceY = this.distance * Math.cos(2 * Math.PI * this.angle / 360.0);
			var blurRadius = Math.max(this.blurX,this.blurY);
			var context = surface.getContext("2d");
			context.shadowOffsetX = distanceX;
			context.shadowOffsetY = distanceY;
			context.shadowBlur = blurRadius;
			context.shadowColor = "rgba(" + (this.color >> 16 & 255) + "," + (this.color >> 8 & 255) + "," + (this.color & 255) + "," + this.alpha + ")";
			this.___cached = true;
		}
	}
	,__getSvg: function() {
		var dx = Math.round(this.distance * Math.sin(2 * Math.PI * this.angle / 360.0));
		var dy = Math.round(this.distance * Math.cos(2 * Math.PI * this.angle / 360.0));
		var blurRadius = Math.max(this.blurX,this.blurY);
		if(this.inner) return "\n                    <!-- Shadow Offset -->\n                    <feOffset\n                    dx='" + dx + "'\n                    dy='" + dy + "'\n                    />\n\n                    <!-- Shadow Blur -->\n                    <feGaussianBlur\n                    stdDeviation='" + Math.round(blurRadius / 2) + "'\n                    result='offset-blur'\n                    />\n\n                    <!-- Invert the drop shadow\n                    to create an inner shadow -->\n                    <feComposite\n                    operator='out'\n                    in='SourceGraphic'\n                    in2='offset-blur'\n                    result='inverse'\n                    />\n\n                    <!-- Color & Opacity -->\n                    <feFlood\n                    flood-color='" + "rgba(" + (this.color >> 16 & 255) + "," + (this.color >> 8 & 255) + "," + (this.color & 255) + "," + this.alpha + ")" + "'\n                    flood-opacity='0.75'\n                    result='color'\n                    />\n\n                    <!-- Clip color inside shadow -->\n                    <feComposite\n                    operator='in'\n                    in='color'\n                    in2='inverse'\n                    result='shadow'\n                    />\n\n                    <!-- Put shadow over original object -->\n                    <feComposite\n                    operator='over'\n                    in='shadow'\n                    in2='SourceGraphic'\n                    />"; else {
			var blur = Math.round(blurRadius / 2);
			var dx1 = dx;
			var dy1 = dy;
			var blur1 = blur;
			var color1 = "rgba(" + (this.color >> 16 & 255) + "," + (this.color >> 8 & 255) + "," + (this.color & 255) + "," + this.alpha + ")";
			return Snap.filter.shadow(dx1, dy1, blur1, color1);
		}
	}
	,__class__: openfl.filters.DropShadowFilter
});
openfl.filters.GlowFilter = function(in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout) {
	if(in_knockout == null) in_knockout = false;
	if(in_inner == null) in_inner = false;
	if(in_quality == null) in_quality = 1;
	if(in_strength == null) in_strength = 1.0;
	if(in_blurY == null) in_blurY = 6.0;
	if(in_blurX == null) in_blurX = 6.0;
	if(in_alpha == null) in_alpha = 1.0;
	if(in_color == null) in_color = 0;
	openfl.filters.DropShadowFilter.call(this,0,0,in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout,false);
};
$hxClasses["openfl.filters.GlowFilter"] = openfl.filters.GlowFilter;
openfl.filters.GlowFilter.__name__ = ["openfl","filters","GlowFilter"];
openfl.filters.GlowFilter.__super__ = openfl.filters.DropShadowFilter;
openfl.filters.GlowFilter.prototype = $extend(openfl.filters.DropShadowFilter.prototype,{
	__class__: openfl.filters.GlowFilter
});
openfl.geom = {};
openfl.geom.ColorTransform = function(inRedMultiplier,inGreenMultiplier,inBlueMultiplier,inAlphaMultiplier,inRedOffset,inGreenOffset,inBlueOffset,inAlphaOffset) {
	if(inAlphaOffset == null) inAlphaOffset = 0;
	if(inBlueOffset == null) inBlueOffset = 0;
	if(inGreenOffset == null) inGreenOffset = 0;
	if(inRedOffset == null) inRedOffset = 0;
	if(inAlphaMultiplier == null) inAlphaMultiplier = 1;
	if(inBlueMultiplier == null) inBlueMultiplier = 1;
	if(inGreenMultiplier == null) inGreenMultiplier = 1;
	if(inRedMultiplier == null) inRedMultiplier = 1;
	if(inRedMultiplier == null) this.redMultiplier = 1.0; else this.redMultiplier = inRedMultiplier;
	if(inGreenMultiplier == null) this.greenMultiplier = 1.0; else this.greenMultiplier = inGreenMultiplier;
	if(inBlueMultiplier == null) this.blueMultiplier = 1.0; else this.blueMultiplier = inBlueMultiplier;
	if(inAlphaMultiplier == null) this.alphaMultiplier = 1.0; else this.alphaMultiplier = inAlphaMultiplier;
	if(inRedOffset == null) this.redOffset = 0.0; else this.redOffset = inRedOffset;
	if(inGreenOffset == null) this.greenOffset = 0.0; else this.greenOffset = inGreenOffset;
	if(inBlueOffset == null) this.blueOffset = 0.0; else this.blueOffset = inBlueOffset;
	if(inAlphaOffset == null) this.alphaOffset = 0.0; else this.alphaOffset = inAlphaOffset;
};
$hxClasses["openfl.geom.ColorTransform"] = openfl.geom.ColorTransform;
openfl.geom.ColorTransform.__name__ = ["openfl","geom","ColorTransform"];
openfl.geom.ColorTransform.prototype = {
	concat: function(second) {
		this.redMultiplier += second.redMultiplier;
		this.greenMultiplier += second.greenMultiplier;
		this.blueMultiplier += second.blueMultiplier;
		this.alphaMultiplier += second.alphaMultiplier;
	}
	,get_color: function() {
		return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | (this.blueOffset | 0);
	}
	,set_color: function(value) {
		this.redOffset = value >> 16 & 255;
		this.greenOffset = value >> 8 & 255;
		this.blueOffset = value & 255;
		this.redMultiplier = 0;
		this.greenMultiplier = 0;
		this.blueMultiplier = 0;
		return this.get_color();
	}
	,__class__: openfl.geom.ColorTransform
	,__properties__: {set_color:"set_color",get_color:"get_color"}
};
openfl.geom.Matrix = function(in_a,in_b,in_c,in_d,in_tx,in_ty) {
	if(in_ty == null) in_ty = 0;
	if(in_tx == null) in_tx = 0;
	if(in_d == null) in_d = 1;
	if(in_c == null) in_c = 0;
	if(in_b == null) in_b = 0;
	if(in_a == null) in_a = 1;
	this.a = in_a;
	this.b = in_b;
	this.c = in_c;
	this.d = in_d;
	this.tx = in_tx;
	this.ty = in_ty;
	this._sx = 1.0;
	this._sy = 1.0;
};
$hxClasses["openfl.geom.Matrix"] = openfl.geom.Matrix;
openfl.geom.Matrix.__name__ = ["openfl","geom","Matrix"];
openfl.geom.Matrix.prototype = {
	cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,clone: function() {
		var m = new openfl.geom.Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		m._sx = this._sx;
		m._sy = this._sy;
		return m;
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
		this._sx *= m._sx;
		this._sy *= m._sy;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,copy: function(m) {
		this.a = m.a;
		this.b = m.b;
		this.c = m.c;
		this.d = m.d;
		this.tx = m.tx;
		this.ty = m.ty;
		this._sx = m._sx;
		this._sy = m._sy;
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = scaleX;
		this.d = scaleY;
		this.b = rotation;
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(in_width,in_height,rotation,in_tx,in_ty) {
		if(in_ty == null) in_ty = 0;
		if(in_tx == null) in_tx = 0;
		if(rotation == null) rotation = 0;
		this.a = in_width / 1638.4;
		this.d = in_height / 1638.4;
		if(rotation != null && rotation != 0.0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		if(in_tx != null) this.tx = in_tx + in_width / 2; else this.tx = in_width / 2;
		if(in_ty != null) this.ty = in_ty + in_height / 2; else this.ty = in_height / 2;
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
		this._sx = 1.0;
		this._sy = 1.0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		this._sx /= this._sx;
		this._sy /= this._sy;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
		return this;
	}
	,mult: function(m) {
		var result = this.clone();
		result.concat(m);
		return result;
	}
	,rotate: function(inTheta) {
		var cos = Math.cos(inTheta);
		var sin = Math.sin(inTheta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,scale: function(inSX,inSY) {
		this._sx = inSX;
		this._sy = inSY;
		this.a *= inSX;
		this.b *= inSY;
		this.c *= inSX;
		this.d *= inSY;
		this.tx *= inSX;
		this.ty *= inSY;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,setRotation: function(inTheta,inScale) {
		if(inScale == null) inScale = 1;
		var scale = inScale;
		this.a = Math.cos(inTheta) * scale;
		this.c = Math.sin(inTheta) * scale;
		this.b = -this.c;
		this.d = this.a;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,to3DString: function() {
		return "matrix3d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", " + "0, 1" + ")";
	}
	,toMozString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,toString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformPoint: function(inPos) {
		return new openfl.geom.Point(inPos.x * this.a + inPos.y * this.c + this.tx,inPos.x * this.b + inPos.y * this.d + this.ty);
	}
	,translate: function(inDX,inDY) {
		var m = new openfl.geom.Matrix();
		m.tx = inDX;
		m.ty = inDY;
		this.concat(m);
	}
	,__transformX: function(inPos) {
		return inPos.x * this.a + inPos.y * this.c + this.tx;
	}
	,__transformY: function(inPos) {
		return inPos.x * this.b + inPos.y * this.d + this.ty;
	}
	,__translateTransformed: function(inPos) {
		this.tx = inPos.x * this.a + inPos.y * this.c + this.tx;
		this.ty = inPos.x * this.b + inPos.y * this.d + this.ty;
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,__class__: openfl.geom.Matrix
};
openfl.geom.Point = function(inX,inY) {
	if(inY == null) inY = 0;
	if(inX == null) inX = 0;
	this.x = inX;
	this.y = inY;
};
$hxClasses["openfl.geom.Point"] = openfl.geom.Point;
openfl.geom.Point.__name__ = ["openfl","geom","Point"];
openfl.geom.Point.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
openfl.geom.Point.interpolate = function(pt1,pt2,f) {
	return new openfl.geom.Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
openfl.geom.Point.polar = function(len,angle) {
	return new openfl.geom.Point(len * Math.cos(angle),len * Math.sin(angle));
};
openfl.geom.Point.prototype = {
	add: function(v) {
		return new openfl.geom.Point(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new openfl.geom.Point(this.x,this.y);
	}
	,equals: function(toCompare) {
		return toCompare.x == this.x && toCompare.y == this.y;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,subtract: function(v) {
		return new openfl.geom.Point(this.x - v.x,this.y - v.y);
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: openfl.geom.Point
	,__properties__: {get_length:"get_length"}
};
openfl.geom.Rectangle = function(inX,inY,inWidth,inHeight) {
	if(inHeight == null) inHeight = 0;
	if(inWidth == null) inWidth = 0;
	if(inY == null) inY = 0;
	if(inX == null) inX = 0;
	this.x = inX;
	this.y = inY;
	this.width = inWidth;
	this.height = inHeight;
};
$hxClasses["openfl.geom.Rectangle"] = openfl.geom.Rectangle;
openfl.geom.Rectangle.__name__ = ["openfl","geom","Rectangle"];
openfl.geom.Rectangle.prototype = {
	clone: function() {
		return new openfl.geom.Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(inX,inY) {
		return inX >= this.x && inY >= this.y && inX < this.get_right() && inY < this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,equals: function(toCompare) {
		return this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,extendBounds: function(r) {
		var dx = this.x - r.x;
		if(dx > 0) {
			this.x -= dx;
			this.width += dx;
		}
		var dy = this.y - r.y;
		if(dy > 0) {
			this.y -= dy;
			this.height += dy;
		}
		if(r.get_right() > this.get_right()) this.set_right(r.get_right());
		if(r.get_bottom() > this.get_bottom()) this.set_bottom(r.get_bottom());
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return new openfl.geom.Rectangle();
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		if(y1 <= y0) return new openfl.geom.Rectangle();
		return new openfl.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,intersects: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return false;
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		return y1 > y0;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,setTo: function(xa,ya,widtha,heighta) {
		this.x = xa;
		this.y = ya;
		this.width = widtha;
		this.height = heighta;
	}
	,transform: function(m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = tx0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		return new openfl.geom.Rectangle(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,union: function(toUnion) {
		var x0;
		if(this.x > toUnion.x) x0 = toUnion.x; else x0 = this.x;
		var x1;
		if(this.get_right() < toUnion.get_right()) x1 = toUnion.get_right(); else x1 = this.get_right();
		var y0;
		if(this.y > toUnion.y) y0 = toUnion.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() < toUnion.get_bottom()) y1 = toUnion.get_bottom(); else y1 = this.get_bottom();
		return new openfl.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottomRight: function() {
		return new openfl.geom.Point(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_size: function() {
		return new openfl.geom.Point(this.width,this.height);
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_topLeft: function() {
		return new openfl.geom.Point(this.x,this.y);
	}
	,set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,__class__: openfl.geom.Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
openfl.geom.Transform = function(displayObject) {
	if(displayObject == null) throw "Cannot create Transform with no DisplayObject.";
	this._displayObject = displayObject;
	this._matrix = new openfl.geom.Matrix();
	this._fullMatrix = new openfl.geom.Matrix();
	this.set_colorTransform(new openfl.geom.ColorTransform());
};
$hxClasses["openfl.geom.Transform"] = openfl.geom.Transform;
openfl.geom.Transform.__name__ = ["openfl","geom","Transform"];
openfl.geom.Transform.prototype = {
	__getFullMatrix: function(localMatrix) {
		var m;
		if(localMatrix != null) m = localMatrix.mult(this._fullMatrix); else m = this._fullMatrix.clone();
		return m;
	}
	,__setFullMatrix: function(inValue) {
		this._fullMatrix.copy(inValue);
		return this._fullMatrix;
	}
	,__setMatrix: function(inValue) {
		this._matrix.copy(inValue);
	}
	,set_colorTransform: function(inValue) {
		this.colorTransform = inValue;
		return inValue;
	}
	,get_concatenatedMatrix: function() {
		return this.__getFullMatrix(this._matrix);
	}
	,get_matrix: function() {
		return this._matrix.clone();
	}
	,set_matrix: function(inValue) {
		this._matrix.copy(inValue);
		this._displayObject.__matrixOverridden();
		return this._matrix;
	}
	,get_pixelBounds: function() {
		return this._displayObject.getBounds(null);
	}
	,__class__: openfl.geom.Transform
	,__properties__: {get_pixelBounds:"get_pixelBounds",set_matrix:"set_matrix",get_matrix:"get_matrix",get_concatenatedMatrix:"get_concatenatedMatrix",set_colorTransform:"set_colorTransform"}
};
openfl.media = {};
openfl.media.Sound = function(stream,context) {
	openfl.events.EventDispatcher.call(this,this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.id3 = null;
	this.isBuffering = false;
	this.length = 0;
	this.url = null;
	this.__soundChannels = new haxe.ds.IntMap();
	this.__soundIdx = 0;
	if(stream != null) this.load(stream,context);
};
$hxClasses["openfl.media.Sound"] = openfl.media.Sound;
openfl.media.Sound.__name__ = ["openfl","media","Sound"];
openfl.media.Sound.__canPlayMime = function(mime) {
	var audio = window.document.createElement("audio");
	var playable = function(ok) {
		if(ok != "" && ok != "no") return true; else return false;
	};
	return playable(audio.canPlayType(mime,null));
};
openfl.media.Sound.__canPlayType = function(extension) {
	var mime = openfl.media.Sound.__mimeForExtension(extension);
	if(mime == null) return false;
	return openfl.media.Sound.__canPlayMime(mime);
};
openfl.media.Sound.__mimeForExtension = function(extension) {
	var mime = null;
	switch(extension) {
	case "mp3":
		mime = "audio/mpeg";
		break;
	case "ogg":
		mime = "audio/ogg; codecs=\"vorbis\"";
		break;
	case "wav":
		mime = "audio/wav; codecs=\"1\"";
		break;
	case "aac":
		mime = "audio/mp4; codecs=\"mp4a.40.2\"";
		break;
	default:
		mime = null;
	}
	return mime;
};
openfl.media.Sound.__super__ = openfl.events.EventDispatcher;
openfl.media.Sound.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	close: function() {
	}
	,load: function(stream,context) {
		this.__load(stream,context);
	}
	,play: function(startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0.0;
		if(this.__streamUrl == null) return null;
		var self = this;
		var curIdx = this.__soundIdx;
		var removeRef = function() {
			self.__soundChannels.remove(curIdx);
		};
		var channel = openfl.media.SoundChannel.__create(this.__streamUrl,startTime,loops,sndTransform,removeRef);
		this.__soundChannels.set(curIdx,channel);
		this.__soundIdx++;
		var audio = channel.__audio;
		return channel;
	}
	,__addEventListeners: function() {
		this.__soundCache.addEventListener(openfl.events.Event.COMPLETE,$bind(this,this.__onSoundLoaded));
		this.__soundCache.addEventListener(openfl.events.IOErrorEvent.IO_ERROR,$bind(this,this.__onSoundLoadError));
	}
	,__load: function(stream,context,mime) {
		if(mime == null) mime = "";
		this.__streamUrl = stream.url;
		try {
			this.__soundCache = new openfl.net.URLLoader();
			this.__addEventListeners();
			this.__soundCache.load(stream);
		} catch( e ) {
		}
	}
	,__removeEventListeners: function() {
		this.__soundCache.removeEventListener(openfl.events.Event.COMPLETE,$bind(this,this.__onSoundLoaded),false);
		this.__soundCache.removeEventListener(openfl.events.IOErrorEvent.IO_ERROR,$bind(this,this.__onSoundLoadError),false);
	}
	,__onSoundLoadError: function(evt) {
		this.__removeEventListeners();
		var evt1 = new openfl.events.IOErrorEvent(openfl.events.IOErrorEvent.IO_ERROR);
		this.dispatchEvent(evt1);
	}
	,__onSoundLoaded: function(evt) {
		this.__removeEventListeners();
		var evt1 = new openfl.events.Event(openfl.events.Event.COMPLETE);
		this.dispatchEvent(evt1);
	}
	,__class__: openfl.media.Sound
});
openfl.media.SoundChannel = function() {
	openfl.events.EventDispatcher.call(this,this);
	this.ChannelId = -1;
	this.leftPeak = 0.;
	this.position = 0.;
	this.rightPeak = 0.;
	this.__audioCurrentLoop = 1;
	this.__audioTotalLoops = 1;
};
$hxClasses["openfl.media.SoundChannel"] = openfl.media.SoundChannel;
openfl.media.SoundChannel.__name__ = ["openfl","media","SoundChannel"];
openfl.media.SoundChannel.__create = function(src,startTime,loops,sndTransform,removeRef) {
	if(loops == null) loops = 0;
	if(startTime == null) startTime = 0.0;
	var channel = new openfl.media.SoundChannel();
	channel.__audio = window.document.createElement("audio");
	channel.__removeRef = removeRef;
	channel.__audio.addEventListener("ended",$bind(channel,channel.__onSoundChannelFinished),false);
	channel.__audio.addEventListener("seeked",$bind(channel,channel.__onSoundSeeked),false);
	channel.__audio.addEventListener("stalled",$bind(channel,channel.__onStalled),false);
	channel.__audio.addEventListener("progress",$bind(channel,channel.__onProgress),false);
	if(loops > 0) {
		channel.__audioTotalLoops = loops;
		channel.__audio.loop = true;
	}
	channel.__startTime = startTime;
	if(startTime > 0.) {
		var onLoad = null;
		onLoad = function(_) {
			channel.__audio.currentTime = channel.__startTime;
			channel.__audio.play();
			channel.__audio.removeEventListener("canplaythrough",onLoad,false);
		};
		channel.__audio.addEventListener("canplaythrough",onLoad,false);
	} else channel.__audio.autoplay = true;
	channel.__audio.src = src;
	return channel;
};
openfl.media.SoundChannel.__super__ = openfl.events.EventDispatcher;
openfl.media.SoundChannel.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	stop: function() {
		if(this.__audio != null) {
			this.__audio.pause();
			this.__audio = null;
			if(this.__removeRef != null) this.__removeRef();
		}
	}
	,__onProgress: function(evt) {
	}
	,__onSoundChannelFinished: function(evt) {
		if(this.__audioCurrentLoop >= this.__audioTotalLoops) {
			this.__audio.removeEventListener("ended",$bind(this,this.__onSoundChannelFinished),false);
			this.__audio.removeEventListener("seeked",$bind(this,this.__onSoundSeeked),false);
			this.__audio.removeEventListener("stalled",$bind(this,this.__onStalled),false);
			this.__audio.removeEventListener("progress",$bind(this,this.__onProgress),false);
			this.__audio = null;
			var evt1 = new openfl.events.Event(openfl.events.Event.SOUND_COMPLETE);
			evt1.target = this;
			this.dispatchEvent(evt1);
			if(this.__removeRef != null) this.__removeRef();
		} else {
			this.__audio.currentTime = this.__startTime;
			this.__audio.play();
		}
	}
	,__onSoundSeeked: function(evt) {
		if(this.__audioCurrentLoop >= this.__audioTotalLoops) {
			this.__audio.loop = false;
			this.stop();
		} else this.__audioCurrentLoop++;
	}
	,__onStalled: function(evt) {
		if(this.__audio != null) this.__audio.load();
	}
	,set_soundTransform: function(v) {
		this.__audio.volume = v.volume;
		return this.soundTransform = v;
	}
	,__class__: openfl.media.SoundChannel
	,__properties__: {set_soundTransform:"set_soundTransform"}
});
openfl.media.SoundLoaderContext = function(bufferTime,checkPolicyFile) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	if(bufferTime == null) bufferTime = 0;
	this.bufferTime = bufferTime;
	this.checkPolicyFile = checkPolicyFile;
};
$hxClasses["openfl.media.SoundLoaderContext"] = openfl.media.SoundLoaderContext;
openfl.media.SoundLoaderContext.__name__ = ["openfl","media","SoundLoaderContext"];
openfl.media.SoundLoaderContext.prototype = {
	__class__: openfl.media.SoundLoaderContext
};
openfl.media.SoundTransform = function(vol,panning) {
	if(panning == null) panning = 0;
	if(vol == null) vol = 1;
	this.volume = vol;
	this.pan = panning;
	this.leftToLeft = 0;
	this.leftToRight = 0;
	this.rightToLeft = 0;
	this.rightToRight = 0;
};
$hxClasses["openfl.media.SoundTransform"] = openfl.media.SoundTransform;
openfl.media.SoundTransform.__name__ = ["openfl","media","SoundTransform"];
openfl.media.SoundTransform.prototype = {
	__class__: openfl.media.SoundTransform
};
openfl.net = {};
openfl.net.SharedObject = function() {
	openfl.events.EventDispatcher.call(this);
};
$hxClasses["openfl.net.SharedObject"] = openfl.net.SharedObject;
openfl.net.SharedObject.__name__ = ["openfl","net","SharedObject"];
openfl.net.SharedObject.getLocal = function(name,localPath,secure) {
	if(secure == null) secure = false;
	if(localPath == null) localPath = window.location.href;
	var so = new openfl.net.SharedObject();
	so.__key = localPath + ":" + name;
	var rawData = null;
	try {
		rawData = openfl.net.SharedObject.__getLocalStorage().getItem(so.__key);
	} catch( e ) {
	}
	so.data = { };
	if(rawData != null && rawData != "") {
		var unserializer = new haxe.Unserializer(rawData);
		unserializer.setResolver({ resolveEnum : Type.resolveEnum, resolveClass : openfl.net.SharedObject.resolveClass});
		so.data = unserializer.unserialize();
	}
	if(so.data == null) so.data = { };
	return so;
};
openfl.net.SharedObject.__getLocalStorage = function() {
	var res = js.Browser.getLocalStorage();
	if(res == null) throw new openfl.errors.Error("SharedObject not supported");
	return res;
};
openfl.net.SharedObject.resolveClass = function(name) {
	if(name != null) return Type.resolveClass(StringTools.replace(StringTools.replace(name,"jeash.","openfl."),"browser.","openfl."));
	return null;
};
openfl.net.SharedObject.__super__ = openfl.events.EventDispatcher;
openfl.net.SharedObject.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	clear: function() {
		this.data = { };
		try {
			openfl.net.SharedObject.__getLocalStorage().removeItem(this.__key);
		} catch( e ) {
		}
		this.flush();
	}
	,flush: function() {
		var data = haxe.Serializer.run(this.data);
		try {
			openfl.net.SharedObject.__getLocalStorage().removeItem(this.__key);
			openfl.net.SharedObject.__getLocalStorage().setItem(this.__key,data);
		} catch( e ) {
			return openfl.net.SharedObjectFlushStatus.PENDING;
		}
		return openfl.net.SharedObjectFlushStatus.FLUSHED;
	}
	,setProperty: function(propertyName,value) {
		if(this.data != null) this.data[propertyName] = value;
	}
	,get_size: function() {
		var d = haxe.Serializer.run(this.data);
		return haxe.io.Bytes.ofString(d).length;
	}
	,__class__: openfl.net.SharedObject
	,__properties__: {get_size:"get_size"}
});
openfl.net.SharedObjectFlushStatus = $hxClasses["openfl.net.SharedObjectFlushStatus"] = { __ename__ : ["openfl","net","SharedObjectFlushStatus"], __constructs__ : ["FLUSHED","PENDING"] };
openfl.net.SharedObjectFlushStatus.FLUSHED = ["FLUSHED",0];
openfl.net.SharedObjectFlushStatus.FLUSHED.toString = $estr;
openfl.net.SharedObjectFlushStatus.FLUSHED.__enum__ = openfl.net.SharedObjectFlushStatus;
openfl.net.SharedObjectFlushStatus.PENDING = ["PENDING",1];
openfl.net.SharedObjectFlushStatus.PENDING.toString = $estr;
openfl.net.SharedObjectFlushStatus.PENDING.__enum__ = openfl.net.SharedObjectFlushStatus;
openfl.net.URLLoader = function(request) {
	openfl.events.EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.set_dataFormat(openfl.net.URLLoaderDataFormat.TEXT);
	if(request != null) this.load(request);
};
$hxClasses["openfl.net.URLLoader"] = openfl.net.URLLoader;
openfl.net.URLLoader.__name__ = ["openfl","net","URLLoader"];
openfl.net.URLLoader.__super__ = openfl.events.EventDispatcher;
openfl.net.URLLoader.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	close: function() {
	}
	,getData: function() {
		return null;
	}
	,load: function(request) {
		this.requestUrl(request.url,request.method,request.data,request.formatRequestHeaders());
	}
	,registerEvents: function(subject) {
		var self = this;
		if(typeof XMLHttpRequestProgressEvent != "undefined") subject.addEventListener("progress",$bind(this,this.onProgress),false);
		subject.onreadystatechange = function() {
			if(subject.readyState != 4) return;
			var s;
			try {
				s = subject.status;
			} catch( e ) {
				s = null;
			}
			if(s == undefined) s = null;
			if(s != null) self.onStatus(s);
			if(s != null && s >= 200 && s < 400) self.onData(subject.response); else if(s == null) self.onError("Failed to connect or resolve host"); else if(s == 12029) self.onError("Failed to connect to host"); else if(s == 12007) self.onError("Unknown host"); else if(s == 0) {
				self.onError("Unable to make request (may be blocked due to cross-domain permissions)");
				self.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)");
			} else self.onError("Http Error #" + subject.status);
		};
	}
	,requestUrl: function(url,method,data,requestHeaders) {
		var xmlHttpRequest = new XMLHttpRequest();
		this.registerEvents(xmlHttpRequest);
		var uri = "";
		if(js.Boot.__instanceof(data,openfl.utils.ByteArray)) {
			var data1 = data;
			var _g = this.dataFormat;
			switch(_g[1]) {
			case 0:
				uri = data1.data.buffer;
				break;
			default:
				uri = data1.readUTFBytes(data1.length);
			}
		} else if(js.Boot.__instanceof(data,openfl.net.URLVariables)) {
			var data2 = data;
			var _g1 = 0;
			var _g11 = Reflect.fields(data2);
			while(_g1 < _g11.length) {
				var p = _g11[_g1];
				++_g1;
				if(uri.length != 0) uri += "&";
				uri += encodeURIComponent(p) + "=" + StringTools.urlEncode(Reflect.field(data2,p));
			}
		} else if(data != null) uri = data.toString();
		try {
			if(method == "GET" && uri != null && uri != "") {
				var question = url.split("?").length <= 1;
				xmlHttpRequest.open(method,url + (question?"?":"&") + Std.string(uri),true);
				uri = "";
			} else xmlHttpRequest.open(method,url,true);
		} catch( e ) {
			this.onError(e.toString());
			return;
		}
		var _g2 = this.dataFormat;
		switch(_g2[1]) {
		case 0:
			xmlHttpRequest.responseType = "arraybuffer";
			break;
		default:
		}
		var _g3 = 0;
		while(_g3 < requestHeaders.length) {
			var header = requestHeaders[_g3];
			++_g3;
			xmlHttpRequest.setRequestHeader(header.name,header.value);
		}
		this.url = url;
		xmlHttpRequest.send(uri);
		this.onOpen();
		this.getData = function() {
			if(null == xmlHttpRequest) return null; else if(xmlHttpRequest.response != null) return xmlHttpRequest.response; else if(null != xmlHttpRequest.responseText) return xmlHttpRequest.responseText; else return null;
		};
	}
	,onData: function(_) {
		if(null != _) {
			var content = this.getData();
			var _g = this.dataFormat;
			switch(_g[1]) {
			case 0:
				this.data = openfl.utils.ByteArray.__ofBuffer(content);
				break;
			default:
				this.data = Std.string(content);
			}
		} else this.data = null;
		var evt = new openfl.events.Event(openfl.events.Event.COMPLETE);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onError: function(msg) {
		var evt = new openfl.events.IOErrorEvent(openfl.events.IOErrorEvent.IO_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onOpen: function() {
		var evt = new openfl.events.Event(openfl.events.Event.OPEN);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onProgress: function(event) {
		var evt = new openfl.events.ProgressEvent(openfl.events.ProgressEvent.PROGRESS);
		evt.currentTarget = this;
		evt.bytesLoaded = event.loaded;
		evt.bytesTotal = event.total;
		this.dispatchEvent(evt);
	}
	,onSecurityError: function(msg) {
		var evt = new openfl.events.SecurityErrorEvent(openfl.events.SecurityErrorEvent.SECURITY_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onStatus: function(status) {
		var evt = new openfl.events.HTTPStatusEvent(openfl.events.HTTPStatusEvent.HTTP_STATUS,false,false,status);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,set_dataFormat: function(inputVal) {
		if(inputVal == openfl.net.URLLoaderDataFormat.BINARY && !Reflect.hasField(window,"ArrayBuffer")) this.dataFormat = openfl.net.URLLoaderDataFormat.TEXT; else this.dataFormat = inputVal;
		return this.dataFormat;
	}
	,__class__: openfl.net.URLLoader
	,__properties__: {set_dataFormat:"set_dataFormat"}
});
openfl.net.URLLoaderDataFormat = $hxClasses["openfl.net.URLLoaderDataFormat"] = { __ename__ : ["openfl","net","URLLoaderDataFormat"], __constructs__ : ["BINARY","TEXT","VARIABLES"] };
openfl.net.URLLoaderDataFormat.BINARY = ["BINARY",0];
openfl.net.URLLoaderDataFormat.BINARY.toString = $estr;
openfl.net.URLLoaderDataFormat.BINARY.__enum__ = openfl.net.URLLoaderDataFormat;
openfl.net.URLLoaderDataFormat.TEXT = ["TEXT",1];
openfl.net.URLLoaderDataFormat.TEXT.toString = $estr;
openfl.net.URLLoaderDataFormat.TEXT.__enum__ = openfl.net.URLLoaderDataFormat;
openfl.net.URLLoaderDataFormat.VARIABLES = ["VARIABLES",2];
openfl.net.URLLoaderDataFormat.VARIABLES.toString = $estr;
openfl.net.URLLoaderDataFormat.VARIABLES.__enum__ = openfl.net.URLLoaderDataFormat;
openfl.net.URLRequest = function(inURL) {
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	this.method = openfl.net.URLRequestMethod.GET;
	this.contentType = null;
};
$hxClasses["openfl.net.URLRequest"] = openfl.net.URLRequest;
openfl.net.URLRequest.__name__ = ["openfl","net","URLRequest"];
openfl.net.URLRequest.prototype = {
	formatRequestHeaders: function() {
		var res = this.requestHeaders;
		if(res == null) res = [];
		if(this.method == openfl.net.URLRequestMethod.GET || this.data == null) return res;
		if(typeof(this.data) == "string" || js.Boot.__instanceof(this.data,openfl.utils.ByteArray)) {
			res = res.slice();
			res.push(new openfl.net.URLRequestHeader("Content-Type",this.contentType != null?this.contentType:"application/x-www-form-urlencoded"));
		}
		return res;
	}
	,__class__: openfl.net.URLRequest
};
openfl.net.URLRequestHeader = function(name,value) {
	if(value == null) value = "";
	if(name == null) name = "";
	this.name = name;
	this.value = value;
};
$hxClasses["openfl.net.URLRequestHeader"] = openfl.net.URLRequestHeader;
openfl.net.URLRequestHeader.__name__ = ["openfl","net","URLRequestHeader"];
openfl.net.URLRequestHeader.prototype = {
	__class__: openfl.net.URLRequestHeader
};
openfl.net.URLRequestMethod = function() { };
$hxClasses["openfl.net.URLRequestMethod"] = openfl.net.URLRequestMethod;
openfl.net.URLRequestMethod.__name__ = ["openfl","net","URLRequestMethod"];
openfl.net.URLVariables = function(inEncoded) {
	if(inEncoded != null) this.decode(inEncoded);
};
$hxClasses["openfl.net.URLVariables"] = openfl.net.URLVariables;
openfl.net.URLVariables.__name__ = ["openfl","net","URLVariables"];
openfl.net.URLVariables.prototype = {
	decode: function(inVars) {
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			Reflect.deleteField(this,f);
		}
		var fields1 = inVars.split(";").join("&").split("&");
		var _g1 = 0;
		while(_g1 < fields1.length) {
			var f1 = fields1[_g1];
			++_g1;
			var eq = f1.indexOf("=");
			if(eq > 0) Reflect.setField(this,StringTools.urlDecode(HxOverrides.substr(f1,0,eq)),StringTools.urlDecode(HxOverrides.substr(f1,eq + 1,null))); else if(eq != 0) Reflect.setField(this,decodeURIComponent(f1.split("+").join(" ")),"");
		}
	}
	,toString: function() {
		var result = new Array();
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			result.push(encodeURIComponent(f) + "=" + StringTools.urlEncode(Reflect.field(this,f)));
		}
		return result.join("&");
	}
	,__class__: openfl.net.URLVariables
};
openfl.system = {};
openfl.system.ApplicationDomain = function(parentDomain) {
	if(parentDomain != null) this.parentDomain = parentDomain; else this.parentDomain = openfl.system.ApplicationDomain.currentDomain;
};
$hxClasses["openfl.system.ApplicationDomain"] = openfl.system.ApplicationDomain;
openfl.system.ApplicationDomain.__name__ = ["openfl","system","ApplicationDomain"];
openfl.system.ApplicationDomain.prototype = {
	getDefinition: function(name) {
		return Type.resolveClass(name);
	}
	,hasDefinition: function(name) {
		return Type.resolveClass(name) != null;
	}
	,__class__: openfl.system.ApplicationDomain
};
openfl.system.Capabilities = function() { };
$hxClasses["openfl.system.Capabilities"] = openfl.system.Capabilities;
openfl.system.Capabilities.__name__ = ["openfl","system","Capabilities"];
openfl.system.Capabilities.__properties__ = {get_language:"get_language",get_screenResolutionY:"get_screenResolutionY",get_screenResolutionX:"get_screenResolutionX",get_screenDPI:"get_screenDPI",get_pixelAspectRatio:"get_pixelAspectRatio"}
openfl.system.Capabilities.get_pixelAspectRatio = function() {
	return 1;
};
openfl.system.Capabilities.get_screenDPI = function() {
	if(openfl.system.Capabilities.screenDPI > 0) return openfl.system.Capabilities.screenDPI;
	var body = window.document.getElementsByTagName("body")[0];
	var testDiv = window.document.createElement("div");
	testDiv.style.width = testDiv.style.height = "1in";
	testDiv.style.padding = testDiv.style.margin = "0px";
	testDiv.style.position = "absolute";
	testDiv.style.top = "-100%";
	body.appendChild(testDiv);
	openfl.system.Capabilities.screenDPI = testDiv.offsetWidth;
	body.removeChild(testDiv);
	return openfl.system.Capabilities.screenDPI;
};
openfl.system.Capabilities.get_screenResolutionX = function() {
	return window.screen.width;
};
openfl.system.Capabilities.get_screenResolutionY = function() {
	return window.screen.height;
};
openfl.system.Capabilities.get_language = function() {
	return navigator.language;
};
openfl.system.LoaderContext = function(checkPolicyFile,applicationDomain,securityDomain) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	this.checkPolicyFile = checkPolicyFile;
	this.securityDomain = securityDomain;
	if(applicationDomain != null) this.applicationDomain = applicationDomain; else this.applicationDomain = openfl.system.ApplicationDomain.currentDomain;
};
$hxClasses["openfl.system.LoaderContext"] = openfl.system.LoaderContext;
openfl.system.LoaderContext.__name__ = ["openfl","system","LoaderContext"];
openfl.system.LoaderContext.prototype = {
	__class__: openfl.system.LoaderContext
};
openfl.system.SecurityDomain = function() {
};
$hxClasses["openfl.system.SecurityDomain"] = openfl.system.SecurityDomain;
openfl.system.SecurityDomain.__name__ = ["openfl","system","SecurityDomain"];
openfl.system.SecurityDomain.prototype = {
	__class__: openfl.system.SecurityDomain
};
openfl.text.FontStyle = $hxClasses["openfl.text.FontStyle"] = { __ename__ : ["openfl","text","FontStyle"], __constructs__ : ["REGULAR","ITALIC","BOLD_ITALIC","BOLD"] };
openfl.text.FontStyle.REGULAR = ["REGULAR",0];
openfl.text.FontStyle.REGULAR.toString = $estr;
openfl.text.FontStyle.REGULAR.__enum__ = openfl.text.FontStyle;
openfl.text.FontStyle.ITALIC = ["ITALIC",1];
openfl.text.FontStyle.ITALIC.toString = $estr;
openfl.text.FontStyle.ITALIC.__enum__ = openfl.text.FontStyle;
openfl.text.FontStyle.BOLD_ITALIC = ["BOLD_ITALIC",2];
openfl.text.FontStyle.BOLD_ITALIC.toString = $estr;
openfl.text.FontStyle.BOLD_ITALIC.__enum__ = openfl.text.FontStyle;
openfl.text.FontStyle.BOLD = ["BOLD",3];
openfl.text.FontStyle.BOLD.toString = $estr;
openfl.text.FontStyle.BOLD.__enum__ = openfl.text.FontStyle;
openfl.text.FontType = $hxClasses["openfl.text.FontType"] = { __ename__ : ["openfl","text","FontType"], __constructs__ : ["EMBEDDED","DEVICE"] };
openfl.text.FontType.EMBEDDED = ["EMBEDDED",0];
openfl.text.FontType.EMBEDDED.toString = $estr;
openfl.text.FontType.EMBEDDED.__enum__ = openfl.text.FontType;
openfl.text.FontType.DEVICE = ["DEVICE",1];
openfl.text.FontType.DEVICE.toString = $estr;
openfl.text.FontType.DEVICE.__enum__ = openfl.text.FontType;
openfl.text.GridFitType = $hxClasses["openfl.text.GridFitType"] = { __ename__ : ["openfl","text","GridFitType"], __constructs__ : ["NONE","PIXEL","SUBPIXEL"] };
openfl.text.GridFitType.NONE = ["NONE",0];
openfl.text.GridFitType.NONE.toString = $estr;
openfl.text.GridFitType.NONE.__enum__ = openfl.text.GridFitType;
openfl.text.GridFitType.PIXEL = ["PIXEL",1];
openfl.text.GridFitType.PIXEL.toString = $estr;
openfl.text.GridFitType.PIXEL.__enum__ = openfl.text.GridFitType;
openfl.text.GridFitType.SUBPIXEL = ["SUBPIXEL",2];
openfl.text.GridFitType.SUBPIXEL.toString = $estr;
openfl.text.GridFitType.SUBPIXEL.__enum__ = openfl.text.GridFitType;
openfl.text.TextField = function() {
	openfl.display.InteractiveObject.call(this);
	this.mWidth = 100;
	this.mHeight = 20;
	this.mHTMLMode = false;
	this.multiline = false;
	var graphicsSnap = ((function($this) {
		var $r;
		var _this = openfl.Lib.get_snap();
		var e123 = [];
		var me123 = _this;
		$r = me123.group.apply(me123, e123);
		return $r;
	}(this))).addClass("graphics");
	this.snap.append(graphicsSnap);
	this.__graphics = new openfl.display.Graphics(graphicsSnap);
	this.__graphics.displayObject = this;
	this.mTextSnap = openfl.Lib.get_snap().text(0,0,"");
	this.snap.append(this.mTextSnap);
	this.mFace = openfl.text.TextField.mDefaultFont;
	this.mAlign = openfl.text.TextFormatAlign.LEFT;
	this.mParagraphs = new Array();
	this.svgSelectionBeginIndex = this.selectionBeginIndex = -1;
	this.svgSelectionEndIndex = this.selectionEndIndex = -1;
	this.scrollH = 0;
	this.scrollV = 1;
	this.mType = openfl.text.TextFieldType.DYNAMIC;
	this.set_autoSize(openfl.text.TextFieldAutoSize.NONE);
	this.mTextHeight = 12;
	this.mMaxHeight = this.mTextHeight;
	this.mHTMLText = "";
	this.mText = "";
	this.mTextColour = 0;
	this.tabEnabled = false;
	this.mTryFreeType = true;
	this.selectable = true;
	this.mInsertPos = 0;
	this.__inputEnabled = false;
	this.mDownChar = 0;
	this.mSelectDrag = -1;
	this.mLineInfo = [];
	this.set_defaultTextFormat(new openfl.text.TextFormat());
	this.set_borderColor(0);
	this.set_border(false);
	this.set_backgroundColor(16777215);
	this.set_background(false);
	this.gridFitType = openfl.text.GridFitType.PIXEL;
	this.sharpness = 0;
	this.__textFormats = [];
	this.caretIndex = 0;
	this.shouldCaretShowed = true;
	this.mTextSnap.attr({ style : this.__inputEnabled?"":"-webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; user-select:none;"});
	this.addEventListener(openfl.events.MouseEvent.MOUSE_DOWN,$bind(this,this.onMouseDown));
	this.get_stage().addEventListener(openfl.events.MouseEvent.MOUSE_UP,$bind(this,this.onMouseUp));
	this.addEventListener(openfl.events.Event.PASTE,$bind(this,this.onPaste));
};
$hxClasses["openfl.text.TextField"] = openfl.text.TextField;
openfl.text.TextField.__name__ = ["openfl","text","TextField"];
openfl.text.TextField.__super__ = openfl.display.InteractiveObject;
openfl.text.TextField.prototype = $extend(openfl.display.InteractiveObject.prototype,{
	appendText: function(newText) {
		var _g = this;
		_g.set_text(_g.get_text() + newText);
	}
	,ConvertHTMLToText: function(inUnSetHTML) {
		this.mText = "";
		var _g = 0;
		var _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				this.mText += span.text;
			}
		}
		if(inUnSetHTML) {
			this.mHTMLMode = false;
			this.RebuildText();
		}
	}
	,DecodeColour: function(col) {
		return Std.parseInt("0x" + HxOverrides.substr(col,1,null));
	}
	,getCharBoundaries: function(a) {
		return null;
	}
	,getCharIndexAtPoint: function(inX,inY) {
		var text = this.mTextSnap.node;
		var svg = this.mTextSnap.paper.node;
		var point = svg.createSVGPoint();
		point.x = inX;
		point.y = inY;
		return text.getCharNumAtPosition(point);
	}
	,getLineIndexAtPoint: function(inX,inY) {
		if(this.mLineInfo.length < 1) return -1;
		if(inY <= 0) return 0;
		var _g1 = 0;
		var _g = this.mLineInfo.length;
		while(_g1 < _g) {
			var l = _g1++;
			if(this.mLineInfo[l].mY0 > inY) if(l == 0) return 0; else return l - 1;
		}
		return this.mLineInfo.length - 1;
	}
	,getLineIndexForCharIndex: function(charIdx) {
		if(this.mLineInfo.length < 1) return -1;
		var _g1 = 0;
		var _g = this.mLineInfo.length;
		while(_g1 < _g) {
			var l = _g1++;
			if(this.mLineInfo[l].mIndex > charIdx) if(l == 0) return 0; else return l - 1;
		}
		return this.mLineInfo.length - 1;
	}
	,getTextFormat: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = -1;
		if(beginIndex == null) beginIndex = -1;
		var format = new openfl.text.TextFormat(this.mFace,this.mTextHeight,this.mTextColour);
		if(beginIndex > 0 && beginIndex < this.get_text().length) {
			if(null != this.__textFormats) {
				var formats = Lambda.array(Lambda.map(this.__textFormats,function(f) {
					return f;
				}));
				formats.reverse();
				var _g = 0;
				while(_g < formats.length) {
					var f1 = formats[_g];
					++_g;
					if(beginIndex >= f1.begin && beginIndex <= f1.end) {
						format = f1.format;
						break;
					}
				}
			}
		}
		return format;
	}
	,Rebuild: function() {
		if(this.mHTMLMode) return;
		this.mLineInfo = [];
		var wrap;
		wrap = this.get_wordWrap() && !this.__inputEnabled?this.mLimitRenderX = this.mUserWidth | 0:this.mLimitRenderX = 999999;
		if(null != this.__textFormats) {
			var _g = 0;
			var _g1 = this.__textFormats;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				this.applyTextFormat(f.format,f.begin,f.end);
			}
		}
		var char_idx = 0;
		var _g2 = 0;
		var _g11 = this.mParagraphs;
		while(_g2 < _g11.length) {
			var paragraph = _g11[_g2];
			++_g2;
			char_idx = this.wrapParagraph(paragraph,wrap,char_idx,this.mSelStart,this.mSelEnd);
		}
		this.mTextSnap.selectAll("tspan").forEach(function(s) {
			s.remove();
		},this);
		var svgBuf = new StringBuf();
		var firstParagraph = true;
		var _g3 = 0;
		var _g12 = this.mParagraphs;
		while(_g3 < _g12.length) {
			var paragraph1 = _g12[_g3];
			++_g3;
			var firstSpan = true;
			var _g21 = 0;
			var _g31 = paragraph1.spans;
			while(_g21 < _g31.length) {
				var span = _g31[_g21];
				++_g21;
				svgBuf.b += Std.string("<tspan xml:space=\"preserve\" height=\"" + span.rect.height + "px\" ");
				if(null != span.rect) {
					if(firstSpan) svgBuf.b += Std.string("x=\"" + span.startX + "\" dy=\"" + paragraph1.firstLineHeight + "px\" "); else if(span.startFromNewLine) svgBuf.b += Std.string("x=\"" + span.startX + "\" dy=\"" + span.rect.height + "px\" ");
				}
				if(null != span.format) {
					if(null != span.format.color) svgBuf.add("fill=\"#" + StringTools.hex(span.format.color,6) + "\" ");
					if(null != span.format.font) svgBuf.b += Std.string("font-family=\"" + span.format.font + "\" ");
					if(null != span.format.size) svgBuf.b += Std.string("font-size=\"" + span.format.size + "px\" ");
					if(null != span.format.bold && span.format.bold) svgBuf.b += "font-weight=\"bold\" ";
					if(null != span.format.bold && span.format.italic) svgBuf.b += "font-style=\"italic\" ";
					if(null != span.format.underline && span.format.underline) svgBuf.b += "text-decoration=\"underline\" ";
					if(null != span.format.kerning) svgBuf.add("kerning=\"" + Std.string(span.format.kerning) + "px\" ");
					if(null != span.format.letterSpacing) svgBuf.b += Std.string("letter-spacing=\"" + span.format.letterSpacing + "px\" ");
				}
				svgBuf.b += ">";
				if(span.text == null) svgBuf.b += "null"; else svgBuf.b += "" + span.text;
				svgBuf.b += "</tspan>";
				firstSpan = false;
			}
			firstParagraph = false;
		}
		var textElement = this.mTextSnap.node;
		this.mTextSnap.append(Snap.parse(svgBuf.b));
		textElement.setAttribute("font-family",Std.string(this.mFace));
		textElement.setAttribute("font-size",Std.string(this.mTextHeight) + "px");
		textElement.setAttribute("fill","#" + StringTools.hex(this.mTextColour,6));
		var rect;
		if(null != this.mText && this.mText.length > 0) {
			var r = textElement.getBoundingClientRect();
			rect = new openfl.geom.Rectangle(r.left,r.top,r.width,r.height);
		} else rect = new openfl.geom.Rectangle();
		if(this.autoSize != openfl.text.TextFieldAutoSize.NONE) {
			this.mWidth = rect.width;
			this.mHeight = rect.height + this.mTextHeight * 0.4;
		}
		if(this.mHeight < this.mTextHeight * 1.4) this.mHeight = this.mTextHeight * 1.4;
		this.mMaxWidth = rect.width;
		this.mMaxHeight = rect.height;
		this.updateClipRect(new openfl.geom.Rectangle(this.get_x(),this.get_y(),this.get_width(),this.get_height()));
		this.__graphics.clear();
		this.drawBackgoundAndBorder();
	}
	,drawBackgoundAndBorder: function() {
		if(this.background) {
			this.__graphics.lineStyle(0);
			this.__graphics.beginFill(this.backgroundColor);
			this.__graphics.drawRect(0,0,this.mWidth - .5,this.mHeight - .5);
			this.__graphics.endFill();
		} else {
			this.__graphics.lineStyle(0);
			this.__graphics.beginFill(0,0);
			this.__graphics.drawRect(0.5,0.5,this.mWidth - .5,this.mHeight - .5);
			this.__graphics.endFill();
		}
		if(this.border) {
			this.__graphics.endFill();
			this.__graphics.lineStyle(1,this.borderColor,1,true);
			this.__graphics.drawRect(.5,.5,this.mWidth - .5,this.mHeight - .5);
		}
	}
	,getCaretRect: function() {
		var textElement = this.mTextSnap.node;
		try {
			if(this.get_text().length > 0 && this.caretIndex >= 0) {
				var extent = textElement.getExtentOfChar(this.caretIndex < this.get_text().length?this.caretIndex:this.caretIndex - 1);
				var x;
				x = ((this.caretIndex < this.get_text().length?extent.x:extent.x + extent.width - 1) | 0) + 0.5;
				return new openfl.geom.Rectangle(x,extent.y,1,extent.height);
			} else return new openfl.geom.Rectangle(0,0,1,this.mTextHeight * 1.4);
		} catch( e ) {
			return new openfl.geom.Rectangle(0,0,1,this.mTextHeight * 1.4);
		}
	}
	,RebuildText: function() {
		if(null == this.mText) return;
		var paras = this.mText.split("\n");
		this.mParagraphs = [];
		if(!this.mHTMLMode) {
			var font = openfl.text.FontInstance.CreateSolid(this.mFace,this.mTextHeight,this.mTextColour,1.0);
			var paras1 = this.mText.split("\n");
			var _g = 0;
			while(_g < paras1.length) {
				var paragraph = paras1[_g];
				++_g;
				this.mParagraphs.push({ align : this.mAlign, spans : [{ font : font, text : paragraph + (this.mText.length > 0?"\n":""), format : this.get_defaultTextFormat(), startFromNewLine : false}]});
			}
		}
		this.__textChanged = true;
		this.Rebuild();
		this.__textChanged = false;
	}
	,RenderRow: function(inRow,inY,inCharIdx,inAlign,inInsert) {
		if(inInsert == null) inInsert = 0;
		var h = 0;
		var w = 0;
		var _g = 0;
		while(_g < inRow.length) {
			var chr = inRow[_g];
			++_g;
			if(chr.fh > h) h = chr.fh;
			w += chr.adv;
		}
		if(w > this.mMaxWidth) this.mMaxWidth = w;
		var full_height = h * 1.2 | 0;
		var align_x = 0;
		var insert_x = 0;
		if(inInsert != null) {
			if(this.autoSize != openfl.text.TextFieldAutoSize.NONE) {
				this.scrollH = 0;
				insert_x = inInsert;
			} else {
				insert_x = inInsert - this.scrollH;
				if(insert_x < 0) this.scrollH -= (this.mLimitRenderX * 3 >> 2) - insert_x; else if(insert_x > this.mLimitRenderX) this.scrollH += insert_x - (this.mLimitRenderX * 3 >> 2);
				if(this.scrollH < 0) this.scrollH = 0;
			}
		}
		if(this.autoSize == openfl.text.TextFieldAutoSize.NONE && w <= this.mLimitRenderX) {
			if(inAlign == openfl.text.TextFormatAlign.CENTER) align_x = Math.round(this.mWidth) - w >> 1; else if(inAlign == openfl.text.TextFormatAlign.RIGHT) align_x = Math.round(this.mWidth) - w;
		}
		var x_list = new Array();
		var width_list = new Array();
		this.mLineInfo.push({ mY0 : inY, mIndex : inCharIdx - 1, mX : x_list, mHeight : full_height, mWidth : width_list});
		var cache_sel_font = null;
		var cache_normal_font = null;
		var x = align_x - this.scrollH;
		var x0 = x;
		var _g1 = 0;
		while(_g1 < inRow.length) {
			var chr1 = inRow[_g1];
			++_g1;
			var adv = chr1.adv;
			if(x + adv > this.mLimitRenderX) break;
			x_list.push(x);
			width_list.push(adv);
			x += adv;
		}
		x += this.scrollH;
		return full_height;
	}
	,getRowDimension: function(row) {
		var h = 0;
		var w = 0;
		var str = "";
		var _g = 0;
		while(_g < row.length) {
			var chr = row[_g];
			++_g;
			if(chr.fh > h) h = chr.fh;
			w += chr.adv;
			str += String.fromCharCode(chr.chr);
		}
		if(w > this.mMaxWidth) this.mMaxWidth = w;
		var full_height = h * 1.2 | 0;
		return new openfl.geom.Rectangle(0,0,w,full_height);
	}
	,cacheRowSize: function(inRow,inY,inCharIdx,inAlign,inInsert) {
		if(inInsert == null) inInsert = 0;
		this.RenderRow(inRow,inY,inCharIdx,inAlign,inInsert);
	}
	,wrapParagraph: function(paragraph,wrap,charIdx,s0,s1) {
		var row = [];
		var row_width = 0;
		var last_word_break = 0;
		var last_word_break_width = 0;
		var last_word_char_idx = 0;
		var start_idx = charIdx;
		var tx = 0;
		var newSpans = [];
		var _g = 0;
		var _g1 = paragraph.spans;
		while(_g < _g1.length) {
			var span = _g1[_g];
			++_g;
			var text = span.text;
			var font;
			if(null != span.format) font = openfl.text.FontInstance.CreateSolid(null != span.format.font?span.format.font:span.font.GetFace(),null != span.format.size?span.format.size | 0:span.font.get_height(),null != span.format.color?span.format.color:span.font.get_color(),1.0); else font = span.font;
			var fh = font.get_height();
			last_word_break = row.length;
			last_word_break_width = row_width;
			last_word_char_idx = charIdx;
			var prevG = 0;
			var _g3 = 0;
			var _g2 = text.length;
			while(_g3 < _g2) {
				var ch = _g3++;
				var g = HxOverrides.cca(text,ch);
				var adv = font.__getAdvance(g);
				if(g == 32 && prevG != 32) {
					last_word_break = row.length;
					last_word_break_width = tx;
					last_word_char_idx = charIdx;
				}
				if(tx + adv > wrap) {
					if(last_word_break > 0) {
						var row_end = row.splice(last_word_break,row.length - last_word_break);
						var head = row.slice(0,last_word_break);
						newSpans.push({ font : font, text : Lambda.fold(head,function(o,s) {
							return s + String.fromCharCode(o.chr);
						},""), format : span.format, startFromNewLine : true, rect : this.getRowDimension(head), startX : 0});
						row = row_end;
						tx -= last_word_break_width;
						start_idx = last_word_char_idx;
						last_word_break = 0;
						last_word_break_width = 0;
						last_word_char_idx = 0;
					} else {
						newSpans.push({ font : font, text : Lambda.fold(row,function(o1,s2) {
							return s2 + String.fromCharCode(o1.chr);
						},""), format : span.format, startFromNewLine : true, rect : this.getRowDimension(row), startX : 0});
						row = [];
						tx = 0;
						start_idx = charIdx;
					}
				}
				row.push({ font : font, chr : g, x : tx, fh : fh, sel : charIdx >= s0 && charIdx < s1, adv : adv});
				tx += adv;
				charIdx++;
				prevG = g;
			}
			if(row.length > 0) {
				newSpans.push({ font : font, text : Lambda.fold(row,function(o2,s3) {
					return s3 + String.fromCharCode(o2.chr);
				},""), format : span.format, startFromNewLine : true, rect : this.getRowDimension(row), startX : 0});
				row = [];
			}
		}
		paragraph.firstLineHeight = 0.0;
		var lineWidth = 0.0;
		var startSpan = null;
		var _g4 = 0;
		while(_g4 < newSpans.length) {
			var s4 = newSpans[_g4];
			++_g4;
			if(s4.startFromNewLine && paragraph.firstLineHeight > 0.0) break;
			if(s4.rect.height > paragraph.firstLineHeight) paragraph.firstLineHeight = s4.rect.height;
			if(paragraph.align == openfl.text.TextFormatAlign.CENTER) {
				if(s4.startFromNewLine) {
					if(startSpan != null) {
						startSpan.startX = Math.floor((this.mUserWidth - lineWidth) / 2);
						lineWidth = 0.0;
					}
					startSpan = s4;
				}
				lineWidth += s4.rect.width;
			}
		}
		if(paragraph.align == openfl.text.TextFormatAlign.CENTER) startSpan.startX = Math.floor((this.mUserWidth - lineWidth) / 2);
		paragraph.spans = newSpans;
		return charIdx;
	}
	,moveCaretToPrevLine: function() {
		this.moveCaretToLine(this.getLineByCaretIndex(this.caretIndex) - 1);
	}
	,moveCaretToNextLine: function() {
		this.moveCaretToLine(this.getLineByCaretIndex(this.caretIndex) + 1);
	}
	,moveCaretToLine: function(lineIndex) {
		if(lineIndex < 0 || lineIndex > this.getLineByCaretIndex(999999999)) return;
		var pos = this.getPositionInLine(this.caretIndex);
		var begin = this.getCaretIndexOfFirstCharOfLine(lineIndex);
		var dstCaretIndex = begin + pos;
		var dstLineIndex = this.getLineByCaretIndex(dstCaretIndex);
		var lastCaretIndex = this.getCaretIndexOfFirstCharOfLine(999999999);
		if(dstLineIndex != lineIndex) dstCaretIndex = this.getCaretIndexOfFirstCharOfLine(lineIndex + 1);
		if(dstCaretIndex < 0) dstCaretIndex = 0; else if(dstCaretIndex > lastCaretIndex) dstCaretIndex = lastCaretIndex;
		this.caretIndex = dstCaretIndex;
	}
	,getCaretIndexOfFirstCharOfLine: function(lineIndex) {
		var lengthBefore = 0;
		var line = -1;
		var _g = 0;
		var _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var first = true;
			var _g2 = 0;
			var _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var s = _g3[_g2];
				++_g2;
				if(first || s.startFromNewLine) {
					line += 1;
					first = false;
				}
				if(line == lineIndex) return lengthBefore;
				lengthBefore += s.text.length;
			}
		}
		return lengthBefore;
	}
	,getPositionInLine: function(caretIndex) {
		var lengthBefore = 0;
		var lengthOfPrevLines = 0;
		var _g = 0;
		var _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var first = true;
			var _g2 = 0;
			var _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var s = _g3[_g2];
				++_g2;
				if(first || s.startFromNewLine) {
					lengthOfPrevLines = lengthBefore;
					first = false;
				}
				if(s.text.length + lengthBefore > caretIndex) return caretIndex - lengthOfPrevLines;
				lengthBefore += s.text.length;
			}
		}
		return caretIndex;
	}
	,getLineByCaretIndex: function(caretIndex) {
		var lengthBefore = 0;
		var line = -1;
		var _g = 0;
		var _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var first = true;
			var _g2 = 0;
			var _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var s = _g3[_g2];
				++_g2;
				if(first || s.startFromNewLine) {
					line += 1;
					first = false;
				}
				if(s.text.length + lengthBefore > caretIndex) return line;
				lengthBefore += s.text.length;
			}
		}
		return line;
	}
	,setSelection: function(beginIndex,endIndex) {
		this.selectionBeginIndex = beginIndex;
		this.selectionEndIndex = endIndex;
		this.renderNextWake();
	}
	,setTextFormat: function(inFmt,beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		if(beginIndex == 0 || endIndex == 0) {
			if(inFmt.font != null) this.mFace = inFmt.font;
			if(inFmt.size != null) this.mTextHeight = inFmt.size | 0;
			if(inFmt.align != null) this.mAlign = inFmt.align;
			if(inFmt.color != null) this.mTextColour = inFmt.color;
		} else this.__textFormats.push({ format : inFmt, begin : beginIndex, end : endIndex});
		this.RebuildText();
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
		return this.getTextFormat();
	}
	,applyTextFormat: function(format,beginIndex,endIndex) {
		var font = openfl.text.FontInstance.CreateSolid(format.font,format.size | 0,format.color,1.0);
		var spanStartCharIndex = 0;
		var _g = 0;
		var _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var newSpans = [];
			var _g2 = 0;
			var _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				var spanEndCharIndex = spanStartCharIndex + span.text.length - 1;
				if(beginIndex <= spanEndCharIndex && beginIndex >= spanStartCharIndex) {
					var parts = this.splitStringByInerval(span.text,beginIndex - spanStartCharIndex,Std["int"](Math.min(endIndex - spanStartCharIndex,spanEndCharIndex - spanStartCharIndex)));
					if(null != parts[0] && "" != parts[0]) newSpans.push({ font : span.font, text : parts[0], format : span.format, startFromNewLine : span.startFromNewLine, rect : null, startX : 0});
					if(null != parts[1] && "" != parts[1]) newSpans.push({ font : font, text : parts[1], format : format, startFromNewLine : false, rect : null, startX : 0});
					if(null != parts[2] && "" != parts[2]) newSpans.push({ font : span.font, text : parts[2], format : span.format, startFromNewLine : false, rect : null, startX : 0});
					if(endIndex > spanEndCharIndex) beginIndex = spanEndCharIndex + 1;
				} else newSpans.push(span);
				spanStartCharIndex = spanEndCharIndex + 1;
			}
			paragraph.spans = newSpans;
		}
	}
	,splitStringByInerval: function(str,beginIndex,endIndex) {
		return [HxOverrides.substr(str,0,beginIndex),HxOverrides.substr(str,beginIndex,endIndex - beginIndex + 1),HxOverrides.substr(str,endIndex + 1,str.length - endIndex)];
	}
	,toString: function() {
		return "[TextField name=" + this.name + " id=" + this.___id + "]";
	}
	,__getGraphics: function() {
		return this.__graphics;
	}
	,__getObjectUnderPoint: function(point) {
		if(!this.get_visible()) return null; else if(this.mText.length > 1) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.mMaxWidth || local.y > this.mMaxHeight) return null; else return this;
		} else return openfl.display.InteractiveObject.prototype.__getObjectUnderPoint.call(this,point);
	}
	,__render: function(inMask,clipRect) {
		if(!this.__combinedVisible) return;
		if((this.___renderFlags & 4) != 0 || (this.___renderFlags & 8) != 0) this.__validateMatrix();
		if(this.__graphics.__render(inMask,this.__filters,1,1)) {
			this.__applyFilters(this.snap);
			this.___renderFlags |= 32;
			this.___renderFlags |= 64;
			if(this.parent != null) this.parent.___renderFlags |= 64;
			this.renderNextWake();
		}
		if(!this.mHTMLMode && inMask != null) {
			var m = this.transform.get_matrix();
		} else {
			if((this.___renderFlags & 32) != 0) {
				var m1 = this.transform.get_matrix();
				this.__setTransform(m1);
				this.___renderFlags &= -33;
			}
			openfl.Lib.__setSurfaceOpacity(this.snap,this.alpha);
		}
		var el = this.mTextSnap.node;
		if(el.textContent.length > 0) {
			if(this.selectionBeginIndex != this.svgSelectionBeginIndex || this.selectionEndIndex != this.svgSelectionEndIndex) {
				try {
					if(this.selectionBeginIndex >= 0) el.selectSubString(this.selectionBeginIndex,this.selectionEndIndex - this.selectionBeginIndex + 1); else el.selectSubString(0,0);
				} catch( e ) {
				}
				this.svgSelectionBeginIndex = this.selectionBeginIndex;
				this.svgSelectionEndIndex = this.selectionEndIndex;
			}
		}
		this.updateClipRect(new openfl.geom.Rectangle(this.get_x(),this.get_y(),this.get_width(),this.get_height()));
	}
	,onFocus: function(e) {
		if(e.type == openfl.events.FocusEvent.FOCUS_IN) {
			this.caretTimer = new haxe.Timer(400);
			this.caretTimer.run = $bind(this,this.showCaret);
		} else if(null != this.caretTimer) {
			this.hideCaret();
			this.caretTimer.stop();
			this.caretTimer = null;
		}
	}
	,showCaret: function() {
		if(this.__inputEnabled && this.get_stage().get_focus() == this && this.shouldCaretShowed) {
			var rect = this.getCaretRect();
			this.__graphics.clear();
			this.drawBackgoundAndBorder();
			if(rect.x <= this.mWidth) {
				this.__graphics.lineStyle(0.5,0,1,true);
				this.__graphics.moveTo(rect.x,rect.y);
				this.__graphics.lineTo(rect.x,rect.get_bottom());
				this.__graphics.flush();
			}
			this.caretTimer.run = $bind(this,this.hideCaret);
			this.renderNextWake();
		}
	}
	,hideCaret: function() {
		this.__graphics.clear();
		this.drawBackgoundAndBorder();
		this.caretTimer.run = $bind(this,this.showCaret);
		this.renderNextWake();
	}
	,onKeyDown: function(e) {
		var evt = e;
		if((null == this.selectionInteractionStartIndex || this.selectionInteractionStartIndex < 0) && evt.shiftKey) this.selectionInteractionStartIndex = this.caretIndex;
		if(evt.keyCode == 37 && this.caretIndex > 0) this.caretIndex -= 1; else if(evt.keyCode == 39 && this.caretIndex < this.get_text().length) this.caretIndex += 1; else if(evt.keyCode == 40) this.moveCaretToNextLine(); else if(evt.keyCode == 38) this.moveCaretToPrevLine(); else if(evt.keyCode == 8 && this.caretIndex > 0) {
			if(this.isSelected()) this.removeSelectedText(); else this.removeText(this.caretIndex - 1,this.caretIndex - 1);
			this.clearSelection();
		} else if(evt.keyCode == 46 && this.caretIndex < this.get_text().length) {
			if(this.isSelected()) this.removeSelectedText(); else this.removeText(this.caretIndex,this.caretIndex);
			this.clearSelection();
		} else if(evt.keyCode == 13) {
			this.insertText("\n",this.caretIndex);
			this.caretIndex += 1;
		}
		if(!evt.shiftKey && !evt.ctrlKey && !evt.altKey) {
			this.clearSelection();
			this.selectionInteractionStartIndex = -1;
		} else if(evt.shiftKey) this.adjustSelectionByCaret(this.caretIndex);
		e.stopPropagation();
	}
	,adjustSelectionByCaret: function(caretIndex) {
		if(caretIndex > this.selectionInteractionStartIndex) {
			this.selectionBeginIndex = this.selectionInteractionStartIndex;
			this.selectionEndIndex = caretIndex - 1;
		} else if(caretIndex < this.selectionInteractionStartIndex) {
			this.selectionBeginIndex = caretIndex;
			this.selectionEndIndex = this.selectionInteractionStartIndex - 1;
		} else this.clearSelection();
	}
	,isSelected: function() {
		return this.selectionBeginIndex >= 0 && this.selectionEndIndex >= 0 && this.selectionEndIndex >= this.selectionBeginIndex;
	}
	,clearSelection: function() {
		this.selectionBeginIndex = -1;
		this.selectionEndIndex = -1;
	}
	,removeSelectedText: function() {
		if(this.isSelected()) this.removeText(this.selectionBeginIndex,this.selectionEndIndex);
	}
	,insertText: function(s,index) {
		this.dispatchEvent(new openfl.events.TextEvent(openfl.events.TextEvent.TEXT_INPUT,false,false,s));
		if(null != this.__textFormats) {
			var _g = 0;
			var _g1 = this.__textFormats;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(index < f.begin) {
					f.begin += s.length;
					f.end += s.length;
				} else if(index >= f.begin && index <= f.end) f.end += s.length;
			}
		}
		this.set_text(this.get_text().substring(0,index) + s + this.get_text().substring(index,this.get_text().length));
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE,true));
	}
	,removeText: function(beginIndex,endIndex) {
		var length = endIndex - beginIndex + 1;
		if(null != this.__textFormats) {
			var _g = 0;
			var _g1 = this.__textFormats;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(f.begin > endIndex) {
					f.begin -= length;
					f.end -= length;
				} else if(f.end < beginIndex) {
				} else if(f.begin <= beginIndex && f.end >= endIndex) f.end -= length; else if(f.begin > beginIndex && f.end >= endIndex) {
					f.begin -= f.begin - beginIndex + 1;
					f.end -= length;
				} else if(f.begin <= beginIndex && f.end < endIndex) f.end -= f.end - beginIndex + 1;
			}
		}
		if(this.get_text().length > 1) {
			this.set_text((function($this) {
				var $r;
				var _this = $this.get_text();
				$r = HxOverrides.substr(_this,0,beginIndex);
				return $r;
			}(this)) + (function($this) {
				var $r;
				var _this1 = $this.get_text();
				$r = HxOverrides.substr(_this1,endIndex + 1,$this.get_text().length - endIndex);
				return $r;
			}(this)));
			this.caretIndex = beginIndex;
		} else {
			this.set_text("");
			this.caretIndex = 0;
		}
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE,true));
	}
	,onKeyPress: function(e) {
		if(null != e.charCode && 31 < e.charCode && !e.ctrlKey && !e.altKey && !e.controlKey && !e.commandKey) {
			this.insertText(String.fromCharCode(e.charCode),this.caretIndex);
			if(this.caretIndex < 0) this.caretIndex += 2; else this.caretIndex += 1;
		}
		e.stopPropagation();
	}
	,onMouseDown: function(e) {
		if(this.__inputEnabled && this.get_stage().get_focus() == this) {
			this.caretIndex = this.getCharIndexAtPoint(e.localX,e.localY);
			var textElement = this.mTextSnap.node;
			if(this.get_text().length > 0 && this.get_text().length > this.caretIndex) try {
				var extent = textElement.getExtentOfChar(this.caretIndex);
				if(e.localX - extent.x > extent.width / 2) this.caretIndex += 1;
			} catch( e1 ) {
			}
			this.selectionBeginIndex = this.caretIndex;
			this.selectionEndIndex = this.caretIndex - 1;
			this.addEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this.onMouseMove));
		}
		this.shouldCaretShowed = false;
	}
	,onMouseUp: function(e) {
		this.removeEventListener(openfl.events.MouseEvent.MOUSE_MOVE,$bind(this,this.onMouseMove));
		this.shouldCaretShowed = true;
		this.caretIndex = this.getCharIndexAtPoint(e.localX,e.localY);
	}
	,onMouseMove: function(e) {
		var index = this.getCharIndexAtPoint(e.localX,e.localY);
		if(index > this.caretIndex) {
			this.svgSelectionBeginIndex = this.selectionBeginIndex = this.caretIndex;
			this.svgSelectionEndIndex = this.selectionEndIndex = index - 1;
		} else if(index < this.selectionBeginIndex && index < this.selectionEndIndex) {
			this.svgSelectionBeginIndex = this.selectionBeginIndex = index;
			this.svgSelectionEndIndex = this.selectionEndIndex = this.caretIndex - 1;
		}
	}
	,onPaste: function(e) {
		this.insertText(e.text,this.caretIndex);
		this.caretIndex += e.text.length + (this.caretIndex < 0?1:0);
	}
	,get_autoSize: function() {
		return this.autoSize;
	}
	,set_autoSize: function(inAutoSize) {
		this.autoSize = inAutoSize;
		this.Rebuild();
		return inAutoSize;
	}
	,set_background: function(inBack) {
		this.background = inBack;
		this.Rebuild();
		return inBack;
	}
	,set_backgroundColor: function(inCol) {
		this.backgroundColor = inCol;
		this.Rebuild();
		return inCol;
	}
	,set_border: function(inBorder) {
		this.border = inBorder;
		this.Rebuild();
		return inBorder;
	}
	,set_borderColor: function(inBorderCol) {
		this.borderColor = inBorderCol;
		this.Rebuild();
		return inBorderCol;
	}
	,get_bottomScrollV: function() {
		return 0;
	}
	,get_caretPos: function() {
		return this.mInsertPos;
	}
	,get_defaultTextFormat: function() {
		return this._defaultTextFormat;
	}
	,set_defaultTextFormat: function(inFmt) {
		this.setTextFormat(inFmt);
		this._defaultTextFormat = inFmt;
		return inFmt;
	}
	,get_height: function() {
		return Math.max(this.mHeight,this.getBounds(this.get_stage()).height);
	}
	,set_height: function(inValue) {
		if(this.parent != null) this.parent.__invalidateBounds();
		if(this.get__boundsInvalid()) this.validateBounds();
		if(inValue != this.mHeight) {
			this.mHeight = inValue;
			this.Rebuild();
		}
		return this.mHeight;
	}
	,get_htmlText: function() {
		return this.mHTMLText;
	}
	,set_htmlText: function(inHTMLText) {
		this.mParagraphs = new Array();
		this.mHTMLText = inHTMLText;
		return this.mHTMLText;
	}
	,get_maxScrollH: function() {
		return 0;
	}
	,get_maxScrollV: function() {
		return 0;
	}
	,get_multiline: function() {
		return this.multiline;
	}
	,set_multiline: function(value) {
		return this.multiline = value;
	}
	,get_numLines: function() {
		return 0;
	}
	,get_scrollH: function() {
		return this.scrollH;
	}
	,set_scrollH: function(value) {
		return this.scrollH = value;
	}
	,get_scrollV: function() {
		return this.scrollV;
	}
	,set_scrollV: function(value) {
		return this.scrollV = value;
	}
	,get_text: function() {
		if(this.mHTMLMode) this.ConvertHTMLToText(false);
		return this.mText;
	}
	,set_text: function(inText) {
		if(inText == null) this.mText = "null"; else this.mText = "" + inText;
		if(!this.multiline) this.mText = StringTools.replace(this.mText,"\n","");
		this.mHTMLMode = false;
		this.RebuildText();
		this.___renderFlags |= 64;
		if(this.parent != null) this.parent.___renderFlags |= 64;
		this.renderNextWake();
		this.dispatchEvent(new openfl.events.Event(openfl.events.Event.CHANGE));
		return this.mText;
	}
	,get_textColor: function() {
		return this.mTextColour;
	}
	,set_textColor: function(inCol) {
		this.mTextColour = inCol;
		this.RebuildText();
		return inCol;
	}
	,get_textWidth: function() {
		return this.mMaxWidth;
	}
	,get_textHeight: function() {
		return this.mMaxHeight;
	}
	,updateSelectability: function() {
		this.mTextSnap.attr({ style : this.__inputEnabled?"":"-webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; user-select:none;"});
	}
	,get_type: function() {
		return this.mType;
	}
	,set_type: function(inType) {
		this.mType = inType;
		this.__inputEnabled = this.mType == openfl.text.TextFieldType.INPUT;
		this.mTextSnap.attr({ style : this.__inputEnabled?"":"-webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; user-select:none;"});
		this.tabEnabled = this.get_type() == openfl.text.TextFieldType.INPUT;
		if(this.__inputEnabled) {
			this.addEventListener(openfl.events.FocusEvent.FOCUS_IN,$bind(this,this.onFocus));
			this.addEventListener(openfl.events.FocusEvent.FOCUS_OUT,$bind(this,this.onFocus));
			this.addEventListener(openfl.events.KeyboardEvent.KEY_DOWN,$bind(this,this.onKeyDown));
			this.addEventListener(openfl.events.KeyboardEvent.KEY_PRESS,$bind(this,this.onKeyPress));
		} else {
			this.removeEventListener(openfl.events.FocusEvent.FOCUS_IN,$bind(this,this.onFocus));
			this.removeEventListener(openfl.events.FocusEvent.FOCUS_OUT,$bind(this,this.onFocus));
			this.removeEventListener(openfl.events.KeyboardEvent.KEY_DOWN,$bind(this,this.onKeyDown));
			this.removeEventListener(openfl.events.KeyboardEvent.KEY_PRESS,$bind(this,this.onKeyPress));
		}
		this.Rebuild();
		return inType;
	}
	,get_width: function() {
		return Math.max(this.mWidth,this.getBounds(this.get_stage()).width);
	}
	,set_width: function(inValue) {
		if(this.parent != null) this.parent.__invalidateBounds();
		if(this.get__boundsInvalid()) this.validateBounds();
		if(inValue != this.mWidth) {
			this.mUserWidth = this.mWidth = inValue;
			this.RebuildText();
		}
		return this.mWidth;
	}
	,get_wordWrap: function() {
		return this.wordWrap;
	}
	,set_wordWrap: function(inWordWrap) {
		this.wordWrap = inWordWrap;
		this.RebuildText();
		return this.get_wordWrap();
	}
	,__class__: openfl.text.TextField
	,__properties__: $extend(openfl.display.InteractiveObject.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_type:"set_type",get_type:"get_type",get_textWidth:"get_textWidth",get_textHeight:"get_textHeight",set_textColor:"set_textColor",get_textColor:"get_textColor",set_text:"set_text",get_text:"get_text",get_numLines:"get_numLines",get_maxScrollV:"get_maxScrollV",get_maxScrollH:"get_maxScrollH",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_defaultTextFormat:"set_defaultTextFormat",get_defaultTextFormat:"get_defaultTextFormat",get_caretPos:"get_caretPos",get_bottomScrollV:"get_bottomScrollV",set_borderColor:"set_borderColor",set_border:"set_border",set_backgroundColor:"set_backgroundColor",set_background:"set_background",set_autoSize:"set_autoSize"})
});
openfl.text.FontInstanceMode = $hxClasses["openfl.text.FontInstanceMode"] = { __ename__ : ["openfl","text","FontInstanceMode"], __constructs__ : ["fimSolid"] };
openfl.text.FontInstanceMode.fimSolid = ["fimSolid",0];
openfl.text.FontInstanceMode.fimSolid.toString = $estr;
openfl.text.FontInstanceMode.fimSolid.__enum__ = openfl.text.FontInstanceMode;
openfl.text.FontInstance = function(inFont,inHeight) {
	this.mFont = inFont;
	this.mHeight = inHeight;
	this.mTryFreeType = true;
	this.mGlyphs = [];
	this.mCacheAsBitmap = false;
};
$hxClasses["openfl.text.FontInstance"] = openfl.text.FontInstance;
openfl.text.FontInstance.__name__ = ["openfl","text","FontInstance"];
openfl.text.FontInstance.CreateSolid = function(inFace,inHeight,inColour,inAlpha) {
	var id = "SOLID:" + inFace + ":" + inHeight + ":" + inColour + ":" + inAlpha;
	var f = openfl.text.FontInstance.mSolidFonts.get(id);
	if(f != null) return f;
	var font = new openfl.text.Font();
	font.__setScale(inHeight);
	font.set_fontName(inFace);
	if(font == null) return null;
	f = new openfl.text.FontInstance(font,inHeight);
	f.SetSolid(inColour,inAlpha);
	openfl.text.FontInstance.mSolidFonts.set(id,f);
	return f;
};
openfl.text.FontInstance.prototype = {
	GetFace: function() {
		return this.mFont.fontName;
	}
	,SetSolid: function(inCol,inAlpha) {
		this.mColour = inCol;
		this.mAlpha = inAlpha;
		this.mMode = openfl.text.FontInstanceMode.fimSolid;
	}
	,RenderChar: function(inGraphics,inGlyph,inX,inY) {
		inGraphics.__clearLine();
		inGraphics.beginFill(this.mColour,this.mAlpha);
		this.mFont.__render(inGraphics,inGlyph,inX,inY,this.mTryFreeType);
		inGraphics.endFill();
	}
	,toString: function() {
		return "FontInstance:" + Std.string(this.mFont) + ":" + this.mColour + "(" + this.mGlyphs.length + ")";
	}
	,__getAdvance: function(inChar) {
		if(this.mFont == null) return 0;
		return this.mFont.__getAdvance(inChar,this.mHeight);
	}
	,get_height: function() {
		return this.mHeight;
	}
	,get_color: function() {
		return this.mColour;
	}
	,__class__: openfl.text.FontInstance
	,__properties__: {get_color:"get_color",get_height:"get_height"}
};
openfl.text.TextFieldAutoSize = $hxClasses["openfl.text.TextFieldAutoSize"] = { __ename__ : ["openfl","text","TextFieldAutoSize"], __constructs__ : ["CENTER","LEFT","NONE","RIGHT"] };
openfl.text.TextFieldAutoSize.CENTER = ["CENTER",0];
openfl.text.TextFieldAutoSize.CENTER.toString = $estr;
openfl.text.TextFieldAutoSize.CENTER.__enum__ = openfl.text.TextFieldAutoSize;
openfl.text.TextFieldAutoSize.LEFT = ["LEFT",1];
openfl.text.TextFieldAutoSize.LEFT.toString = $estr;
openfl.text.TextFieldAutoSize.LEFT.__enum__ = openfl.text.TextFieldAutoSize;
openfl.text.TextFieldAutoSize.NONE = ["NONE",2];
openfl.text.TextFieldAutoSize.NONE.toString = $estr;
openfl.text.TextFieldAutoSize.NONE.__enum__ = openfl.text.TextFieldAutoSize;
openfl.text.TextFieldAutoSize.RIGHT = ["RIGHT",3];
openfl.text.TextFieldAutoSize.RIGHT.toString = $estr;
openfl.text.TextFieldAutoSize.RIGHT.__enum__ = openfl.text.TextFieldAutoSize;
openfl.text.TextFieldType = function() { };
$hxClasses["openfl.text.TextFieldType"] = openfl.text.TextFieldType;
openfl.text.TextFieldType.__name__ = ["openfl","text","TextFieldType"];
openfl.text.TextFormat = function(in_font,in_size,in_color,in_bold,in_italic,in_underline,in_url,in_target,in_align,in_leftMargin,in_rightMargin,in_indent,in_leading) {
	this.font = in_font;
	this.size = in_size;
	this.color = in_color;
	this.bold = in_bold;
	this.italic = in_italic;
	this.underline = in_underline;
	this.url = in_url;
	this.target = in_target;
	this.align = in_align;
	this.leftMargin = in_leftMargin;
	this.rightMargin = in_rightMargin;
	this.indent = in_indent;
	this.leading = in_leading;
};
$hxClasses["openfl.text.TextFormat"] = openfl.text.TextFormat;
openfl.text.TextFormat.__name__ = ["openfl","text","TextFormat"];
openfl.text.TextFormat.prototype = {
	clone: function() {
		var newFormat = new openfl.text.TextFormat(this.font,this.size,this.color,this.bold,this.italic,this.underline,this.url,this.target);
		newFormat.align = this.align;
		newFormat.leftMargin = this.leftMargin;
		newFormat.rightMargin = this.rightMargin;
		newFormat.indent = this.indent;
		newFormat.leading = this.leading;
		newFormat.blockIndent = this.blockIndent;
		newFormat.bullet = this.bullet;
		newFormat.display = this.display;
		newFormat.kerning = this.kerning;
		newFormat.letterSpacing = this.letterSpacing;
		newFormat.tabStops = this.tabStops;
		return newFormat;
	}
	,__class__: openfl.text.TextFormat
};
openfl.text.TextFormatAlign = $hxClasses["openfl.text.TextFormatAlign"] = { __ename__ : ["openfl","text","TextFormatAlign"], __constructs__ : ["LEFT","RIGHT","JUSTIFY","CENTER"] };
openfl.text.TextFormatAlign.LEFT = ["LEFT",0];
openfl.text.TextFormatAlign.LEFT.toString = $estr;
openfl.text.TextFormatAlign.LEFT.__enum__ = openfl.text.TextFormatAlign;
openfl.text.TextFormatAlign.RIGHT = ["RIGHT",1];
openfl.text.TextFormatAlign.RIGHT.toString = $estr;
openfl.text.TextFormatAlign.RIGHT.__enum__ = openfl.text.TextFormatAlign;
openfl.text.TextFormatAlign.JUSTIFY = ["JUSTIFY",2];
openfl.text.TextFormatAlign.JUSTIFY.toString = $estr;
openfl.text.TextFormatAlign.JUSTIFY.__enum__ = openfl.text.TextFormatAlign;
openfl.text.TextFormatAlign.CENTER = ["CENTER",3];
openfl.text.TextFormatAlign.CENTER.toString = $estr;
openfl.text.TextFormatAlign.CENTER.__enum__ = openfl.text.TextFormatAlign;
openfl.ui = {};
openfl.ui.Keyboard = function() { };
$hxClasses["openfl.ui.Keyboard"] = openfl.ui.Keyboard;
openfl.ui.Keyboard.__name__ = ["openfl","ui","Keyboard"];
openfl.ui.Keyboard.isAccessible = function() {
	return false;
};
openfl.ui.Keyboard.__convertMozillaCode = function(code) {
	switch(code) {
	case 8:
		return 8;
	case 9:
		return 9;
	case 13:
		return 13;
	case 14:
		return 13;
	case 16:
		return 16;
	case 17:
		return 17;
	case 20:
		return 18;
	case 27:
		return 27;
	case 32:
		return 32;
	case 33:
		return 33;
	case 34:
		return 34;
	case 35:
		return 35;
	case 36:
		return 36;
	case 37:
		return 37;
	case 39:
		return 39;
	case 38:
		return 38;
	case 40:
		return 40;
	case 45:
		return 45;
	case 46:
		return 46;
	case 144:
		return 144;
	default:
		return code;
	}
};
openfl.ui.Keyboard.__convertWebkitCode = function(code) {
	var _g = code.toLowerCase();
	switch(_g) {
	case "backspace":
		return 8;
	case "tab":
		return 9;
	case "enter":
		return 13;
	case "shift":
		return 16;
	case "control":
		return 17;
	case "capslock":
		return 18;
	case "escape":
		return 27;
	case "space":
		return 32;
	case "pageup":
		return 33;
	case "pagedown":
		return 34;
	case "end":
		return 35;
	case "home":
		return 36;
	case "left":
		return 37;
	case "right":
		return 39;
	case "up":
		return 38;
	case "down":
		return 40;
	case "insert":
		return 45;
	case "delete":
		return 46;
	case "numlock":
		return 144;
	case "break":
		return 19;
	}
	if(code.indexOf("U+") == 0) return Std.parseInt("0x" + HxOverrides.substr(code,3,null));
	throw "Unrecognized key code: " + code;
	return 0;
};
openfl.utils = {};
openfl.utils.ByteArray = function() {
	this.littleEndian = false;
	this.allocated = 0;
	this.position = 0;
	this.length = 0;
	this.___resizeBuffer(this.allocated);
};
$hxClasses["openfl.utils.ByteArray"] = openfl.utils.ByteArray;
openfl.utils.ByteArray.__name__ = ["openfl","utils","ByteArray"];
openfl.utils.ByteArray.fromBytes = function(inBytes) {
	var result = new openfl.utils.ByteArray();
	result.byteView = new Uint8Array(inBytes.b);
	result.set_length(result.byteView.length);
	result.allocated = result.length;
	return result;
};
openfl.utils.ByteArray.__ofBuffer = function(buffer) {
	var bytes = new openfl.utils.ByteArray();
	bytes.set_length(bytes.allocated = buffer.byteLength);
	bytes.data = new DataView(buffer);
	bytes.byteView = new Uint8Array(buffer);
	return bytes;
};
openfl.utils.ByteArray.prototype = {
	clear: function() {
		if(this.allocated < 0) this.___resizeBuffer(this.allocated = Std["int"](Math.max(0,this.allocated * 2))); else if(this.allocated > 0) this.___resizeBuffer(this.allocated = 0);
		this.length = 0;
		0;
	}
	,readBoolean: function() {
		return this.readByte() != 0;
	}
	,readByte: function() {
		var data = this.data;
		return data.getUint8(this.position++);
	}
	,readBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(offset < 0 || length < 0) throw new openfl.errors.IOError("Read error - Out of bounds");
		if(length == 0) length = this.length;
		var lengthToEnsure = offset + length;
		if(bytes.length < lengthToEnsure) {
			if(bytes.allocated < lengthToEnsure) bytes.___resizeBuffer(bytes.allocated = Std["int"](Math.max(lengthToEnsure,bytes.allocated * 2))); else if(bytes.allocated > lengthToEnsure) bytes.___resizeBuffer(bytes.allocated = lengthToEnsure);
			bytes.length = lengthToEnsure;
			lengthToEnsure;
		}
		bytes.byteView.set(this.byteView.subarray(this.position,this.position + length),offset);
		bytes.position = offset;
		this.position += length;
		if(bytes.position + length > bytes.length) bytes.set_length(bytes.position + length);
	}
	,readDouble: function() {
		var $double = this.data.getFloat64(this.position,this.littleEndian);
		this.position += 8;
		return $double;
	}
	,readFloat: function() {
		var $float = this.data.getFloat32(this.position,this.littleEndian);
		this.position += 4;
		return $float;
	}
	,readFullBytes: function(bytes,pos,len) {
		if(this.length < len) {
			if(this.allocated < len) this.___resizeBuffer(this.allocated = Std["int"](Math.max(len,this.allocated * 2))); else if(this.allocated > len) this.___resizeBuffer(this.allocated = len);
			this.length = len;
			len;
		}
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			var data = this.data;
			data.setInt8(this.position++,bytes.b[i]);
		}
	}
	,readInt: function() {
		var $int = this.data.getInt32(this.position,this.littleEndian);
		this.position += 4;
		return $int;
	}
	,readShort: function() {
		var $short = this.data.getInt16(this.position,this.littleEndian);
		this.position += 2;
		return $short;
	}
	,readUnsignedByte: function() {
		var data = this.data;
		return data.getUint8(this.position++);
	}
	,readUnsignedInt: function() {
		var uInt = this.data.getUint32(this.position,this.littleEndian);
		this.position += 4;
		return uInt;
	}
	,readUnsignedShort: function() {
		var uShort = this.data.getUint16(this.position,this.littleEndian);
		this.position += 2;
		return uShort;
	}
	,readUTF: function() {
		var bytesCount = this.readUnsignedShort();
		return this.readUTFBytes(bytesCount);
	}
	,readUTFBytes: function(len) {
		var value = "";
		var max = this.position + len;
		while(this.position < max) {
			var data = this.data;
			var c = data.getUint8(this.position++);
			if(c < 128) {
				if(c == 0) break;
				value += String.fromCharCode(c);
			} else if(c < 224) value += String.fromCharCode((c & 63) << 6 | data.getUint8(this.position++) & 127); else if(c < 240) {
				var c2 = data.getUint8(this.position++);
				value += String.fromCharCode((c & 31) << 12 | (c2 & 127) << 6 | data.getUint8(this.position++) & 127);
			} else {
				var c21 = data.getUint8(this.position++);
				var c3 = data.getUint8(this.position++);
				value += String.fromCharCode((c & 15) << 18 | (c21 & 127) << 12 | c3 << 6 & 127 | data.getUint8(this.position++) & 127);
			}
		}
		return value;
	}
	,toString: function() {
		var cachePosition = this.position;
		this.position = 0;
		var value = this.readUTFBytes(this.length);
		this.position = cachePosition;
		return value;
	}
	,writeBoolean: function(value) {
		this.writeByte(value?1:0);
	}
	,writeByte: function(value) {
		var lengthToEnsure = this.position + 1;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		var data = this.data;
		data.setInt8(this.position,value);
		this.position += 1;
	}
	,writeBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(offset < 0 || length < 0) throw new openfl.errors.IOError("Write error - Out of bounds");
		if(length == 0) length = bytes.length;
		var lengthToEnsure = this.position + length;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.byteView.set(bytes.byteView.subarray(offset,offset + length),this.position);
		this.position += length;
	}
	,writeDouble: function(x) {
		var lengthToEnsure = this.position + 8;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setFloat64(this.position,x,this.littleEndian);
		this.position += 8;
	}
	,writeFloat: function(x) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setFloat32(this.position,x,this.littleEndian);
		this.position += 4;
	}
	,writeInt: function(value) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setInt32(this.position,value,this.littleEndian);
		this.position += 4;
	}
	,writeShort: function(value) {
		var lengthToEnsure = this.position + 2;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setInt16(this.position,value,this.littleEndian);
		this.position += 2;
	}
	,writeUnsignedInt: function(value) {
		var lengthToEnsure = this.position + 4;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setUint32(this.position,value,this.littleEndian);
		this.position += 4;
	}
	,writeUnsignedShort: function(value) {
		var lengthToEnsure = this.position + 2;
		if(this.length < lengthToEnsure) {
			if(this.allocated < lengthToEnsure) this.___resizeBuffer(this.allocated = Std["int"](Math.max(lengthToEnsure,this.allocated * 2))); else if(this.allocated > lengthToEnsure) this.___resizeBuffer(this.allocated = lengthToEnsure);
			this.length = lengthToEnsure;
			lengthToEnsure;
		}
		this.data.setUint16(this.position,value,this.littleEndian);
		this.position += 2;
	}
	,writeUTF: function(value) {
		this.writeUnsignedShort(this._getUTFBytesCount(value));
		this.writeUTFBytes(value);
	}
	,writeUTFBytes: function(value) {
		var _g1 = 0;
		var _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = value.charCodeAt(i);
			if(c <= 127) this.writeByte(c); else if(c <= 2047) {
				this.writeByte(192 | c >> 6);
				this.writeByte(128 | c & 63);
			} else if(c <= 65535) {
				this.writeByte(224 | c >> 12);
				this.writeByte(128 | c >> 6 & 63);
				this.writeByte(128 | c & 63);
			} else {
				this.writeByte(240 | c >> 18);
				this.writeByte(128 | c >> 12 & 63);
				this.writeByte(128 | c >> 6 & 63);
				this.writeByte(128 | c & 63);
			}
		}
	}
	,__fromBytes: function(inBytes) {
		this.byteView = new Uint8Array(inBytes.b);
		this.set_length(this.byteView.length);
		this.allocated = this.length;
	}
	,__get: function(pos) {
		return this.data.getUint8(pos);
	}
	,_getUTFBytesCount: function(value) {
		var count = 0;
		var _g1 = 0;
		var _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = value.charCodeAt(i);
			if(c <= 127) count += 1; else if(c <= 2047) count += 2; else if(c <= 65535) count += 3; else count += 4;
		}
		return count;
	}
	,___resizeBuffer: function(len) {
		var oldByteView = this.byteView;
		var newByteView = new Uint8Array(len);
		if(oldByteView != null) {
			if(oldByteView.length <= len) newByteView.set(oldByteView); else newByteView.set(oldByteView.subarray(0,len));
		}
		this.byteView = newByteView;
		this.data = new DataView(newByteView.buffer);
	}
	,__getBuffer: function() {
		return this.data.buffer;
	}
	,__set: function(pos,v) {
		this.data.setUint8(pos,v);
	}
	,get_bytesAvailable: function() {
		return this.length - this.position;
	}
	,get_endian: function() {
		if(this.littleEndian) return "littleEndian"; else return "bigEndian";
	}
	,set_endian: function(endian) {
		this.littleEndian = endian == "littleEndian";
		return endian;
	}
	,set_length: function(value) {
		if(this.allocated < value) this.___resizeBuffer(this.allocated = Std["int"](Math.max(value,this.allocated * 2))); else if(this.allocated > value) this.___resizeBuffer(this.allocated = value);
		this.length = value;
		return value;
	}
	,__class__: openfl.utils.ByteArray
	,__properties__: {set_length:"set_length",set_endian:"set_endian",get_endian:"get_endian",get_bytesAvailable:"get_bytesAvailable"}
};
openfl.utils.Endian = function() { };
$hxClasses["openfl.utils.Endian"] = openfl.utils.Endian;
openfl.utils.Endian.__name__ = ["openfl","utils","Endian"];
openfl.utils.Timer = function(delay,repeatCount) {
	if(repeatCount == null) repeatCount = 0;
	openfl.events.EventDispatcher.call(this);
	this.running = false;
	this.set_delay(delay);
	this.set_repeatCount(repeatCount);
	this.currentCount = 0;
};
$hxClasses["openfl.utils.Timer"] = openfl.utils.Timer;
openfl.utils.Timer.__name__ = ["openfl","utils","Timer"];
openfl.utils.Timer.__super__ = openfl.events.EventDispatcher;
openfl.utils.Timer.prototype = $extend(openfl.events.EventDispatcher.prototype,{
	reset: function() {
		this.stop();
		this.currentCount = 0;
	}
	,start: function() {
		if(this.running) return;
		this.running = true;
		this.timerId = window.setInterval($bind(this,this.__onInterval),this.delay | 0);
	}
	,stop: function() {
		if(this.timerId != null) {
			window.clearInterval(this.timerId);
			this.timerId = null;
		}
		this.running = false;
	}
	,__onInterval: function() {
		this.currentCount++;
		if(this.repeatCount > 0 && this.currentCount >= this.repeatCount) {
			this.stop();
			this.dispatchEvent(new openfl.events.TimerEvent("timer"));
			this.dispatchEvent(new openfl.events.TimerEvent("timerComplete"));
		} else this.dispatchEvent(new openfl.events.TimerEvent("timer"));
	}
	,set_delay: function(v) {
		if(v != this.delay) {
			var wasRunning = this.running;
			if(this.running) this.stop();
			this.delay = v;
			if(wasRunning) this.start();
		}
		return v;
	}
	,set_repeatCount: function(v) {
		if(this.running && v != 0 && v <= this.currentCount) this.stop();
		this.repeatCount = v;
		return v;
	}
	,__class__: openfl.utils.Timer
	,__properties__: {set_repeatCount:"set_repeatCount",set_delay:"set_delay"}
});
openfl.utils.Uuid = function() { };
$hxClasses["openfl.utils.Uuid"] = openfl.utils.Uuid;
openfl.utils.Uuid.__name__ = ["openfl","utils","Uuid"];
openfl.utils.Uuid.random = function(size) {
	if(size == null) size = 32;
	var nchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".length;
	var uid = new StringBuf();
	var _g = 0;
	while(_g < size) {
		var i = _g++;
		uid.add("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Std["int"](Math.random() * nchars)));
	}
	return uid.b;
};
openfl.utils.Uuid.uuid = function() {
	return openfl.utils.Uuid.random(8) + "-" + openfl.utils.Uuid.random(4) + "-" + openfl.utils.Uuid.random(4) + "-" + openfl.utils.Uuid.random(4) + "-" + openfl.utils.Uuid.random(12);
};
var tools = {};
tools.Helper = function() { };
$hxClasses["tools.Helper"] = tools.Helper;
tools.Helper.__name__ = ["tools","Helper"];
tools.Helper.getAnchorIdFromUrl = function(url) {
	var ereg = new EReg("url[(](.+)[)]","");
	var id;
	if(ereg.match(url)) id = ereg.matched(1); else id = url;
	if(id.indexOf("\"") != -1) id = HxOverrides.substr(id,1,id.length - 2);
	if(id.indexOf("'") != -1) id = HxOverrides.substr(id,1,id.length - 2);
	if(null == id) return null;
	if(id.indexOf("#") != -1) id = id.substring(id.indexOf("#") + 1,id.length);
	return id;
};
var xpath = {};
xpath.Axis = $hxClasses["xpath.Axis"] = { __ename__ : ["xpath","Axis"], __constructs__ : ["Ancestor","AncestorOrSelf","Attribute","Child","Descendant","DescendantOrSelf","Following","FollowingSibling","Namespace","Parent","Preceding","PrecedingSibling","Self"] };
xpath.Axis.Ancestor = ["Ancestor",0];
xpath.Axis.Ancestor.toString = $estr;
xpath.Axis.Ancestor.__enum__ = xpath.Axis;
xpath.Axis.AncestorOrSelf = ["AncestorOrSelf",1];
xpath.Axis.AncestorOrSelf.toString = $estr;
xpath.Axis.AncestorOrSelf.__enum__ = xpath.Axis;
xpath.Axis.Attribute = ["Attribute",2];
xpath.Axis.Attribute.toString = $estr;
xpath.Axis.Attribute.__enum__ = xpath.Axis;
xpath.Axis.Child = ["Child",3];
xpath.Axis.Child.toString = $estr;
xpath.Axis.Child.__enum__ = xpath.Axis;
xpath.Axis.Descendant = ["Descendant",4];
xpath.Axis.Descendant.toString = $estr;
xpath.Axis.Descendant.__enum__ = xpath.Axis;
xpath.Axis.DescendantOrSelf = ["DescendantOrSelf",5];
xpath.Axis.DescendantOrSelf.toString = $estr;
xpath.Axis.DescendantOrSelf.__enum__ = xpath.Axis;
xpath.Axis.Following = ["Following",6];
xpath.Axis.Following.toString = $estr;
xpath.Axis.Following.__enum__ = xpath.Axis;
xpath.Axis.FollowingSibling = ["FollowingSibling",7];
xpath.Axis.FollowingSibling.toString = $estr;
xpath.Axis.FollowingSibling.__enum__ = xpath.Axis;
xpath.Axis.Namespace = ["Namespace",8];
xpath.Axis.Namespace.toString = $estr;
xpath.Axis.Namespace.__enum__ = xpath.Axis;
xpath.Axis.Parent = ["Parent",9];
xpath.Axis.Parent.toString = $estr;
xpath.Axis.Parent.__enum__ = xpath.Axis;
xpath.Axis.Preceding = ["Preceding",10];
xpath.Axis.Preceding.toString = $estr;
xpath.Axis.Preceding.__enum__ = xpath.Axis;
xpath.Axis.PrecedingSibling = ["PrecedingSibling",11];
xpath.Axis.PrecedingSibling.toString = $estr;
xpath.Axis.PrecedingSibling.__enum__ = xpath.Axis;
xpath.Axis.Self = ["Self",12];
xpath.Axis.Self.toString = $estr;
xpath.Axis.Self.__enum__ = xpath.Axis;
xpath.XPathException = function(message) {
	this.message = message;
};
$hxClasses["xpath.XPathException"] = xpath.XPathException;
xpath.XPathException.__name__ = ["xpath","XPathException"];
xpath.XPathException.prototype = {
	toString: function() {
		var string = "XPathException";
		if(this.message != null) string += ": " + this.message;
		return string;
	}
	,__class__: xpath.XPathException
};
xpath.EvaluationException = function(message) {
	xpath.XPathException.call(this,message);
};
$hxClasses["xpath.EvaluationException"] = xpath.EvaluationException;
xpath.EvaluationException.__name__ = ["xpath","EvaluationException"];
xpath.EvaluationException.__super__ = xpath.XPathException;
xpath.EvaluationException.prototype = $extend(xpath.XPathException.prototype,{
	toString: function() {
		if(this.message == null) return "EvaluationException"; else return "EvaluationException: " + this.message;
	}
	,__class__: xpath.EvaluationException
});
xpath.NodeCategory = $hxClasses["xpath.NodeCategory"] = { __ename__ : ["xpath","NodeCategory"], __constructs__ : ["Comment","Text","Node"] };
xpath.NodeCategory.Comment = ["Comment",0];
xpath.NodeCategory.Comment.toString = $estr;
xpath.NodeCategory.Comment.__enum__ = xpath.NodeCategory;
xpath.NodeCategory.Text = ["Text",1];
xpath.NodeCategory.Text.toString = $estr;
xpath.NodeCategory.Text.__enum__ = xpath.NodeCategory;
xpath.NodeCategory.Node = ["Node",2];
xpath.NodeCategory.Node.toString = $estr;
xpath.NodeCategory.Node.__enum__ = xpath.NodeCategory;
xpath.Operator = $hxClasses["xpath.Operator"] = { __ename__ : ["xpath","Operator"], __constructs__ : ["And","Or","Modulo","Divide","Union","Plus","Minus","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","Multiply"] };
xpath.Operator.And = ["And",0];
xpath.Operator.And.toString = $estr;
xpath.Operator.And.__enum__ = xpath.Operator;
xpath.Operator.Or = ["Or",1];
xpath.Operator.Or.toString = $estr;
xpath.Operator.Or.__enum__ = xpath.Operator;
xpath.Operator.Modulo = ["Modulo",2];
xpath.Operator.Modulo.toString = $estr;
xpath.Operator.Modulo.__enum__ = xpath.Operator;
xpath.Operator.Divide = ["Divide",3];
xpath.Operator.Divide.toString = $estr;
xpath.Operator.Divide.__enum__ = xpath.Operator;
xpath.Operator.Union = ["Union",4];
xpath.Operator.Union.toString = $estr;
xpath.Operator.Union.__enum__ = xpath.Operator;
xpath.Operator.Plus = ["Plus",5];
xpath.Operator.Plus.toString = $estr;
xpath.Operator.Plus.__enum__ = xpath.Operator;
xpath.Operator.Minus = ["Minus",6];
xpath.Operator.Minus.toString = $estr;
xpath.Operator.Minus.__enum__ = xpath.Operator;
xpath.Operator.Equal = ["Equal",7];
xpath.Operator.Equal.toString = $estr;
xpath.Operator.Equal.__enum__ = xpath.Operator;
xpath.Operator.NotEqual = ["NotEqual",8];
xpath.Operator.NotEqual.toString = $estr;
xpath.Operator.NotEqual.__enum__ = xpath.Operator;
xpath.Operator.LessThan = ["LessThan",9];
xpath.Operator.LessThan.toString = $estr;
xpath.Operator.LessThan.__enum__ = xpath.Operator;
xpath.Operator.LessThanOrEqual = ["LessThanOrEqual",10];
xpath.Operator.LessThanOrEqual.toString = $estr;
xpath.Operator.LessThanOrEqual.__enum__ = xpath.Operator;
xpath.Operator.GreaterThan = ["GreaterThan",11];
xpath.Operator.GreaterThan.toString = $estr;
xpath.Operator.GreaterThan.__enum__ = xpath.Operator;
xpath.Operator.GreaterThanOrEqual = ["GreaterThanOrEqual",12];
xpath.Operator.GreaterThanOrEqual.toString = $estr;
xpath.Operator.GreaterThanOrEqual.__enum__ = xpath.Operator;
xpath.Operator.Multiply = ["Multiply",13];
xpath.Operator.Multiply.toString = $estr;
xpath.Operator.Multiply.__enum__ = xpath.Operator;
xpath.XPath = function(xpathStr,environment) {
	if(environment == null) this.environment = xpath.context.CoreEnvironment.getInstance(); else this.environment = new xpath.context.UnionEnvironment(environment,xpath.context.CoreEnvironment.getInstance());
	var tokenizerInput = new xpath.tokenizer.TokenizerInput(xpathStr);
	var tokenizerOutput = xpath.tokenizer.container.XPathTokenizer.getInstance().tokenize(tokenizerInput);
	if(tokenizerOutput.result == null) throw new xpath.XPathError("Unknown tokenization failure");
	var parserInput = new xpath.parser.ParserInput(tokenizerOutput.result);
	var parserOutput = xpath.parser.XPathParser.getInstance().parse(parserInput);
	if(parserOutput.result == null) throw new xpath.XPathError("Unknown parser failure");
	this.expression = parserOutput.result;
};
$hxClasses["xpath.XPath"] = xpath.XPath;
xpath.XPath.__name__ = ["xpath","XPath"];
xpath.XPath.prototype = {
	evaluate: function(contextNode,environment) {
		if(environment == null) environment = this.environment; else environment = new xpath.context.UnionEnvironment(environment,this.environment);
		return this.expression.evaluate(new xpath.context.Context(contextNode,1,1,environment));
	}
	,selectNodes: function(contextNode,environment) {
		var result = this.evaluate(contextNode,environment);
		if(js.Boot.__instanceof(result,xpath.value.XPathNodeSet)) return (js.Boot.__cast(result , xpath.value.XPathNodeSet)).getNodes(); else {
			throw new xpath.EvaluationException("Query evaluated to a " + result.typeName + ", but " + "a node set was expected");
			return null;
		}
	}
	,selectNode: function(contextNode,environment) {
		var result = this.evaluate(contextNode,environment);
		if(js.Boot.__instanceof(result,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(result , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				return node;
			}
			return null;
		} else {
			throw new xpath.EvaluationException("Query evaluated to a " + result.typeName + ", but " + "a node set was expected");
			return null;
		}
	}
	,selectSingleNode: function(contextNode,environment) {
		return this.selectNode(contextNode,environment);
	}
	,evaluateAsString: function(contextNode,environment) {
		return this.evaluate(contextNode,environment).getString();
	}
	,evaluateAsFloat: function(contextNode,environment) {
		return this.evaluate(contextNode,environment).getFloat();
	}
	,evaluateAsBool: function(contextNode,environment) {
		return this.evaluate(contextNode,environment).getBool();
	}
	,__class__: xpath.XPath
};
xpath.XPathError = function(message) {
	this.message = message;
};
$hxClasses["xpath.XPathError"] = xpath.XPathError;
xpath.XPathError.__name__ = ["xpath","XPathError"];
xpath.XPathError.prototype = {
	toString: function() {
		var string = "XPathError";
		if(this.message != null) string += ": " + this.message;
		return string;
	}
	,__class__: xpath.XPathError
};
xpath.context = {};
xpath.context.Environment = function() { };
$hxClasses["xpath.context.Environment"] = xpath.context.Environment;
xpath.context.Environment.__name__ = ["xpath","context","Environment"];
xpath.context.Environment.prototype = {
	__class__: xpath.context.Environment
};
xpath.context.BaseEnvironment = function() {
	this.functions = new haxe.ds.StringMap();
	this.variables = new haxe.ds.StringMap();
};
$hxClasses["xpath.context.BaseEnvironment"] = xpath.context.BaseEnvironment;
xpath.context.BaseEnvironment.__name__ = ["xpath","context","BaseEnvironment"];
xpath.context.BaseEnvironment.__interfaces__ = [xpath.context.Environment];
xpath.context.BaseEnvironment.prototype = {
	existsFunction: function(name) {
		return this.functions.get(name) != null;
	}
	,getFunction: function(name) {
		var f = this.functions.get(name);
		if(f == null) throw new xpath.EvaluationException("evaluated a function which is not defined"); else return f;
	}
	,callFunction: function(context,name,parameters) {
		return (this.getFunction(name))(context,parameters);
	}
	,existsVariable: function(name) {
		return this.variables.get(name) != null;
	}
	,getVariable: function(name) {
		var value = this.variables.get(name);
		if(value == null) throw new xpath.EvaluationException("evaluated a variable which is not defined"); else return value;
	}
	,__class__: xpath.context.BaseEnvironment
};
xpath.context.Context = function(node,position,size,environment) {
	this.node = node;
	this.position = position;
	this.size = size;
	this.environment = environment;
};
$hxClasses["xpath.context.Context"] = xpath.context.Context;
xpath.context.Context.__name__ = ["xpath","context","Context"];
xpath.context.Context.prototype = {
	callFunction: function(name,parameters) {
		if(parameters == null) parameters = new Array();
		return this.environment.callFunction(this,name,parameters);
	}
	,getVariable: function(name) {
		return this.environment.getVariable(name);
	}
	,__class__: xpath.context.Context
};
xpath.context.CoreEnvironment = function() {
	xpath.context.BaseEnvironment.call(this);
};
$hxClasses["xpath.context.CoreEnvironment"] = xpath.context.CoreEnvironment;
xpath.context.CoreEnvironment.__name__ = ["xpath","context","CoreEnvironment"];
xpath.context.CoreEnvironment.getInstance = function() {
	if(xpath.context.CoreEnvironment.instance == null) {
		xpath.context.CoreEnvironment.instance = new xpath.context.CoreEnvironment();
		xpath.context.CoreEnvironment.instance.init();
	}
	return xpath.context.CoreEnvironment.instance;
};
xpath.context.CoreEnvironment.__super__ = xpath.context.BaseEnvironment;
xpath.context.CoreEnvironment.prototype = $extend(xpath.context.BaseEnvironment.prototype,{
	init: function() {
		this.functions.set("last",xpath.library.NodeSetLibrary.last);
		this.functions.set("position",xpath.library.NodeSetLibrary.position);
		this.functions.set("count",xpath.library.NodeSetLibrary.count);
		this.functions.set("local-name",xpath.library.NodeSetLibrary.localName);
		this.functions.set("name",xpath.library.NodeSetLibrary.nodeName);
		this.functions.set("string",xpath.library.StringLibrary.string);
		this.functions.set("concat",xpath.library.StringLibrary.concat);
		this.functions.set("starts-with",xpath.library.StringLibrary.startsWith);
		this.functions.set("contains",xpath.library.StringLibrary.contains);
		this.functions.set("substring-before",xpath.library.StringLibrary.substringBefore);
		this.functions.set("substring-after",xpath.library.StringLibrary.substringAfter);
		this.functions.set("substring",xpath.library.StringLibrary.substring);
		this.functions.set("string-length",xpath.library.StringLibrary.stringLength);
		this.functions.set("normalize-space",xpath.library.StringLibrary.normalizeSpace);
		this.functions.set("translate",xpath.library.StringLibrary.translate);
		this.functions.set("boolean",xpath.library.BooleanLibrary["boolean"]);
		this.functions.set("true",xpath.library.BooleanLibrary.getTrue);
		this.functions.set("false",xpath.library.BooleanLibrary.getFalse);
		this.functions.set("number",xpath.library.NumberLibrary.number);
		this.functions.set("sum",xpath.library.NumberLibrary.sum);
		this.functions.set("floor",xpath.library.NumberLibrary.floor);
		this.functions.set("ceiling",xpath.library.NumberLibrary.ceiling);
		this.functions.set("round",xpath.library.NumberLibrary.round);
	}
	,__class__: xpath.context.CoreEnvironment
});
xpath.context.UnionEnvironment = function(primary,secondary) {
	this.primary = primary;
	this.secondary = secondary;
};
$hxClasses["xpath.context.UnionEnvironment"] = xpath.context.UnionEnvironment;
xpath.context.UnionEnvironment.__name__ = ["xpath","context","UnionEnvironment"];
xpath.context.UnionEnvironment.__interfaces__ = [xpath.context.Environment];
xpath.context.UnionEnvironment.prototype = {
	existsFunction: function(name) {
		return this.primary.existsFunction(name) || this.secondary.existsFunction(name);
	}
	,getFunction: function(name) {
		if(this.primary.existsFunction(name)) return this.primary.getFunction(name); else return this.secondary.getFunction(name);
	}
	,callFunction: function(context,name,parameters) {
		return (this.getFunction(name))(context,parameters);
	}
	,existsVariable: function(name) {
		return this.primary.existsVariable(name) || this.secondary.existsVariable(name);
	}
	,getVariable: function(name) {
		if(this.primary.existsVariable(name)) return this.primary.getVariable(name); else return this.secondary.getVariable(name);
	}
	,__class__: xpath.context.UnionEnvironment
};
xpath.expression = {};
xpath.expression.Expression = function() { };
$hxClasses["xpath.expression.Expression"] = xpath.expression.Expression;
xpath.expression.Expression.__name__ = ["xpath","expression","Expression"];
xpath.expression.Expression.prototype = {
	__class__: xpath.expression.Expression
};
xpath.expression.PathStep = function(step,nextStep) {
	this.step = step;
	this.nextStep = nextStep;
};
$hxClasses["xpath.expression.PathStep"] = xpath.expression.PathStep;
xpath.expression.PathStep.__name__ = ["xpath","expression","PathStep"];
xpath.expression.PathStep.__interfaces__ = [xpath.expression.Expression];
xpath.expression.PathStep.prototype = {
	evaluate: function(context) {
		if(this.nextStep == null) return new xpath.value.XPathNodeSet(this.step(context)); else {
			var me = this;
			var index = 0;
			var selected = Lambda.array(this.step(context));
			var nextNode = null;
			var nextStepNodes = new List().iterator();
			var hasNext = function() {
				return nextNode != null;
			};
			var next = function() {
				var node = nextNode;
				while(!nextStepNodes.hasNext() && index < selected.length) {
					var nextStepContext = new xpath.context.Context(selected[index],index + 1,selected.length,context.environment);
					var nextStepResult = me.nextStep.evaluate(nextStepContext);
					nextStepNodes = $iterator(nextStepResult.getNodes())();
					++index;
				}
				if(nextStepNodes.hasNext()) nextNode = nextStepNodes.next(); else nextNode = null;
				return node;
			};
			next();
			var iterator = function() {
				return { hasNext : hasNext, next : next};
			};
			return new xpath.value.XPathNodeSet({ iterator : iterator});
		}
	}
	,__class__: xpath.expression.PathStep
};
xpath.expression.AxisStep = function(axis,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.axisStep),nextStep);
	this.axis = axis;
};
$hxClasses["xpath.expression.AxisStep"] = xpath.expression.AxisStep;
xpath.expression.AxisStep.__name__ = ["xpath","expression","AxisStep"];
xpath.expression.AxisStep.__super__ = xpath.expression.PathStep;
xpath.expression.AxisStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	axisStep: function(context) {
		var me = this;
		return { iterator : function() {
			return context.node.getAxisIterator(me.axis);
		}};
	}
	,__class__: xpath.expression.AxisStep
});
xpath.expression.FilterStep = function(expression,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.filterStep),nextStep);
	this.expression = expression;
};
$hxClasses["xpath.expression.FilterStep"] = xpath.expression.FilterStep;
xpath.expression.FilterStep.__name__ = ["xpath","expression","FilterStep"];
xpath.expression.FilterStep.__super__ = xpath.expression.PathStep;
xpath.expression.FilterStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	filterStep: function(context) {
		var result = this.expression.evaluate(context);
		if(js.Boot.__instanceof(result,xpath.value.XPathNodeSet)) return (js.Boot.__cast(result , xpath.value.XPathNodeSet)).getNodes(); else throw new xpath.EvaluationException("Filter expression evaluated to a " + result.typeName + ", but a node set was expected");
	}
	,__class__: xpath.expression.FilterStep
});
xpath.expression.FunctionCall = function(name,parameters) {
	this.name = name;
	this.parameters = parameters;
};
$hxClasses["xpath.expression.FunctionCall"] = xpath.expression.FunctionCall;
xpath.expression.FunctionCall.__name__ = ["xpath","expression","FunctionCall"];
xpath.expression.FunctionCall.__interfaces__ = [xpath.expression.Expression];
xpath.expression.FunctionCall.prototype = {
	evaluate: function(context) {
		var parameterValues = new Array();
		var $it0 = $iterator(this.parameters)();
		while( $it0.hasNext() ) {
			var parameter = $it0.next();
			parameterValues.push(parameter.evaluate(context));
		}
		return context.callFunction(this.name,parameterValues);
	}
	,__class__: xpath.expression.FunctionCall
};
xpath.expression.Literal = function(value) {
	this.value = value;
};
$hxClasses["xpath.expression.Literal"] = xpath.expression.Literal;
xpath.expression.Literal.__name__ = ["xpath","expression","Literal"];
xpath.expression.Literal.__interfaces__ = [xpath.expression.Expression];
xpath.expression.Literal.prototype = {
	evaluate: function(context) {
		return new xpath.value.XPathString(this.value);
	}
	,__class__: xpath.expression.Literal
};
xpath.expression.NameStep = function(name,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.nameStep),nextStep);
	this.name = name;
};
$hxClasses["xpath.expression.NameStep"] = xpath.expression.NameStep;
xpath.expression.NameStep.__name__ = ["xpath","expression","NameStep"];
xpath.expression.NameStep.__super__ = xpath.expression.PathStep;
xpath.expression.NameStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	nameStep: function(context) {
		var contextNodeType = context.node.getType();
		if(contextNodeType == xpath.xml.XmlNodeType.Element || contextNodeType == xpath.xml.XmlNodeType.Attribute) {
			if(this.name == "*" || context.node.getName() == this.name) return [context.node];
		}
		return [];
	}
	,__class__: xpath.expression.NameStep
});
xpath.expression.Negation = function(operand) {
	this.operand = operand;
};
$hxClasses["xpath.expression.Negation"] = xpath.expression.Negation;
xpath.expression.Negation.__name__ = ["xpath","expression","Negation"];
xpath.expression.Negation.__interfaces__ = [xpath.expression.Expression];
xpath.expression.Negation.prototype = {
	evaluate: function(context) {
		var operandValue = this.operand.evaluate(context);
		return new xpath.value.XPathNumber(-operandValue.getFloat());
	}
	,__class__: xpath.expression.Negation
};
xpath.expression.Number = function(value) {
	this.value = value;
};
$hxClasses["xpath.expression.Number"] = xpath.expression.Number;
xpath.expression.Number.__name__ = ["xpath","expression","Number"];
xpath.expression.Number.__interfaces__ = [xpath.expression.Expression];
xpath.expression.Number.prototype = {
	evaluate: function(context) {
		return new xpath.value.XPathNumber(this.value);
	}
	,__class__: xpath.expression.Number
};
xpath.expression.Operation = function(leftOperand,operator,rightOperand) {
	this.leftOperand = leftOperand;
	this.operator = operator;
	this.rightOperand = rightOperand;
};
$hxClasses["xpath.expression.Operation"] = xpath.expression.Operation;
xpath.expression.Operation.__name__ = ["xpath","expression","Operation"];
xpath.expression.Operation.__interfaces__ = [xpath.expression.Expression];
xpath.expression.Operation.prototype = {
	evaluate: function(context) {
		var leftValue = this.leftOperand.evaluate(context);
		if(this.operator == xpath.Operator.And) {
			if(!leftValue.getBool()) return leftValue; else return this.rightOperand.evaluate(context);
		} else if(this.operator == xpath.Operator.Or) {
			if(leftValue.getBool()) return leftValue; else return this.rightOperand.evaluate(context);
		} else {
			var rightValue = this.rightOperand.evaluate(context);
			var _g = this.operator;
			switch(_g[1]) {
			case 7:
				return leftValue.equals(rightValue);
			case 8:
				return leftValue.notEqual(rightValue);
			case 10:
				return leftValue.lessThanOrEqual(rightValue);
			case 12:
				return leftValue.greaterThanOrEqual(rightValue);
			case 9:
				return leftValue.lessThan(rightValue);
			case 11:
				return leftValue.greaterThan(rightValue);
			case 5:
				return leftValue.plus(rightValue);
			case 6:
				return leftValue.minus(rightValue);
			case 13:
				return leftValue.multiply(rightValue);
			case 3:
				return leftValue.divide(rightValue);
			case 2:
				return leftValue.modulo(rightValue);
			case 4:
				return leftValue.union(rightValue);
			default:
				throw new xpath.XPathError();
			}
		}
	}
	,__class__: xpath.expression.Operation
};
xpath.expression.PINameStep = function(name,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.piNameStep),nextStep);
	this.name = name;
};
$hxClasses["xpath.expression.PINameStep"] = xpath.expression.PINameStep;
xpath.expression.PINameStep.__name__ = ["xpath","expression","PINameStep"];
xpath.expression.PINameStep.__super__ = xpath.expression.PathStep;
xpath.expression.PINameStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	piNameStep: function(context) {
		if(context.node.getType() == xpath.xml.XmlNodeType.ProcessingInstruction) {
			if(this.name == null || context.node.getName() == this.name) return [context.node];
		}
		return [];
	}
	,__class__: xpath.expression.PINameStep
});
xpath.expression.PredicateStep = function(expression,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.predicateStep),nextStep);
	this.expression = expression;
};
$hxClasses["xpath.expression.PredicateStep"] = xpath.expression.PredicateStep;
xpath.expression.PredicateStep.__name__ = ["xpath","expression","PredicateStep"];
xpath.expression.PredicateStep.__super__ = xpath.expression.PathStep;
xpath.expression.PredicateStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	predicateStep: function(context) {
		var result = this.expression.evaluate(context);
		if(js.Boot.__instanceof(result,xpath.value.XPathNumber)) {
			if(result.getFloat() == context.position) return [context.node]; else return [];
		} else if(result.getBool()) return [context.node]; else return [];
	}
	,__class__: xpath.expression.PredicateStep
});
xpath.expression.RootStep = function(nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.rootStep),nextStep);
};
$hxClasses["xpath.expression.RootStep"] = xpath.expression.RootStep;
xpath.expression.RootStep.__name__ = ["xpath","expression","RootStep"];
xpath.expression.RootStep.__super__ = xpath.expression.PathStep;
xpath.expression.RootStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	rootStep: function(context) {
		var node = context.node;
		var parent = node.getParent();
		while(parent != null) {
			node = parent;
			parent = node.getParent();
		}
		return [node];
	}
	,__class__: xpath.expression.RootStep
});
xpath.expression.TypeStep = function(type,nextStep) {
	xpath.expression.PathStep.call(this,$bind(this,this.typeStep),nextStep);
	this.type = type;
};
$hxClasses["xpath.expression.TypeStep"] = xpath.expression.TypeStep;
xpath.expression.TypeStep.__name__ = ["xpath","expression","TypeStep"];
xpath.expression.TypeStep.__super__ = xpath.expression.PathStep;
xpath.expression.TypeStep.prototype = $extend(xpath.expression.PathStep.prototype,{
	typeStep: function(context) {
		var node = context.node;
		var nodeType = context.node.getType();
		var _g = this.type;
		switch(_g[1]) {
		case 2:
			if(nodeType == xpath.xml.XmlNodeType.Element || nodeType == xpath.xml.XmlNodeType.Attribute) return [node];
			break;
		case 1:
			if(nodeType == xpath.xml.XmlNodeType.Text) return [node];
			break;
		case 0:
			if(nodeType == xpath.xml.XmlNodeType.Comment) return [node];
			break;
		}
		return [];
	}
	,__class__: xpath.expression.TypeStep
});
xpath.expression.VariableReference = function(name) {
	this.name = name;
};
$hxClasses["xpath.expression.VariableReference"] = xpath.expression.VariableReference;
xpath.expression.VariableReference.__name__ = ["xpath","expression","VariableReference"];
xpath.expression.VariableReference.__interfaces__ = [xpath.expression.Expression];
xpath.expression.VariableReference.prototype = {
	evaluate: function(context) {
		var result = context.getVariable(this.name);
		if(result == null) throw new xpath.EvaluationException("undefined variable reference $" + this.name); else return result;
	}
	,__class__: xpath.expression.VariableReference
};
xpath.library = {};
xpath.library.BooleanLibrary = function() { };
$hxClasses["xpath.library.BooleanLibrary"] = xpath.library.BooleanLibrary;
xpath.library.BooleanLibrary.__name__ = ["xpath","library","BooleanLibrary"];
xpath.library.BooleanLibrary["boolean"] = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	return parameters[0].getXPathBoolean();
};
xpath.library.BooleanLibrary.not = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	return new xpath.value.XPathBoolean(!parameters[0].getBool());
};
xpath.library.BooleanLibrary.getTrue = function(context,parameters) {
	if(parameters.length != 0) throw new xpath.EvaluationException("Incorrect parameter count");
	return new xpath.value.XPathBoolean(true);
};
xpath.library.BooleanLibrary.getFalse = function(context,parameters) {
	if(parameters.length != 0) throw new xpath.EvaluationException("Incorrect parameter count");
	return new xpath.value.XPathBoolean(false);
};
xpath.library.NodeSetLibrary = function() { };
$hxClasses["xpath.library.NodeSetLibrary"] = xpath.library.NodeSetLibrary;
xpath.library.NodeSetLibrary.__name__ = ["xpath","library","NodeSetLibrary"];
xpath.library.NodeSetLibrary.last = function(context,parameters) {
	if(parameters.length > 0) throw new xpath.EvaluationException("Incorrect parameter count");
	return new xpath.value.XPathNumber(context.size);
};
xpath.library.NodeSetLibrary.position = function(context,parameters) {
	if(parameters.length > 0) throw new xpath.EvaluationException("Incorrect parameter count");
	return new xpath.value.XPathNumber(context.position);
};
xpath.library.NodeSetLibrary.count = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	if(!js.Boot.__instanceof(parameters[0],xpath.value.XPathNodeSet)) throw new xpath.EvaluationException("Parameter was a " + parameters[0].typeName + ", but a node set was expected");
	var nodeSet;
	nodeSet = js.Boot.__cast(parameters[0] , xpath.value.XPathNodeSet);
	var count = 0;
	var $it0 = $iterator(nodeSet.getNodes())();
	while( $it0.hasNext() ) {
		var node = $it0.next();
		++count;
	}
	return new xpath.value.XPathNumber(count);
};
xpath.library.NodeSetLibrary.localName = function(context,parameters) {
	if(parameters.length > 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var node;
	if(parameters[0] == null) node = context.node; else {
		if(!js.Boot.__instanceof(parameters[0],xpath.value.XPathNodeSet)) throw new xpath.EvaluationException("Parameter was a " + parameters[0].typeName + ", but a node set was expected");
		try {
			node = (js.Boot.__cast(parameters[0] , xpath.value.XPathNodeSet)).getFirstNodeDocumentOrder();
		} catch( exception ) {
			if( js.Boot.__instanceof(exception,xpath.EvaluationException) ) {
				throw new xpath.EvaluationException("Called local-name on an empty node set");
			} else throw(exception);
		}
	}
	return new xpath.value.XPathString(node.getName());
};
xpath.library.NodeSetLibrary.nodeName = function(context,parameters) {
	return xpath.library.NodeSetLibrary.localName(context,parameters);
};
xpath.library.NumberLibrary = function() { };
$hxClasses["xpath.library.NumberLibrary"] = xpath.library.NumberLibrary;
xpath.library.NumberLibrary.__name__ = ["xpath","library","NumberLibrary"];
xpath.library.NumberLibrary.number = function(context,parameters) {
	if(parameters.length > 1) throw new xpath.EvaluationException("Incorrect parameter count");
	if(parameters[0] == null) return new xpath.value.XPathNumber(Std.parseFloat(context.node.getStringValue())); else return parameters[0].getXPathNumber();
};
xpath.library.NumberLibrary.sum = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	if(!js.Boot.__instanceof(parameters[0],xpath.value.XPathNodeSet)) throw new xpath.EvaluationException("Parameter was a " + parameters[0].typeName + ", but a node set was expected");
	var result = 0.0;
	var nodes = (js.Boot.__cast(parameters[0] , xpath.value.XPathNodeSet)).getNodes();
	var $it0 = $iterator(nodes)();
	while( $it0.hasNext() ) {
		var node = $it0.next();
		result += Std.parseFloat(node.getStringValue());
	}
	return new xpath.value.XPathNumber(result);
};
xpath.library.NumberLibrary.floor = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var number = parameters[0].getFloat();
	return new xpath.value.XPathNumber(Math.floor(number));
};
xpath.library.NumberLibrary.ceiling = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var number = parameters[0].getFloat();
	return new xpath.value.XPathNumber(Math.ceil(number));
};
xpath.library.NumberLibrary.round = function(context,parameters) {
	if(parameters.length != 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var number = parameters[0].getFloat();
	return new xpath.value.XPathNumber(Math.round(number));
};
xpath.library.StringLibrary = function() { };
$hxClasses["xpath.library.StringLibrary"] = xpath.library.StringLibrary;
xpath.library.StringLibrary.__name__ = ["xpath","library","StringLibrary"];
xpath.library.StringLibrary.string = function(context,parameters) {
	if(parameters.length > 1) throw new xpath.EvaluationException("Incorrect parameter count");
	if(parameters[0] == null) return new xpath.value.XPathString(context.node.getStringValue()); else return parameters[0].getXPathString();
};
xpath.library.StringLibrary.concat = function(context,parameters) {
	if(parameters.length < 2) throw new xpath.EvaluationException("Incorrect parameter count");
	var result = "";
	var _g = 0;
	while(_g < parameters.length) {
		var parameter = parameters[_g];
		++_g;
		result += parameter.getString();
	}
	return new xpath.value.XPathString(result);
};
xpath.library.StringLibrary.startsWith = function(context,parameters) {
	if(parameters.length != 2) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var substring = parameters[1].getString();
	return new xpath.value.XPathBoolean(HxOverrides.substr(string,0,substring.length) == substring);
};
xpath.library.StringLibrary.contains = function(context,parameters) {
	if(parameters.length != 2) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var substring = parameters[1].getString();
	return new xpath.value.XPathBoolean(string.indexOf(substring) >= 0);
};
xpath.library.StringLibrary.substringBefore = function(context,parameters) {
	if(parameters.length != 2) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var substring = parameters[1].getString();
	var i = string.indexOf(substring);
	if(i < 0) return new xpath.value.XPathString(""); else return new xpath.value.XPathString(HxOverrides.substr(string,0,i));
};
xpath.library.StringLibrary.substringAfter = function(context,parameters) {
	if(parameters.length != 2) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var substring = parameters[1].getString();
	var i = string.indexOf(substring) + substring.length;
	return new xpath.value.XPathString(HxOverrides.substr(string,i,null));
};
xpath.library.StringLibrary.substring = function(context,parameters) {
	if(parameters.length < 2 || parameters.length > 3) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var startFloat = parameters[1].getFloat();
	var start = Math.round(startFloat);
	if(parameters[2] == null) {
		if(Math.isNaN(start)) return new xpath.value.XPathString(""); else if(start < 1) return new xpath.value.XPathString(string); else return new xpath.value.XPathString(HxOverrides.substr(string,start - 1,null));
	} else {
		var lengthFloat = parameters[2].getFloat();
		var length = Math.round(lengthFloat);
		if(Math.isNaN(startFloat + lengthFloat)) return new xpath.value.XPathString("");
		if(!Math.isFinite(startFloat)) return new xpath.value.XPathString("");
		if(Math.isFinite(lengthFloat)) {
			if(start < 1) {
				length += start - 1;
				start = 1;
			}
			return new xpath.value.XPathString(HxOverrides.substr(string,start - 1,length));
		} else if(lengthFloat > 0) return new xpath.value.XPathString(HxOverrides.substr(string,start - 1,null)); else return new xpath.value.XPathString("");
	}
};
xpath.library.StringLibrary.stringLength = function(context,parameters) {
	if(parameters.length > 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var string;
	if(parameters[0] == null) string = context.node.getStringValue(); else string = parameters[0].getString();
	return new xpath.value.XPathNumber(string.length);
};
xpath.library.StringLibrary.normalizeSpace = function(context,parameters) {
	if(parameters.length > 1) throw new xpath.EvaluationException("Incorrect parameter count");
	var string;
	if(parameters[0] == null) string = context.node.getStringValue(); else string = parameters[0].getString();
	var buf = new StringBuf();
	var doneSpace = true;
	var _g1 = 0;
	var _g = string.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c = string.charAt(i);
		if(c == " " || c == "\t" || c == "\n" || c == "\r") {
			if(!doneSpace) {
				buf.b += " ";
				doneSpace = true;
			}
		} else {
			doneSpace = false;
			if(c == null) buf.b += "null"; else buf.b += "" + c;
		}
	}
	return new xpath.value.XPathString(StringTools.rtrim(buf.b));
};
xpath.library.StringLibrary.translate = function(context,parameters) {
	if(parameters.length != 3) throw new xpath.EvaluationException("Incorrect parameter count");
	var string = parameters[0].getString();
	var fromChars = parameters[1].getString();
	var toChars = parameters[2].getString();
	var translations = new haxe.ds.StringMap();
	var i = fromChars.length;
	while(i > 0) {
		--i;
		var key = fromChars.charAt(i);
		var value = toChars.charAt(i);
		translations.set(key,value);
	}
	var buf = new StringBuf();
	var _g1 = 0;
	var _g = string.length;
	while(_g1 < _g) {
		var i1 = _g1++;
		var c = string.charAt(i1);
		if(translations.exists(c)) buf.add(translations.get(c)); else if(c == null) buf.b += "null"; else buf.b += "" + c;
	}
	return new xpath.value.XPathString(buf.b);
};
xpath.parser = {};
xpath.parser.Parser = function() { };
$hxClasses["xpath.parser.Parser"] = xpath.parser.Parser;
xpath.parser.Parser.__name__ = ["xpath","parser","Parser"];
xpath.parser.Parser.prototype = {
	__class__: xpath.parser.Parser
};
xpath.parser.ExpressionParser = function() {
};
$hxClasses["xpath.parser.ExpressionParser"] = xpath.parser.ExpressionParser;
xpath.parser.ExpressionParser.__name__ = ["xpath","parser","ExpressionParser"];
xpath.parser.ExpressionParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.ExpressionParser.getInstance = function() {
	if(xpath.parser.ExpressionParser.instance == null) xpath.parser.ExpressionParser.instance = new xpath.parser.ExpressionParser();
	return xpath.parser.ExpressionParser.instance;
};
xpath.parser.ExpressionParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.BeginExpressionToken)) return null;
		var results = new List();
		var operatorStack = new List();
		var precedenceStack = new List();
		var output = xpath.parser.OperandParser.getInstance().parse(input.descend());
		if(output == null) throw new xpath.parser.ParseError("Invalid token stream");
		results.push(output.result);
		input = output.getNextInput();
		var hasNext = input.hasNext();
		if(hasNext) token = input.next();
		while(hasNext && js.Boot.__instanceof(token,xpath.tokenizer.OperatorToken)) {
			var newOperatorToken;
			newOperatorToken = js.Boot.__cast(token , xpath.tokenizer.OperatorToken);
			var newOperator = newOperatorToken.operator;
			var newPrecedence = newOperatorToken.getPrecedence();
			output = xpath.parser.OperandParser.getInstance().parse(input.descend());
			if(output == null) throw new xpath.parser.ParseError("Invalid token stream");
			input = output.getNextInput();
			var newOperand = output.result;
			while(!precedenceStack.isEmpty() && newPrecedence <= precedenceStack.first()) {
				precedenceStack.pop();
				var rightOperand = results.pop();
				var leftOperand = results.pop();
				var operator = operatorStack.pop();
				results.push(new xpath.expression.Operation(leftOperand,operator,rightOperand));
			}
			results.push(newOperand);
			operatorStack.push(newOperator);
			precedenceStack.push(newPrecedence);
			hasNext = input.hasNext();
			if(hasNext) token = input.next();
		}
		precedenceStack = null;
		if(!hasNext || !js.Boot.__instanceof(token,xpath.tokenizer.EndExpressionToken)) throw new xpath.parser.ParseError("Invalid token stream");
		while(!operatorStack.isEmpty()) {
			var rightOperand1 = results.pop();
			var leftOperand1 = results.pop();
			var operator1 = operatorStack.pop();
			results.push(new xpath.expression.Operation(leftOperand1,operator1,rightOperand1));
		}
		operatorStack = null;
		output = input.getOutput(input.count,results.pop());
		if(!results.isEmpty()) throw new xpath.parser.ParseError("Invalid token stream");
		return output;
	}
	,__class__: xpath.parser.ExpressionParser
};
xpath.parser.FunctionCallParser = function() {
};
$hxClasses["xpath.parser.FunctionCallParser"] = xpath.parser.FunctionCallParser;
xpath.parser.FunctionCallParser.__name__ = ["xpath","parser","FunctionCallParser"];
xpath.parser.FunctionCallParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.FunctionCallParser.getInstance = function() {
	if(xpath.parser.FunctionCallParser.instance == null) xpath.parser.FunctionCallParser.instance = new xpath.parser.FunctionCallParser();
	return xpath.parser.FunctionCallParser.instance;
};
xpath.parser.FunctionCallParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.BeginFunctionCallToken)) return null;
		var beginFunctionCallToken;
		beginFunctionCallToken = js.Boot.__cast(token , xpath.tokenizer.BeginFunctionCallToken);
		var name = beginFunctionCallToken.name;
		var $arguments = new List();
		var output = xpath.parser.ExpressionParser.getInstance().parse(input.descend());
		var hasNext;
		if(output != null) {
			$arguments.add(output.result);
			input = output.getNextInput();
			hasNext = input.hasNext();
			if(hasNext) token = input.next();
			while(hasNext && js.Boot.__instanceof(token,xpath.tokenizer.ArgumentDelimiterToken)) {
				output = xpath.parser.ExpressionParser.getInstance().parse(input.descend());
				$arguments.add(output.result);
				input = output.getNextInput();
				hasNext = input.hasNext();
				if(hasNext) token = input.next();
			}
			if(!hasNext) input.back();
		}
		if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.EndFunctionCallToken)) throw new xpath.parser.ParseError("Invalid token stream");
		var result = new xpath.expression.FunctionCall(name,$arguments);
		return input.getOutput(input.count,result);
	}
	,__class__: xpath.parser.FunctionCallParser
};
xpath.parser.GroupParser = function() {
};
$hxClasses["xpath.parser.GroupParser"] = xpath.parser.GroupParser;
xpath.parser.GroupParser.__name__ = ["xpath","parser","GroupParser"];
xpath.parser.GroupParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.GroupParser.getInstance = function() {
	if(xpath.parser.GroupParser.instance == null) xpath.parser.GroupParser.instance = new xpath.parser.GroupParser();
	return xpath.parser.GroupParser.instance;
};
xpath.parser.GroupParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.BeginGroupToken)) return null;
		var output = xpath.parser.ExpressionParser.getInstance().parse(input.descend());
		if(output.result == null) throw new xpath.parser.ParseError("Invalid token stream");
		input = output.getNextInput();
		if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		if(!Std["is"](input.next(),xpath.tokenizer.EndGroupToken)) throw new xpath.parser.ParseError("Invalid token stream");
		var result = output.result;
		return input.getOutput(input.count,result);
	}
	,__class__: xpath.parser.GroupParser
};
xpath.parser.NextStepParser = function() {
};
$hxClasses["xpath.parser.NextStepParser"] = xpath.parser.NextStepParser;
xpath.parser.NextStepParser.__name__ = ["xpath","parser","NextStepParser"];
xpath.parser.NextStepParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.NextStepParser.getInstance = function() {
	if(xpath.parser.NextStepParser.instance == null) xpath.parser.NextStepParser.instance = new xpath.parser.NextStepParser();
	return xpath.parser.NextStepParser.instance;
};
xpath.parser.NextStepParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(js.Boot.__instanceof(token,xpath.tokenizer.StepDelimiterToken)) {
			var output = xpath.parser.StepParser.getInstance().parse(input.descend());
			if(output == null) return input.getOutput(input.count,null); else return output;
		} else if(js.Boot.__instanceof(token,xpath.tokenizer.BeginPredicateToken)) {
			var output1 = xpath.parser.ExpressionParser.getInstance().parse(input.descend());
			if(output1 == null) throw new xpath.parser.ParseError("Invalid token stream");
			var predicateExpression = output1.result;
			input = output1.getNextInput();
			if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
			token = input.next();
			if(!js.Boot.__instanceof(token,xpath.tokenizer.EndPredicateToken)) throw new xpath.parser.ParseError("Invalid token stream");
			var nextStep;
			output1 = this.parse(input.descend());
			if(output1 == null) nextStep = null; else {
				nextStep = js.Boot.__cast(output1.result , xpath.expression.PathStep);
				input = output1.getNextInput();
			}
			var result = new xpath.expression.PredicateStep(predicateExpression,nextStep);
			return input.getOutput(input.count,result);
		} else return null;
	}
	,__class__: xpath.parser.NextStepParser
};
xpath.parser.OperandParser = function() {
};
$hxClasses["xpath.parser.OperandParser"] = xpath.parser.OperandParser;
xpath.parser.OperandParser.__name__ = ["xpath","parser","OperandParser"];
xpath.parser.OperandParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.OperandParser.getInstance = function() {
	if(xpath.parser.OperandParser.instance == null) xpath.parser.OperandParser.instance = new xpath.parser.OperandParser();
	return xpath.parser.OperandParser.instance;
};
xpath.parser.OperandParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(js.Boot.__instanceof(token,xpath.tokenizer.NegationOperatorToken)) {
			var output = this.parse(input);
			input = output.getNextInput();
			var result = new xpath.expression.Negation(output.result);
			return input.getOutput(input.count,result);
		} else if(js.Boot.__instanceof(token,xpath.tokenizer.LiteralToken)) {
			var result1 = new xpath.expression.Literal((js.Boot.__cast(token , xpath.tokenizer.LiteralToken)).value);
			return input.getOutput(input.count,result1);
		} else if(js.Boot.__instanceof(token,xpath.tokenizer.NumberToken)) {
			var result2 = new xpath.expression.Number((js.Boot.__cast(token , xpath.tokenizer.NumberToken)).value);
			return input.getOutput(input.count,result2);
		} else if(js.Boot.__instanceof(token,xpath.tokenizer.VariableReferenceToken)) {
			var result3 = new xpath.expression.VariableReference((js.Boot.__cast(token , xpath.tokenizer.VariableReferenceToken)).name);
			return input.getOutput(input.count,result3);
		} else {
			input.restart();
			var output1 = xpath.parser.PathParser.getInstance().parse(input.descend());
			if(output1 == null) output1 = xpath.parser.GroupParser.getInstance().parse(input.descend());
			if(output1 == null) output1 = xpath.parser.FunctionCallParser.getInstance().parse(input.descend());
			return output1;
		}
	}
	,__class__: xpath.parser.OperandParser
};
xpath.parser.ParseError = function(message) {
	xpath.XPathError.call(this,message);
};
$hxClasses["xpath.parser.ParseError"] = xpath.parser.ParseError;
xpath.parser.ParseError.__name__ = ["xpath","parser","ParseError"];
xpath.parser.ParseError.__super__ = xpath.XPathError;
xpath.parser.ParseError.prototype = $extend(xpath.XPathError.prototype,{
	toString: function() {
		if(this.message != null) return this.message; else return "ParseError";
	}
	,__class__: xpath.parser.ParseError
});
xpath.parser.ParserInput = function(tokens) {
	this.tokens = tokens;
	this.count = 0;
};
$hxClasses["xpath.parser.ParserInput"] = xpath.parser.ParserInput;
xpath.parser.ParserInput.__name__ = ["xpath","parser","ParserInput"];
xpath.parser.ParserInput.prototype = {
	hasNext: function() {
		return this.count < this.tokens.length;
	}
	,next: function() {
		return this.tokens[this.count++];
	}
	,back: function() {
		if(this.count > 0) --this.count; else throw new xpath.parser.ParseError();
	}
	,restart: function() {
		this.count = 0;
	}
	,descend: function() {
		return new xpath.parser.ParserInput(this.tokens.slice(this.count));
	}
	,getOutput: function(count,result) {
		var nextTokens = this.tokens.slice(count);
		if(nextTokens.length > 0) {
			var getNextInput = function() {
				return new xpath.parser.ParserInput(nextTokens);
			};
			return new xpath.parser.ParserOutput(result,getNextInput);
		} else return new xpath.parser.ParserOutput(result);
	}
	,__class__: xpath.parser.ParserInput
};
xpath.parser.ParserOutput = function(result2,getNextInputCallback) {
	this.result = result2;
	this.getNextInputCallback = getNextInputCallback;
};
$hxClasses["xpath.parser.ParserOutput"] = xpath.parser.ParserOutput;
xpath.parser.ParserOutput.__name__ = ["xpath","parser","ParserOutput"];
xpath.parser.ParserOutput.prototype = {
	isComplete: function() {
		return this.getNextInputCallback == null;
	}
	,getNextInput: function() {
		if(this.getNextInputCallback != null) return this.getNextInputCallback(); else throw new xpath.parser.ParseError("Unexpected end of query");
	}
	,__class__: xpath.parser.ParserOutput
};
xpath.parser.PathParser = function() {
};
$hxClasses["xpath.parser.PathParser"] = xpath.parser.PathParser;
xpath.parser.PathParser.__name__ = ["xpath","parser","PathParser"];
xpath.parser.PathParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.PathParser.getInstance = function() {
	if(xpath.parser.PathParser.instance == null) xpath.parser.PathParser.instance = new xpath.parser.PathParser();
	return xpath.parser.PathParser.instance;
};
xpath.parser.PathParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.BeginPathToken)) return null;
		if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		token = input.next();
		var absolute = js.Boot.__instanceof(token,xpath.tokenizer.StepDelimiterToken);
		if(!absolute) input.back();
		var firstStep;
		var output = xpath.parser.StepParser.getInstance().parse(input.descend());
		if(absolute && output == null) firstStep = null; else if(output.result == null) {
			if(absolute) firstStep = null; else firstStep = new xpath.expression.TypeStep(xpath.NodeCategory.Node);
			input = output.getNextInput();
		} else {
			firstStep = js.Boot.__cast(output.result , xpath.expression.PathStep);
			input = output.getNextInput();
		}
		if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.EndPathToken)) throw new xpath.parser.ParseError("Invalid token stream");
		var result;
		if(absolute) result = new xpath.expression.RootStep(firstStep); else result = firstStep;
		return input.getOutput(input.count,result);
	}
	,__class__: xpath.parser.PathParser
};
xpath.parser.StepParser = function() {
};
$hxClasses["xpath.parser.StepParser"] = xpath.parser.StepParser;
xpath.parser.StepParser.__name__ = ["xpath","parser","StepParser"];
xpath.parser.StepParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.StepParser.getInstance = function() {
	if(xpath.parser.StepParser.instance == null) xpath.parser.StepParser.instance = new xpath.parser.StepParser();
	return xpath.parser.StepParser.instance;
};
xpath.parser.StepParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(js.Boot.__instanceof(token,xpath.tokenizer.AxisToken)) {
			var axis = (js.Boot.__cast(token , xpath.tokenizer.AxisToken)).axis;
			if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
			var nodeTestToken = input.next();
			if(!(js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.NameTestToken) || js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.TypeTestToken) || js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.PINameTestToken))) throw new xpath.parser.ParseError("Invalid token stream");
			var nextStep;
			var output = xpath.parser.NextStepParser.getInstance().parse(input.descend());
			if(output == null) nextStep = null; else {
				nextStep = js.Boot.__cast(output.result , xpath.expression.PathStep);
				input = output.getNextInput();
			}
			var nodeTest;
			if(js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.NameTestToken)) {
				var name = (js.Boot.__cast(nodeTestToken , xpath.tokenizer.NameTestToken)).name;
				nodeTest = new xpath.expression.NameStep(name,nextStep);
			} else if(js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.TypeTestToken)) {
				var type = (js.Boot.__cast(nodeTestToken , xpath.tokenizer.TypeTestToken)).type;
				if(type == xpath.NodeCategory.Node) nodeTest = nextStep; else nodeTest = new xpath.expression.TypeStep(type,nextStep);
			} else if(js.Boot.__instanceof(nodeTestToken,xpath.tokenizer.PINameTestToken)) {
				var name1 = (js.Boot.__cast(nodeTestToken , xpath.tokenizer.PINameTestToken)).name;
				nodeTest = new xpath.expression.PINameStep(name1,nextStep);
			} else throw new xpath.parser.ParseError("Invalid token stream");
			var result;
			if(axis == xpath.Axis.Self) result = nodeTest; else result = new xpath.expression.AxisStep(axis,nodeTest);
			return input.getOutput(input.count,result);
		} else {
			input.restart();
			var output1 = xpath.parser.ExpressionParser.getInstance().parse(input);
			if(output1 == null) return null;
			var filterExpression = output1.result;
			input = output1.getNextInput();
			output1 = xpath.parser.NextStepParser.getInstance().parse(input.descend());
			var nextStep1;
			if(output1 == null) nextStep1 = null; else {
				nextStep1 = js.Boot.__cast(output1.result , xpath.expression.PathStep);
				input = output1.getNextInput();
			}
			var result1 = new xpath.expression.FilterStep(filterExpression,nextStep1);
			return input.getOutput(input.count,result1);
		}
		return null;
	}
	,__class__: xpath.parser.StepParser
};
xpath.parser.XPathParser = function() {
};
$hxClasses["xpath.parser.XPathParser"] = xpath.parser.XPathParser;
xpath.parser.XPathParser.__name__ = ["xpath","parser","XPathParser"];
xpath.parser.XPathParser.__interfaces__ = [xpath.parser.Parser];
xpath.parser.XPathParser.getInstance = function() {
	if(xpath.parser.XPathParser.instance == null) xpath.parser.XPathParser.instance = new xpath.parser.XPathParser();
	return xpath.parser.XPathParser.instance;
};
xpath.parser.XPathParser.prototype = {
	parse: function(input) {
		if(!input.hasNext()) return null;
		var token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.BeginXPathToken)) return null;
		var output = xpath.parser.ExpressionParser.getInstance().parse(input.descend());
		if(output == null) throw new xpath.parser.ParseError("Invalid token stream");
		var result = output.result;
		input = output.getNextInput();
		if(!input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		token = input.next();
		if(!js.Boot.__instanceof(token,xpath.tokenizer.EndXPathToken)) throw new xpath.parser.ParseError("Invalid token stream");
		if(input.hasNext()) throw new xpath.parser.ParseError("Invalid token stream");
		return input.getOutput(input.count,result);
	}
	,__class__: xpath.parser.XPathParser
};
xpath.tokenizer = {};
xpath.tokenizer.TokenizerException = function(position,message) {
	xpath.XPathException.call(this,message);
	this.position = position;
};
$hxClasses["xpath.tokenizer.TokenizerException"] = xpath.tokenizer.TokenizerException;
xpath.tokenizer.TokenizerException.__name__ = ["xpath","tokenizer","TokenizerException"];
xpath.tokenizer.TokenizerException.__super__ = xpath.XPathException;
xpath.tokenizer.TokenizerException.prototype = $extend(xpath.XPathException.prototype,{
	toString: function() {
		var string = "";
		if(this.position != null) string = "character " + Std.string(this.position) + ": ";
		if(this.message != null && this.message != "") string += this.message; else string += "TokenizerException";
		return string;
	}
	,__class__: xpath.tokenizer.TokenizerException
});
xpath.tokenizer.ExpectedException = function(expectedTokens) {
	var array = Lambda.array(expectedTokens);
	if(array.length > 0) {
		haxe.ds.ArraySort.sort(array,function(token1,token2) {
			return token1.position - token2.position;
		});
		var expectedToken = array.shift();
		var position = expectedToken.position;
		var message = "Expected " + expectedToken.tokenName;
		var _g = 0;
		while(_g < array.length) {
			var expectedToken1 = array[_g];
			++_g;
			message += ", or " + expectedToken1.tokenName;
			if(expectedToken1.position > position) {
				message += " at character ";
				if(expectedToken1.position == null) message += "null"; else message += "" + expectedToken1.position;
			}
		}
		xpath.tokenizer.TokenizerException.call(this,position,message);
	} else throw new xpath.tokenizer.TokenizerError("Attempted to create an ExpectedException with an empty expected tokens list");
	this.expectedTokens = expectedTokens;
};
$hxClasses["xpath.tokenizer.ExpectedException"] = xpath.tokenizer.ExpectedException;
xpath.tokenizer.ExpectedException.__name__ = ["xpath","tokenizer","ExpectedException"];
xpath.tokenizer.ExpectedException.__super__ = xpath.tokenizer.TokenizerException;
xpath.tokenizer.ExpectedException.prototype = $extend(xpath.tokenizer.TokenizerException.prototype,{
	__class__: xpath.tokenizer.ExpectedException
});
xpath.tokenizer.Token = function() { };
$hxClasses["xpath.tokenizer.Token"] = xpath.tokenizer.Token;
xpath.tokenizer.Token.__name__ = ["xpath","tokenizer","Token"];
xpath.tokenizer.ArgumentDelimiterToken = function() {
};
$hxClasses["xpath.tokenizer.ArgumentDelimiterToken"] = xpath.tokenizer.ArgumentDelimiterToken;
xpath.tokenizer.ArgumentDelimiterToken.__name__ = ["xpath","tokenizer","ArgumentDelimiterToken"];
xpath.tokenizer.ArgumentDelimiterToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.ArgumentDelimiterToken.prototype = {
	__class__: xpath.tokenizer.ArgumentDelimiterToken
};
xpath.tokenizer.AxisToken = function(axis) {
	this.axis = axis;
};
$hxClasses["xpath.tokenizer.AxisToken"] = xpath.tokenizer.AxisToken;
xpath.tokenizer.AxisToken.__name__ = ["xpath","tokenizer","AxisToken"];
xpath.tokenizer.AxisToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.AxisToken.prototype = {
	__class__: xpath.tokenizer.AxisToken
};
xpath.tokenizer.BeginExpressionToken = function() {
};
$hxClasses["xpath.tokenizer.BeginExpressionToken"] = xpath.tokenizer.BeginExpressionToken;
xpath.tokenizer.BeginExpressionToken.__name__ = ["xpath","tokenizer","BeginExpressionToken"];
xpath.tokenizer.BeginExpressionToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginExpressionToken.prototype = {
	__class__: xpath.tokenizer.BeginExpressionToken
};
xpath.tokenizer.BeginFunctionCallToken = function(name) {
	this.name = name;
};
$hxClasses["xpath.tokenizer.BeginFunctionCallToken"] = xpath.tokenizer.BeginFunctionCallToken;
xpath.tokenizer.BeginFunctionCallToken.__name__ = ["xpath","tokenizer","BeginFunctionCallToken"];
xpath.tokenizer.BeginFunctionCallToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginFunctionCallToken.prototype = {
	__class__: xpath.tokenizer.BeginFunctionCallToken
};
xpath.tokenizer.BeginGroupToken = function() {
};
$hxClasses["xpath.tokenizer.BeginGroupToken"] = xpath.tokenizer.BeginGroupToken;
xpath.tokenizer.BeginGroupToken.__name__ = ["xpath","tokenizer","BeginGroupToken"];
xpath.tokenizer.BeginGroupToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginGroupToken.prototype = {
	__class__: xpath.tokenizer.BeginGroupToken
};
xpath.tokenizer.BeginPathToken = function() {
};
$hxClasses["xpath.tokenizer.BeginPathToken"] = xpath.tokenizer.BeginPathToken;
xpath.tokenizer.BeginPathToken.__name__ = ["xpath","tokenizer","BeginPathToken"];
xpath.tokenizer.BeginPathToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginPathToken.prototype = {
	__class__: xpath.tokenizer.BeginPathToken
};
xpath.tokenizer.BeginPredicateToken = function() {
};
$hxClasses["xpath.tokenizer.BeginPredicateToken"] = xpath.tokenizer.BeginPredicateToken;
xpath.tokenizer.BeginPredicateToken.__name__ = ["xpath","tokenizer","BeginPredicateToken"];
xpath.tokenizer.BeginPredicateToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginPredicateToken.prototype = {
	__class__: xpath.tokenizer.BeginPredicateToken
};
xpath.tokenizer.BeginXPathToken = function() {
};
$hxClasses["xpath.tokenizer.BeginXPathToken"] = xpath.tokenizer.BeginXPathToken;
xpath.tokenizer.BeginXPathToken.__name__ = ["xpath","tokenizer","BeginXPathToken"];
xpath.tokenizer.BeginXPathToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.BeginXPathToken.prototype = {
	__class__: xpath.tokenizer.BeginXPathToken
};
xpath.tokenizer.EndExpressionToken = function() {
};
$hxClasses["xpath.tokenizer.EndExpressionToken"] = xpath.tokenizer.EndExpressionToken;
xpath.tokenizer.EndExpressionToken.__name__ = ["xpath","tokenizer","EndExpressionToken"];
xpath.tokenizer.EndExpressionToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndExpressionToken.prototype = {
	__class__: xpath.tokenizer.EndExpressionToken
};
xpath.tokenizer.EndFunctionCallToken = function() {
};
$hxClasses["xpath.tokenizer.EndFunctionCallToken"] = xpath.tokenizer.EndFunctionCallToken;
xpath.tokenizer.EndFunctionCallToken.__name__ = ["xpath","tokenizer","EndFunctionCallToken"];
xpath.tokenizer.EndFunctionCallToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndFunctionCallToken.prototype = {
	__class__: xpath.tokenizer.EndFunctionCallToken
};
xpath.tokenizer.EndGroupToken = function() {
};
$hxClasses["xpath.tokenizer.EndGroupToken"] = xpath.tokenizer.EndGroupToken;
xpath.tokenizer.EndGroupToken.__name__ = ["xpath","tokenizer","EndGroupToken"];
xpath.tokenizer.EndGroupToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndGroupToken.prototype = {
	__class__: xpath.tokenizer.EndGroupToken
};
xpath.tokenizer.EndPathToken = function() {
};
$hxClasses["xpath.tokenizer.EndPathToken"] = xpath.tokenizer.EndPathToken;
xpath.tokenizer.EndPathToken.__name__ = ["xpath","tokenizer","EndPathToken"];
xpath.tokenizer.EndPathToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndPathToken.prototype = {
	__class__: xpath.tokenizer.EndPathToken
};
xpath.tokenizer.EndPredicateToken = function() {
};
$hxClasses["xpath.tokenizer.EndPredicateToken"] = xpath.tokenizer.EndPredicateToken;
xpath.tokenizer.EndPredicateToken.__name__ = ["xpath","tokenizer","EndPredicateToken"];
xpath.tokenizer.EndPredicateToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndPredicateToken.prototype = {
	__class__: xpath.tokenizer.EndPredicateToken
};
xpath.tokenizer.EndXPathToken = function() {
};
$hxClasses["xpath.tokenizer.EndXPathToken"] = xpath.tokenizer.EndXPathToken;
xpath.tokenizer.EndXPathToken.__name__ = ["xpath","tokenizer","EndXPathToken"];
xpath.tokenizer.EndXPathToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.EndXPathToken.prototype = {
	__class__: xpath.tokenizer.EndXPathToken
};
xpath.tokenizer.LiteralToken = function(value) {
	this.value = value;
};
$hxClasses["xpath.tokenizer.LiteralToken"] = xpath.tokenizer.LiteralToken;
xpath.tokenizer.LiteralToken.__name__ = ["xpath","tokenizer","LiteralToken"];
xpath.tokenizer.LiteralToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.LiteralToken.prototype = {
	__class__: xpath.tokenizer.LiteralToken
};
xpath.tokenizer.NameTestToken = function(name) {
	this.name = name;
};
$hxClasses["xpath.tokenizer.NameTestToken"] = xpath.tokenizer.NameTestToken;
xpath.tokenizer.NameTestToken.__name__ = ["xpath","tokenizer","NameTestToken"];
xpath.tokenizer.NameTestToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.NameTestToken.prototype = {
	__class__: xpath.tokenizer.NameTestToken
};
xpath.tokenizer.NegationOperatorToken = function() {
};
$hxClasses["xpath.tokenizer.NegationOperatorToken"] = xpath.tokenizer.NegationOperatorToken;
xpath.tokenizer.NegationOperatorToken.__name__ = ["xpath","tokenizer","NegationOperatorToken"];
xpath.tokenizer.NegationOperatorToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.NegationOperatorToken.prototype = {
	__class__: xpath.tokenizer.NegationOperatorToken
};
xpath.tokenizer.NumberToken = function(value) {
	this.value = value;
};
$hxClasses["xpath.tokenizer.NumberToken"] = xpath.tokenizer.NumberToken;
xpath.tokenizer.NumberToken.__name__ = ["xpath","tokenizer","NumberToken"];
xpath.tokenizer.NumberToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.NumberToken.prototype = {
	__class__: xpath.tokenizer.NumberToken
};
xpath.tokenizer.OperatorToken = function(operator) {
	this.operator = operator;
};
$hxClasses["xpath.tokenizer.OperatorToken"] = xpath.tokenizer.OperatorToken;
xpath.tokenizer.OperatorToken.__name__ = ["xpath","tokenizer","OperatorToken"];
xpath.tokenizer.OperatorToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.OperatorToken.prototype = {
	getPrecedence: function() {
		var _g = this.operator;
		switch(_g[1]) {
		case 1:
			return 0;
		case 0:
			return 1;
		case 7:
			return 2;
		case 8:
			return 2;
		case 10:
			return 3;
		case 9:
			return 3;
		case 12:
			return 3;
		case 11:
			return 3;
		case 5:
			return 4;
		case 6:
			return 4;
		case 13:
			return 5;
		case 3:
			return 5;
		case 2:
			return 5;
		case 4:
			return 6;
		}
	}
	,__class__: xpath.tokenizer.OperatorToken
};
xpath.tokenizer.PINameTestToken = function(name) {
	this.name = name;
};
$hxClasses["xpath.tokenizer.PINameTestToken"] = xpath.tokenizer.PINameTestToken;
xpath.tokenizer.PINameTestToken.__name__ = ["xpath","tokenizer","PINameTestToken"];
xpath.tokenizer.PINameTestToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.PINameTestToken.prototype = {
	__class__: xpath.tokenizer.PINameTestToken
};
xpath.tokenizer.StepDelimiterToken = function() {
};
$hxClasses["xpath.tokenizer.StepDelimiterToken"] = xpath.tokenizer.StepDelimiterToken;
xpath.tokenizer.StepDelimiterToken.__name__ = ["xpath","tokenizer","StepDelimiterToken"];
xpath.tokenizer.StepDelimiterToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.StepDelimiterToken.prototype = {
	__class__: xpath.tokenizer.StepDelimiterToken
};
xpath.tokenizer.TypeTestToken = function(type) {
	this.type = type;
};
$hxClasses["xpath.tokenizer.TypeTestToken"] = xpath.tokenizer.TypeTestToken;
xpath.tokenizer.TypeTestToken.__name__ = ["xpath","tokenizer","TypeTestToken"];
xpath.tokenizer.TypeTestToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.TypeTestToken.prototype = {
	__class__: xpath.tokenizer.TypeTestToken
};
xpath.tokenizer.VariableReferenceToken = function(name) {
	this.name = name;
};
$hxClasses["xpath.tokenizer.VariableReferenceToken"] = xpath.tokenizer.VariableReferenceToken;
xpath.tokenizer.VariableReferenceToken.__name__ = ["xpath","tokenizer","VariableReferenceToken"];
xpath.tokenizer.VariableReferenceToken.__interfaces__ = [xpath.tokenizer.Token];
xpath.tokenizer.VariableReferenceToken.prototype = {
	__class__: xpath.tokenizer.VariableReferenceToken
};
xpath.tokenizer.Tokenizer = function() { };
$hxClasses["xpath.tokenizer.Tokenizer"] = xpath.tokenizer.Tokenizer;
xpath.tokenizer.Tokenizer.__name__ = ["xpath","tokenizer","Tokenizer"];
xpath.tokenizer.Tokenizer.prototype = {
	__class__: xpath.tokenizer.Tokenizer
};
xpath.tokenizer.TokenizerError = function(message) {
	xpath.XPathError.call(this,message);
};
$hxClasses["xpath.tokenizer.TokenizerError"] = xpath.tokenizer.TokenizerError;
xpath.tokenizer.TokenizerError.__name__ = ["xpath","tokenizer","TokenizerError"];
xpath.tokenizer.TokenizerError.__super__ = xpath.XPathError;
xpath.tokenizer.TokenizerError.prototype = $extend(xpath.XPathError.prototype,{
	toString: function() {
		var string = "TokenizerError";
		if(this.message != null) string += ": " + this.message;
		return string;
	}
	,__class__: xpath.tokenizer.TokenizerError
});
xpath.tokenizer.TokenizerInput = function(query,position) {
	if(position == null) position = 0;
	this.query = query;
	this.position = position;
};
$hxClasses["xpath.tokenizer.TokenizerInput"] = xpath.tokenizer.TokenizerInput;
xpath.tokenizer.TokenizerInput.__name__ = ["xpath","tokenizer","TokenizerInput"];
xpath.tokenizer.TokenizerInput.prototype = {
	getOutput: function(result,characterLength) {
		var nextInput = null;
		if(characterLength == null) characterLength = this.query.length - this.position; else nextInput = new xpath.tokenizer.TokenizerInput(this.query,this.position + characterLength);
		return new xpath.tokenizer.TokenizerOutput(result,characterLength,nextInput);
	}
	,__class__: xpath.tokenizer.TokenizerInput
};
xpath.tokenizer.TokenizerOutput = function(result2,characterLength,nextInput) {
	this.result = result2;
	this.characterLength = characterLength;
	this.nextInput = nextInput;
};
$hxClasses["xpath.tokenizer.TokenizerOutput"] = xpath.tokenizer.TokenizerOutput;
xpath.tokenizer.TokenizerOutput.__name__ = ["xpath","tokenizer","TokenizerOutput"];
xpath.tokenizer.TokenizerOutput.prototype = {
	isComplete: function() {
		return this.nextInput == null;
	}
	,getNextInput: function() {
		if(this.nextInput != null) return this.nextInput; else throw new xpath.tokenizer.TokenizerException(null,"Unexpected end of query");
	}
	,__class__: xpath.tokenizer.TokenizerOutput
};
xpath.tokenizer.container = {};
xpath.tokenizer.container.ExpressionTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.ExpressionTokenizer"] = xpath.tokenizer.container.ExpressionTokenizer;
xpath.tokenizer.container.ExpressionTokenizer.__name__ = ["xpath","tokenizer","container","ExpressionTokenizer"];
xpath.tokenizer.container.ExpressionTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.ExpressionTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.ExpressionTokenizer.instance == null) {
		xpath.tokenizer.container.ExpressionTokenizer.instance = new xpath.tokenizer.container.ExpressionTokenizer();
		xpath.tokenizer.container.ExpressionTokenizer.instance.init();
	}
	return xpath.tokenizer.container.ExpressionTokenizer.instance;
};
xpath.tokenizer.container.ExpressionTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginExpressionTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.OperandTokenizer.getInstance(),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.token.OperatorTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.OperandTokenizer.getInstance()]),xpath.tokenizer.token.EndExpressionTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.ExpressionTokenizer
};
xpath.tokenizer.container.FilterExpressionTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.FilterExpressionTokenizer"] = xpath.tokenizer.container.FilterExpressionTokenizer;
xpath.tokenizer.container.FilterExpressionTokenizer.__name__ = ["xpath","tokenizer","container","FilterExpressionTokenizer"];
xpath.tokenizer.container.FilterExpressionTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.FilterExpressionTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.FilterExpressionTokenizer.instance == null) {
		xpath.tokenizer.container.FilterExpressionTokenizer.instance = new xpath.tokenizer.container.FilterExpressionTokenizer();
		xpath.tokenizer.container.FilterExpressionTokenizer.instance.init();
	}
	return xpath.tokenizer.container.FilterExpressionTokenizer.instance;
};
xpath.tokenizer.container.FilterExpressionTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginExpressionTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.token.NegationOperatorTokenizer.getInstance() , xpath.tokenizer.Tokenizer)]),xpath.tokenizer.container.FilterOperandTokenizer.getInstance(),xpath.tokenizer.token.EndExpressionTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.FilterExpressionTokenizer
};
xpath.tokenizer.container.FilterOperandTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.FilterOperandTokenizer"] = xpath.tokenizer.container.FilterOperandTokenizer;
xpath.tokenizer.container.FilterOperandTokenizer.__name__ = ["xpath","tokenizer","container","FilterOperandTokenizer"];
xpath.tokenizer.container.FilterOperandTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.FilterOperandTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.FilterOperandTokenizer.instance == null) {
		xpath.tokenizer.container.FilterOperandTokenizer.instance = new xpath.tokenizer.container.FilterOperandTokenizer();
		xpath.tokenizer.container.FilterOperandTokenizer.instance.init();
	}
	return xpath.tokenizer.container.FilterOperandTokenizer.instance;
};
xpath.tokenizer.container.FilterOperandTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.container.GroupTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.LiteralTokenizer.getInstance(),xpath.tokenizer.token.NumberTokenizer.getInstance(),xpath.tokenizer.container.FunctionCallTokenizer.getInstance(),xpath.tokenizer.token.VariableReferenceTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.FilterOperandTokenizer
};
xpath.tokenizer.container.FunctionArgumentsTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.FunctionArgumentsTokenizer"] = xpath.tokenizer.container.FunctionArgumentsTokenizer;
xpath.tokenizer.container.FunctionArgumentsTokenizer.__name__ = ["xpath","tokenizer","container","FunctionArgumentsTokenizer"];
xpath.tokenizer.container.FunctionArgumentsTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.FunctionArgumentsTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.FunctionArgumentsTokenizer.instance == null) {
		xpath.tokenizer.container.FunctionArgumentsTokenizer.instance = new xpath.tokenizer.container.FunctionArgumentsTokenizer();
		xpath.tokenizer.container.FunctionArgumentsTokenizer.instance.init();
	}
	return xpath.tokenizer.container.FunctionArgumentsTokenizer.instance;
};
xpath.tokenizer.container.FunctionArgumentsTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.container.ExpressionTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.token.ArgumentDelimiterTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.ExpressionTokenizer.getInstance()])]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.FunctionArgumentsTokenizer
};
xpath.tokenizer.container.FunctionCallTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.FunctionCallTokenizer"] = xpath.tokenizer.container.FunctionCallTokenizer;
xpath.tokenizer.container.FunctionCallTokenizer.__name__ = ["xpath","tokenizer","container","FunctionCallTokenizer"];
xpath.tokenizer.container.FunctionCallTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.FunctionCallTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.FunctionCallTokenizer.instance == null) {
		xpath.tokenizer.container.FunctionCallTokenizer.instance = new xpath.tokenizer.container.FunctionCallTokenizer();
		xpath.tokenizer.container.FunctionCallTokenizer.instance.init();
	}
	return xpath.tokenizer.container.FunctionCallTokenizer.instance;
};
xpath.tokenizer.container.FunctionCallTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginFunctionCallTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Optional([js.Boot.__cast(xpath.tokenizer.container.FunctionArgumentsTokenizer.getInstance() , xpath.tokenizer.Tokenizer)]),xpath.tokenizer.token.EndFunctionCallTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.FunctionCallTokenizer
};
xpath.tokenizer.container.GroupTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.GroupTokenizer"] = xpath.tokenizer.container.GroupTokenizer;
xpath.tokenizer.container.GroupTokenizer.__name__ = ["xpath","tokenizer","container","GroupTokenizer"];
xpath.tokenizer.container.GroupTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.GroupTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.GroupTokenizer.instance == null) {
		xpath.tokenizer.container.GroupTokenizer.instance = new xpath.tokenizer.container.GroupTokenizer();
		xpath.tokenizer.container.GroupTokenizer.instance.init();
	}
	return xpath.tokenizer.container.GroupTokenizer.instance;
};
xpath.tokenizer.container.GroupTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginGroupTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.ExpressionTokenizer.getInstance(),xpath.tokenizer.token.EndGroupTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.GroupTokenizer
};
xpath.tokenizer.container.NodeTestTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.NodeTestTokenizer"] = xpath.tokenizer.container.NodeTestTokenizer;
xpath.tokenizer.container.NodeTestTokenizer.__name__ = ["xpath","tokenizer","container","NodeTestTokenizer"];
xpath.tokenizer.container.NodeTestTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.NodeTestTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.NodeTestTokenizer.instance == null) {
		xpath.tokenizer.container.NodeTestTokenizer.instance = new xpath.tokenizer.container.NodeTestTokenizer();
		xpath.tokenizer.container.NodeTestTokenizer.instance.init();
	}
	return xpath.tokenizer.container.NodeTestTokenizer.instance;
};
xpath.tokenizer.container.NodeTestTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.token.NameTestTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.TypeTestTokenizer.getInstance(),xpath.tokenizer.token.PINameTestTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.NodeTestTokenizer
};
xpath.tokenizer.container.OperandTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.OperandTokenizer"] = xpath.tokenizer.container.OperandTokenizer;
xpath.tokenizer.container.OperandTokenizer.__name__ = ["xpath","tokenizer","container","OperandTokenizer"];
xpath.tokenizer.container.OperandTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.OperandTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.OperandTokenizer.instance == null) {
		xpath.tokenizer.container.OperandTokenizer.instance = new xpath.tokenizer.container.OperandTokenizer();
		xpath.tokenizer.container.OperandTokenizer.instance.init();
	}
	return xpath.tokenizer.container.OperandTokenizer.instance;
};
xpath.tokenizer.container.OperandTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.container.GroupTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.LiteralTokenizer.getInstance(),xpath.tokenizer.token.NumberTokenizer.getInstance(),xpath.tokenizer.container.FunctionCallTokenizer.getInstance(),xpath.tokenizer.token.VariableReferenceTokenizer.getInstance(),xpath.tokenizer.container.UnaryOperandTokenizer.getInstance(),xpath.tokenizer.container.PathTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.OperandTokenizer
};
xpath.tokenizer.container.PathTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.PathTokenizer"] = xpath.tokenizer.container.PathTokenizer;
xpath.tokenizer.container.PathTokenizer.__name__ = ["xpath","tokenizer","container","PathTokenizer"];
xpath.tokenizer.container.PathTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.PathTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.PathTokenizer.instance == null) {
		xpath.tokenizer.container.PathTokenizer.instance = new xpath.tokenizer.container.PathTokenizer();
		xpath.tokenizer.container.PathTokenizer.instance.init();
	}
	return xpath.tokenizer.container.PathTokenizer.instance;
};
xpath.tokenizer.container.PathTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginPathTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Sequence([js.Boot.__cast(new xpath.tokenizer.util.Disjunction([js.Boot.__cast(new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.UnaryStepTokenizer.getInstance()]) , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.StepTokenizer.getInstance()]) , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.UnaryStepTokenizer.getInstance()])])]),xpath.tokenizer.token.EndPathTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.PathTokenizer
};
xpath.tokenizer.container.PredicateTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.PredicateTokenizer"] = xpath.tokenizer.container.PredicateTokenizer;
xpath.tokenizer.container.PredicateTokenizer.__name__ = ["xpath","tokenizer","container","PredicateTokenizer"];
xpath.tokenizer.container.PredicateTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.PredicateTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.PredicateTokenizer.instance == null) {
		xpath.tokenizer.container.PredicateTokenizer.instance = new xpath.tokenizer.container.PredicateTokenizer();
		xpath.tokenizer.container.PredicateTokenizer.instance.init();
	}
	return xpath.tokenizer.container.PredicateTokenizer.instance;
};
xpath.tokenizer.container.PredicateTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginPredicateTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.ExpressionTokenizer.getInstance(),xpath.tokenizer.token.EndPredicateTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.PredicateTokenizer
};
xpath.tokenizer.container.StepDelimitersTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.StepDelimitersTokenizer"] = xpath.tokenizer.container.StepDelimitersTokenizer;
xpath.tokenizer.container.StepDelimitersTokenizer.__name__ = ["xpath","tokenizer","container","StepDelimitersTokenizer"];
xpath.tokenizer.container.StepDelimitersTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.StepDelimitersTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.StepDelimitersTokenizer.instance == null) {
		xpath.tokenizer.container.StepDelimitersTokenizer.instance = new xpath.tokenizer.container.StepDelimitersTokenizer();
		xpath.tokenizer.container.StepDelimitersTokenizer.instance.init();
	}
	return xpath.tokenizer.container.StepDelimitersTokenizer.instance;
};
xpath.tokenizer.container.StepDelimitersTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.token.StepDelimiterTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.DeepStepDelimiterTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.StepDelimitersTokenizer
};
xpath.tokenizer.container.StepTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.StepTokenizer"] = xpath.tokenizer.container.StepTokenizer;
xpath.tokenizer.container.StepTokenizer.__name__ = ["xpath","tokenizer","container","StepTokenizer"];
xpath.tokenizer.container.StepTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.StepTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.StepTokenizer.instance == null) {
		xpath.tokenizer.container.StepTokenizer.instance = new xpath.tokenizer.container.StepTokenizer();
		xpath.tokenizer.container.StepTokenizer.instance.init();
	}
	return xpath.tokenizer.container.StepTokenizer.instance;
};
xpath.tokenizer.container.StepTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(new xpath.tokenizer.util.Sequence([js.Boot.__cast(new xpath.tokenizer.util.Disjunction([js.Boot.__cast(new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.AxisTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.NodeTestTokenizer.getInstance()]) , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.FilterExpressionTokenizer.getInstance()]) , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.container.PredicateTokenizer.getInstance() , xpath.tokenizer.Tokenizer)])]) , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.AbbreviatedStepTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.StepTokenizer
};
xpath.tokenizer.container.UnaryOperandTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.UnaryOperandTokenizer"] = xpath.tokenizer.container.UnaryOperandTokenizer;
xpath.tokenizer.container.UnaryOperandTokenizer.__name__ = ["xpath","tokenizer","container","UnaryOperandTokenizer"];
xpath.tokenizer.container.UnaryOperandTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.UnaryOperandTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.UnaryOperandTokenizer.instance == null) {
		xpath.tokenizer.container.UnaryOperandTokenizer.instance = new xpath.tokenizer.container.UnaryOperandTokenizer();
		xpath.tokenizer.container.UnaryOperandTokenizer.instance.init();
	}
	return xpath.tokenizer.container.UnaryOperandTokenizer.instance;
};
xpath.tokenizer.container.UnaryOperandTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.NegationOperatorTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.token.NegationOperatorTokenizer.getInstance() , xpath.tokenizer.Tokenizer)]),new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.container.UnaryPathTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.GroupTokenizer.getInstance(),xpath.tokenizer.token.LiteralTokenizer.getInstance(),xpath.tokenizer.token.NumberTokenizer.getInstance(),xpath.tokenizer.container.FunctionCallTokenizer.getInstance(),xpath.tokenizer.token.VariableReferenceTokenizer.getInstance()])]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.UnaryOperandTokenizer
};
xpath.tokenizer.container.UnaryPathTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.UnaryPathTokenizer"] = xpath.tokenizer.container.UnaryPathTokenizer;
xpath.tokenizer.container.UnaryPathTokenizer.__name__ = ["xpath","tokenizer","container","UnaryPathTokenizer"];
xpath.tokenizer.container.UnaryPathTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.UnaryPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.UnaryPathTokenizer.instance == null) {
		xpath.tokenizer.container.UnaryPathTokenizer.instance = new xpath.tokenizer.container.UnaryPathTokenizer();
		xpath.tokenizer.container.UnaryPathTokenizer.instance.init();
	}
	return xpath.tokenizer.container.UnaryPathTokenizer.instance;
};
xpath.tokenizer.container.UnaryPathTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginPathTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Disjunction([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer),new xpath.tokenizer.util.Sequence([js.Boot.__cast(new xpath.tokenizer.util.Optional([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer)]) , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.UnaryStepTokenizer.getInstance(),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.container.StepDelimitersTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.UnaryStepTokenizer.getInstance()])])]),xpath.tokenizer.token.EndPathTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.UnaryPathTokenizer
};
xpath.tokenizer.container.UnaryStepTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.UnaryStepTokenizer"] = xpath.tokenizer.container.UnaryStepTokenizer;
xpath.tokenizer.container.UnaryStepTokenizer.__name__ = ["xpath","tokenizer","container","UnaryStepTokenizer"];
xpath.tokenizer.container.UnaryStepTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.UnaryStepTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.UnaryStepTokenizer.instance == null) {
		xpath.tokenizer.container.UnaryStepTokenizer.instance = new xpath.tokenizer.container.UnaryStepTokenizer();
		xpath.tokenizer.container.UnaryStepTokenizer.instance.init();
	}
	return xpath.tokenizer.container.UnaryStepTokenizer.instance;
};
xpath.tokenizer.container.UnaryStepTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Disjunction([js.Boot.__cast(new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.AxisTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.NodeTestTokenizer.getInstance(),new xpath.tokenizer.util.Repetition([js.Boot.__cast(xpath.tokenizer.container.PredicateTokenizer.getInstance() , xpath.tokenizer.Tokenizer)])]) , xpath.tokenizer.Tokenizer),xpath.tokenizer.token.AbbreviatedStepTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.UnaryStepTokenizer
};
xpath.tokenizer.container.XPathTokenizer = function() {
};
$hxClasses["xpath.tokenizer.container.XPathTokenizer"] = xpath.tokenizer.container.XPathTokenizer;
xpath.tokenizer.container.XPathTokenizer.__name__ = ["xpath","tokenizer","container","XPathTokenizer"];
xpath.tokenizer.container.XPathTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.container.XPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.container.XPathTokenizer.instance == null) {
		xpath.tokenizer.container.XPathTokenizer.instance = new xpath.tokenizer.container.XPathTokenizer();
		xpath.tokenizer.container.XPathTokenizer.instance.init();
	}
	return xpath.tokenizer.container.XPathTokenizer.instance;
};
xpath.tokenizer.container.XPathTokenizer.prototype = {
	init: function() {
		this.tokenizer = new xpath.tokenizer.util.Sequence([js.Boot.__cast(xpath.tokenizer.token.BeginXPathTokenizer.getInstance() , xpath.tokenizer.Tokenizer),xpath.tokenizer.container.ExpressionTokenizer.getInstance(),xpath.tokenizer.token.EndXPathTokenizer.getInstance()]);
	}
	,tokenize: function(input) {
		return this.tokenizer.tokenize(input);
	}
	,__class__: xpath.tokenizer.container.XPathTokenizer
};
xpath.tokenizer.token = {};
xpath.tokenizer.token.TokenTokenizer = function() { };
$hxClasses["xpath.tokenizer.token.TokenTokenizer"] = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.TokenTokenizer.__name__ = ["xpath","tokenizer","token","TokenTokenizer"];
xpath.tokenizer.token.TokenTokenizer.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.token.TokenTokenizer.prototype = {
	tokenize: function(input) {
		throw new xpath.tokenizer.TokenizerError("xpath.tokenizer.token.TokenTokenizer.tokenize() must " + "be overridden");
		return null;
	}
	,countWhitespace: function(query,start) {
		var i = -1;
		var $char;
		do $char = query.charAt(start + ++i); while($char == " " || $char == "\t" || $char == "\r" || $char == "\n");
		return i;
	}
	,__class__: xpath.tokenizer.token.TokenTokenizer
};
xpath.tokenizer.token.AbbreviatedStepTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.AbbreviatedStepTokenizer"] = xpath.tokenizer.token.AbbreviatedStepTokenizer;
xpath.tokenizer.token.AbbreviatedStepTokenizer.__name__ = ["xpath","tokenizer","token","AbbreviatedStepTokenizer"];
xpath.tokenizer.token.AbbreviatedStepTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.AbbreviatedStepTokenizer.instance == null) xpath.tokenizer.token.AbbreviatedStepTokenizer.instance = new xpath.tokenizer.token.AbbreviatedStepTokenizer();
	return xpath.tokenizer.token.AbbreviatedStepTokenizer.instance;
};
xpath.tokenizer.token.AbbreviatedStepTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.AbbreviatedStepTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		if(HxOverrides.substr(input.query,input.position,2) == "..") {
			var result = [js.Boot.__cast(new xpath.tokenizer.AxisToken(xpath.Axis.Parent) , xpath.tokenizer.Token),new xpath.tokenizer.TypeTestToken(xpath.NodeCategory.Node)];
			var characterLength = 2 + this.countWhitespace(input.query,input.position + 2);
			return input.getOutput(result,characterLength);
		} else if(input.query.charAt(input.position) == ".") {
			var result1 = [js.Boot.__cast(new xpath.tokenizer.AxisToken(xpath.Axis.Self) , xpath.tokenizer.Token),new xpath.tokenizer.TypeTestToken(xpath.NodeCategory.Node)];
			var characterLength1 = 1 + this.countWhitespace(input.query,input.position + 1);
			return input.getOutput(result1,characterLength1);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "AbbreviatedStep", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.AbbreviatedStepTokenizer
});
xpath.tokenizer.token.FixedStringTokenizer = function(token,string,tokenName) {
	this.token = token;
	this.string = string;
	this.tokenName = tokenName;
};
$hxClasses["xpath.tokenizer.token.FixedStringTokenizer"] = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.FixedStringTokenizer.__name__ = ["xpath","tokenizer","token","FixedStringTokenizer"];
xpath.tokenizer.token.FixedStringTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.FixedStringTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		if(HxOverrides.substr(input.query,input.position,this.string.length) == this.string) {
			var result = [this.token];
			var characterLength = this.string.length;
			characterLength += this.countWhitespace(input.query,input.position + characterLength);
			return input.getOutput(result,characterLength);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : this.tokenName, position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.FixedStringTokenizer
});
xpath.tokenizer.token.ArgumentDelimiterTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.ArgumentDelimiterToken(),",","ArgumentDelimiter");
};
$hxClasses["xpath.tokenizer.token.ArgumentDelimiterTokenizer"] = xpath.tokenizer.token.ArgumentDelimiterTokenizer;
xpath.tokenizer.token.ArgumentDelimiterTokenizer.__name__ = ["xpath","tokenizer","token","ArgumentDelimiterTokenizer"];
xpath.tokenizer.token.ArgumentDelimiterTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.ArgumentDelimiterTokenizer.instance == null) xpath.tokenizer.token.ArgumentDelimiterTokenizer.instance = new xpath.tokenizer.token.ArgumentDelimiterTokenizer();
	return xpath.tokenizer.token.ArgumentDelimiterTokenizer.instance;
};
xpath.tokenizer.token.ArgumentDelimiterTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.ArgumentDelimiterTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.ArgumentDelimiterTokenizer
});
xpath.tokenizer.token.AxisTokenizer = function() {
	this.axisNameToAxis = new haxe.ds.StringMap();
	this.axisNameToAxis.set("ancestor",xpath.Axis.Ancestor);
	this.axisNameToAxis.set("ancestor-or-self",xpath.Axis.AncestorOrSelf);
	this.axisNameToAxis.set("attribute",xpath.Axis.Attribute);
	this.axisNameToAxis.set("child",xpath.Axis.Child);
	this.axisNameToAxis.set("descendant",xpath.Axis.Descendant);
	this.axisNameToAxis.set("descendant-or-self",xpath.Axis.DescendantOrSelf);
	this.axisNameToAxis.set("following",xpath.Axis.Following);
	this.axisNameToAxis.set("following-sibling",xpath.Axis.FollowingSibling);
	this.axisNameToAxis.set("namespace",xpath.Axis.Namespace);
	this.axisNameToAxis.set("parent",xpath.Axis.Parent);
	this.axisNameToAxis.set("preceding",xpath.Axis.Preceding);
	this.axisNameToAxis.set("preceding-sibling",xpath.Axis.PrecedingSibling);
	this.axisNameToAxis.set("self",xpath.Axis.Self);
	this.axisNames = new Array();
	var $it0 = this.axisNameToAxis.keys();
	while( $it0.hasNext() ) {
		var axisName = $it0.next();
		this.axisNames.push(axisName);
	}
	this.axisNames.sort(function(x,y) {
		return y.length - x.length;
	});
};
$hxClasses["xpath.tokenizer.token.AxisTokenizer"] = xpath.tokenizer.token.AxisTokenizer;
xpath.tokenizer.token.AxisTokenizer.__name__ = ["xpath","tokenizer","token","AxisTokenizer"];
xpath.tokenizer.token.AxisTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.AxisTokenizer.instance == null) xpath.tokenizer.token.AxisTokenizer.instance = new xpath.tokenizer.token.AxisTokenizer();
	return xpath.tokenizer.token.AxisTokenizer.instance;
};
xpath.tokenizer.token.AxisTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.AxisTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		var axis = null;
		var _g = 0;
		var _g1 = this.axisNames;
		while(_g < _g1.length) {
			var axisName = _g1[_g];
			++_g;
			if(HxOverrides.substr(input.query,pos,axisName.length) == axisName) {
				pos += axisName.length;
				pos += this.countWhitespace(input.query,pos);
				if(HxOverrides.substr(input.query,pos,2) == "::") {
					pos += 2;
					axis = this.axisNameToAxis.get(axisName);
				} else {
					pos = input.position;
					axis = xpath.Axis.Child;
				}
				break;
			}
		}
		if(axis == null) {
			if(input.query.charAt(pos) == "@") {
				axis = xpath.Axis.Attribute;
				++pos;
			} else axis = xpath.Axis.Child;
		}
		pos += this.countWhitespace(input.query,pos);
		var characterLength = pos - input.position;
		var result = [js.Boot.__cast(new xpath.tokenizer.AxisToken(axis) , xpath.tokenizer.Token)];
		return input.getOutput(result,characterLength);
	}
	,__class__: xpath.tokenizer.token.AxisTokenizer
});
xpath.tokenizer.token.BeginExpressionTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.BeginExpressionToken(),"","BeginExpression");
};
$hxClasses["xpath.tokenizer.token.BeginExpressionTokenizer"] = xpath.tokenizer.token.BeginExpressionTokenizer;
xpath.tokenizer.token.BeginExpressionTokenizer.__name__ = ["xpath","tokenizer","token","BeginExpressionTokenizer"];
xpath.tokenizer.token.BeginExpressionTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginExpressionTokenizer.instance == null) xpath.tokenizer.token.BeginExpressionTokenizer.instance = new xpath.tokenizer.token.BeginExpressionTokenizer();
	return xpath.tokenizer.token.BeginExpressionTokenizer.instance;
};
xpath.tokenizer.token.BeginExpressionTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.BeginExpressionTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.BeginExpressionTokenizer
});
xpath.tokenizer.token.BeginFunctionCallTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.BeginFunctionCallTokenizer"] = xpath.tokenizer.token.BeginFunctionCallTokenizer;
xpath.tokenizer.token.BeginFunctionCallTokenizer.__name__ = ["xpath","tokenizer","token","BeginFunctionCallTokenizer"];
xpath.tokenizer.token.BeginFunctionCallTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginFunctionCallTokenizer.instance == null) xpath.tokenizer.token.BeginFunctionCallTokenizer.instance = new xpath.tokenizer.token.BeginFunctionCallTokenizer();
	return xpath.tokenizer.token.BeginFunctionCallTokenizer.instance;
};
xpath.tokenizer.token.BeginFunctionCallTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.BeginFunctionCallTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		var charCode = HxOverrides.cca(input.query,pos);
		if((charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "BeginFunctionCall", position : input.position}]);
		do {
			var index = ++pos;
			charCode = HxOverrides.cca(input.query,index);
		} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		if(charCode == 58) {
			var index1 = ++pos;
			charCode = HxOverrides.cca(input.query,index1);
			if((charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "BeginFunctionCall", position : input.position}]);
			do {
				var index2 = ++pos;
				charCode = HxOverrides.cca(input.query,index2);
			} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		}
		var name = HxOverrides.substr(input.query,input.position,pos - input.position);
		pos += this.countWhitespace(input.query,pos);
		switch(name) {
		case "comment":case "text":case "node":case "processing-instruction":
			throw new xpath.tokenizer.ExpectedException([{ tokenName : "BeginFunctionCall", position : input.position}]);
			break;
		default:
		}
		if(input.query.charAt(pos) != "(") throw new xpath.tokenizer.ExpectedException([{ tokenName : "BeginFunctionCall", position : input.position}]);
		++pos;
		pos += this.countWhitespace(input.query,pos);
		var result = [js.Boot.__cast(new xpath.tokenizer.BeginFunctionCallToken(name) , xpath.tokenizer.Token)];
		var characterLength = pos - input.position;
		return input.getOutput(result,characterLength);
	}
	,__class__: xpath.tokenizer.token.BeginFunctionCallTokenizer
});
xpath.tokenizer.token.BeginGroupTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.BeginGroupToken(),"(","BeginGroup");
};
$hxClasses["xpath.tokenizer.token.BeginGroupTokenizer"] = xpath.tokenizer.token.BeginGroupTokenizer;
xpath.tokenizer.token.BeginGroupTokenizer.__name__ = ["xpath","tokenizer","token","BeginGroupTokenizer"];
xpath.tokenizer.token.BeginGroupTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginGroupTokenizer.instance == null) xpath.tokenizer.token.BeginGroupTokenizer.instance = new xpath.tokenizer.token.BeginGroupTokenizer();
	return xpath.tokenizer.token.BeginGroupTokenizer.instance;
};
xpath.tokenizer.token.BeginGroupTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.BeginGroupTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.BeginGroupTokenizer
});
xpath.tokenizer.token.BeginPathTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.BeginPathToken(),"","BeginPath");
};
$hxClasses["xpath.tokenizer.token.BeginPathTokenizer"] = xpath.tokenizer.token.BeginPathTokenizer;
xpath.tokenizer.token.BeginPathTokenizer.__name__ = ["xpath","tokenizer","token","BeginPathTokenizer"];
xpath.tokenizer.token.BeginPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginPathTokenizer.instance == null) xpath.tokenizer.token.BeginPathTokenizer.instance = new xpath.tokenizer.token.BeginPathTokenizer();
	return xpath.tokenizer.token.BeginPathTokenizer.instance;
};
xpath.tokenizer.token.BeginPathTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.BeginPathTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.BeginPathTokenizer
});
xpath.tokenizer.token.BeginPredicateTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.BeginPredicateToken(),"[","BeginPredicate");
};
$hxClasses["xpath.tokenizer.token.BeginPredicateTokenizer"] = xpath.tokenizer.token.BeginPredicateTokenizer;
xpath.tokenizer.token.BeginPredicateTokenizer.__name__ = ["xpath","tokenizer","token","BeginPredicateTokenizer"];
xpath.tokenizer.token.BeginPredicateTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginPredicateTokenizer.instance == null) xpath.tokenizer.token.BeginPredicateTokenizer.instance = new xpath.tokenizer.token.BeginPredicateTokenizer();
	return xpath.tokenizer.token.BeginPredicateTokenizer.instance;
};
xpath.tokenizer.token.BeginPredicateTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.BeginPredicateTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.BeginPredicateTokenizer
});
xpath.tokenizer.token.BeginXPathTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.BeginXPathTokenizer"] = xpath.tokenizer.token.BeginXPathTokenizer;
xpath.tokenizer.token.BeginXPathTokenizer.__name__ = ["xpath","tokenizer","token","BeginXPathTokenizer"];
xpath.tokenizer.token.BeginXPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.BeginXPathTokenizer.instance == null) xpath.tokenizer.token.BeginXPathTokenizer.instance = new xpath.tokenizer.token.BeginXPathTokenizer();
	return xpath.tokenizer.token.BeginXPathTokenizer.instance;
};
xpath.tokenizer.token.BeginXPathTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.BeginXPathTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		if(input.position == 0) {
			var result = [js.Boot.__cast(new xpath.tokenizer.BeginXPathToken() , xpath.tokenizer.Token)];
			var characterLength = this.countWhitespace(input.query,0);
			return input.getOutput(result,characterLength);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "BeginXPath", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.BeginXPathTokenizer
});
xpath.tokenizer.token.DeepStepDelimiterTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.DeepStepDelimiterTokenizer"] = xpath.tokenizer.token.DeepStepDelimiterTokenizer;
xpath.tokenizer.token.DeepStepDelimiterTokenizer.__name__ = ["xpath","tokenizer","token","DeepStepDelimiterTokenizer"];
xpath.tokenizer.token.DeepStepDelimiterTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.DeepStepDelimiterTokenizer.instance == null) xpath.tokenizer.token.DeepStepDelimiterTokenizer.instance = new xpath.tokenizer.token.DeepStepDelimiterTokenizer();
	return xpath.tokenizer.token.DeepStepDelimiterTokenizer.instance;
};
xpath.tokenizer.token.DeepStepDelimiterTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.DeepStepDelimiterTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		if(HxOverrides.substr(input.query,input.position,2) == "//") {
			var result = [js.Boot.__cast(new xpath.tokenizer.StepDelimiterToken() , xpath.tokenizer.Token),new xpath.tokenizer.AxisToken(xpath.Axis.DescendantOrSelf),new xpath.tokenizer.TypeTestToken(xpath.NodeCategory.Node),new xpath.tokenizer.StepDelimiterToken()];
			var characterLength = 2 + this.countWhitespace(input.query,input.position + 2);
			return input.getOutput(result,characterLength);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "DeepStepDelimiter", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.DeepStepDelimiterTokenizer
});
xpath.tokenizer.token.EndExpressionTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.EndExpressionToken(),"","EndExpression");
};
$hxClasses["xpath.tokenizer.token.EndExpressionTokenizer"] = xpath.tokenizer.token.EndExpressionTokenizer;
xpath.tokenizer.token.EndExpressionTokenizer.__name__ = ["xpath","tokenizer","token","EndExpressionTokenizer"];
xpath.tokenizer.token.EndExpressionTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndExpressionTokenizer.instance == null) xpath.tokenizer.token.EndExpressionTokenizer.instance = new xpath.tokenizer.token.EndExpressionTokenizer();
	return xpath.tokenizer.token.EndExpressionTokenizer.instance;
};
xpath.tokenizer.token.EndExpressionTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.EndExpressionTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.EndExpressionTokenizer
});
xpath.tokenizer.token.EndFunctionCallTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.EndFunctionCallToken(),")","EndFunctionCall");
};
$hxClasses["xpath.tokenizer.token.EndFunctionCallTokenizer"] = xpath.tokenizer.token.EndFunctionCallTokenizer;
xpath.tokenizer.token.EndFunctionCallTokenizer.__name__ = ["xpath","tokenizer","token","EndFunctionCallTokenizer"];
xpath.tokenizer.token.EndFunctionCallTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndFunctionCallTokenizer.instance == null) xpath.tokenizer.token.EndFunctionCallTokenizer.instance = new xpath.tokenizer.token.EndFunctionCallTokenizer();
	return xpath.tokenizer.token.EndFunctionCallTokenizer.instance;
};
xpath.tokenizer.token.EndFunctionCallTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.EndFunctionCallTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.EndFunctionCallTokenizer
});
xpath.tokenizer.token.EndGroupTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.EndGroupToken(),")","EndGroup");
};
$hxClasses["xpath.tokenizer.token.EndGroupTokenizer"] = xpath.tokenizer.token.EndGroupTokenizer;
xpath.tokenizer.token.EndGroupTokenizer.__name__ = ["xpath","tokenizer","token","EndGroupTokenizer"];
xpath.tokenizer.token.EndGroupTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndGroupTokenizer.instance == null) xpath.tokenizer.token.EndGroupTokenizer.instance = new xpath.tokenizer.token.EndGroupTokenizer();
	return xpath.tokenizer.token.EndGroupTokenizer.instance;
};
xpath.tokenizer.token.EndGroupTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.EndGroupTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.EndGroupTokenizer
});
xpath.tokenizer.token.EndPathTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.EndPathToken(),"","EndPath");
};
$hxClasses["xpath.tokenizer.token.EndPathTokenizer"] = xpath.tokenizer.token.EndPathTokenizer;
xpath.tokenizer.token.EndPathTokenizer.__name__ = ["xpath","tokenizer","token","EndPathTokenizer"];
xpath.tokenizer.token.EndPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndPathTokenizer.instance == null) xpath.tokenizer.token.EndPathTokenizer.instance = new xpath.tokenizer.token.EndPathTokenizer();
	return xpath.tokenizer.token.EndPathTokenizer.instance;
};
xpath.tokenizer.token.EndPathTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.EndPathTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.EndPathTokenizer
});
xpath.tokenizer.token.EndPredicateTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.EndPredicateToken(),"]","EndPredicate");
};
$hxClasses["xpath.tokenizer.token.EndPredicateTokenizer"] = xpath.tokenizer.token.EndPredicateTokenizer;
xpath.tokenizer.token.EndPredicateTokenizer.__name__ = ["xpath","tokenizer","token","EndPredicateTokenizer"];
xpath.tokenizer.token.EndPredicateTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndPredicateTokenizer.instance == null) xpath.tokenizer.token.EndPredicateTokenizer.instance = new xpath.tokenizer.token.EndPredicateTokenizer();
	return xpath.tokenizer.token.EndPredicateTokenizer.instance;
};
xpath.tokenizer.token.EndPredicateTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.EndPredicateTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.EndPredicateTokenizer
});
xpath.tokenizer.token.EndXPathTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.EndXPathTokenizer"] = xpath.tokenizer.token.EndXPathTokenizer;
xpath.tokenizer.token.EndXPathTokenizer.__name__ = ["xpath","tokenizer","token","EndXPathTokenizer"];
xpath.tokenizer.token.EndXPathTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.EndXPathTokenizer.instance == null) xpath.tokenizer.token.EndXPathTokenizer.instance = new xpath.tokenizer.token.EndXPathTokenizer();
	return xpath.tokenizer.token.EndXPathTokenizer.instance;
};
xpath.tokenizer.token.EndXPathTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.EndXPathTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		if(input.query.length == input.position) {
			var result = [js.Boot.__cast(new xpath.tokenizer.EndXPathToken() , xpath.tokenizer.Token)];
			return input.getOutput(result);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "EndXPath", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.EndXPathTokenizer
});
xpath.tokenizer.token.LiteralTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.LiteralTokenizer"] = xpath.tokenizer.token.LiteralTokenizer;
xpath.tokenizer.token.LiteralTokenizer.__name__ = ["xpath","tokenizer","token","LiteralTokenizer"];
xpath.tokenizer.token.LiteralTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.LiteralTokenizer.instance == null) xpath.tokenizer.token.LiteralTokenizer.instance = new xpath.tokenizer.token.LiteralTokenizer();
	return xpath.tokenizer.token.LiteralTokenizer.instance;
};
xpath.tokenizer.token.LiteralTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.LiteralTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		var quote = input.query.charAt(pos);
		if(quote != "'" && quote != "\"") throw new xpath.tokenizer.ExpectedException([{ tokenName : "Literal", position : input.position}]);
		var valueStartPos = pos + 1;
		var $char;
		do $char = input.query.charAt(++pos); while($char != quote && pos < input.query.length - 1);
		if($char == quote) {
			var value = HxOverrides.substr(input.query,valueStartPos,pos - valueStartPos);
			++pos;
			pos += this.countWhitespace(input.query,pos);
			var result = [js.Boot.__cast(new xpath.tokenizer.LiteralToken(value) , xpath.tokenizer.Token)];
			var characterLength = pos - input.position;
			return input.getOutput(result,characterLength);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "Literal", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.LiteralTokenizer
});
xpath.tokenizer.token.NameTestTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.NameTestTokenizer"] = xpath.tokenizer.token.NameTestTokenizer;
xpath.tokenizer.token.NameTestTokenizer.__name__ = ["xpath","tokenizer","token","NameTestTokenizer"];
xpath.tokenizer.token.NameTestTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.NameTestTokenizer.instance == null) xpath.tokenizer.token.NameTestTokenizer.instance = new xpath.tokenizer.token.NameTestTokenizer();
	return xpath.tokenizer.token.NameTestTokenizer.instance;
};
xpath.tokenizer.token.NameTestTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.NameTestTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		if(input.query.charAt(pos) == "*") {
			var result = [js.Boot.__cast(new xpath.tokenizer.NameTestToken("*") , xpath.tokenizer.Token)];
			var characterLength = 1 + this.countWhitespace(input.query,pos + 1);
			return input.getOutput(result,characterLength);
		}
		var charCode = HxOverrides.cca(input.query,pos);
		if(charCode == null || (charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "NameTest", position : input.position}]);
		do {
			var index = ++pos;
			charCode = HxOverrides.cca(input.query,index);
		} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		if(charCode != 58) {
			var characterLength1 = pos - input.position;
			var name = HxOverrides.substr(input.query,input.position,characterLength1);
			var result1 = [js.Boot.__cast(new xpath.tokenizer.NameTestToken(name) , xpath.tokenizer.Token)];
			characterLength1 += this.countWhitespace(input.query,pos);
			return input.getOutput(result1,characterLength1);
		}
		if(input.query.charAt(++pos) == "*") {
			var characterLength2 = pos - input.position;
			var name1 = HxOverrides.substr(input.query,input.position,characterLength2) + "*";
			var result2 = [js.Boot.__cast(new xpath.tokenizer.NameTestToken(name1) , xpath.tokenizer.Token)];
			characterLength2 += 1 + this.countWhitespace(input.query,pos + 1);
			return input.getOutput(result2,characterLength2);
		}
		charCode = HxOverrides.cca(input.query,pos);
		if(charCode == null || (charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "NameTest", position : input.position}]);
		do {
			var index1 = ++pos;
			charCode = HxOverrides.cca(input.query,index1);
		} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		var characterLength3 = pos - input.position;
		var name2 = HxOverrides.substr(input.query,input.position,characterLength3);
		var result3 = [js.Boot.__cast(new xpath.tokenizer.NameTestToken(name2) , xpath.tokenizer.Token)];
		characterLength3 += this.countWhitespace(input.query,pos);
		return input.getOutput(result3,characterLength3);
	}
	,__class__: xpath.tokenizer.token.NameTestTokenizer
});
xpath.tokenizer.token.NegationOperatorTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.NegationOperatorToken(),"-","NegationOperator");
};
$hxClasses["xpath.tokenizer.token.NegationOperatorTokenizer"] = xpath.tokenizer.token.NegationOperatorTokenizer;
xpath.tokenizer.token.NegationOperatorTokenizer.__name__ = ["xpath","tokenizer","token","NegationOperatorTokenizer"];
xpath.tokenizer.token.NegationOperatorTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.NegationOperatorTokenizer.instance == null) xpath.tokenizer.token.NegationOperatorTokenizer.instance = new xpath.tokenizer.token.NegationOperatorTokenizer();
	return xpath.tokenizer.token.NegationOperatorTokenizer.instance;
};
xpath.tokenizer.token.NegationOperatorTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.NegationOperatorTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.NegationOperatorTokenizer
});
xpath.tokenizer.token.NumberTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.NumberTokenizer"] = xpath.tokenizer.token.NumberTokenizer;
xpath.tokenizer.token.NumberTokenizer.__name__ = ["xpath","tokenizer","token","NumberTokenizer"];
xpath.tokenizer.token.NumberTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.NumberTokenizer.instance == null) xpath.tokenizer.token.NumberTokenizer.instance = new xpath.tokenizer.token.NumberTokenizer();
	return xpath.tokenizer.token.NumberTokenizer.instance;
};
xpath.tokenizer.token.NumberTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.NumberTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position - 1;
		var charCode;
		do {
			var index = ++pos;
			charCode = HxOverrides.cca(input.query,index);
		} while(charCode > 47 && charCode < 58);
		if(charCode != 46) {
			if(pos > input.position) {
				var value = Std.parseFloat(HxOverrides.substr(input.query,input.position,pos - input.position));
				var result = [js.Boot.__cast(new xpath.tokenizer.NumberToken(value) , xpath.tokenizer.Token)];
				var characterLength = pos - input.position;
				characterLength += this.countWhitespace(input.query,pos);
				return input.getOutput(result,characterLength);
			} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "Number", position : input.position}]);
		}
		do {
			var index1 = ++pos;
			charCode = HxOverrides.cca(input.query,index1);
		} while(charCode > 47 && charCode < 58);
		if(pos > input.position + 1) {
			var value1 = Std.parseFloat(HxOverrides.substr(input.query,input.position,pos - input.position));
			var result1 = [js.Boot.__cast(new xpath.tokenizer.NumberToken(value1) , xpath.tokenizer.Token)];
			var characterLength1 = pos - input.position;
			characterLength1 += this.countWhitespace(input.query,pos);
			return input.getOutput(result1,characterLength1);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "Number", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.NumberTokenizer
});
xpath.tokenizer.token.OperatorTokenizer = function() {
	this.operatorSymbolToOperator = new haxe.ds.StringMap();
	this.operatorSymbolToOperator.set("and",xpath.Operator.And);
	this.operatorSymbolToOperator.set("mod",xpath.Operator.Modulo);
	this.operatorSymbolToOperator.set("div",xpath.Operator.Divide);
	this.operatorSymbolToOperator.set("or",xpath.Operator.Or);
	this.operatorSymbolToOperator.set("!=",xpath.Operator.NotEqual);
	this.operatorSymbolToOperator.set("<=",xpath.Operator.LessThanOrEqual);
	this.operatorSymbolToOperator.set(">=",xpath.Operator.GreaterThanOrEqual);
	this.operatorSymbolToOperator.set("=",xpath.Operator.Equal);
	this.operatorSymbolToOperator.set("|",xpath.Operator.Union);
	this.operatorSymbolToOperator.set("+",xpath.Operator.Plus);
	this.operatorSymbolToOperator.set("-",xpath.Operator.Minus);
	this.operatorSymbolToOperator.set("<",xpath.Operator.LessThan);
	this.operatorSymbolToOperator.set(">",xpath.Operator.GreaterThan);
	this.operatorSymbolToOperator.set("*",xpath.Operator.Multiply);
	this.operatorSymbols = new Array();
	var $it0 = this.operatorSymbolToOperator.keys();
	while( $it0.hasNext() ) {
		var operatorSymbol = $it0.next();
		this.operatorSymbols.push(operatorSymbol);
	}
	this.operatorSymbols.sort(function(x,y) {
		return y.length - x.length;
	});
};
$hxClasses["xpath.tokenizer.token.OperatorTokenizer"] = xpath.tokenizer.token.OperatorTokenizer;
xpath.tokenizer.token.OperatorTokenizer.__name__ = ["xpath","tokenizer","token","OperatorTokenizer"];
xpath.tokenizer.token.OperatorTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.OperatorTokenizer.instance == null) xpath.tokenizer.token.OperatorTokenizer.instance = new xpath.tokenizer.token.OperatorTokenizer();
	return xpath.tokenizer.token.OperatorTokenizer.instance;
};
xpath.tokenizer.token.OperatorTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.OperatorTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		var _g = 0;
		var _g1 = this.operatorSymbols;
		while(_g < _g1.length) {
			var operatorSymbol = _g1[_g];
			++_g;
			if(HxOverrides.substr(input.query,pos,operatorSymbol.length) == operatorSymbol) {
				pos += operatorSymbol.length;
				var operator = this.operatorSymbolToOperator.get(operatorSymbol);
				var result = [js.Boot.__cast(new xpath.tokenizer.OperatorToken(operator) , xpath.tokenizer.Token)];
				var characterLength = pos - input.position;
				characterLength += this.countWhitespace(input.query,pos);
				return input.getOutput(result,characterLength);
			}
		}
		throw new xpath.tokenizer.ExpectedException([{ tokenName : "Operator", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.OperatorTokenizer
});
xpath.tokenizer.token.PINameTestTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.PINameTestTokenizer"] = xpath.tokenizer.token.PINameTestTokenizer;
xpath.tokenizer.token.PINameTestTokenizer.__name__ = ["xpath","tokenizer","token","PINameTestTokenizer"];
xpath.tokenizer.token.PINameTestTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.PINameTestTokenizer.instance == null) xpath.tokenizer.token.PINameTestTokenizer.instance = new xpath.tokenizer.token.PINameTestTokenizer();
	return xpath.tokenizer.token.PINameTestTokenizer.instance;
};
xpath.tokenizer.token.PINameTestTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.PINameTestTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		if(HxOverrides.substr(input.query,pos,22) != "processing-instruction") throw new xpath.tokenizer.ExpectedException([{ tokenName : "PINameTest", position : input.position}]);
		pos += 22;
		pos += this.countWhitespace(input.query,pos);
		if(input.query.charAt(pos) != "(") throw new xpath.tokenizer.ExpectedException([{ tokenName : "PINameTest", position : input.position}]);
		++pos;
		pos += this.countWhitespace(input.query,pos);
		var name;
		var quote = input.query.charAt(pos);
		if(quote == "'" || quote == "\"") {
			var nameStartPos = pos + 1;
			var $char;
			do $char = input.query.charAt(++pos); while($char != quote && pos < input.query.length - 1);
			if($char == quote) name = HxOverrides.substr(input.query,nameStartPos,pos - nameStartPos); else throw new xpath.tokenizer.ExpectedException([{ tokenName : "PINameTest", position : input.position}]);
			++pos;
			pos += this.countWhitespace(input.query,pos);
		} else name = null;
		if(input.query.charAt(pos) == ")") {
			++pos;
			pos += this.countWhitespace(input.query,pos);
			var result = [js.Boot.__cast(new xpath.tokenizer.PINameTestToken(name) , xpath.tokenizer.Token)];
			var characterLength = pos - input.position;
			return input.getOutput(result,characterLength);
		} else throw new xpath.tokenizer.ExpectedException([{ tokenName : "PINameTest", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.PINameTestTokenizer
});
xpath.tokenizer.token.StepDelimiterTokenizer = function() {
	xpath.tokenizer.token.FixedStringTokenizer.call(this,new xpath.tokenizer.StepDelimiterToken(),"/","StepDelimiter");
};
$hxClasses["xpath.tokenizer.token.StepDelimiterTokenizer"] = xpath.tokenizer.token.StepDelimiterTokenizer;
xpath.tokenizer.token.StepDelimiterTokenizer.__name__ = ["xpath","tokenizer","token","StepDelimiterTokenizer"];
xpath.tokenizer.token.StepDelimiterTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.StepDelimiterTokenizer.instance == null) xpath.tokenizer.token.StepDelimiterTokenizer.instance = new xpath.tokenizer.token.StepDelimiterTokenizer();
	return xpath.tokenizer.token.StepDelimiterTokenizer.instance;
};
xpath.tokenizer.token.StepDelimiterTokenizer.__super__ = xpath.tokenizer.token.FixedStringTokenizer;
xpath.tokenizer.token.StepDelimiterTokenizer.prototype = $extend(xpath.tokenizer.token.FixedStringTokenizer.prototype,{
	__class__: xpath.tokenizer.token.StepDelimiterTokenizer
});
xpath.tokenizer.token.TypeTestTokenizer = function() {
	this.typeTestNameToTypeTest = new haxe.ds.StringMap();
	this.typeTestNameToTypeTest.set("comment",xpath.NodeCategory.Comment);
	this.typeTestNameToTypeTest.set("text",xpath.NodeCategory.Text);
	this.typeTestNameToTypeTest.set("node",xpath.NodeCategory.Node);
	this.typeNames = new Array();
	var $it0 = this.typeTestNameToTypeTest.keys();
	while( $it0.hasNext() ) {
		var typeName = $it0.next();
		this.typeNames.push(typeName);
	}
	this.typeNames.sort(function(x,y) {
		return y.length - x.length;
	});
};
$hxClasses["xpath.tokenizer.token.TypeTestTokenizer"] = xpath.tokenizer.token.TypeTestTokenizer;
xpath.tokenizer.token.TypeTestTokenizer.__name__ = ["xpath","tokenizer","token","TypeTestTokenizer"];
xpath.tokenizer.token.TypeTestTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.TypeTestTokenizer.instance == null) xpath.tokenizer.token.TypeTestTokenizer.instance = new xpath.tokenizer.token.TypeTestTokenizer();
	return xpath.tokenizer.token.TypeTestTokenizer.instance;
};
xpath.tokenizer.token.TypeTestTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.TypeTestTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		var _g = 0;
		var _g1 = this.typeNames;
		while(_g < _g1.length) {
			var typeName = _g1[_g];
			++_g;
			if(HxOverrides.substr(input.query,pos,typeName.length) == typeName) {
				pos += typeName.length;
				pos += this.countWhitespace(input.query,pos);
				if(input.query.charAt(pos) != "(") throw new xpath.tokenizer.ExpectedException([{ tokenName : "NodeCategory", position : input.position}]);
				++pos;
				pos += this.countWhitespace(input.query,pos);
				if(input.query.charAt(pos) != ")") throw new xpath.tokenizer.ExpectedException([{ tokenName : "NodeCategory", position : input.position}]);
				++pos;
				pos += this.countWhitespace(input.query,pos);
				var type = this.typeTestNameToTypeTest.get(typeName);
				var result = [js.Boot.__cast(new xpath.tokenizer.TypeTestToken(type) , xpath.tokenizer.Token)];
				var characterLength = pos - input.position;
				return input.getOutput(result,characterLength);
			}
		}
		throw new xpath.tokenizer.ExpectedException([{ tokenName : "NodeCategory", position : input.position}]);
	}
	,__class__: xpath.tokenizer.token.TypeTestTokenizer
});
xpath.tokenizer.token.VariableReferenceTokenizer = function() {
};
$hxClasses["xpath.tokenizer.token.VariableReferenceTokenizer"] = xpath.tokenizer.token.VariableReferenceTokenizer;
xpath.tokenizer.token.VariableReferenceTokenizer.__name__ = ["xpath","tokenizer","token","VariableReferenceTokenizer"];
xpath.tokenizer.token.VariableReferenceTokenizer.getInstance = function() {
	if(xpath.tokenizer.token.VariableReferenceTokenizer.instance == null) xpath.tokenizer.token.VariableReferenceTokenizer.instance = new xpath.tokenizer.token.VariableReferenceTokenizer();
	return xpath.tokenizer.token.VariableReferenceTokenizer.instance;
};
xpath.tokenizer.token.VariableReferenceTokenizer.__super__ = xpath.tokenizer.token.TokenTokenizer;
xpath.tokenizer.token.VariableReferenceTokenizer.prototype = $extend(xpath.tokenizer.token.TokenTokenizer.prototype,{
	tokenize: function(input) {
		var pos = input.position;
		if(input.query.charAt(pos) != "$") throw new xpath.tokenizer.ExpectedException([{ tokenName : "VariableReference", position : input.position}]);
		var nameStartPos = ++pos;
		var charCode = HxOverrides.cca(input.query,pos);
		if(pos >= input.query.length || (charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "VariableReference", position : input.position}]);
		do {
			var index = ++pos;
			charCode = HxOverrides.cca(input.query,index);
		} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		if(charCode != 58) {
			var name = HxOverrides.substr(input.query,nameStartPos,pos - nameStartPos);
			var result = [js.Boot.__cast(new xpath.tokenizer.VariableReferenceToken(name) , xpath.tokenizer.Token)];
			var characterLength = pos - input.position;
			characterLength += this.countWhitespace(input.query,pos);
			return input.getOutput(result,characterLength);
		}
		var index1 = ++pos;
		charCode = HxOverrides.cca(input.query,index1);
		if(pos >= input.query.length || (charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode < 128 && charCode != 95) throw new xpath.tokenizer.ExpectedException([{ tokenName : "VariableReference", position : input.position}]);
		do {
			var index2 = ++pos;
			charCode = HxOverrides.cca(input.query,index2);
		} while(charCode > 47 && charCode < 58 || charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 || charCode > 127 || charCode == 46 || charCode == 45 || charCode == 95);
		var name1 = HxOverrides.substr(input.query,nameStartPos,pos - nameStartPos);
		var result1 = [js.Boot.__cast(new xpath.tokenizer.VariableReferenceToken(name1) , xpath.tokenizer.Token)];
		var characterLength1 = pos - input.position;
		characterLength1 += this.countWhitespace(input.query,pos);
		return input.getOutput(result1,characterLength1);
	}
	,__class__: xpath.tokenizer.token.VariableReferenceTokenizer
});
xpath.tokenizer.util = {};
xpath.tokenizer.util.Disjunction = function(tokenizers) {
	if($iterator(tokenizers)().hasNext()) this.tokenizers = tokenizers; else throw new xpath.tokenizer.TokenizerError("Attempted to create an empty disjunction");
};
$hxClasses["xpath.tokenizer.util.Disjunction"] = xpath.tokenizer.util.Disjunction;
xpath.tokenizer.util.Disjunction.__name__ = ["xpath","tokenizer","util","Disjunction"];
xpath.tokenizer.util.Disjunction.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.util.Disjunction.prototype = {
	tokenize: function(input) {
		var expectedTokens = new List();
		var output = null;
		var $it0 = $iterator(this.tokenizers)();
		while( $it0.hasNext() ) {
			var tokenizer = $it0.next();
			try {
				var tmpOutput = tokenizer.tokenize(input);
				if(output == null || tmpOutput.characterLength > output.characterLength) output = tmpOutput;
			} catch( exception ) {
				if( js.Boot.__instanceof(exception,xpath.tokenizer.ExpectedException) ) {
					var $it1 = $iterator(exception.expectedTokens)();
					while( $it1.hasNext() ) {
						var expectedToken = $it1.next();
						expectedTokens.push(expectedToken);
					}
				} else throw(exception);
			}
		}
		if(output == null) throw new xpath.tokenizer.ExpectedException(expectedTokens); else return output;
	}
	,__class__: xpath.tokenizer.util.Disjunction
};
xpath.tokenizer.util.Sequence = function(tokenizers) {
	this.tokenizers = tokenizers;
};
$hxClasses["xpath.tokenizer.util.Sequence"] = xpath.tokenizer.util.Sequence;
xpath.tokenizer.util.Sequence.__name__ = ["xpath","tokenizer","util","Sequence"];
xpath.tokenizer.util.Sequence.__interfaces__ = [xpath.tokenizer.Tokenizer];
xpath.tokenizer.util.Sequence.prototype = {
	tokenize: function(input) {
		var iterator = $iterator(this.tokenizers)();
		var output = iterator.next().tokenize(input);
		var result = output.result;
		var characterLength = output.characterLength;
		while(iterator.hasNext()) {
			output = iterator.next().tokenize(output.getNextInput());
			result = result.concat(output.result);
			characterLength += output.characterLength;
		}
		return input.getOutput(result,characterLength);
	}
	,__class__: xpath.tokenizer.util.Sequence
};
xpath.tokenizer.util.Optional = function(tokenizers) {
	xpath.tokenizer.util.Sequence.call(this,tokenizers);
};
$hxClasses["xpath.tokenizer.util.Optional"] = xpath.tokenizer.util.Optional;
xpath.tokenizer.util.Optional.__name__ = ["xpath","tokenizer","util","Optional"];
xpath.tokenizer.util.Optional.__super__ = xpath.tokenizer.util.Sequence;
xpath.tokenizer.util.Optional.prototype = $extend(xpath.tokenizer.util.Sequence.prototype,{
	tokenize: function(input) {
		try {
			return xpath.tokenizer.util.Sequence.prototype.tokenize.call(this,input);
		} catch( exception ) {
			if( js.Boot.__instanceof(exception,xpath.tokenizer.TokenizerException) ) {
				return input.getOutput([],0);
			} else throw(exception);
		}
	}
	,__class__: xpath.tokenizer.util.Optional
});
xpath.tokenizer.util.Repetition = function(tokenizers) {
	xpath.tokenizer.util.Sequence.call(this,tokenizers);
};
$hxClasses["xpath.tokenizer.util.Repetition"] = xpath.tokenizer.util.Repetition;
xpath.tokenizer.util.Repetition.__name__ = ["xpath","tokenizer","util","Repetition"];
xpath.tokenizer.util.Repetition.__super__ = xpath.tokenizer.util.Sequence;
xpath.tokenizer.util.Repetition.prototype = $extend(xpath.tokenizer.util.Sequence.prototype,{
	tokenize: function(input) {
		var workingInput = input;
		var result = new Array();
		var characterLength = 0;
		var done = false;
		while(!done) try {
			var output = xpath.tokenizer.util.Sequence.prototype.tokenize.call(this,workingInput);
			result = result.concat(output.result);
			characterLength += output.characterLength;
			if(output.isComplete()) {
				characterLength = null;
				done = true;
			} else workingInput = output.getNextInput();
		} catch( exception ) {
			if( js.Boot.__instanceof(exception,xpath.tokenizer.TokenizerException) ) {
				done = true;
			} else throw(exception);
		}
		return input.getOutput(result,characterLength);
	}
	,__class__: xpath.tokenizer.util.Repetition
});
xpath.value = {};
xpath.value.XPathValue = function() {
};
$hxClasses["xpath.value.XPathValue"] = xpath.value.XPathValue;
xpath.value.XPathValue.__name__ = ["xpath","value","XPathValue"];
xpath.value.XPathValue.prototype = {
	getBool: function() {
		throw new xpath.XPathError("XPathValue.getBool() must be overridden");
		return false;
	}
	,getFloat: function() {
		throw new xpath.XPathError("XPathValue.getFloat() must be overridden");
		return 0;
	}
	,getString: function() {
		throw new xpath.XPathError("XPathValue.getString() must be overridden");
		return "";
	}
	,equals: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.equals() must be overridden");
		return null;
	}
	,notEqual: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.notEqual() must be overridden");
		return null;
	}
	,lessThanOrEqual: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.lessThanOrEqual() must be overridden");
		return null;
	}
	,greaterThanOrEqual: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.greaterThanOrEqual() must be overridden");
		return null;
	}
	,lessThan: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.lessThan() must be overridden");
		return null;
	}
	,greaterThan: function(rightOperand) {
		throw new xpath.XPathError("XPathValue.greaterThan() must be overridden");
		return null;
	}
	,getXPathBoolean: function() {
		return new xpath.value.XPathBoolean(this.getBool());
	}
	,getXPathNumber: function() {
		return new xpath.value.XPathNumber(this.getFloat());
	}
	,getXPathString: function() {
		return new xpath.value.XPathString(this.getString());
	}
	,and: function(rightOperand) {
		return new xpath.value.XPathBoolean(this.getBool() && rightOperand.getBool());
	}
	,or: function(rightOperand) {
		return new xpath.value.XPathBoolean(this.getBool() || rightOperand.getBool());
	}
	,plus: function(rightOperand) {
		return new xpath.value.XPathNumber(this.getFloat() + rightOperand.getFloat());
	}
	,minus: function(rightOperand) {
		return new xpath.value.XPathNumber(this.getFloat() - rightOperand.getFloat());
	}
	,multiply: function(rightOperand) {
		return new xpath.value.XPathNumber(this.getFloat() * rightOperand.getFloat());
	}
	,divide: function(rightOperand) {
		return new xpath.value.XPathNumber(this.getFloat() / rightOperand.getFloat());
	}
	,modulo: function(rightOperand) {
		return new xpath.value.XPathNumber(this.getFloat() % rightOperand.getFloat());
	}
	,union: function(rightOperand) {
		throw new xpath.EvaluationException("can't compute union of " + this.typeName + " and " + rightOperand.typeName);
		return null;
	}
	,stringToFloat: function(string) {
		var rx = new EReg("^\\s*((-)\\s*)?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)\\s*$","");
		if(rx.match(string)) {
			var signString;
			if(rx.matched(2) == "" || rx.matched(2) == null) return Std.parseFloat(rx.matched(3)); else return -Std.parseFloat(rx.matched(3));
		} else return Math.NaN;
	}
	,__class__: xpath.value.XPathValue
};
xpath.value.XPathBoolean = function(value) {
	xpath.value.XPathValue.call(this);
	this.typeName = "boolean";
	if(value == null) this.booleanValue = false; else this.booleanValue = value;
};
$hxClasses["xpath.value.XPathBoolean"] = xpath.value.XPathBoolean;
xpath.value.XPathBoolean.__name__ = ["xpath","value","XPathBoolean"];
xpath.value.XPathBoolean.__super__ = xpath.value.XPathValue;
xpath.value.XPathBoolean.prototype = $extend(xpath.value.XPathValue.prototype,{
	getBool: function() {
		return this.booleanValue;
	}
	,getFloat: function() {
		if(this.booleanValue) return 1.0; else return 0.0;
	}
	,getString: function() {
		if(this.booleanValue) return "true"; else return "false";
	}
	,equals: function(rightOperand) {
		return new xpath.value.XPathBoolean(this.getBool() == rightOperand.getBool());
	}
	,notEqual: function(rightOperand) {
		return new xpath.value.XPathBoolean(this.getBool() != rightOperand.getBool());
	}
	,lessThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) return new xpath.value.XPathBoolean(!this.getBool() || rightOperand.getBool()); else return new xpath.value.XPathBoolean(this.getFloat() <= rightOperand.getFloat());
	}
	,greaterThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) return new xpath.value.XPathBoolean(this.getBool() || !rightOperand.getBool()); else return new xpath.value.XPathBoolean(this.getFloat() >= rightOperand.getFloat());
	}
	,lessThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) return new xpath.value.XPathBoolean(!this.getBool() && rightOperand.getBool()); else return new xpath.value.XPathBoolean(this.getFloat() < rightOperand.getFloat());
	}
	,greaterThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) return new xpath.value.XPathBoolean(this.getBool() && !rightOperand.getBool()); else return new xpath.value.XPathBoolean(this.getFloat() > rightOperand.getFloat());
	}
	,__class__: xpath.value.XPathBoolean
});
xpath.value.XPathNumber = function(value) {
	xpath.value.XPathBoolean.call(this);
	this.typeName = "number";
	if(value == null) this.numberValue = 0; else this.numberValue = value;
};
$hxClasses["xpath.value.XPathNumber"] = xpath.value.XPathNumber;
xpath.value.XPathNumber.__name__ = ["xpath","value","XPathNumber"];
xpath.value.XPathNumber.__super__ = xpath.value.XPathBoolean;
xpath.value.XPathNumber.prototype = $extend(xpath.value.XPathBoolean.prototype,{
	getBool: function() {
		return this.numberValue != 0 && !Math.isNaN(this.numberValue);
	}
	,getFloat: function() {
		return this.numberValue;
	}
	,getString: function() {
		var string = Std.string(this.numberValue);
		var eIndex = string.indexOf("e");
		if(eIndex > -1) {
			var digits = string.charAt(0) + HxOverrides.substr(string,2,eIndex - 2);
			if(string.charAt(eIndex + 1) == "-") {
				var exponent = Std.parseInt(HxOverrides.substr(string,eIndex + 2,null));
				string = "0.";
				var _g = 1;
				while(_g < exponent) {
					var i = _g++;
					string += "0";
				}
				string += digits;
			} else {
				var exponent1 = Std.parseInt(HxOverrides.substr(string,eIndex + 1,null));
				if(digits.length <= exponent1 + 1) {
					string = digits;
					while(string.length <= exponent1) string += "0";
				} else string = HxOverrides.substr(digits,0,exponent1 + 1) + "." + HxOverrides.substr(digits,exponent1 + 1,null);
			}
		}
		return string;
	}
	,equals: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() == nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNumber)) return new xpath.value.XPathBoolean(this.getFloat() == rightOperand.getFloat()); else return xpath.value.XPathBoolean.prototype.equals.call(this,rightOperand);
	}
	,notEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() != nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNumber)) return new xpath.value.XPathBoolean(this.getFloat() != rightOperand.getFloat()); else return xpath.value.XPathBoolean.prototype.notEqual.call(this,rightOperand);
	}
	,lessThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() <= nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else return new xpath.value.XPathBoolean(this.getFloat() <= rightOperand.getFloat());
	}
	,greaterThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() >= nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else return new xpath.value.XPathBoolean(this.getFloat() >= rightOperand.getFloat());
	}
	,lessThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() < nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else return new xpath.value.XPathBoolean(this.getFloat() < rightOperand.getFloat());
	}
	,greaterThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				var nodeValue = this.stringToFloat(node.getStringValue());
				if(this.getFloat() > nodeValue) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else return new xpath.value.XPathBoolean(this.getFloat() > rightOperand.getFloat());
	}
	,__class__: xpath.value.XPathNumber
});
xpath.value.XPathString = function(value) {
	xpath.value.XPathNumber.call(this);
	this.typeName = "string";
	if(value == null) this.stringValue = ""; else this.stringValue = value;
};
$hxClasses["xpath.value.XPathString"] = xpath.value.XPathString;
xpath.value.XPathString.__name__ = ["xpath","value","XPathString"];
xpath.value.XPathString.__super__ = xpath.value.XPathNumber;
xpath.value.XPathString.prototype = $extend(xpath.value.XPathNumber.prototype,{
	getBool: function() {
		return this.stringValue.length != 0;
	}
	,getFloat: function() {
		return this.stringToFloat(this.stringValue);
	}
	,getString: function() {
		return this.stringValue;
	}
	,equals: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				if(this.getString() == node.getStringValue()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNumber)) return new xpath.value.XPathBoolean(this.getString() == rightOperand.getString()); else return xpath.value.XPathNumber.prototype.equals.call(this,rightOperand);
	}
	,notEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(nodes)();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				if(this.getString() != node.getStringValue()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		} else if(js.Boot.__instanceof(rightOperand,xpath.value.XPathString)) return new xpath.value.XPathBoolean(this.getString() != rightOperand.getString()); else return xpath.value.XPathNumber.prototype.notEqual.call(this,rightOperand);
	}
	,__class__: xpath.value.XPathString
});
xpath.value.XPathNodeSet = function(nodes) {
	xpath.value.XPathString.call(this);
	this.typeName = "node set";
	if(nodes == null) this.nodes = new Array(); else this.nodes = nodes;
};
$hxClasses["xpath.value.XPathNodeSet"] = xpath.value.XPathNodeSet;
xpath.value.XPathNodeSet.__name__ = ["xpath","value","XPathNodeSet"];
xpath.value.XPathNodeSet.__super__ = xpath.value.XPathString;
xpath.value.XPathNodeSet.prototype = $extend(xpath.value.XPathString.prototype,{
	getBool: function() {
		return $iterator(this.nodes)().hasNext();
	}
	,getFloat: function() {
		return this.getXPathString().getFloat();
	}
	,getString: function() {
		if($iterator(this.nodes)().hasNext()) return this.getFirstNodeDocumentOrder().getStringValue(); else return "";
	}
	,getNodes: function() {
		return this.nodes;
	}
	,getNodesDocumentOrder: function() {
		var result = new List();
		var nodesIterator = $iterator(this.nodes)();
		if(nodesIterator.hasNext()) {
			var $it0 = nodesIterator.next().getDocumentIterator();
			while( $it0.hasNext() ) {
				var node1 = $it0.next();
				var $it1 = $iterator(this.nodes)();
				while( $it1.hasNext() ) {
					var node2 = $it1.next();
					if(node1["is"](node2)) result.add(node1);
				}
			}
		}
		return result;
	}
	,getFirstNodeDocumentOrder: function() {
		var nodesIterator = $iterator(this.nodes)();
		if(nodesIterator.hasNext()) {
			var $it0 = nodesIterator.next().getDocumentIterator();
			while( $it0.hasNext() ) {
				var node1 = $it0.next();
				var $it1 = $iterator(this.nodes)();
				while( $it1.hasNext() ) {
					var node2 = $it1.next();
					if(node1["is"](node2)) return node1;
				}
			}
		} else throw new xpath.EvaluationException("Attempted to get first node of an empty node set");
		throw new xpath.XPathError();
	}
	,equals: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					if(leftString == rightNode.getStringValue()) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else return rightOperand.equals(this);
	}
	,notEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					if(leftString != rightNode.getStringValue()) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else return rightOperand.notEqual(this);
	}
	,lessThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var leftValue = this.stringToFloat(leftString);
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					var rightString = rightNode.getStringValue();
					var rightValue = this.stringToFloat(rightString);
					if(leftValue <= rightValue) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else {
			var $it2 = $iterator(this.nodes)();
			while( $it2.hasNext() ) {
				var node = $it2.next();
				var nodeString = node.getStringValue();
				var nodeValue = this.stringToFloat(nodeString);
				if(nodeValue <= rightOperand.getFloat()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		}
	}
	,greaterThanOrEqual: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var leftValue = this.stringToFloat(leftString);
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					var rightString = rightNode.getStringValue();
					var rightValue = this.stringToFloat(rightString);
					if(leftValue >= rightValue) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else {
			var $it2 = $iterator(this.nodes)();
			while( $it2.hasNext() ) {
				var node = $it2.next();
				var nodeString = node.getStringValue();
				var nodeValue = this.stringToFloat(nodeString);
				if(nodeValue >= rightOperand.getFloat()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		}
	}
	,lessThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var leftValue = this.stringToFloat(leftString);
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					var rightString = rightNode.getStringValue();
					var rightValue = this.stringToFloat(rightString);
					if(leftValue < rightValue) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else {
			var $it2 = $iterator(this.nodes)();
			while( $it2.hasNext() ) {
				var node = $it2.next();
				var nodeString = node.getStringValue();
				var nodeValue = this.stringToFloat(nodeString);
				if(nodeValue < rightOperand.getFloat()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		}
	}
	,greaterThan: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var rightNodes = (js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes();
			var $it0 = $iterator(this.nodes)();
			while( $it0.hasNext() ) {
				var leftNode = $it0.next();
				var leftString = leftNode.getStringValue();
				var leftValue = this.stringToFloat(leftString);
				var $it1 = $iterator(rightNodes)();
				while( $it1.hasNext() ) {
					var rightNode = $it1.next();
					var rightString = rightNode.getStringValue();
					var rightValue = this.stringToFloat(rightString);
					if(leftValue > rightValue) return new xpath.value.XPathBoolean(true);
				}
			}
			return new xpath.value.XPathBoolean(false);
		} else {
			var $it2 = $iterator(this.nodes)();
			while( $it2.hasNext() ) {
				var node = $it2.next();
				var nodeString = node.getStringValue();
				var nodeValue = this.stringToFloat(nodeString);
				if(nodeValue > rightOperand.getFloat()) return new xpath.value.XPathBoolean(true);
			}
			return new xpath.value.XPathBoolean(false);
		}
	}
	,union: function(rightOperand) {
		if(js.Boot.__instanceof(rightOperand,xpath.value.XPathNodeSet)) {
			var nodes = new List();
			var $it0 = $iterator(this.getNodes())();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				nodes.add(node);
			}
			var $it1 = $iterator((js.Boot.__cast(rightOperand , xpath.value.XPathNodeSet)).getNodes())();
			while( $it1.hasNext() ) {
				var node1 = $it1.next();
				nodes.add(node1);
			}
			return new xpath.value.XPathNodeSet(nodes);
		} else return xpath.value.XPathString.prototype.union.call(this,rightOperand);
	}
	,__class__: xpath.value.XPathNodeSet
});
xpath.xml = {};
xpath.xml.XPathXml = function() { };
$hxClasses["xpath.xml.XPathXml"] = xpath.xml.XPathXml;
xpath.xml.XPathXml.__name__ = ["xpath","xml","XPathXml"];
xpath.xml.XPathXml.prototype = {
	getParent: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getParent must be overridden");
		return null;
	}
	,getType: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getType must be overridden");
		return null;
	}
	,getName: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getName must be overridden");
		return null;
	}
	,getValue: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getValue must be overridden");
		return null;
	}
	,getStringValue: function() {
		var type = this.getType();
		if(type == xpath.xml.XmlNodeType.Root || type == xpath.xml.XmlNodeType.Element) {
			var result = "";
			var $it0 = this.getDescendantIterator();
			while( $it0.hasNext() ) {
				var descendant = $it0.next();
				if(descendant.getType() == xpath.xml.XmlNodeType.Text) result += descendant.getValue();
			}
			return result;
		} else if(type == xpath.xml.XmlNodeType.ProcessingInstruction || type == xpath.xml.XmlNodeType.Text || type == xpath.xml.XmlNodeType.Attribute) return this.getValue(); else return "";
	}
	,'is': function(operand) {
		throw new xpath.XPathError("xpath.xml.XPathXml.is must be overridden");
		return false;
	}
	,getAxisIterator: function(axis) {
		switch(axis[1]) {
		case 0:
			return this.getAncestorIterator();
		case 1:
			return this.getAncestorOrSelfIterator();
		case 2:
			return this.getAttributeIterator();
		case 3:
			return this.getChildIterator();
		case 4:
			return this.getDescendantIterator();
		case 5:
			return this.getDescendantOrSelfIterator();
		case 6:
			return this.getFollowingIterator();
		case 7:
			return this.getFollowingSiblingIterator();
		case 8:
			return this.getNamespaceIterator();
		case 9:
			return this.getParentIterator();
		case 10:
			return this.getPrecedingIterator();
		case 11:
			return this.getPrecedingSiblingIterator();
		case 12:
			return this.getSelfIterator();
		}
	}
	,getAxisIterable: function(axis) {
		var me = this;
		return { iterator : function() {
			return me.getAxisIterator(axis);
		}};
	}
	,getAncestorIterator: function() {
		var nextNode = this.getParent();
		return { hasNext : function() {
			return nextNode != null;
		}, next : function() {
			var result = nextNode;
			nextNode = nextNode.getParent();
			return result;
		}};
	}
	,getAncestorOrSelfIterator: function() {
		var nextNode = this;
		return { hasNext : function() {
			return nextNode != null;
		}, next : function() {
			var result = nextNode;
			nextNode = nextNode.getParent();
			return result;
		}};
	}
	,getAttributeIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getAttributeIterator must be overridden");
		return null;
	}
	,getChildIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getChildIterator must be overridden");
		return null;
	}
	,getDescendantIterator: function() {
		var iterators = new List();
		iterators.push(this.getChildIterator());
		var hasNext = function() {
			while(iterators.length > 0) if(iterators.first().hasNext()) return true; else iterators.pop();
			return false;
		};
		var next = function() {
			if(hasNext()) {
				var result = iterators.first().next();
				iterators.push(result.getChildIterator());
				return result;
			} else return null;
		};
		return { hasNext : hasNext, next : next};
	}
	,getDescendantOrSelfIterator: function() {
		var iterators = new List();
		iterators.push(this.getSelfIterator());
		var hasNext = function() {
			while(iterators.length > 0) if(iterators.first().hasNext()) return true; else iterators.pop();
			return false;
		};
		var next = function() {
			if(hasNext()) {
				var result = iterators.first().next();
				iterators.push(result.getChildIterator());
				return result;
			} else return null;
		};
		return { hasNext : hasNext, next : next};
	}
	,getFollowingIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getFollowingIterator must be overridden");
		return null;
	}
	,getFollowingSiblingIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getFollowingSiblingIterator must be overridden");
		return null;
	}
	,getNamespaceIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getNamespaceIterator must be overridden");
		return null;
	}
	,getParentIterator: function() {
		var node = this.getParent();
		return { hasNext : function() {
			return node != null;
		}, next : function() {
			var result = node;
			node = null;
			return result;
		}};
	}
	,getPrecedingIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getPrecedingIterator must be overridden");
		return null;
	}
	,getPrecedingSiblingIterator: function() {
		throw new xpath.XPathError("xpath.xml.XPathXml.getPrecedingSiblingIterator must be overridden");
		return null;
	}
	,getSelfIterator: function() {
		var node = this;
		return { hasNext : function() {
			return node != null;
		}, next : function() {
			var result = node;
			node = null;
			return result;
		}};
	}
	,getDocumentIterator: function() {
		var document = this;
		while(document.getParent() != null) document = document.getParent();
		var nodes = document.getDescendantOrSelfIterator();
		var attributes = { hasNext : function() {
			return false;
		}, next : function() {
			return null;
		}};
		return { hasNext : function() {
			return attributes.hasNext() || nodes.hasNext();
		}, next : function() {
			if(attributes.hasNext()) return attributes.next(); else if(nodes.hasNext()) {
				var result = nodes.next();
				attributes = result.getAttributeIterator();
				return result;
			} else return null;
		}};
	}
	,__class__: xpath.xml.XPathXml
};
xpath.xml.XPathHxXml = function() {
};
$hxClasses["xpath.xml.XPathHxXml"] = xpath.xml.XPathHxXml;
xpath.xml.XPathHxXml.__name__ = ["xpath","xml","XPathHxXml"];
xpath.xml.XPathHxXml.wrapNode = function(hxXml) {
	if(hxXml == null) throw new xpath.XPathException("Can't wrap null for XPath"); else if(hxXml.nodeType == Xml.DocType) throw new xpath.XPathException("Can't wrap XML document type declaration for XPath"); else {
		if(xpath.xml.XPathHxXml.isTextNode(hxXml)) {
			if(hxXml.get_parent() != null) {
				var textStart = null;
				var $it0 = hxXml.get_parent().iterator();
				while( $it0.hasNext() ) {
					var sibling = $it0.next();
					if(xpath.xml.XPathHxXml.isTextNode(sibling)) {
						if(textStart == null) textStart = sibling;
						if(sibling == hxXml) break;
					} else textStart = null;
				}
				if(textStart != null) hxXml = textStart;
			}
		}
		var node = new xpath.xml.XPathHxXml();
		node.hxXml = hxXml;
		return node;
	}
};
xpath.xml.XPathHxXml.wrapAttribute = function(attributeParent,attributeName) {
	if(attributeParent != null && attributeParent.nodeType == Xml.Element && attributeParent.exists(attributeName)) {
		var node = new xpath.xml.XPathHxXml();
		node.attributeParent = attributeParent;
		node.attributeName = attributeName;
		return node;
	} else throw new xpath.XPathException("Can't wrap attribute that doesn't exist");
};
xpath.xml.XPathHxXml.fastWrapNode = function(hxXml) {
	var node = new xpath.xml.XPathHxXml();
	node.hxXml = hxXml;
	return node;
};
xpath.xml.XPathHxXml.pcDecode = function(pcData) {
	var i = 0;
	var j = 0;
	var result = "";
	while(j < pcData.length) {
		if(pcData.charAt(j) == "&") {
			result += HxOverrides.substr(pcData,i,j - i);
			i = ++j;
			while(j < pcData.length && pcData.charAt(j) != ";") ++j;
			if(j == pcData.length) break;
			result += xpath.xml.XPathHxXml.refDecode(HxOverrides.substr(pcData,i,j - i));
			i = j + 1;
		}
		++j;
	}
	result += HxOverrides.substr(pcData,i,null);
	return result;
};
xpath.xml.XPathHxXml.refDecode = function(ref) {
	if(ref.charAt(0) == "#") {
		if(ref.charAt(1) == "x") return String.fromCharCode(Std.parseInt("0" + HxOverrides.substr(ref,1,null))); else return String.fromCharCode(Std.parseInt(HxOverrides.substr(ref,1,null)));
	} else switch(ref) {
	case "lt":
		return "<";
	case "gt":
		return ">";
	case "amp":
		return "&";
	case "apos":
		return "'";
	case "quot":
		return "\"";
	default:
		return "&" + ref + ";";
	}
};
xpath.xml.XPathHxXml.isTextNode = function(hxXml) {
	return hxXml.nodeType == Xml.CData || hxXml.nodeType == Xml.PCData;
};
xpath.xml.XPathHxXml.isContainerNode = function(hxXml) {
	return hxXml.nodeType == Xml.Element || hxXml.nodeType == Xml.Document;
};
xpath.xml.XPathHxXml.hasChildNodes = function(hxXml) {
	return (hxXml.nodeType == Xml.Element || hxXml.nodeType == Xml.Document) && hxXml.firstChild() != null;
};
xpath.xml.XPathHxXml.__super__ = xpath.xml.XPathXml;
xpath.xml.XPathHxXml.prototype = $extend(xpath.xml.XPathXml.prototype,{
	getParent: function() {
		if(this.attributeName == null) {
			if(this.hxXml.get_parent() == null) return null; else return xpath.xml.XPathHxXml.fastWrapNode(this.hxXml.get_parent());
		} else return xpath.xml.XPathHxXml.fastWrapNode(this.attributeParent);
	}
	,getType: function() {
		if(this.attributeName == null) switch(this.hxXml.nodeType) {
		case Xml.CData:
			return xpath.xml.XmlNodeType.Text;
		case Xml.Comment:
			return xpath.xml.XmlNodeType.Comment;
		case Xml.Document:
			return xpath.xml.XmlNodeType.Root;
		case Xml.Element:
			return xpath.xml.XmlNodeType.Element;
		case Xml.PCData:
			return xpath.xml.XmlNodeType.Text;
		case Xml.ProcessingInstruction:
			return xpath.xml.XmlNodeType.ProcessingInstruction;
		default:
			throw new xpath.XPathError();
		} else return xpath.xml.XmlNodeType.Attribute;
	}
	,getName: function() {
		if(this.attributeName == null) {
			if(this.hxXml.nodeType == Xml.Element) return this.hxXml.get_nodeName(); else return null;
		} else return this.attributeName;
	}
	,getValue: function() {
		if(this.attributeName == null) switch(this.hxXml.nodeType) {
		case Xml.CData:
			return this.getTextNodeValue();
		case Xml.PCData:
			return this.getTextNodeValue();
		case Xml.ProcessingInstruction:
			return this.hxXml.get_nodeValue();
		default:
			return null;
		} else return xpath.xml.XPathHxXml.pcDecode(this.attributeParent.get(this.attributeName));
	}
	,'is': function(operand) {
		return js.Boot.__instanceof(operand,xpath.xml.XPathHxXml) && this.hxXml == (js.Boot.__cast(operand , xpath.xml.XPathHxXml)).hxXml && this.attributeName == (js.Boot.__cast(operand , xpath.xml.XPathHxXml)).attributeName;
	}
	,getAttributeIterator: function() {
		if(this.hxXml == null || this.hxXml.nodeType != Xml.Element) return new List().iterator();
		var iterator = this.hxXml.attributes();
		var me = this;
		return { hasNext : function() {
			return iterator.hasNext();
		}, next : function() {
			if(iterator.hasNext()) return xpath.xml.XPathHxXml.wrapAttribute(me.hxXml,iterator.next()); else return null;
		}};
	}
	,getChildIterator: function() {
		if(this.hxXml == null) return new List().iterator();
		if(!xpath.xml.XPathHxXml.isContainerNode(this.hxXml)) return new List().iterator();
		var iterator = this.hxXml.iterator();
		var nextNode = null;
		var inText = false;
		var hasNext = function() {
			return nextNode != null;
		};
		var next = function() {
			var result;
			if(nextNode == null) result = null; else result = xpath.xml.XPathHxXml.fastWrapNode(nextNode);
			if(inText) {
				inText = false;
				while(xpath.xml.XPathHxXml.isTextNode(nextNode)) if(iterator.hasNext()) nextNode = iterator.next(); else {
					nextNode = null;
					break;
				}
			} else if(iterator.hasNext()) {
				nextNode = iterator.next();
				inText = xpath.xml.XPathHxXml.isTextNode(nextNode);
			} else nextNode = null;
			return result;
		};
		next();
		return { hasNext : hasNext, next : next};
	}
	,getFollowingIterator: function() {
		if(this.hxXml == null) return new List().iterator();
		var nextNode = this.hxXml;
		var inText = false;
		var iterators = new List();
		if(xpath.xml.XPathHxXml.isContainerNode(this.hxXml)) iterators.add(this.hxXml.iterator());
		while(nextNode.get_parent() != null) {
			var iterator = nextNode.get_parent().iterator();
			while(iterator.next() != nextNode) {
			}
			iterators.add(iterator);
			nextNode = nextNode.get_parent();
		}
		var hasNext = function() {
			return nextNode != null;
		};
		var next = function() {
			var result;
			if(nextNode == null) result = null; else result = xpath.xml.XPathHxXml.fastWrapNode(nextNode);
			if(inText) {
				while(xpath.xml.XPathHxXml.isTextNode(nextNode)) if(iterators.first().hasNext()) nextNode = iterators.first().next(); else {
					nextNode = null;
					break;
				}
				inText = false;
			} else if(iterators.length > 0 && iterators.first().hasNext()) {
				nextNode = iterators.first().next();
				inText = xpath.xml.XPathHxXml.isTextNode(nextNode);
			} else nextNode = null;
			if(nextNode == null) {
				while(iterators.length > 0 && !iterators.first().hasNext()) iterators.pop();
				if(iterators.length > 0) {
					nextNode = iterators.first().next();
					inText = xpath.xml.XPathHxXml.isTextNode(nextNode);
				}
			}
			if(nextNode != null && nextNode.nodeType == Xml.Element) iterators.push(nextNode.iterator());
			return result;
		};
		next();
		return { hasNext : hasNext, next : next};
	}
	,getFollowingSiblingIterator: function() {
		if(this.hxXml == null) return new List().iterator();
		if(this.hxXml.get_parent() == null) return new List().iterator();
		var nextNode = this.hxXml;
		var inText = false;
		var iterator = this.hxXml.get_parent().iterator();
		while(iterator.next() != this.hxXml) {
		}
		var hasNext = function() {
			return nextNode != null;
		};
		var next = function() {
			var result = xpath.xml.XPathHxXml.fastWrapNode(nextNode);
			if(inText) do if(iterator.hasNext()) {
				nextNode = iterator.next();
				inText = xpath.xml.XPathHxXml.isTextNode(nextNode);
			} else {
				nextNode = null;
				inText = false;
			} while(inText); else if(iterator.hasNext()) {
				nextNode = iterator.next();
				inText = xpath.xml.XPathHxXml.isTextNode(nextNode);
			} else nextNode = null;
			return result;
		};
		next();
		return { hasNext : hasNext, next : next};
	}
	,getNamespaceIterator: function() {
		return new List().iterator();
	}
	,getPrecedingIterator: function() {
		var stack = new List();
		if(this.hxXml == null) return stack.iterator();
		var parent = this.hxXml;
		var hasNext = function() {
			do {
				if(stack.length > 0) return true;
				var pivot = parent;
				parent = parent.get_parent();
				if(parent != null) {
					stack.push(xpath.xml.XPathHxXml.fastWrapNode(parent));
					var inText = false;
					var $it0 = parent.iterator();
					while( $it0.hasNext() ) {
						var sibling = $it0.next();
						if(sibling == pivot) break;
						if(xpath.xml.XPathHxXml.isContainerNode(sibling)) {
							var wrappedContainer = xpath.xml.XPathHxXml.fastWrapNode(sibling);
							stack.push(wrappedContainer);
							var $it1 = wrappedContainer.getDescendantIterator();
							while( $it1.hasNext() ) {
								var wrappedDescendant = $it1.next();
								stack.push(wrappedDescendant);
							}
							inText = false;
						} else if(!inText || !xpath.xml.XPathHxXml.isTextNode(sibling)) {
							stack.push(xpath.xml.XPathHxXml.fastWrapNode(sibling));
							inText = xpath.xml.XPathHxXml.isTextNode(sibling);
						}
					}
				}
			} while(parent != null);
			return false;
		};
		var next = function() {
			if(hasNext()) return stack.pop(); else return null;
		};
		return { hasNext : hasNext, next : next};
	}
	,getPrecedingSiblingIterator: function() {
		var stack = new List();
		if(this.hxXml != null && this.hxXml.get_parent() != null) {
			var inText = false;
			var $it0 = this.hxXml.get_parent().iterator();
			while( $it0.hasNext() ) {
				var sibling = $it0.next();
				if(sibling == this.hxXml) break; else if(!inText || !xpath.xml.XPathHxXml.isTextNode(sibling)) {
					stack.push(xpath.xml.XPathHxXml.fastWrapNode(sibling));
					inText = xpath.xml.XPathHxXml.isTextNode(sibling);
				}
			}
		}
		return stack.iterator();
	}
	,getWrappedXml: function() {
		if(this.hxXml == null) throw new xpath.XPathException("Can't unwrap attribute node into Haxe Xml"); else return this.hxXml;
	}
	,getTextNodeValue: function() {
		var result = "";
		var siblings;
		var parentHxXml = this.hxXml.get_parent();
		if(parentHxXml == null) siblings = HxOverrides.iter([this.hxXml]); else siblings = parentHxXml.iterator();
		var sibling = siblings.next();
		while(sibling != this.hxXml) sibling = siblings.next();
		while(sibling != null) {
			if(sibling.nodeType == Xml.CData) result += sibling.get_nodeValue(); else if(sibling.nodeType == Xml.PCData) result += xpath.xml.XPathHxXml.pcDecode(sibling.get_nodeValue()); else break;
			if(siblings.hasNext()) sibling = siblings.next(); else sibling = null;
		}
		return result;
	}
	,__class__: xpath.xml.XPathHxXml
});
xpath.xml.XmlNodeType = $hxClasses["xpath.xml.XmlNodeType"] = { __ename__ : ["xpath","xml","XmlNodeType"], __constructs__ : ["Root","Element","Text","Attribute","Namespace","ProcessingInstruction","Comment"] };
xpath.xml.XmlNodeType.Root = ["Root",0];
xpath.xml.XmlNodeType.Root.toString = $estr;
xpath.xml.XmlNodeType.Root.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.Element = ["Element",1];
xpath.xml.XmlNodeType.Element.toString = $estr;
xpath.xml.XmlNodeType.Element.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.Text = ["Text",2];
xpath.xml.XmlNodeType.Text.toString = $estr;
xpath.xml.XmlNodeType.Text.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.Attribute = ["Attribute",3];
xpath.xml.XmlNodeType.Attribute.toString = $estr;
xpath.xml.XmlNodeType.Attribute.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.Namespace = ["Namespace",4];
xpath.xml.XmlNodeType.Namespace.toString = $estr;
xpath.xml.XmlNodeType.Namespace.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.ProcessingInstruction = ["ProcessingInstruction",5];
xpath.xml.XmlNodeType.ProcessingInstruction.toString = $estr;
xpath.xml.XmlNodeType.ProcessingInstruction.__enum__ = xpath.xml.XmlNodeType;
xpath.xml.XmlNodeType.Comment = ["Comment",6];
xpath.xml.XmlNodeType.Comment.toString = $estr;
xpath.xml.XmlNodeType.Comment.__enum__ = xpath.xml.XmlNodeType;
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
Math.NaN = Number.NaN;
Math.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY;
Math.POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
$hxClasses.Math = Math;
Math.isFinite = function(i) {
	return isFinite(i);
};
Math.isNaN = function(i1) {
	return isNaN(i1);
};
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
Xml.Element = "element";
Xml.PCData = "pcdata";
Xml.CData = "cdata";
Xml.Comment = "comment";
Xml.DocType = "doctype";
Xml.ProcessingInstruction = "processingInstruction";
Xml.Document = "document";
haxe.Resource.content = [{ name : "ui/todo.xml", data : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiID8+Cjx2Ym94PgoJPHRleHQgdGV4dD0iV29yayBpbiBwcm9ncmVzcyIgLz4KPC92Ym94Pg"},{ name : "data/views.xml", data : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiID8+Cjx2aWV3cz4KCTwhLS0KCSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkqIEdFTkVSQUwgQ09NUE9ORU5UUwoJKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS0tPgoJPHZpZXc+CgkJPGdyb3VwPkdlbmVyYWw8L2dyb3VwPgoJCTxuYW1lPkJ1dHRvbnM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktYnV0dG9ucy5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5CdXR0b25zPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvQnV0dG9ucy9CdXR0b25zLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0J1dHRvbnMvQnV0dG9ucy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoKCTx2aWV3PgoJCTxncm91cD5HZW5lcmFsPC9ncm91cD4KCQk8bmFtZT5UZXh0IEZpZWxkczwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1sYWJlbHMucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuVGV4dEZpZWxkczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1RleHRGaWVsZHMvVGV4dEZpZWxkcy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9UZXh0RmllbGRzL1RleHRGaWVsZHMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+VGV4dCBJbnB1dHM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktdGV4dC1maWVsZC5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5UZXh0SW5wdXRzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvVGV4dElucHV0cy9UZXh0SW5wdXRzLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL1RleHRJbnB1dHMvVGV4dElucHV0cy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+Q2hlY2sgQm94ZXM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktY2hlY2stYm94ZXMucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuQ2hlY2tCb3hlczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0NoZWNrQm94ZXMvQ2hlY2tCb3hlcy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9DaGVja0JveGVzL0NoZWNrQm94ZXMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+T3B0aW9uIEJveGVzPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXJhZGlvLWJ1dHRvbnMucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuT3B0aW9uQm94ZXM8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9PcHRpb25Cb3hlcy9PcHRpb25Cb3hlcy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9PcHRpb25Cb3hlcy9PcHRpb25Cb3hlcy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+SW1hZ2VzPC9uYW1lPgoJCTxpY29uPmljb25zL2ltYWdlcy5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5JbWFnZXM8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9JbWFnZXMvSW1hZ2VzLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0ltYWdlcy9JbWFnZXMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPHZpZXc+CgkJPGdyb3VwPkdlbmVyYWw8L2dyb3VwPgoJCTxuYW1lPlNwYWNlcnM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktc3BhY2VyLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLlRvZG88L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+VGFiIEJhcnM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktdGFiLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLlRvZG88L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+R2VuZXJhbDwvZ3JvdXA+CgkJPG5hbWU+TWVudXM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktbWVudS1ibHVlLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLlRvZG88L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPCEtLQoJKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCSogQ09OVEFJTkVSUwoJKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS0tPgoJPHZpZXc+CgkJPGdyb3VwPkNvbnRhaW5lcnM8L2dyb3VwPgoJCTxuYW1lPlNjcm9sbCB2aWV3PC9uYW1lPgoJCTxpY29uPmljb25zL3VpLWxpc3QtYm94LWJsdWUucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuU2Nyb2xsVmlld3M8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9TY3JvbGxWaWV3cy9TY3JvbGxWaWV3cy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9TY3JvbGxWaWV3cy9TY3JvbGxWaWV3cy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8dmlldz4KCQk8Z3JvdXA+Q29udGFpbmVyczwvZ3JvdXA+CgkJPG5hbWU+TGlzdCB2aWV3PC9uYW1lPgoJCTxpY29uPmljb25zL3VpLWxpc3QtYm94LWJsdWUucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuTGlzdFZpZXdzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvTGlzdFZpZXdzL0xpc3RWaWV3cy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9MaXN0Vmlld3MvTGlzdFZpZXdzLnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgoJPHZpZXc+CgkJPGdyb3VwPkNvbnRhaW5lcnM8L2dyb3VwPgoJCTxuYW1lPkFjY29yZGlvbjwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1hY2NvcmRpb24ucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuQWNjb3JkaW9uczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0FjY29yZGlvbnMvQWNjb3JkaW9ucy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9BY2NvcmRpb25zL0FjY29yZGlvbnMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPCEtLQoJKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCSogU0VMRUNUSU9OCgkqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLS0+Cgk8dmlldz4KCQk8Z3JvdXA+U2VsZWN0aW9uPC9ncm91cD4KCQk8bmFtZT5MaXN0PC9uYW1lPgoJCTxpY29uPmljb25zL3VpLWxpc3QtYm94LWJsdWUucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuTGlzdFNlbGVjdG9yczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0xpc3RTZWxlY3RvcnMvTGlzdFNlbGVjdG9ycy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9MaXN0U2VsZWN0b3JzL0xpc3RTZWxlY3RvcnMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+U2VsZWN0aW9uPC9ncm91cD4KCQk8bmFtZT5EYXRlPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLWNvbWJvLWJveC1jYWxlbmRhci5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5EYXRlU2VsZWN0b3JzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvRGF0ZVNlbGVjdG9ycy9EYXRlU2VsZWN0b3JzLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0RhdGVTZWxlY3RvcnMvRGF0ZVNlbGVjdG9ycy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8IS0tCgkqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJKiBTQ1JPTExTCgkqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLS0+Cgk8dmlldz4KCQk8Z3JvdXA+U2Nyb2xsczwvZ3JvdXA+CgkJPG5hbWU+SG9yaXpvbnRhbCBTY3JvbGxiYXJzPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXNjcm9sbC1iYXItaG9yaXpvbnRhbC5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5IU2Nyb2xsQmFyczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1Njcm9sbEJhcnMvSFNjcm9sbEJhcnMuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvU2Nyb2xsQmFycy9IU2Nyb2xsQmFycy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoKCTx2aWV3PgoJCTxncm91cD5TY3JvbGxzPC9ncm91cD4KCQk8bmFtZT5WZXJ0aWNhbCBTY3JvbGxiYXJzPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXNjcm9sbC1iYXIucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuVlNjcm9sbEJhcnM8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9TY3JvbGxCYXJzL1ZTY3JvbGxCYXJzLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL1Njcm9sbEJhcnMvVlNjcm9sbEJhcnMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPHZpZXc+CgkJPGdyb3VwPlNjcm9sbHM8L2dyb3VwPgoJCTxuYW1lPkhvcml6b250YWwgU2xpZGVyczwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1zbGlkZXItMDUwLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLkhTbGlkZXJzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvU2xpZGVycy9IU2xpZGVycy5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9TbGlkZXJzL0hTbGlkZXJzLnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgoJPHZpZXc+CgkJPGdyb3VwPlNjcm9sbHM8L2dyb3VwPgoJCTxuYW1lPlZlcnRpY2FsIFNsaWRlcnM8L25hbWU+CgkJPGljb24+aWNvbnMvdWktc2xpZGVyLXZlcnRpY2FsLTA1MC5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5WU2xpZGVyczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1NsaWRlcnMvVlNsaWRlcnMuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvU2xpZGVycy9WU2xpZGVycy54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8dmlldz4KCQk8Z3JvdXA+U2Nyb2xsczwvZ3JvdXA+CgkJPG5hbWU+SG9yaXpvbnRhbCBQcm9ncmVzcyBCYXJzPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXByb2dyZXNzLWJhci5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5IUHJvZ3Jlc3NCYXJzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvUHJvZ3Jlc3NCYXJzL0hQcm9ncmVzc0JhcnMuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvUHJvZ3Jlc3NCYXJzL0hQcm9ncmVzc0JhcnMueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+U2Nyb2xsczwvZ3JvdXA+CgkJPG5hbWU+VmVydGljYWwgUHJvZ3Jlc3MgQmFyczwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1wcm9ncmVzcy1iYXItdmVydGljYWwucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuVlByb2dyZXNzQmFyczwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1Byb2dyZXNzQmFycy9WUHJvZ3Jlc3NCYXJzLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL1Byb2dyZXNzQmFycy9WUHJvZ3Jlc3NCYXJzLnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTwhLS0KCSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkqIExBWU9VVFMKCSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgktLT4KCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5BYnNvbHV0ZTwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1sYXllcmVkLXBhbmUucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuQWJzb2x1dGVMYXlvdXQ8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9BYnNvbHV0ZUxheW91dC9BYnNvbHV0ZUxheW91dC5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9BYnNvbHV0ZUxheW91dC9BYnNvbHV0ZUxheW91dC54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoKCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5Cb3g8L25hbWU+CgkJPGljb24+aWNvbnMvdWktcGFuZWwucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuQm94TGF5b3V0PC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvQm94TGF5b3V0L0JveExheW91dC5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9Cb3hMYXlvdXQvQm94TGF5b3V0LnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5Ib3Jpem9udGFsPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXNwbGl0LXBhbmVsLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLkhvcml6b250YWxMYXlvdXQ8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9Ib3Jpem9udGFsTGF5b3V0L0hvcml6b250YWxMYXlvdXQuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvSG9yaXpvbnRhbExheW91dC9Ib3Jpem9udGFsTGF5b3V0LnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5WZXJ0aWNhbDwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1zcGxpdC1wYW5lbC12ZXJ0aWNhbC5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5WZXJ0aWNhbExheW91dDwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1ZlcnRpY2FsTGF5b3V0L1ZlcnRpY2FsTGF5b3V0Lmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL1ZlcnRpY2FsTGF5b3V0L1ZlcnRpY2FsTGF5b3V0LnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5HcmlkPC9uYW1lPgoJCTxpY29uPmljb25zL2dyaWQucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuR3JpZExheW91dDwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0dyaWRMYXlvdXQvR3JpZExheW91dC5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9HcmlkTGF5b3V0L0dyaWRMYXlvdXQueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPHZpZXc+CgkJPGdyb3VwPkxheW91dHM8L2dyb3VwPgoJCTxuYW1lPkhvcml6b250YWwgQ29udGludW91czwvbmFtZT4KCQk8aWNvbj5pY29ucy91aS1mbG93LnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLkhDb250aW51b3VzTGF5b3V0PC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvQ29udGludW91c0xheW91dC9IQ29udGludW91c0xheW91dC5oeDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9Db250aW51b3VzTGF5b3V0L0hDb250aW51b3VzTGF5b3V0LnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTx2aWV3PgoJCTxncm91cD5MYXlvdXRzPC9ncm91cD4KCQk8bmFtZT5WZXJ0aWNhbCBDb250aW51b3VzPC9uYW1lPgoJCTxpY29uPmljb25zL3VpLWZsb3ctdmVydGljYWwucG5nPC9pY29uPgoJCTxjb250cm9sbGVyPmhheGUudWkuc2hvd2Nhc2Uudmlld3MuVkNvbnRpbnVvdXNMYXlvdXQ8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9Db250aW51b3VzTGF5b3V0L1ZDb250aW51b3VzTGF5b3V0Lmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0NvbnRpbnVvdXNMYXlvdXQvVkNvbnRpbnVvdXNMYXlvdXQueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCTwhLS0KCSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkqIFBPUFVQUwoJKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS0tPgoJPHZpZXc+CgkJPGdyb3VwPlBvcHVwczwvZ3JvdXA+CgkJPG5hbWU+U2ltcGxlPC9uYW1lPgoJCTxpY29uPmljb25zL2FwcGxpY2F0aW9uLWRpYWxvZy5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5TaW1wbGVQb3B1cDwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL1NpbXBsZVBvcHVwL1NpbXBsZVBvcHVwLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL1NpbXBsZVBvcHVwL1NpbXBsZVBvcHVwLnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgoJPHZpZXc+CgkJPGdyb3VwPlBvcHVwczwvZ3JvdXA+CgkJPG5hbWU+Q3VzdG9tPC9uYW1lPgoJCTxpY29uPmljb25zL2FwcGxpY2F0aW9uLWRpYWxvZy5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5DdXN0b21Qb3B1cDwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0N1c3RvbVBvcHVwL0N1c3RvbVBvcHVwLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0N1c3RvbVBvcHVwL0N1c3RvbVBvcHVwLnhtbDwvcmVzb3VyY2U+CgkJCTxyZXNvdXJjZSB0eXBlPSJ4bWwiPnJlc291cmNlcy9DdXN0b21Qb3B1cC9DdXN0b21Qb3B1cENvbnRlbnQueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCgk8dmlldz4KCQk8Z3JvdXA+UG9wdXBzPC9ncm91cD4KCQk8bmFtZT5MaXN0PC9uYW1lPgoJCTxpY29uPmljb25zL2FwcGxpY2F0aW9uLWRpYWxvZy5wbmc8L2ljb24+CgkJPGNvbnRyb2xsZXI+aGF4ZS51aS5zaG93Y2FzZS52aWV3cy5MaXN0UG9wdXA8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9MaXN0UG9wdXAvTGlzdFBvcHVwLmh4PC9yZXNvdXJjZT4KCQkJPHJlc291cmNlIHR5cGU9InhtbCI+cmVzb3VyY2VzL0xpc3RQb3B1cC9MaXN0UG9wdXAueG1sPC9yZXNvdXJjZT4KCQk8L3Jlc291cmNlcz4KCTwvdmlldz4KCQoJPHZpZXc+CgkJPGdyb3VwPlBvcHVwczwvZ3JvdXA+CgkJPG5hbWU+Q2FsZW5kYXI8L25hbWU+CgkJPGljb24+aWNvbnMvYXBwbGljYXRpb24tZGlhbG9nLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLkNhbGVuZGFyUG9wdXA8L2NvbnRyb2xsZXI+CgkJPHJlc291cmNlcz4KCQkJPHJlc291cmNlIHR5cGU9ImhheGUiPnJlc291cmNlcy9DYWxlbmRhclBvcHVwL0NhbGVuZGFyUG9wdXAuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvQ2FsZW5kYXJQb3B1cC9DYWxlbmRhclBvcHVwLnhtbDwvcmVzb3VyY2U+CgkJPC9yZXNvdXJjZXM+Cgk8L3ZpZXc+CgkKCTx2aWV3PgoJCTxncm91cD5Qb3B1cHM8L2dyb3VwPgoJCTxuYW1lPkJ1c3k8L25hbWU+CgkJPGljb24+aWNvbnMvYXBwbGljYXRpb24tZGlhbG9nLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLkJ1c3lQb3B1cDwvY29udHJvbGxlcj4KCQk8cmVzb3VyY2VzPgoJCQk8cmVzb3VyY2UgdHlwZT0iaGF4ZSI+cmVzb3VyY2VzL0J1c3lQb3B1cC9CdXN5UG9wdXAuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvQnVzeVBvcHVwL0J1c3lQb3B1cC54bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3PgoJCgk8IS0tCgkqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJKiBFWFBFUklNRU5UQUwKCSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgktLT4KCTx2aWV3PgoJCTxncm91cD5FeHBlcmltZW50YWw8L2dyb3VwPgoJCTxuYW1lPldlYiBWaWV3PC9uYW1lPgoJCTxpY29uPmljb25zL3VpLXNjcm9sbC1wYW5lLWltYWdlLnBuZzwvaWNvbj4KCQk8Y29udHJvbGxlcj5oYXhlLnVpLnNob3djYXNlLnZpZXdzLldlYlZpZXdzPC9jb250cm9sbGVyPgoJCTxyZXNvdXJjZXM+CgkJCTxyZXNvdXJjZSB0eXBlPSJoYXhlIj5yZXNvdXJjZXMvV2ViVmlld3MvV2ViVmlld3MuaHg8L3Jlc291cmNlPgoJCQk8cmVzb3VyY2UgdHlwZT0ieG1sIj5yZXNvdXJjZXMvV2ViVmlld3MvV2ViVmlld3MueG1sPC9yZXNvdXJjZT4KCQkJPHJlc291cmNlPnJlc291cmNlcy9XZWJWaWV3cy9leGFtcGxlLmh0bWw8L3Jlc291cmNlPgoJCTwvcmVzb3VyY2VzPgoJPC92aWV3Pgo8L3ZpZXdzPg"},{ name : "ui/main.xml", data : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiID8+Cjx2Ym94IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiPgoJPHN0eWxlPgoJCSN2aWV3cyAucGFnZSB7CgkJCXBhZGRpbmc6IDA7CgkJfQoJCQoJCSN2aWV3cyBMaXN0VmlldyB7CgkJCWNvcm5lclJhZGl1czogMDsKCQl9CgkJCgkJI3ZpZXdzIEFjY29yZGlvbkJ1dHRvbiB7CgkJCWNvcm5lclJhZGl1czogMDsKCQl9CgkJCgkJTGlzdFZpZXcgI2NvbnRhaW5lciB7CgkJCXNwYWNpbmc6IDEwOwoJCX0KCTwvc3R5bGU+Cgk8bWVudWJhcj4KCQk8bWVudWJ1dHRvbiB0ZXh0PSJBcHBsaWNhdGlvbiIgaWQ9Im1lbnVBcHBsaWNhdGlvbiI+CgkJCTxtZW51PgoJCQkJPG1lbnVpdGVtIHRleHQ9IlNldHRpbmdzLi4uIiBpZD0ibWVudVNldHRpbmdzIiAvPgoJCQkJPG1lbnVpdGVtIHRleHQ9IkFib3V0Li4uIiBpZD0ibWVudUFib3V0IiAvPgoJCQk8L21lbnU+CgkJPC9tZW51YnV0dG9uPgoJCTxtZW51YnV0dG9uIHRleHQ9IlZpZXciIGlkPSJtZW51VmlldyI+CgkJPC9tZW51YnV0dG9uPgoJCQoJCTxzcGFjZXIgd2lkdGg9IjEwMCUiIC8+CgkJCgkJPGxpc3RTZWxlY3RvciB0ZXh0PSJEZWZhdWx0IFRoZW1lIiBpZD0idGhlbWUiIHdpZHRoPSIxNDAiIGF1dG9TaXplPSJmYWxzZSI+CgkJCTxqc29uPlt7InRleHQiOiJEZWZhdWx0IFRoZW1lIiwgImlkIjogImRlZmF1bHQifSx7InRleHQiOiJHcmFkaWVudCBUaGVtZSIsICJpZCI6ImdyYWRpZW50In1dPC9qc29uPgoJCTwvbGlzdFNlbGVjdG9yPgoJPC9tZW51YmFyPgoJPGhib3ggd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSI+CgkJPGFjY29yZGlvbiBpZD0idmlld3MiIHdpZHRoPSIyMDAiIGhlaWdodD0iMTAwJSIgLz4KCQk8dGFidmlldyB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIiBpZD0idGFicyI+CgkJCTx2Ym94IHRleHQ9Ik1haW4iPgoJCQkJCgkJCTwvdmJveD4KCQk8L3RhYnZpZXc+Cgk8L2hib3g+CjwvdmJveD4K"}];
DefaultAssetLibrary.className = new haxe.ds.StringMap();
DefaultAssetLibrary.path = new haxe.ds.StringMap();
DefaultAssetLibrary.type = new haxe.ds.StringMap();
openfl.text.Font.DEFAULT_FONT_DATA = "q:55oy6:ascentd950.5y4:dataad84d277.5d564d277.5d564d320.5d293d1024d187.5d1024d442.5d362.5d84d362.5d84d277.5hy6:_widthd651.5y4:xMaxd564y4:xMind84y4:yMaxd746.5y4:yMind0y7:_heightd662.5y7:leadingd168y7:descentd241.5y8:charCodei55y15:leftsideBearingd84y12:advanceWidthd651.5y8:commandsai1i2i2i2i2i2i2i2hg:111oR0d950.5R1ad313.5d528.5d239.5d528.5d196.5d586.25d153.5d644d153.5d744.5d153.5d845d196.25d902.75d239d960.5d313.5d960.5d387d960.5d430d902.5d473d844.5d473d744.5d473d645d430d586.75d387d528.5d313.5d528.5d313.5d450.5d433.5d450.5d502d528.5d570.5d606.5d570.5d744.5d570.5d882d502d960.25d433.5d1038.5d313.5d1038.5d193d1038.5d124.75d960.25d56.5d882d56.5d744.5d56.5d606.5d124.75d528.5d193d450.5d313.5d450.5hR2d626.5R3d570.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i111R11d56.5R12d626.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:54oR0d950.5R1ad338d610.5d270d610.5d230.25d657d190.5d703.5d190.5d784.5d190.5d865d230.25d911.75d270d958.5d338d958.5d406d958.5d445.75d911.75d485.5d865d485.5d784.5d485.5d703.5d445.75d657d406d610.5d338d610.5d538.5d294d538.5d386d500.5d368d461.75d358.5d423d349d385d349d285d349d232.25d416.5d179.5d484d172d620.5d201.5d577d246d553.75d290.5d530.5d344d530.5d456.5d530.5d521.75d598.75d587d667d587d784.5d587d899.5d519d969d451d1038.5d338d1038.5d208.5d1038.5d140d939.25d71.5d840d71.5d651.5d71.5d474.5d155.5d369.25d239.5d264d381d264d419d264d457.75d271.5d496.5d279d538.5d294hR2d651.5R3d587R4d71.5R5d760R6d-14.5R7d688.5R8d168R9d241.5R10i54R11d71.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3hg:110oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i110R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:53oR0d950.5R1ad110.5d277.5d507d277.5d507d362.5d203d362.5d203d545.5d225d538d247d534.25d269d530.5d291d530.5d416d530.5d489d599d562d667.5d562d784.5d562d905d487d971.75d412d1038.5d275.5d1038.5d228.5d1038.5d179.75d1030.5d131d1022.5d79d1006.5d79d905d124d929.5d172d941.5d220d953.5d273.5d953.5d360d953.5d410.5d908d461d862.5d461d784.5d461d706.5d410.5d661d360d615.5d273.5d615.5d233d615.5d192.75d624.5d152.5d633.5d110.5d652.5d110.5d277.5hR2d651.5R3d562R4d79R5d746.5R6d-14.5R7d667.5R8d168R9d241.5R10i53R11d79R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i2hg:109oR0d950.5R1ad532.5d571.5d567d509.5d615d480d663d450.5d728d450.5d815.5d450.5d863d511.75d910.5d573d910.5d686d910.5d1024d818d1024d818d689d818d608.5d789.5d569.5d761d530.5d702.5d530.5d631d530.5d589.5d578d548d625.5d548d707.5d548d1024d455.5d1024d455.5d689d455.5d608d427d569.25d398.5d530.5d339d530.5d268.5d530.5d227d578.25d185.5d626d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d217d499.5d261d475d305d450.5d365.5d450.5d426.5d450.5d469.25d481.5d512d512.5d532.5d571.5hR2d997.5R3d910.5R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i109R11d93R12d997.5R13ai1i3i3i3i3i2i2i2i3i3i3i3i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:52oR0d950.5R1ad387d365.5d132d764d387d764d387d365.5d360.5d277.5d487.5d277.5d487.5d764d594d764d594d848d487.5d848d487.5d1024d387d1024d387d848d50d848d50d750.5d360.5d277.5hR2d651.5R3d594R4d50R5d746.5R6d0R7d696.5R8d168R9d241.5R10i52R11d50R12d651.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2hg:108oR0d950.5R1ad96.5d246d188.5d246d188.5d1024d96.5d1024d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i108R11d96.5R12d284.5R13ai1i2i2i2i2hg:51oR0d950.5R1ad415.5d621.5d488d637d528.75d686d569.5d735d569.5d807d569.5d917.5d493.5d978d417.5d1038.5d277.5d1038.5d230.5d1038.5d180.75d1029.25d131d1020d78d1001.5d78d904d120d928.5d170d941d220d953.5d274.5d953.5d369.5d953.5d419.25d916d469d878.5d469d807d469d741d422.75d703.75d376.5d666.5d294d666.5d207d666.5d207d583.5d298d583.5d372.5d583.5d412d553.75d451.5d524d451.5d468d451.5d410.5d410.75d379.75d370d349d294d349d252.5d349d205d358d157.5d367d100.5d386d100.5d296d158d280d208.25d272d258.5d264d303d264d418d264d485d316.25d552d368.5d552d457.5d552d519.5d516.5d562.25d481d605d415.5d621.5hR2d651.5R3d569.5R4d78R5d760R6d-14.5R7d682R8d168R9d241.5R10i51R11d78R12d651.5R13ai1i3i3i3i3i3i3i2i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:107oR0d950.5R1ad93d246d185.5d246d185.5d705.5d460d464d577.5d464d280.5d726d590d1024d470d1024d185.5d750.5d185.5d1024d93d1024d93d246hR2d593R3d590R4d93R5d778R6d0R7d685R8d168R9d241.5R10i107R11d93R12d593R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:50oR0d950.5R1ad196.5d939d549d939d549d1024d75d1024d75d939d132.5d879.5d231.75d779.25d331d679d356.5d650d405d595.5d424.25d557.75d443.5d520d443.5d483.5d443.5d424d401.75d386.5d360d349d293d349d245.5d349d192.75d365.5d140d382d80d415.5d80d313.5d141d289d194d276.5d247d264d291d264d407d264d476d322d545d380d545d477d545d523d527.75d564.25d510.5d605.5d465d661.5d452.5d676d385.5d745.25d318.5d814.5d196.5d939hR2d651.5R3d549R4d75R5d760R6d0R7d685R8d168R9d241.5R10i50R11d75R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:106oR0d950.5R1ad96.5d464d188.5d464d188.5d1034d188.5d1141d147.75d1189d107d1237d16.5d1237d-18.5d1237d-18.5d1159d6d1159d58.5d1159d77.5d1134.75d96.5d1110.5d96.5d1034d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d-18.5R5d778R6d-213R7d796.5R8d168R9d241.5R10i106R11d-18.5R12d284.5R13ai1i2i2i3i3i2i2i2i3i3i2i1i2i2i2i2hg:49oR0d950.5R1ad127d939d292d939d292d369.5d112.5d405.5d112.5d313.5d291d277.5d392d277.5d392d939d557d939d557d1024d127d1024d127d939hR2d651.5R3d557R4d112.5R5d746.5R6d0R7d634R8d168R9d241.5R10i49R11d112.5R12d651.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:105oR0d950.5R1ad96.5d464d188.5d464d188.5d1024d96.5d1024d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i105R11d96.5R12d284.5R13ai1i2i2i2i2i1i2i2i2i2hg:48oR0d950.5R1ad325.5d344d247.5d344d208.25d420.75d169d497.5d169d651.5d169d805d208.25d881.75d247.5d958.5d325.5d958.5d404d958.5d443.25d881.75d482.5d805d482.5d651.5d482.5d497.5d443.25d420.75d404d344d325.5d344d325.5d264d451d264d517.25d363.25d583.5d462.5d583.5d651.5d583.5d840d517.25d939.25d451d1038.5d325.5d1038.5d200d1038.5d133.75d939.25d67.5d840d67.5d651.5d67.5d462.5d133.75d363.25d200d264d325.5d264hR2d651.5R3d583.5R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i48R11d67.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:104oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d246d185.5d246d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d778R6d0R7d685R8d168R9d241.5R10i104R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:47oR0d950.5R1ad260d277.5d345d277.5d85d1119d0d1119d260d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i47R11d0R12d345R13ai1i2i2i2i2hg:103oR0d950.5R1ad465d737.5d465d637.5d423.75d582.5d382.5d527.5d308d527.5d234d527.5d192.75d582.5d151.5d637.5d151.5d737.5d151.5d837d192.75d892d234d947d308d947d382.5d947d423.75d892d465d837d465d737.5d557d954.5d557d1097.5d493.5d1167.25d430d1237d299d1237d250.5d1237d207.5d1229.75d164.5d1222.5d124d1207.5d124d1118d164.5d1140d204d1150.5d243.5d1161d284.5d1161d375d1161d420d1113.75d465d1066.5d465d971d465d925.5d436.5d975d392d999.5d347.5d1024d285.5d1024d182.5d1024d119.5d945.5d56.5d867d56.5d737.5d56.5d607.5d119.5d529d182.5d450.5d285.5d450.5d347.5d450.5d392d475d436.5d499.5d465d549d465d464d557d464d557d954.5hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i103R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i2i3i3i3i3i2i3i3i3i3i3i3i3i3i2i2i2hg:46oR0d950.5R1ad109.5d897d215d897d215d1024d109.5d1024d109.5d897hR2d325.5R3d215R4d109.5R5d127R6d0R7d17.5R8d168R9d241.5R10i46R11d109.5R12d325.5R13ai1i2i2i2i2hg:102oR0d950.5R1ad380d246d380d322.5d292d322.5d242.5d322.5d223.25d342.5d204d362.5d204d414.5d204d464d355.5d464d355.5d535.5d204d535.5d204d1024d111.5d1024d111.5d535.5d23.5d535.5d23.5d464d111.5d464d111.5d425d111.5d331.5d155d288.75d198.5d246d293d246d380d246hR2d360.5R3d380R4d23.5R5d778R6d0R7d754.5R8d168R9d241.5R10i102R11d23.5R12d360.5R13ai1i2i2i3i3i2i2i2i2i2i2i2i2i2i2i2i3i3i2hg:45oR0d950.5R1ad50d702.5d319.5d702.5d319.5d784.5d50d784.5d50d702.5hR2d369.5R3d319.5R4d50R5d321.5R6d239.5R7d271.5R8d168R9d241.5R10i45R11d50R12d369.5R13ai1i2i2i2i2hg:101oR0d950.5R1ad575.5d721d575.5d766d152.5d766d158.5d861d209.75d910.75d261d960.5d352.5d960.5d405.5d960.5d455.25d947.5d505d934.5d554d908.5d554d995.5d504.5d1016.5d452.5d1027.5d400.5d1038.5d347d1038.5d213d1038.5d134.75d960.5d56.5d882.5d56.5d749.5d56.5d612d130.75d531.25d205d450.5d331d450.5d444d450.5d509.75d523.25d575.5d596d575.5d721d483.5d694d482.5d618.5d441.25d573.5d400d528.5d332d528.5d255d528.5d208.75d572d162.5d615.5d155.5d694.5d483.5d694hR2d630R3d575.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i101R11d56.5R12d630R13ai1i2i2i3i3i3i3i2i3i3i3i3i3i3i3i3i1i3i3i3i3i2hg:44oR0d950.5R1ad120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d325.5R3d225.5R4d79R5d127R6d-119R7d48R8d168R9d241.5R10i44R11d79R12d325.5R13ai1i2i2i2i2i2i2hg:100oR0d950.5R1ad465d549d465d246d557d246d557d1024d465d1024d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5hR2d650R3d557R4d56.5R5d778R6d-14.5R7d721.5R8d168R9d241.5R10i100R11d56.5R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:43oR0d950.5R1ad471d382d471d660.5d749.5d660.5d749.5d745.5d471d745.5d471d1024d387d1024d387d745.5d108.5d745.5d108.5d660.5d387d660.5d387d382d471d382hR2d858R3d749.5R4d108.5R5d642R6d0R7d533.5R8d168R9d241.5R10i43R11d108.5R12d858R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:99oR0d950.5R1ad499.5d485.5d499.5d571.5d460.5d550d421.25d539.25d382d528.5d342d528.5d252.5d528.5d203d585.25d153.5d642d153.5d744.5d153.5d847d203d903.75d252.5d960.5d342d960.5d382d960.5d421.25d949.75d460.5d939d499.5d917.5d499.5d1002.5d461d1020.5d419.75d1029.5d378.5d1038.5d332d1038.5d205.5d1038.5d131d959d56.5d879.5d56.5d744.5d56.5d607.5d131.75d529d207d450.5d338d450.5d380.5d450.5d421d459.25d461.5d468d499.5d485.5hR2d563R3d499.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i99R11d56.5R12d563R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:42oR0d950.5R1ad481.5d400.5d302d497.5d481.5d595d452.5d644d284.5d542.5d284.5d731d227.5d731d227.5d542.5d59.5d644d30.5d595d210d497.5d30.5d400.5d59.5d351d227.5d452.5d227.5d264d284.5d264d284.5d452.5d452.5d351d481.5d400.5hR2d512R3d481.5R4d30.5R5d760R6d293R7d729.5R8d168R9d241.5R10i42R11d30.5R12d512R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:98oR0d950.5R1ad498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d185.5d1024d93d1024d93d246d185.5d246d185.5d549hR2d650R3d594R4d93R5d778R6d-14.5R7d685R8d168R9d241.5R10i98R11d93R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:41oR0d950.5R1ad82d247d162d247d237d365d274.25d478d311.5d591d311.5d702.5d311.5d814.5d274.25d928d237d1041.5d162d1159d82d1159d148.5d1044.5d181.25d931.25d214d818d214d702.5d214d587d181.25d474.5d148.5d362d82d247hR2d399.5R3d311.5R4d82R5d777R6d-135R7d695R8d168R9d241.5R10i41R11d82R12d399.5R13ai1i2i3i3i3i3i2i3i3i3i3hg:97oR0d950.5R1ad351d742.5d239.5d742.5d196.5d768d153.5d793.5d153.5d855d153.5d904d185.75d932.75d218d961.5d273.5d961.5d350d961.5d396.25d907.25d442.5d853d442.5d763d442.5d742.5d351d742.5d534.5d704.5d534.5d1024d442.5d1024d442.5d939d411d990d364d1014.25d317d1038.5d249d1038.5d163d1038.5d112.25d990.25d61.5d942d61.5d861d61.5d766.5d124.75d718.5d188d670.5d313.5d670.5d442.5d670.5d442.5d661.5d442.5d598d400.75d563.25d359d528.5d283.5d528.5d235.5d528.5d190d540d144.5d551.5d102.5d574.5d102.5d489.5d153d470d200.5d460.25d248d450.5d293d450.5d414.5d450.5d474.5d513.5d534.5d576.5d534.5d704.5hR2d627.5R3d534.5R4d61.5R5d573.5R6d-14.5R7d512R8d168R9d241.5R10i97R11d61.5R12d627.5R13ai1i3i3i3i3i3i3i2i2i1i2i2i2i3i3i3i3i3i3i2i2i3i3i3i3i2i3i3i3i3hg:40oR0d950.5R1ad317.5d247d250.5d362d218d474.5d185.5d587d185.5d702.5d185.5d818d218.25d931.25d251d1044.5d317.5d1159d237.5d1159d162.5d1041.5d125.25d928d88d814.5d88d702.5d88d591d125d478d162d365d237.5d247d317.5d247hR2d399.5R3d317.5R4d88R5d777R6d-135R7d689R8d168R9d241.5R10i40R11d88R12d399.5R13ai1i3i3i3i3i2i3i3i3i3i2hg:96oR0d950.5R1ad183.5d205d324.5d392d248d392d85d205d183.5d205hR2d512R3d324.5R4d85R5d819R6d632R7d734R8d168R9d241.5R10i96R11d85R12d512R13ai1i2i2i2i2hg:39oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5hR2d281.5R3d183.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i39R11d98.5R12d281.5R13ai1i2i2i2i2hg:95oR0d950.5R1ad522d1194d522d1265.5d-10d1265.5d-10d1194d522d1194hR2d512R3d522R4d-10R5d-170R6d-241.5R7d-160R8d168R9d241.5R10i95R11d-10R12d512R13ai1i2i2i2i2hg:38oR0d950.5R1ad249d622.5d203.5d663d182.25d703.25d161d743.5d161d787.5d161d860.5d214d909d267d957.5d347d957.5d394.5d957.5d436d941.75d477.5d926d514d894d249d622.5d319.5d566.5d573.5d826.5d603d782d619.5d731.25d636d680.5d639d623.5d732d623.5d726d689.5d700d754d674d818.5d627.5d881.5d767d1024d641d1024d569.5d950.5d517.5d995d460.5d1016.75d403.5d1038.5d338d1038.5d217.5d1038.5d141d969.75d64.5d901d64.5d793.5d64.5d729.5d98d673.25d131.5d617d198.5d567.5d174.5d536d162d504.75d149.5d473.5d149.5d443.5d149.5d362.5d205d313.25d260.5d264d352.5d264d394d264d435.25d273d476.5d282d519d300d519d391d475.5d367.5d436d355.25d396.5d343d362.5d343d310d343d277.25d370.75d244.5d398.5d244.5d442.5d244.5d468d259.25d493.75d274d519.5d319.5d566.5hR2d798.5R3d767R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i38R11d64.5R12d798.5R13ai1i3i3i3i3i3i3i2i1i2i3i3i2i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3hg:94oR0d950.5R1ad478d277.5d749.5d556d649d556d429d358.5d209d556d108.5d556d380d277.5d478d277.5hR2d858R3d749.5R4d108.5R5d746.5R6d468R7d638R8d168R9d241.5R10i94R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:37oR0d950.5R1ad744.5d695.5d701d695.5d676.25d732.5d651.5d769.5d651.5d835.5d651.5d900.5d676.25d937.75d701d975d744.5d975d787d975d811.75d937.75d836.5d900.5d836.5d835.5d836.5d770d811.75d732.75d787d695.5d744.5d695.5d744.5d632d823.5d632d870d687d916.5d742d916.5d835.5d916.5d929d869.75d983.75d823d1038.5d744.5d1038.5d664.5d1038.5d618d983.75d571.5d929d571.5d835.5d571.5d741.5d618.25d686.75d665d632d744.5d632d228.5d327.5d185.5d327.5d160.75d364.75d136d402d136d467d136d533d160.5d570d185d607d228.5d607d272d607d296.75d570d321.5d533d321.5d467d321.5d402.5d296.5d365d271.5d327.5d228.5d327.5d680d264d760d264d293d1038.5d213d1038.5d680d264d228.5d264d307.5d264d354.5d318.75d401.5d373.5d401.5d467d401.5d561.5d354.75d616d308d670.5d228.5d670.5d149d670.5d102.75d615.75d56.5d561d56.5d467d56.5d374d103d319d149.5d264d228.5d264hR2d973R3d916.5R4d56.5R5d760R6d-14.5R7d703.5R8d168R9d241.5R10i37R11d56.5R12d973R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i2i2i2i2i1i3i3i3i3i3i3i3i3hg:93oR0d950.5R1ad311.5d246d311.5d1159d99.5d1159d99.5d1087.5d219d1087.5d219d317.5d99.5d317.5d99.5d246d311.5d246hR2d399.5R3d311.5R4d99.5R5d778R6d-135R7d678.5R8d168R9d241.5R10i93R11d99.5R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:36oR0d950.5R1ad346d1174.5d296d1174.5d295.5d1024d243d1023d190.5d1011.75d138d1000.5d85d978d85d888d136d920d188.25d936.25d240.5d952.5d296d953d296d725d185.5d707d135.25d664d85d621d85d546d85d464.5d139.5d417.5d194d370.5d296d363.5d296d246d346d246d346d362d392.5d364d436d371.75d479.5d379.5d521d393d521d480.5d479.5d459.5d435.75d448d392d436.5d346d434.5d346d648d459.5d665.5d513d710.5d566.5d755.5d566.5d833.5d566.5d918d509.75d966.75d453d1015.5d346d1023d346d1174.5d296d639d296d434d238d440.5d207.5d467d177d493.5d177d537.5d177d580.5d205.25d604.5d233.5d628.5d296d639d346d735d346d951.5d409.5d943d441.75d915.5d474d888d474d843d474d799d443.25d773d412.5d747d346d735hR2d651.5R3d566.5R4d85R5d778R6d-150.5R7d693R8d168R9d241.5R10i36R11d85R12d651.5R13ai1i2i2i3i3i2i3i3i2i3i3i3i3i2i2i2i3i3i2i3i3i2i3i3i3i3i2i1i2i3i3i3i3i1i2i3i3i3i3hg:92oR0d950.5R1ad85d277.5d345d1119d260d1119d0d277.5d85d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i92R11d0R12d345R13ai1i2i2i2i2hg:35oR0d950.5R1ad523.5d573.5d378d573.5d336d740.5d482.5d740.5d523.5d573.5d448.5d289d396.5d496.5d542.5d496.5d595d289d675d289d623.5d496.5d779.5d496.5d779.5d573.5d604d573.5d563d740.5d722d740.5d722d817d543.5d817d491.5d1024d411.5d1024d463d817d316.5d817d265d1024d184.5d1024d236.5d817d79d817d79d740.5d255d740.5d297d573.5d136d573.5d136d496.5d316.5d496.5d367.5d289d448.5d289hR2d858R3d779.5R4d79R5d735R6d0R7d656R8d168R9d241.5R10i35R11d79R12d858R13ai1i2i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:91oR0d950.5R1ad88d246d300d246d300d317.5d180d317.5d180d1087.5d300d1087.5d300d1159d88d1159d88d246hR2d399.5R3d300R4d88R5d778R6d-135R7d690R8d168R9d241.5R10i91R11d88R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:34oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5d372.5d277.5d372.5d555d287.5d555d287.5d277.5d372.5d277.5hR2d471R3d372.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i34R11d98.5R12d471R13ai1i2i2i2i2i1i2i2i2i2hg:90oR0d950.5R1ad57.5d277.5d644d277.5d644d354.5d172d939d655.5d939d655.5d1024d46d1024d46d947d518d362.5d57.5d362.5d57.5d277.5hR2d701.5R3d655.5R4d46R5d746.5R6d0R7d700.5R8d168R9d241.5R10i90R11d46R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:33oR0d950.5R1ad154.5d897d256d897d256d1024d154.5d1024d154.5d897d154.5d277.5d256d277.5d256d605d246d783.5d165d783.5d154.5d605d154.5d277.5hR2d410.5R3d256R4d154.5R5d746.5R6d0R7d592R8d168R9d241.5R10i33R11d154.5R12d410.5R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:89oR0d950.5R1ad-2d277.5d106.5d277.5d313.5d584.5d519d277.5d627.5d277.5d363.5d668.5d363.5d1024d262d1024d262d668.5d-2d277.5hR2d625.5R3d627.5R4d-2R5d746.5R6d0R7d748.5R8d168R9d241.5R10i89R11d-2R12d625.5R13ai1i2i2i2i2i2i2i2i2i2hg:32oR0d950.5R1ahR2d325.5R3d0R4d0R5d0R6d0R7d0R8d168R9d241.5R10i32R11d0R12d325.5R13ahg:88oR0d950.5R1ad64.5d277.5d173d277.5d358.5d555d545d277.5d653.5d277.5d413.5d636d669.5d1024d561d1024d351d706.5d139.5d1024d30.5d1024d297d625.5d64.5d277.5hR2d701.5R3d669.5R4d30.5R5d746.5R6d0R7d716R8d168R9d241.5R10i88R11d30.5R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:87oR0d950.5R1ad34d277.5d136d277.5d293d908.5d449.5d277.5d563d277.5d720d908.5d876.5d277.5d979d277.5d791.5d1024d664.5d1024d507d376d348d1024d221d1024d34d277.5hR2d1012.5R3d979R4d34R5d746.5R6d0R7d712.5R8d168R9d241.5R10i87R11d34R12d1012.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:86oR0d950.5R1ad293d1024d8d277.5d113.5d277.5d350d906d587d277.5d692d277.5d407.5d1024d293d1024hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i86R11d8R12d700.5R13ai1i2i2i2i2i2i2i2hg:85oR0d950.5R1ad89d277.5d190.5d277.5d190.5d731d190.5d851d234d903.75d277.5d956.5d375d956.5d472d956.5d515.5d903.75d559d851d559d731d559d277.5d660.5d277.5d660.5d743.5d660.5d889.5d588.25d964d516d1038.5d375d1038.5d233.5d1038.5d161.25d964d89d889.5d89d743.5d89d277.5hR2d749.5R3d660.5R4d89R5d746.5R6d-14.5R7d657.5R8d168R9d241.5R10i85R11d89R12d749.5R13ai1i2i2i3i3i3i3i2i2i2i3i3i3i3i2hg:84oR0d950.5R1ad-3d277.5d628.5d277.5d628.5d362.5d363.5d362.5d363.5d1024d262d1024d262d362.5d-3d362.5d-3d277.5hR2d625.5R3d628.5R4d-3R5d746.5R6d0R7d749.5R8d168R9d241.5R10i84R11d-3R12d625.5R13ai1i2i2i2i2i2i2i2i2hg:83oR0d950.5R1ad548d302d548d400.5d490.5d373d439.5d359.5d388.5d346d341d346d258.5d346d213.75d378d169d410d169d469d169d518.5d198.75d543.75d228.5d569d311.5d584.5d372.5d597d485.5d618.5d539.25d672.75d593d727d593d818d593d926.5d520.25d982.5d447.5d1038.5d307d1038.5d254d1038.5d194.25d1026.5d134.5d1014.5d70.5d991d70.5d887d132d921.5d191d939d250d956.5d307d956.5d393.5d956.5d440.5d922.5d487.5d888.5d487.5d825.5d487.5d770.5d453.75d739.5d420d708.5d343d693d281.5d681d168.5d658.5d118d610.5d67.5d562.5d67.5d477d67.5d378d137.25d321d207d264d329.5d264d382d264d436.5d273.5d491d283d548d302hR2d650R3d593R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i83R11d67.5R12d650R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:82oR0d950.5R1ad454.5d674d487d685d517.75d721d548.5d757d579.5d820d682d1024d573.5d1024d478d832.5d441d757.5d406.25d733d371.5d708.5d311.5d708.5d201.5d708.5d201.5d1024d100.5d1024d100.5d277.5d328.5d277.5d456.5d277.5d519.5d331d582.5d384.5d582.5d492.5d582.5d563d549.75d609.5d517d656d454.5d674d201.5d360.5d201.5d625.5d328.5d625.5d401.5d625.5d438.75d591.75d476d558d476d492.5d476d427d438.75d393.75d401.5d360.5d328.5d360.5d201.5d360.5hR2d711.5R3d682R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i82R11d100.5R12d711.5R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i3i3i3i3i1i2i2i3i3i3i3i2hg:81oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d545d1010.5d678d1156d556d1156d445.5d1036.5d429d1037.5d420.25d1038d411.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.25d57.5d828d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d781.5d696.25d874d644d966.5d545d1010.5hR2d806R3d748.5R4d57.5R5d760R6d-132R7d702.5R8d168R9d241.5R10i81R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i2i2i2i3i3i3i3i3i3i3i3i3i3hg:80oR0d950.5R1ad201.5d360.5d201.5d641d328.5d641d399d641d437.5d604.5d476d568d476d500.5d476d433.5d437.5d397d399d360.5d328.5d360.5d201.5d360.5d100.5d277.5d328.5d277.5d454d277.5d518.25d334.25d582.5d391d582.5d500.5d582.5d611d518.25d667.5d454d724d328.5d724d201.5d724d201.5d1024d100.5d1024d100.5d277.5hR2d617.5R3d582.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i80R11d100.5R12d617.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2i2i2hg:79oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d828d654.5d933.25d560.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.5d57.5d828.5d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264hR2d806R3d748.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i79R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:78oR0d950.5R1ad100.5d277.5d236.5d277.5d567.5d902d567.5d277.5d665.5d277.5d665.5d1024d529.5d1024d198.5d399.5d198.5d1024d100.5d1024d100.5d277.5hR2d766R3d665.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i78R11d100.5R12d766R13ai1i2i2i2i2i2i2i2i2i2i2hg:77oR0d950.5R1ad100.5d277.5d251d277.5d441.5d785.5d633d277.5d783.5d277.5d783.5d1024d685d1024d685d368.5d492.5d880.5d391d880.5d198.5d368.5d198.5d1024d100.5d1024d100.5d277.5hR2d883.5R3d783.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i77R11d100.5R12d883.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:76oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d939d565d939d565d1024d100.5d1024d100.5d277.5hR2d570.5R3d565R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i76R11d100.5R12d570.5R13ai1i2i2i2i2i2i2hg:75oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d593d536.5d277.5d666.5d277.5d296d625.5d693d1024d560d1024d201.5d664.5d201.5d1024d100.5d1024d100.5d277.5hR2d671.5R3d693R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i75R11d100.5R12d671.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:74oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d972d201.5d1107d150.25d1168d99d1229d-14.5d1229d-53d1229d-53d1144d-21.5d1144d45.5d1144d73d1106.5d100.5d1069d100.5d972d100.5d277.5hR2d302R3d201.5R4d-53R5d746.5R6d-205R7d799.5R8d168R9d241.5R10i74R11d-53R12d302R13ai1i2i2i3i3i2i2i2i3i3i2hg:73oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d1024d100.5d1024d100.5d277.5hR2d302R3d201.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i73R11d100.5R12d302R13ai1i2i2i2i2hg:72oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d583.5d568.5d583.5d568.5d277.5d669.5d277.5d669.5d1024d568.5d1024d568.5d668.5d201.5d668.5d201.5d1024d100.5d1024d100.5d277.5hR2d770R3d669.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i72R11d100.5R12d770R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:71oR0d950.5R1ad609.5d917.5d609.5d717d444.5d717d444.5d634d709.5d634d709.5d954.5d651d996d580.5d1017.25d510d1038.5d430d1038.5d255d1038.5d156.25d936.25d57.5d834d57.5d651.5d57.5d468.5d156.25d366.25d255d264d430d264d503d264d568.75d282d634.5d300d690d335d690d442.5d634d395d571d371d508d347d438.5d347d301.5d347d232.75d423.5d164d500d164d651.5d164d802.5d232.75d879d301.5d955.5d438.5d955.5d492d955.5d534d946.25d576d937d609.5d917.5hR2d793.5R3d709.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i71R11d57.5R12d793.5R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:70oR0d950.5R1ad100.5d277.5d529.5d277.5d529.5d362.5d201.5d362.5d201.5d582.5d497.5d582.5d497.5d667.5d201.5d667.5d201.5d1024d100.5d1024d100.5d277.5hR2d589R3d529.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i70R11d100.5R12d589R13ai1i2i2i2i2i2i2i2i2i2i2hg:126oR0d950.5R1ad749.5d615.5d749.5d704.5d697d744d652.25d761d607.5d778d559d778d504d778d431d748.5d425.5d746.5d423d745.5d419.5d744d412d741.5d334.5d710.5d287.5d710.5d243.5d710.5d200.5d729.75d157.5d749d108.5d790.5d108.5d701.5d161d662d205.75d644.75d250.5d627.5d299d627.5d354d627.5d427.5d657.5d432.5d659.5d435d660.5d439d662d446d664.5d523.5d695.5d570.5d695.5d613.5d695.5d655.75d676.5d698d657.5d749.5d615.5hR2d858R3d749.5R4d108.5R5d408.5R6d233.5R7d300R8d168R9d241.5R10i126R11d108.5R12d858R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:69oR0d950.5R1ad100.5d277.5d572.5d277.5d572.5d362.5d201.5d362.5d201.5d583.5d557d583.5d557d668.5d201.5d668.5d201.5d939d581.5d939d581.5d1024d100.5d1024d100.5d277.5hR2d647R3d581.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i69R11d100.5R12d647R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:125oR0d950.5R1ad128d1119d163d1119d233d1119d254.25d1097.5d275.5d1076d275.5d1004.5d275.5d880.5d275.5d802.5d298d767d320.5d731.5d376d718d320.5d705.5d298d670d275.5d634.5d275.5d556d275.5d432d275.5d361d254.25d339.25d233d317.5d163d317.5d128d317.5d128d246d159.5d246d284d246d325.75d282.75d367.5d319.5d367.5d430d367.5d550d367.5d624.5d394.5d653.25d421.5d682d492.5d682d523.5d682d523.5d753.5d492.5d753.5d421.5d753.5d394.5d782.5d367.5d811.5d367.5d887d367.5d1006.5d367.5d1117d325.75d1154d284d1191d159.5d1191d128d1191d128d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i125R11d128R12d651.5R13ai1i2i3i3i2i3i3i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2hg:68oR0d950.5R1ad201.5d360.5d201.5d941d323.5d941d478d941d549.75d871d621.5d801d621.5d650d621.5d500d549.75d430.25d478d360.5d323.5d360.5d201.5d360.5d100.5d277.5d308d277.5d525d277.5d626.5d367.75d728d458d728d650d728d843d626d933.5d524d1024d308d1024d100.5d1024d100.5d277.5hR2d788.5R3d728R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i68R11d100.5R12d788.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2hg:124oR0d950.5R1ad215d241.5d215d1265.5d130d1265.5d130d241.5d215d241.5hR2d345R3d215R4d130R5d782.5R6d-241.5R7d652.5R8d168R9d241.5R10i124R11d130R12d345R13ai1i2i2i2i2hg:67oR0d950.5R1ad659.5d335d659.5d441.5d608.5d394d550.75d370.5d493d347d428d347d300d347d232d425.25d164d503.5d164d651.5d164d799d232d877.25d300d955.5d428d955.5d493d955.5d550.75d932d608.5d908.5d659.5d861d659.5d966.5d606.5d1002.5d547.25d1020.5d488d1038.5d422d1038.5d252.5d1038.5d155d934.75d57.5d831d57.5d651.5d57.5d471.5d155d367.75d252.5d264d422d264d489d264d548.25d281.75d607.5d299.5d659.5d335hR2d715R3d659.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i67R11d57.5R12d715R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:123oR0d950.5R1ad523.5d1119d523.5d1191d492.5d1191d368d1191d325.75d1154d283.5d1117d283.5d1006.5d283.5d887d283.5d811.5d256.5d782.5d229.5d753.5d158.5d753.5d128d753.5d128d682d158.5d682d230d682d256.75d653.25d283.5d624.5d283.5d550d283.5d430d283.5d319.5d325.75d282.75d368d246d492.5d246d523.5d246d523.5d317.5d489.5d317.5d419d317.5d397.5d339.5d376d361.5d376d432d376d556d376d634.5d353.25d670d330.5d705.5d275.5d718d331d731.5d353.5d767d376d802.5d376d880.5d376d1004.5d376d1075d397.5d1097d419d1119d489.5d1119d523.5d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i123R11d128R12d651.5R13ai1i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i3i3i2i3i3i2hg:66oR0d950.5R1ad201.5d667.5d201.5d941d363.5d941d445d941d484.25d907.25d523.5d873.5d523.5d804d523.5d734d484.25d700.75d445d667.5d363.5d667.5d201.5d667.5d201.5d360.5d201.5d585.5d351d585.5d425d585.5d461.25d557.75d497.5d530d497.5d473d497.5d416.5d461.25d388.5d425d360.5d351d360.5d201.5d360.5d100.5d277.5d358.5d277.5d474d277.5d536.5d325.5d599d373.5d599d462d599d530.5d567d571d535d611.5d473d621.5d547.5d637.5d588.75d688.25d630d739d630d815d630d915d562d969.5d494d1024d368.5d1024d100.5d1024d100.5d277.5hR2d702.5R3d630R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i66R11d100.5R12d702.5R13ai1i2i2i3i3i3i3i2i1i2i2i3i3i3i3i2i1i2i3i3i3i3i3i3i3i3i2i2hg:122oR0d950.5R1ad56.5d464d493.5d464d493.5d548d147.5d950.5d493.5d950.5d493.5d1024d44d1024d44d940d390d537.5d56.5d537.5d56.5d464hR2d537.5R3d493.5R4d44R5d560R6d0R7d516R8d168R9d241.5R10i122R11d44R12d537.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:65oR0d950.5R1ad350d377d213d748.5d487.5d748.5d350d377d293d277.5d407.5d277.5d692d1024d587d1024d519d832.5d182.5d832.5d114.5d1024d8d1024d293d277.5hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i65R11d8R12d700.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2hg:121oR0d950.5R1ad329.5d1076d290.5d1176d253.5d1206.5d216.5d1237d154.5d1237d81d1237d81d1160d135d1160d173d1160d194d1142d215d1124d240.5d1057d257d1015d30.5d464d128d464d303d902d478d464d575.5d464d329.5d1076hR2d606R3d575.5R4d30.5R5d560R6d-213R7d529.5R8d168R9d241.5R10i121R11d30.5R12d606R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i2i2hg:64oR0d950.5R1ad381d755.5d381d827d416.5d867.75d452d908.5d514d908.5d575.5d908.5d610.75d867.5d646d826.5d646d755.5d646d685.5d610d644.25d574d603d513d603d452.5d603d416.75d644d381d685d381d755.5d653.5d905d623.5d943.5d584.75d961.75d546d980d494.5d980d408.5d980d354.75d917.75d301d855.5d301d755.5d301d655.5d355d593d409d530.5d494.5d530.5d546d530.5d585d549.25d624d568d653.5d606d653.5d540.5d725d540.5d725d908.5d798d897.5d839.25d841.75d880.5d786d880.5d697.5d880.5d644d864.75d597d849d550d817d510d765d444.5d690.25d409.75d615.5d375d527.5d375d466d375d409.5d391.25d353d407.5d305d439.5d226.5d490.5d182.25d573.25d138d656d138d752.5d138d832d166.75d901.5d195.5d971d250d1024d302.5d1076d371.5d1103.25d440.5d1130.5d519d1130.5d583.5d1130.5d645.75d1108.75d708d1087d760d1046.5d805d1102d742.5d1150.5d668.75d1176.25d595d1202d519d1202d426.5d1202d344.5d1169.25d262.5d1136.5d198.5d1074d134.5d1011.5d101d929.25d67.5d847d67.5d752.5d67.5d661.5d101.5d579d135.5d496.5d198.5d434d263d370.5d347.5d336.75d432d303d526.5d303d632.5d303d723.25d346.5d814d390d875.5d470d913d519d932.75d576.5d952.5d634d952.5d695.5d952.5d827d873d903d793.5d979d653.5d982d653.5d905hR2d1024R3d952.5R4d67.5R5d721R6d-178R7d653.5R8d168R9d241.5R10i64R11d67.5R12d1024R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2hg:120oR0d950.5R1ad562d464d359.5d736.5d572.5d1024d464d1024d301d804d138d1024d29.5d1024d247d731d48d464d156.5d464d305d663.5d453.5d464d562d464hR2d606R3d572.5R4d29.5R5d560R6d0R7d530.5R8d168R9d241.5R10i120R11d29.5R12d606R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:63oR0d950.5R1ad195.5d897d297d897d297d1024d195.5d1024d195.5d897d294d823.5d198.5d823.5d198.5d746.5d198.5d696d212.5d663.5d226.5d631d271.5d588d316.5d543.5d345d517d357.75d493.5d370.5d470d370.5d445.5d370.5d401d337.75d373.5d305d346d251d346d211.5d346d166.75d363.5d122d381d73.5d414.5d73.5d320.5d120.5d292d168.75d278d217d264d268.5d264d360.5d264d416.25d312.5d472d361d472d440.5d472d478.5d454d512.75d436d547d391d590d347d633d323.5d656.5d313.75d669.75d304d683d300d695.5d297d706d295.5d721d294d736d294d762d294d823.5hR2d543.5R3d472R4d73.5R5d760R6d0R7d686.5R8d168R9d241.5R10i63R11d73.5R12d543.5R13ai1i2i2i2i2i1i2i2i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i2hg:119oR0d950.5R1ad43d464d135d464d250d901d364.5d464d473d464d588d901d702.5d464d794.5d464d648d1024d539.5d1024d419d565d298d1024d189.5d1024d43d464hR2d837.5R3d794.5R4d43R5d560R6d0R7d517R8d168R9d241.5R10i119R11d43R12d837.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:62oR0d950.5R1ad108.5d520d108.5d429d749.5d661.5d749.5d744.5d108.5d977d108.5d886d623.5d703.5d108.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i62R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:118oR0d950.5R1ad30.5d464d128d464d303d934d478d464d575.5d464d365.5d1024d240.5d1024d30.5d464hR2d606R3d575.5R4d30.5R5d560R6d0R7d529.5R8d168R9d241.5R10i118R11d30.5R12d606R13ai1i2i2i2i2i2i2i2hg:61oR0d950.5R1ad108.5d559d749.5d559d749.5d643d108.5d643d108.5d559d108.5d763d749.5d763d749.5d848d108.5d848d108.5d763hR2d858R3d749.5R4d108.5R5d465R6d176R7d356.5R8d168R9d241.5R10i61R11d108.5R12d858R13ai1i2i2i2i2i1i2i2i2i2hg:117oR0d950.5R1ad87d803d87d464d179d464d179d799.5d179d879d210d918.75d241d958.5d303d958.5d377.5d958.5d420.75d911d464d863.5d464d781.5d464d464d556d464d556d1024d464d1024d464d938d430.5d989d386.25d1013.75d342d1038.5d283.5d1038.5d187d1038.5d137d978.5d87d918.5d87d803hR2d649R3d556R4d87R5d560R6d-14.5R7d473R8d168R9d241.5R10i117R11d87R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:60oR0d950.5R1ad749.5d520d233.5d703.5d749.5d886d749.5d977d108.5d744.5d108.5d661.5d749.5d429d749.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i60R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:116oR0d950.5R1ad187.5d305d187.5d464d377d464d377d535.5d187.5d535.5d187.5d839.5d187.5d908d206.25d927.5d225d947d282.5d947d377d947d377d1024d282.5d1024d176d1024d135.5d984.25d95d944.5d95d839.5d95d535.5d27.5d535.5d27.5d464d95d464d95d305d187.5d305hR2d401.5R3d377R4d27.5R5d719R6d0R7d691.5R8d168R9d241.5R10i116R11d27.5R12d401.5R13ai1i2i2i2i2i2i3i3i2i2i2i3i3i2i2i2i2i2i2hg:59oR0d950.5R1ad120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5d120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d345R3d225.5R4d79R5d529.5R6d-119R7d450.5R8d168R9d241.5R10i59R11d79R12d345R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:115oR0d950.5R1ad453.5d480.5d453.5d567.5d414.5d547.5d372.5d537.5d330.5d527.5d285.5d527.5d217d527.5d182.75d548.5d148.5d569.5d148.5d611.5d148.5d643.5d173d661.75d197.5d680d271.5d696.5d303d703.5d401d724.5d442.25d762.75d483.5d801d483.5d869.5d483.5d947.5d421.75d993d360d1038.5d252d1038.5d207d1038.5d158.25d1029.75d109.5d1021d55.5d1003.5d55.5d908.5d106.5d935d156d948.25d205.5d961.5d254d961.5d319d961.5d354d939.25d389d917d389d876.5d389d839d363.75d819d338.5d799d253d780.5d221d773d135.5d755d97.5d717.75d59.5d680.5d59.5d615.5d59.5d536.5d115.5d493.5d171.5d450.5d274.5d450.5d325.5d450.5d370.5d458d415.5d465.5d453.5d480.5hR2d533.5R3d483.5R4d55.5R5d573.5R6d-14.5R7d518R8d168R9d241.5R10i115R11d55.5R12d533.5R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:58oR0d950.5R1ad120d897d225.5d897d225.5d1024d120d1024d120d897d120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5hR2d345R3d225.5R4d120R5d529.5R6d0R7d409.5R8d168R9d241.5R10i58R11d120R12d345R13ai1i2i2i2i2i1i2i2i2i2hg:114oR0d950.5R1ad421d550d405.5d541d387.25d536.75d369d532.5d347d532.5d269d532.5d227.25d583.25d185.5d634d185.5d729d185.5d1024d93d1024d93d464d185.5d464d185.5d551d214.5d500d261d475.25d307.5d450.5d374d450.5d383.5d450.5d395d451.75d406.5d453d420.5d455.5d421d550hR2d421R3d421R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i114R11d93R12d421R13ai1i3i3i3i3i2i2i2i2i2i3i3i3i3i2hg:57oR0d950.5R1ad112.5d1008.5d112.5d916.5d150.5d934.5d189.5d944d228.5d953.5d266d953.5d366d953.5d418.75d886.25d471.5d819d479d682d450d725d405.5d748d361d771d307d771d195d771d129.75d703.25d64.5d635.5d64.5d518d64.5d403d132.5d333.5d200.5d264d313.5d264d443d264d511.25d363.25d579.5d462.5d579.5d651.5d579.5d828d495.75d933.25d412d1038.5d270.5d1038.5d232.5d1038.5d193.5d1031d154.5d1023.5d112.5d1008.5d313.5d692d381.5d692d421.25d645.5d461d599d461d518d461d437.5d421.25d390.75d381.5d344d313.5d344d245.5d344d205.75d390.75d166d437.5d166d518d166d599d205.75d645.5d245.5d692d313.5d692hR2d651.5R3d579.5R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i57R11d64.5R12d651.5R13ai1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:113oR0d950.5R1ad151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d465d464d557d464d557d1237d465d1237d465d940hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i113R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:56oR0d950.5R1ad325.5d669.5d253.5d669.5d212.25d708d171d746.5d171d814d171d881.5d212.25d920d253.5d958.5d325.5d958.5d397.5d958.5d439d919.75d480.5d881d480.5d814d480.5d746.5d439.25d708d398d669.5d325.5d669.5d224.5d626.5d159.5d610.5d123.25d566d87d521.5d87d457.5d87d368d150.75d316d214.5d264d325.5d264d437d264d500.5d316d564d368d564d457.5d564d521.5d527.75d566d491.5d610.5d427d626.5d500d643.5d540.75d693d581.5d742.5d581.5d814d581.5d922.5d515.25d980.5d449d1038.5d325.5d1038.5d202d1038.5d135.75d980.5d69.5d922.5d69.5d814d69.5d742.5d110.5d693d151.5d643.5d224.5d626.5d187.5d467d187.5d525d223.75d557.5d260d590d325.5d590d390.5d590d427.25d557.5d464d525d464d467d464d409d427.25d376.5d390.5d344d325.5d344d260d344d223.75d376.5d187.5d409d187.5d467hR2d651.5R3d581.5R4d69.5R5d760R6d-14.5R7d690.5R8d168R9d241.5R10i56R11d69.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:112oR0d950.5R1ad185.5d940d185.5d1237d93d1237d93d464d185.5d464d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5hR2d650R3d594R4d93R5d573.5R6d-213R7d480.5R8d168R9d241.5R10i112R11d93R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hgh";
openfl.text.Font.DEFAULT_FONT_SCALE = 9.0;
openfl.text.Font.DEFAULT_FONT_NAME = "Bitstream_Vera_Sans";
openfl.text.Font.DEFAULT_CLASS_NAME = "openfl.text.Font";
openfl.text.Font.__registeredFonts = new Array();
openfl.display.DisplayObject.GRAPHICS_INVALID = 2;
openfl.display.DisplayObject.MATRIX_INVALID = 4;
openfl.display.DisplayObject.MATRIX_CHAIN_INVALID = 8;
openfl.display.DisplayObject.MATRIX_OVERRIDDEN = 16;
openfl.display.DisplayObject.TRANSFORM_INVALID = 32;
openfl.display.DisplayObject.BOUNDS_INVALID = 64;
openfl.display.DisplayObject.RENDER_VALIDATE_IN_PROGRESS = 1024;
openfl.display.DisplayObject.ALL_RENDER_FLAGS = 98;
cocktail.api.CocktailView.TAB_KEY_CODE = 9;
cocktail.api.CocktailView.ENTER_KEY_CODE = 13;
cocktail.api.CocktailView.SPACE_KEY_CODE = 32;
cocktail.core.css.CSSConstants.SUPPORTED_STYLES_NUMBER = 87;
cocktail.core.css.CSSConstants.DISPLAY = 0;
cocktail.core.css.CSSConstants.POSITION = 1;
cocktail.core.css.CSSConstants.FLOAT = 2;
cocktail.core.css.CSSConstants.CLEAR = 3;
cocktail.core.css.CSSConstants.Z_INDEX = 4;
cocktail.core.css.CSSConstants.MARGIN = 5;
cocktail.core.css.CSSConstants.MARGIN_LEFT = 6;
cocktail.core.css.CSSConstants.MARGIN_RIGHT = 7;
cocktail.core.css.CSSConstants.MARGIN_TOP = 8;
cocktail.core.css.CSSConstants.MARGIN_BOTTOM = 9;
cocktail.core.css.CSSConstants.PADDING = 10;
cocktail.core.css.CSSConstants.PADDING_LEFT = 11;
cocktail.core.css.CSSConstants.PADDING_RIGHT = 12;
cocktail.core.css.CSSConstants.PADDING_TOP = 13;
cocktail.core.css.CSSConstants.PADDING_BOTTOM = 14;
cocktail.core.css.CSSConstants.WIDTH = 15;
cocktail.core.css.CSSConstants.HEIGHT = 16;
cocktail.core.css.CSSConstants.MIN_HEIGHT = 17;
cocktail.core.css.CSSConstants.MAX_HEIGHT = 18;
cocktail.core.css.CSSConstants.MIN_WIDTH = 19;
cocktail.core.css.CSSConstants.MAX_WIDTH = 20;
cocktail.core.css.CSSConstants.TOP = 21;
cocktail.core.css.CSSConstants.LEFT = 22;
cocktail.core.css.CSSConstants.RIGHT = 23;
cocktail.core.css.CSSConstants.BOTTOM = 24;
cocktail.core.css.CSSConstants.BACKGROUND_COLOR = 25;
cocktail.core.css.CSSConstants.BACKGROUND_IMAGE = 26;
cocktail.core.css.CSSConstants.BACKGROUND_REPEAT = 27;
cocktail.core.css.CSSConstants.BACKGROUND_ORIGIN = 28;
cocktail.core.css.CSSConstants.BACKGROUND_SIZE = 29;
cocktail.core.css.CSSConstants.BACKGROUND_POSITION = 30;
cocktail.core.css.CSSConstants.BACKGROUND_CLIP = 31;
cocktail.core.css.CSSConstants.BACKGROUND_ATTACHMENT = 32;
cocktail.core.css.CSSConstants.BACKGROUND = 33;
cocktail.core.css.CSSConstants.FONT_SIZE = 34;
cocktail.core.css.CSSConstants.FONT_WEIGHT = 35;
cocktail.core.css.CSSConstants.FONT_STYLE = 36;
cocktail.core.css.CSSConstants.FONT_FAMILY = 37;
cocktail.core.css.CSSConstants.FONT_VARIANT = 38;
cocktail.core.css.CSSConstants.FONT = 39;
cocktail.core.css.CSSConstants.COLOR = 40;
cocktail.core.css.CSSConstants.LINE_HEIGHT = 41;
cocktail.core.css.CSSConstants.TEXT_TRANSFORM = 42;
cocktail.core.css.CSSConstants.LETTER_SPACING = 43;
cocktail.core.css.CSSConstants.WORD_SPACING = 44;
cocktail.core.css.CSSConstants.WHITE_SPACE = 45;
cocktail.core.css.CSSConstants.TEXT_ALIGN = 46;
cocktail.core.css.CSSConstants.TEXT_INDENT = 47;
cocktail.core.css.CSSConstants.VERTICAL_ALIGN = 48;
cocktail.core.css.CSSConstants.VISIBILITY = 49;
cocktail.core.css.CSSConstants.CSS_OVERFLOW = 50;
cocktail.core.css.CSSConstants.OVERFLOW_X = 51;
cocktail.core.css.CSSConstants.OVERFLOW_Y = 52;
cocktail.core.css.CSSConstants.OPACITY = 53;
cocktail.core.css.CSSConstants.CURSOR = 54;
cocktail.core.css.CSSConstants.TRANSITION_DURATION = 55;
cocktail.core.css.CSSConstants.TRANSITION_DELAY = 56;
cocktail.core.css.CSSConstants.TRANSITION_PROPERTY = 57;
cocktail.core.css.CSSConstants.TRANSITION_TIMING_FUNCTION = 58;
cocktail.core.css.CSSConstants.TRANSITION = 59;
cocktail.core.css.CSSConstants.TRANSFORM_ORIGIN = 60;
cocktail.core.css.CSSConstants.TRANSFORM = 61;
cocktail.core.css.CSSConstants.BORDER_TOP_WIDTH = 62;
cocktail.core.css.CSSConstants.BORDER_RIGHT_WIDTH = 63;
cocktail.core.css.CSSConstants.BORDER_BOTTOM_WIDTH = 64;
cocktail.core.css.CSSConstants.BORDER_LEFT_WIDTH = 65;
cocktail.core.css.CSSConstants.BORDER_WIDTH = 66;
cocktail.core.css.CSSConstants.BORDER_TOP_COLOR = 67;
cocktail.core.css.CSSConstants.BORDER_RIGHT_COLOR = 68;
cocktail.core.css.CSSConstants.BORDER_BOTTOM_COLOR = 69;
cocktail.core.css.CSSConstants.BORDER_LEFT_COLOR = 70;
cocktail.core.css.CSSConstants.BORDER_COLOR = 71;
cocktail.core.css.CSSConstants.BORDER_TOP_STYLE = 72;
cocktail.core.css.CSSConstants.BORDER_RIGHT_STYLE = 73;
cocktail.core.css.CSSConstants.BORDER_BOTTOM_STYLE = 74;
cocktail.core.css.CSSConstants.BORDER_LEFT_STYLE = 75;
cocktail.core.css.CSSConstants.BORDER_STYLE = 76;
cocktail.core.css.CSSConstants.BORDER_TOP = 77;
cocktail.core.css.CSSConstants.BORDER_RIGHT = 78;
cocktail.core.css.CSSConstants.BORDER_BOTTOM = 79;
cocktail.core.css.CSSConstants.BORDER_LEFT = 80;
cocktail.core.css.CSSConstants.BORDER = 81;
cocktail.core.css.CSSConstants.OUTLINE_WIDTH = 82;
cocktail.core.css.CSSConstants.OUTLINE_STYLE = 83;
cocktail.core.css.CSSConstants.OUTLINE_COLOR = 84;
cocktail.core.css.CSSConstants.OUTLINE = 85;
cocktail.core.css.CSSConstants.TEXT_DECORATION = 86;
cocktail.core.css.CSSConstants.IMPORTANT = "important";
cocktail.core.css.CSSConstants.AUTO = "auto";
cocktail.core.css.CSSConstants.LEFT_IDENT = "left";
cocktail.core.css.CSSConstants.TOP_IDENT = "top";
cocktail.core.css.CSSConstants.RIGHT_IDENT = "right";
cocktail.core.css.CSSConstants.BOTTOM_IDENT = "bottom";
cocktail.core.css.CSSConstants.HEIGHT_IDL_NAME = "height";
cocktail.core.css.CSSConstants.WIDTH_IDL_NAME = "width";
cocktail.core.css.CSSConstants.MAX_WIDTH_IDL_NAME = "maxWidth";
cocktail.core.css.CSSConstants.MIN_WIDTH_IDL_NAME = "minWidth";
cocktail.core.css.CSSConstants.MAX_HEIGHT_IDL_NAME = "maxHeight";
cocktail.core.css.CSSConstants.CSS_MIME_TYPE = "text/css";
cocktail.core.css.CSSConstants.STYLESHEET_REL = "stylesheet";
cocktail.core.css.CSSConstants.DISPLAY_NAME = "display";
cocktail.core.css.CSSConstants.POSITION_NAME = "position";
cocktail.core.css.CSSConstants.FLOAT_NAME = "float";
cocktail.core.css.CSSConstants.CLEAR_NAME = "clear";
cocktail.core.css.CSSConstants.Z_INDEX_NAME = "z-index";
cocktail.core.css.CSSConstants.MARGIN_NAME = "margin";
cocktail.core.css.CSSConstants.MARGIN_LEFT_NAME = "margin-left";
cocktail.core.css.CSSConstants.MARGIN_RIGHT_NAME = "margin-right";
cocktail.core.css.CSSConstants.MARGIN_TOP_NAME = "margin-top";
cocktail.core.css.CSSConstants.MARGIN_BOTTOM_NAME = "margin-bottom";
cocktail.core.css.CSSConstants.PADDING_NAME = "padding";
cocktail.core.css.CSSConstants.PADDING_LEFT_NAME = "padding-left";
cocktail.core.css.CSSConstants.PADDING_RIGHT_NAME = "padding-right";
cocktail.core.css.CSSConstants.PADDING_TOP_NAME = "padding-top";
cocktail.core.css.CSSConstants.PADDING_BOTTOM_NAME = "padding-bottom";
cocktail.core.css.CSSConstants.WIDTH_NAME = "width";
cocktail.core.css.CSSConstants.HEIGHT_NAME = "height";
cocktail.core.css.CSSConstants.MIN_HEIGHT_NAME = "min-height";
cocktail.core.css.CSSConstants.MAX_HEIGHT_NAME = "max-height";
cocktail.core.css.CSSConstants.MIN_WIDTH_NAME = "min-width";
cocktail.core.css.CSSConstants.MAX_WIDTH_NAME = "max-width";
cocktail.core.css.CSSConstants.TOP_NAME = "top";
cocktail.core.css.CSSConstants.LEFT_NAME = "left";
cocktail.core.css.CSSConstants.RIGHT_NAME = "right";
cocktail.core.css.CSSConstants.BOTTOM_NAME = "bottom";
cocktail.core.css.CSSConstants.BACKGROUND_COLOR_NAME = "background-color";
cocktail.core.css.CSSConstants.BACKGROUND_IMAGE_NAME = "background-image";
cocktail.core.css.CSSConstants.BACKGROUND_REPEAT_NAME = "background-repeat";
cocktail.core.css.CSSConstants.BACKGROUND_ORIGIN_NAME = "background-origin";
cocktail.core.css.CSSConstants.BACKGROUND_SIZE_NAME = "background-size";
cocktail.core.css.CSSConstants.BACKGROUND_POSITION_NAME = "background-position";
cocktail.core.css.CSSConstants.BACKGROUND_CLIP_NAME = "background-clip";
cocktail.core.css.CSSConstants.BACKGROUND_ATTACHMENT_NAME = "background-attachment";
cocktail.core.css.CSSConstants.BACKGROUND_NAME = "background";
cocktail.core.css.CSSConstants.FONT_SIZE_NAME = "font-size";
cocktail.core.css.CSSConstants.FONT_WEIGHT_NAME = "font-weight";
cocktail.core.css.CSSConstants.FONT_STYLE_NAME = "font-style";
cocktail.core.css.CSSConstants.FONT_FAMILY_NAME = "font-family";
cocktail.core.css.CSSConstants.FONT_VARIANT_NAME = "font-variant";
cocktail.core.css.CSSConstants.FONT_NAME = "font";
cocktail.core.css.CSSConstants.COLOR_NAME = "color";
cocktail.core.css.CSSConstants.LINE_HEIGHT_NAME = "line-height";
cocktail.core.css.CSSConstants.TEXT_TRANSFORM_NAME = "text-transform";
cocktail.core.css.CSSConstants.LETTER_SPACING_NAME = "letter-spacing";
cocktail.core.css.CSSConstants.WORD_SPACING_NAME = "word-spacing";
cocktail.core.css.CSSConstants.WHITE_SPACE_NAME = "white-space";
cocktail.core.css.CSSConstants.TEXT_ALIGN_NAME = "text-align";
cocktail.core.css.CSSConstants.TEXT_INDENT_NAME = "text-indent";
cocktail.core.css.CSSConstants.VERTICAL_ALIGN_NAME = "vertical-align";
cocktail.core.css.CSSConstants.VISIBILITY_NAME = "visibility";
cocktail.core.css.CSSConstants.CSS_OVERFLOW_NAME = "overflow";
cocktail.core.css.CSSConstants.OVERFLOW_X_NAME = "overflow-x";
cocktail.core.css.CSSConstants.OVERFLOW_Y_NAME = "overflow-y";
cocktail.core.css.CSSConstants.OPACITY_NAME = "opacity";
cocktail.core.css.CSSConstants.CURSOR_NAME = "cursor";
cocktail.core.css.CSSConstants.TRANSITION_DURATION_NAME = "transition-duration";
cocktail.core.css.CSSConstants.TRANSITION_DELAY_NAME = "transition-delay";
cocktail.core.css.CSSConstants.TRANSITION_PROPERTY_NAME = "transition-property";
cocktail.core.css.CSSConstants.TRANSITION_TIMING_FUNCTION_NAME = "transition-timing-function";
cocktail.core.css.CSSConstants.TRANSITION_NAME = "transition";
cocktail.core.css.CSSConstants.TRANSFORM_ORIGIN_NAME = "transform-origin";
cocktail.core.css.CSSConstants.TRANSFORM_NAME = "transform";
cocktail.core.css.CSSConstants.BORDER_TOP_WIDTH_NAME = "border-top-width";
cocktail.core.css.CSSConstants.BORDER_RIGHT_WIDTH_NAME = "border-right-width";
cocktail.core.css.CSSConstants.BORDER_BOTTOM_WIDTH_NAME = "border-bottom-width";
cocktail.core.css.CSSConstants.BORDER_LEFT_WIDTH_NAME = "border-left-width";
cocktail.core.css.CSSConstants.BORDER_WIDTH_NAME = "border-width";
cocktail.core.css.CSSConstants.BORDER_TOP_COLOR_NAME = "border-top-color";
cocktail.core.css.CSSConstants.BORDER_RIGHT_COLOR_NAME = "border-right-color";
cocktail.core.css.CSSConstants.BORDER_BOTTOM_COLOR_NAME = "border-bottom-color";
cocktail.core.css.CSSConstants.BORDER_LEFT_COLOR_NAME = "border-left-color";
cocktail.core.css.CSSConstants.BORDER_COLOR_NAME = "border-color";
cocktail.core.css.CSSConstants.BORDER_TOP_STYLE_NAME = "border-top-style";
cocktail.core.css.CSSConstants.BORDER_RIGHT_STYLE_NAME = "border-right-style";
cocktail.core.css.CSSConstants.BORDER_BOTTOM_STYLE_NAME = "border-bottom-style";
cocktail.core.css.CSSConstants.BORDER_LEFT_STYLE_NAME = "border-left-style";
cocktail.core.css.CSSConstants.BORDER_STYLE_NAME = "border-style";
cocktail.core.css.CSSConstants.BORDER_TOP_NAME = "border-top";
cocktail.core.css.CSSConstants.BORDER_RIGHT_NAME = "border-right";
cocktail.core.css.CSSConstants.BORDER_BOTTOM_NAME = "border-bottom";
cocktail.core.css.CSSConstants.BORDER_LEFT_NAME = "border-left";
cocktail.core.css.CSSConstants.BORDER_NAME = "border";
cocktail.core.css.CSSConstants.OUTLINE_WIDTH_NAME = "outline-width";
cocktail.core.css.CSSConstants.OUTLINE_STYLE_NAME = "outline-style";
cocktail.core.css.CSSConstants.OUTLINE_COLOR_NAME = "outline-color";
cocktail.core.css.CSSConstants.OUTLINE_NAME = "outline";
cocktail.core.css.CSSConstants.TEXT_DECORATION_NAME = "text-decoration";
cocktail.core.css.CSSRule.STYLE_RULE = 1;
cocktail.core.css.CSSRule.IMPORT_RULE = 3;
cocktail.core.css.CSSRule.MEDIA_RULE = 4;
cocktail.core.css.CSSRule.FONT_FACE_RULE = 5;
cocktail.core.css.parsers.CSSStyleParser._position = 0;
cocktail.core.dom.DOMConstants.ELEMENT_NODE = 1;
cocktail.core.dom.DOMConstants.ATTRIBUTE_NODE = 2;
cocktail.core.dom.DOMConstants.TEXT_NODE = 3;
cocktail.core.dom.DOMConstants.CDATA_SECTION_NODE = 4;
cocktail.core.dom.DOMConstants.ENTITY_REFERENCE_NODE = 5;
cocktail.core.dom.DOMConstants.ENTITY_NODE = 6;
cocktail.core.dom.DOMConstants.PROCESSING_INSTRUCTION_NODE = 7;
cocktail.core.dom.DOMConstants.COMMENT_NODE = 8;
cocktail.core.dom.DOMConstants.DOCUMENT_NODE = 9;
cocktail.core.dom.DOMConstants.DOCUMENT_TYPE_NODE = 10;
cocktail.core.dom.DOMConstants.DOCUMENT_FRAGMENT_NODE = 11;
cocktail.core.dom.DOMConstants.NOTATION_NODE = 11;
cocktail.core.dom.DOMConstants.EVENT_INTERFACE = "Event";
cocktail.core.dom.DOMConstants.UI_EVENT_INTERFACE = "UIEvent";
cocktail.core.dom.DOMConstants.MOUSE_EVENT_INTERFACE = "MouseEvent";
cocktail.core.dom.DOMConstants.FOCUS_EVENT_INTERFACE = "FocusEvent";
cocktail.core.dom.DOMConstants.KEYBOARD_EVENT_INTERFACE = "KeyboardEvent";
cocktail.core.dom.DOMConstants.WHEEL_EVENT_INTERFACE = "WheelEvent";
cocktail.core.dom.DOMConstants.CUSTOM_EVENT_INTERFACE = "CustomEvent";
cocktail.core.dom.DOMConstants.TRANSITION_EVENT_INTERFACE = "TransitionEvent";
cocktail.core.dom.DOMConstants.POPSTATE_EVENT_INTERFACE = "PopStateEvent";
cocktail.core.dom.DOMConstants.MATCH_ALL_TAG_NAME = "*";
cocktail.core.dom.DOMConstants.TEXT_NODE_NAME = "#text";
cocktail.core.dom.DOMException.INDEX_SIZE_ERR = 1;
cocktail.core.dom.DOMException.DOMSTRING_SIZE_ERR = 2;
cocktail.core.dom.DOMException.HIERARCHY_REQUEST_ERR = 3;
cocktail.core.dom.DOMException.WRONG_DOCUMENT_ERR = 4;
cocktail.core.dom.DOMException.INVALID_CHARACTER_ERR = 5;
cocktail.core.dom.DOMException.NO_DATA_ALLOWED_ERR = 6;
cocktail.core.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR = 7;
cocktail.core.dom.DOMException.NOT_FOUND_ERR = 8;
cocktail.core.dom.DOMException.NOT_SUPPORTED_ERR = 9;
cocktail.core.dom.DOMException.INUSE_ATTRIBUTE_ERR = 10;
cocktail.core.dom.DOMException.INVALID_STATE_ERR = 11;
cocktail.core.dom.DOMException.SYNTAX_ERR = 12;
cocktail.core.dom.DOMException.INVALID_MODIFICATION_ERR = 13;
cocktail.core.dom.DOMException.NAMESPACE_ERR = 14;
cocktail.core.dom.DOMException.INVALID_ACCESS_ERR = 15;
cocktail.core.dom.DOMException.VALIDATION_ERR = 16;
cocktail.core.dom.DOMException.SECURITY_ERR = 18;
cocktail.core.dom.DOMException.TYPE_MISMATCH_ERR = 19;
cocktail.core.event.Event.CAPTURING_PHASE = 1;
cocktail.core.event.Event.AT_TARGET = 2;
cocktail.core.event.Event.BUBBLING_PHASE = 3;
cocktail.core.event.EventConstants.PLAY = "play";
cocktail.core.event.EventConstants.PLAYING = "playing";
cocktail.core.event.EventConstants.PAUSE = "pause";
cocktail.core.event.EventConstants.ABORT = "abort";
cocktail.core.event.EventConstants.LOAD_START = "loadstart";
cocktail.core.event.EventConstants.WAITING = "waiting";
cocktail.core.event.EventConstants.TIME_UPDATE = "timeupdate";
cocktail.core.event.EventConstants.ENDED = "ended";
cocktail.core.event.EventConstants.LOADED_DATA = "loadeddata";
cocktail.core.event.EventConstants.SEEKING = "seeking";
cocktail.core.event.EventConstants.SEEKED = "seeked";
cocktail.core.event.EventConstants.PROGRESS = "progress";
cocktail.core.event.EventConstants.CAN_PLAY = "canplay";
cocktail.core.event.EventConstants.EMPTIED = "emptied";
cocktail.core.event.EventConstants.LOADED_METADATA = "loadedmetadata";
cocktail.core.event.EventConstants.DURATION_CHANGE = "durationchange";
cocktail.core.event.EventConstants.VOLUME_CHANGE = "volumechange";
cocktail.core.event.EventConstants.SUSPEND = "suspend";
cocktail.core.event.EventConstants.STALLED = "stalled";
cocktail.core.event.EventConstants.CAN_PLAY_THROUGH = "canplaythrough";
cocktail.core.event.EventConstants.READY_STATE_CHANGE = "readystatechange";
cocktail.core.event.EventConstants.TIME_OUT = "timeout";
cocktail.core.event.EventConstants.LOAD_END = "loadend";
cocktail.core.event.EventConstants.FULL_SCREEN_CHANGE = "fullscreenchange";
cocktail.core.event.EventConstants.FOCUS = "focus";
cocktail.core.event.EventConstants.BLUR = "blur";
cocktail.core.event.EventConstants.FOCUS_IN = "focusin";
cocktail.core.event.EventConstants.FOCUS_OUT = "focusout";
cocktail.core.event.EventConstants.KEY_DOWN = "keydown";
cocktail.core.event.EventConstants.KEY_UP = "keyup";
cocktail.core.event.EventConstants.CLICK = "click";
cocktail.core.event.EventConstants.DOUBLE_CLICK = "dblclick";
cocktail.core.event.EventConstants.MOUSE_UP = "mouseup";
cocktail.core.event.EventConstants.MOUSE_DOWN = "mousedown";
cocktail.core.event.EventConstants.MOUSE_OVER = "mouseover";
cocktail.core.event.EventConstants.MOUSE_OUT = "mouseout";
cocktail.core.event.EventConstants.MOUSE_MOVE = "mousemove";
cocktail.core.event.EventConstants.MOUSE_LEAVE = "mouseleave";
cocktail.core.event.EventConstants.TOUCH_START = "touchstart";
cocktail.core.event.EventConstants.TOUCH_END = "touchend";
cocktail.core.event.EventConstants.TOUCH_MOVE = "touchmove";
cocktail.core.event.EventConstants.TOUCH_CANCEL = "touchcancel";
cocktail.core.event.EventConstants.TRANSITION_END = "transitionend";
cocktail.core.event.EventConstants.SCROLL = "scroll";
cocktail.core.event.EventConstants.RESIZE = "resize";
cocktail.core.event.EventConstants.LOAD = "load";
cocktail.core.event.EventConstants.ERROR = "error";
cocktail.core.event.EventConstants.CHANGE = "change";
cocktail.core.event.EventConstants.INPUT = "input";
cocktail.core.event.EventConstants.RESET = "reset";
cocktail.core.event.EventConstants.SUBMIT = "submit";
cocktail.core.event.EventConstants.MOUSE_WHEEL = "wheel";
cocktail.core.event.EventConstants.POP_STATE = "popstate";
cocktail.core.event.EventConstants.CONFIG_CHANGED = "configchanged";
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_STANDARD = 0;
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_LEFT = 1;
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_RIGHT = 2;
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD = 3;
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_MOBILE = 4;
cocktail.core.event.KeyboardEvent.DOM_KEY_LOCATION_JOYSTICK = 5;
cocktail.core.event.KeyboardEvent.CONTROL_KEY = "Control";
cocktail.core.event.KeyboardEvent.SHIFT_KEY = "Shift";
cocktail.core.event.KeyboardEvent.ALT_KEY = "Alt";
cocktail.core.event.KeyboardEvent.META_KEY = "Meta";
cocktail.core.event.WheelEvent.DOM_DELTA_PIXEL = 0;
cocktail.core.event.WheelEvent.DOM_DELTA_LINE = 1;
cocktail.core.event.WheelEvent.DOM_DELTA_PAGE = 2;
cocktail.core.graphics.BackgroundDrawer._box = new cocktail.core.geom.RectangleVO();
cocktail.core.graphics.BackgroundDrawer._destinationPoint = new cocktail.core.geom.PointVO(0.0,0.0);
cocktail.core.graphics.BackgroundDrawer._intersectionBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.graphics.BorderDrawer._currentBorderBox = new cocktail.core.geom.RectangleVO();
cocktail.core.graphics.TextDrawer._destPoint = new cocktail.core.geom.PointVO(0,0);
cocktail.core.graphics.TextDrawer._renderRect = new cocktail.core.geom.RectangleVO();
cocktail.core.graphics.TextDrawer._decorationRect = new cocktail.core.geom.RectangleVO();
cocktail.core.graphics.TextDrawer.TEXT_DECORATION_THICKNESS = 1.0;
cocktail.core.html.HTMLMediaElement.RESOURCE_SELECTION_ATTRIBUTE_MODE = 0;
cocktail.core.html.HTMLMediaElement.RESOURCE_SELECTION_CHILDREN_MODE = 1;
cocktail.core.html.HTMLMediaElement.TIME_UPDATE_FREQUENCY = 250;
cocktail.core.html.HTMLMediaElement.PROGRESS_FREQUENCY = 350;
cocktail.core.html.HTMLMediaElement.PLAYBACK_END_DELTA = 0.2;
cocktail.core.html.HTMLMediaElement.NETWORK_EMPTY = 0;
cocktail.core.html.HTMLMediaElement.NETWORK_IDLE = 1;
cocktail.core.html.HTMLMediaElement.NETWORK_LOADING = 2;
cocktail.core.html.HTMLMediaElement.NETWORK_NO_SOURCE = 3;
cocktail.core.html.HTMLMediaElement.CAN_PLAY_TYPE_MAYBE = "maybe";
cocktail.core.html.HTMLMediaElement.CAN_PLAY_TYPE_PROBABLY = "probably";
cocktail.core.html.HTMLMediaElement.HAVE_NOTHING = 0;
cocktail.core.html.HTMLMediaElement.HAVE_METADATA = 1;
cocktail.core.html.HTMLMediaElement.HAVE_CURRENT_DATA = 2;
cocktail.core.html.HTMLMediaElement.HAVE_FUTURE_DATA = 3;
cocktail.core.html.HTMLMediaElement.HAVE_ENOUGH_DATA = 4;
cocktail.core.html.HTMLConstants.HTML_BODY_TAG_NAME = "BODY";
cocktail.core.html.HTMLConstants.HTML_ANCHOR_TAG_NAME = "A";
cocktail.core.html.HTMLConstants.HTML_IMAGE_TAG_NAME = "IMG";
cocktail.core.html.HTMLConstants.HTML_INPUT_TAG_NAME = "INPUT";
cocktail.core.html.HTMLConstants.HTML_HTML_TAG_NAME = "HTML";
cocktail.core.html.HTMLConstants.HTML_VIDEO_TAG_NAME = "VIDEO";
cocktail.core.html.HTMLConstants.HTML_AUDIO_TAG_NAME = "AUDIO";
cocktail.core.html.HTMLConstants.HTML_SOURCE_TAG_NAME = "SOURCE";
cocktail.core.html.HTMLConstants.HTML_DIV_TAG_NAME = "DIV";
cocktail.core.html.HTMLConstants.HTML_OBJECT_TAG_NAME = "OBJECT";
cocktail.core.html.HTMLConstants.HTML_PARAM_TAG_NAME = "PARAM";
cocktail.core.html.HTMLConstants.HTML_ADRESS_TAG_NAME = "ADRESS";
cocktail.core.html.HTMLConstants.HTML_DD_TAG_NAME = "DD";
cocktail.core.html.HTMLConstants.HTML_DL_TAG_NAME = "DL";
cocktail.core.html.HTMLConstants.HTML_DT_TAG_NAME = "DT";
cocktail.core.html.HTMLConstants.HTML_FIELDSET_TAG_NAME = "FIELDSET";
cocktail.core.html.HTMLConstants.HTML_FORM_TAG_NAME = "FORM";
cocktail.core.html.HTMLConstants.HTML_FRAME_TAG_NAME = "FRAME";
cocktail.core.html.HTMLConstants.HTML_FRAMESET_TAG_NAME = "FRAMESET";
cocktail.core.html.HTMLConstants.HTML_NOFRAMES_TAG_NAME = "NOFRAMES";
cocktail.core.html.HTMLConstants.HTML_OL_TAG_NAME = "OL";
cocktail.core.html.HTMLConstants.HTML_CENTER_TAG_NAME = "CENTER";
cocktail.core.html.HTMLConstants.HTML_DIR_TAG_NAME = "DIR";
cocktail.core.html.HTMLConstants.HTML_HR_TAG_NAME = "HR";
cocktail.core.html.HTMLConstants.HTML_MENU_TAG_NAME = "MENU";
cocktail.core.html.HTMLConstants.HTML_LI_TAG_NAME = "LI";
cocktail.core.html.HTMLConstants.HTML_UL_TAG_NAME = "UL";
cocktail.core.html.HTMLConstants.HTML_HEAD_TAG_NAME = "HEAD";
cocktail.core.html.HTMLConstants.HTML_H1_TAG_NAME = "H1";
cocktail.core.html.HTMLConstants.HTML_H2_TAG_NAME = "H2";
cocktail.core.html.HTMLConstants.HTML_H3_TAG_NAME = "H3";
cocktail.core.html.HTMLConstants.HTML_H4_TAG_NAME = "H4";
cocktail.core.html.HTMLConstants.HTML_H5_TAG_NAME = "H5";
cocktail.core.html.HTMLConstants.HTML_H6_TAG_NAME = "H6";
cocktail.core.html.HTMLConstants.HTML_P_TAG_NAME = "P";
cocktail.core.html.HTMLConstants.HTML_PRE_TAG_NAME = "PRE";
cocktail.core.html.HTMLConstants.HTML_CODE_TAG_NAME = "CODE";
cocktail.core.html.HTMLConstants.HTML_I_TAG_NAME = "I";
cocktail.core.html.HTMLConstants.HTML_CITE_TAG_NAME = "CITE";
cocktail.core.html.HTMLConstants.HTML_EM_TAG_NAME = "EM";
cocktail.core.html.HTMLConstants.HTML_VAR_TAG_NAME = "VAR";
cocktail.core.html.HTMLConstants.HTML_BLOCKQUOTE_TAG_NAME = "BLOCKQUOTE";
cocktail.core.html.HTMLConstants.HTML_STRONG_TAG_NAME = "STRONG";
cocktail.core.html.HTMLConstants.HTML_BIG_TAG_NAME = "BIG";
cocktail.core.html.HTMLConstants.HTML_SMALL_TAG_NAME = "SMALL";
cocktail.core.html.HTMLConstants.HTML_SUB_TAG_NAME = "SUB";
cocktail.core.html.HTMLConstants.HTML_SUP_TAG_NAME = "SUP";
cocktail.core.html.HTMLConstants.HTML_LINK_TAG_NAME = "LINK";
cocktail.core.html.HTMLConstants.HTML_STYLE_TAG_NAME = "STYLE";
cocktail.core.html.HTMLConstants.HTML_BR_TAG_NAME = "BR";
cocktail.core.html.HTMLConstants.HTML_META_TAG_NAME = "META";
cocktail.core.html.HTMLConstants.HTML_BUTTON_TAG_NAME = "BUTTON";
cocktail.core.html.HTMLConstants.HTML_SELECT_TAG_NAME = "SELECT";
cocktail.core.html.HTMLConstants.HTML_TEXT_AREA_TAG_NAME = "TEXTAREA";
cocktail.core.html.HTMLConstants.HTML_ID_ATTRIBUTE_NAME = "id";
cocktail.core.html.HTMLConstants.HTML_CLASS_ATTRIBUTE_NAME = "class";
cocktail.core.html.HTMLConstants.HTML_HIDDEN_ATTRIBUTE_NAME = "hidden";
cocktail.core.html.HTMLConstants.HTML_TAB_INDEX_ATTRIBUTE_NAME = "tabindex";
cocktail.core.html.HTMLConstants.HTML_STYLE_ATTRIBUTE_NAME = "style";
cocktail.core.html.HTMLConstants.HTML_SRC_ATTRIBUTE_NAME = "src";
cocktail.core.html.HTMLConstants.HTML_VALUE_ATTRIBUTE_NAME = "value";
cocktail.core.html.HTMLConstants.HTML_AUTOPLAY_ATTRIBUTE_NAME = "autoplay";
cocktail.core.html.HTMLConstants.HTML_LOOP_ATTRIBUTE_NAME = "loop";
cocktail.core.html.HTMLConstants.HTML_TYPE_ATTRIBUTE_NAME = "type";
cocktail.core.html.HTMLConstants.HTML_MEDIA_ATTRIBUTE_NAME = "media";
cocktail.core.html.HTMLConstants.HTML_HREF_ATTRIBUTE_NAME = "href";
cocktail.core.html.HTMLConstants.HTML_TARGET_ATTRIBUTE_NAME = "target";
cocktail.core.html.HTMLConstants.HTML_DATA_ATTRIBUTE_NAME = "data";
cocktail.core.html.HTMLConstants.HTML_HEIGHT_ATTRIBUTE_NAME = "height";
cocktail.core.html.HTMLConstants.HTML_WIDTH_ATTRIBUTE_NAME = "width";
cocktail.core.html.HTMLConstants.HTML_POSTER_ATTRIBUTE_NAME = "poster";
cocktail.core.html.HTMLConstants.HTML_NAME_ATTRIBUTE_NAME = "name";
cocktail.core.html.HTMLConstants.HTML_REL_ATTRIBUTE_NAME = "rel";
cocktail.core.html.HTMLConstants.HTML_HREFLANG_ATTRIBUTE_NAME = "hreflang";
cocktail.core.html.HTMLConstants.HTML_DISABLED_ATTRIBUTE_NAME = "disabled";
cocktail.core.html.HTMLConstants.HTML_CHECKED_ATTRIBUTE_NAME = "checked";
cocktail.core.html.HTMLConstants.HTML_READ_ONLY_ATTRIBUTE_NAME = "readonly";
cocktail.core.html.HTMLConstants.HTML_MAXLENGTH_ATTRIBUTE_NAME = "maxlength";
cocktail.core.html.HTMLConstants.HTML_CONTENT_ATTRIBUTE_NAME = "content";
cocktail.core.html.HTMLConstants.HTML_ACTION_ATTRIBUTE_NAME = "action";
cocktail.core.html.HTMLConstants.HTML_ENCTYPE_ATTRIBUTE_NAME = "enctype";
cocktail.core.html.HTMLConstants.HTML_METHOD_ATTRIBUTE_NAME = "method";
cocktail.core.html.HTMLConstants.HTML_PRELOAD_ATTRIBUTE_NAME = "preload";
cocktail.core.html.HTMLConstants.PRELOAD_AUTO = "auto";
cocktail.core.html.HTMLConstants.PRELOAD_NONE = "none";
cocktail.core.html.HTMLConstants.PRELOAD_METADATA = "metadata";
cocktail.core.html.HTMLConstants.TARGET_BLANK = "_blank";
cocktail.core.html.HTMLConstants.TARGET_SELF = "_self";
cocktail.core.html.HTMLConstants.TARGET_PARENT = "_parent";
cocktail.core.html.HTMLConstants.TARGET_TOP = "_top";
cocktail.core.html.HTMLConstants.INPUT_TEXT_AREA = "textarea";
cocktail.core.html.HTMLConstants.INPUT_TYPE_HIDDEN = "hidden";
cocktail.core.html.HTMLConstants.INPUT_TYPE_TEXT = "text";
cocktail.core.html.HTMLConstants.INPUT_TYPE_PASSWORD = "password";
cocktail.core.html.HTMLConstants.INPUT_TYPE_CHECKBOX = "checkbox";
cocktail.core.html.HTMLConstants.INPUT_TYPE_RADIO = "radio";
cocktail.core.html.HTMLConstants.INPUT_TYPE_SUBMIT = "submit";
cocktail.core.html.HTMLConstants.INPUT_TYPE_RESET = "reset";
cocktail.core.html.HTMLConstants.INPUT_TYPE_BUTTON = "button";
cocktail.core.html.HTMLConstants.INPUT_TYPE_FILE = "file";
cocktail.core.html.HTMLConstants.INPUT_TYPE_IMAGE = "image";
cocktail.core.html.HTMLConstants.INPUT_RESET_LABEL = "Reset";
cocktail.core.html.HTMLConstants.INPUT_SUBMIT_LABEL = "Submit";
cocktail.core.html.HTMLConstants.RADIO_OR_CHECKBOX_ON = "on";
cocktail.core.html.HTMLConstants.HTML_TOKEN_LESS_THAN = "<";
cocktail.core.html.HTMLConstants.HTML_TOKEN_MORE_THAN = ">";
cocktail.core.html.HTMLConstants.HTML_TOKEN_SOLIDUS = "/";
cocktail.core.html.HTMLDocument.MOUSE_WHEEL_DELTA_MULTIPLIER = 10;
cocktail.core.html.HTMLObjectElement.HTML_OBJECT_INTRISIC_WIDTH = 300;
cocktail.core.html.HTMLObjectElement.HTML_OBJECT_INTRINSIC_HEIGHT = 150;
cocktail.core.html.HTMLObjectElement.SWF_FILE_EXTENSION = ".swf";
cocktail.core.html.HTMLObjectElement.SWF_FILE_MIME_TYPE = "application/x-shockwave-flash";
cocktail.core.html.HTMLVideoElement.HTML_VIDEO_DEFAULT_WIDTH = 300;
cocktail.core.html.HTMLVideoElement.HTML_VIDEO_DEFAULT_HEIGHT = 150;
cocktail.core.http.HTTPConstants.UNSENT = 0;
cocktail.core.http.HTTPConstants.OPENED = 1;
cocktail.core.http.HTTPConstants.HEADERS_RECEIVED = 2;
cocktail.core.http.HTTPConstants.LOADING = 3;
cocktail.core.http.HTTPConstants.DONE = 4;
cocktail.core.http.HTTPConstants.CONNECT = "CONNECT";
cocktail.core.http.HTTPConstants.DELETE = "DELETE";
cocktail.core.http.HTTPConstants.GET = "GET";
cocktail.core.http.HTTPConstants.HEAD = "HEAD";
cocktail.core.http.HTTPConstants.OPTIONS = "OPTIONS";
cocktail.core.http.HTTPConstants.POST = "POST";
cocktail.core.http.HTTPConstants.PUT = "PUT";
cocktail.core.http.HTTPConstants.TRACE = "TRACE";
cocktail.core.http.HTTPConstants.TRACK = "TRACK";
cocktail.core.http.HTTPConstants.URL_ENCODING = "application/x-www-form-urlencoded";
cocktail.core.http.HTTPConstants.FORM_DATA = "multipart/form-data";
cocktail.core.http.HTTPConstants.PLAIN_TEXT = "text/plain";
cocktail.core.http.HTTPConstants.HTTP = "http";
cocktail.core.http.HTTPConstants.HTTPS = "https";
cocktail.core.http.HTTPConstants.TYPE_TEXT = "text";
cocktail.core.http.HTTPConstants.TYPE_ARRAY_BUFFER = "arraybuffer";
cocktail.core.http.HTTPConstants.TYPE_BLOB = "blob";
cocktail.core.http.HTTPConstants.TYPE_DOCUMENT = "document";
cocktail.core.http.HTTPConstants.TYPE_JSON = "json";
cocktail.core.http.HTTPConstants.ACCEPT_CHARSET = "accept-charset";
cocktail.core.http.HTTPConstants.ACCEPT_ENCODING = "accept-encoding";
cocktail.core.http.HTTPConstants.ACCESS_CONTROL_REQUEST_HEADERS = "access-control-request-headers";
cocktail.core.http.HTTPConstants.ACCESS_CONTROL_REQUEST_METHOD = "access-control-request-method";
cocktail.core.http.HTTPConstants.CONNECTION = "connection";
cocktail.core.http.HTTPConstants.CONTENT_LENGTH = "content-length";
cocktail.core.http.HTTPConstants.COOKIE = "cookie";
cocktail.core.http.HTTPConstants.COOKIE_2 = "cookie2";
cocktail.core.http.HTTPConstants.CONTENT_TRANSFER_ENCODING = "content-transfer-encoding";
cocktail.core.http.HTTPConstants.DATE = "date";
cocktail.core.http.HTTPConstants.EXPECT = "expect";
cocktail.core.http.HTTPConstants.HOST = "host";
cocktail.core.http.HTTPConstants.KEEP_ALIVE = "keep-alive";
cocktail.core.http.HTTPConstants.ORIGIN = "origin";
cocktail.core.http.HTTPConstants.REFERER = "referer";
cocktail.core.http.HTTPConstants.TE = "te";
cocktail.core.http.HTTPConstants.TRAILER = "trailer";
cocktail.core.http.HTTPConstants.TRANSFER_ENCODING = "transfer-encoding";
cocktail.core.http.HTTPConstants.UPGRADE = "upgrade";
cocktail.core.http.HTTPConstants.USER_AGENT = "user-agent";
cocktail.core.http.HTTPConstants.VIA = "via";
cocktail.core.http.HTTPConstants.PROXY = "proxy-";
cocktail.core.http.HTTPConstants.SEC = "sec-";
cocktail.core.http.XMLHTTPRequest.PROGRESS_UPDATE_FREQUENCY = 50;
cocktail.core.linebox.LineBox._childBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.linebox.LineBox._inlineBoxesBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.linebox.TextInlineBox._bitmapBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.parser.PlainTextParser.COPY = 0;
cocktail.core.parser.PlainTextParser.BUFFER = 1;
cocktail.core.parser.PlainTextParser.AFTER_LINE_FEED = 2;
cocktail.core.parser.PlainTextParser.CONCATENATE = 3;
cocktail.core.parser.PlainTextParser.CAPITALIZE_STATE = 4;
cocktail.core.renderer.BoxRenderer._intersectBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.renderer.TextRenderer._intersectBounds = new cocktail.core.geom.RectangleVO();
cocktail.core.url.URL._parts = ["source","scheme","authority","userInfo","user","password","host","port","relative","path","directory","file","query","fragment"];
cocktail.port.base.NativeHttpBase.PROGRESS_UPDATE_FREQUENCY = 50;
cocktail.port.base.NativeTextInputBase.INPUT_TEXT_INTRINSIC_WIDTH = 150;
cocktail.port.base.NativeTextInputBase.INPUT_TEXT_INTRINSIC_HEIGHT = 30;
format.gfx.GfxBytes.EOF = 0;
format.gfx.GfxBytes.SIZE = 1;
format.gfx.GfxBytes.BEGIN_FILL = 10;
format.gfx.GfxBytes.GRADIENT_FILL = 11;
format.gfx.GfxBytes.END_FILL = 12;
format.gfx.GfxBytes.LINE_STYLE = 20;
format.gfx.GfxBytes.END_LINE_STYLE = 21;
format.gfx.GfxBytes.MOVE = 30;
format.gfx.GfxBytes.LINE = 31;
format.gfx.GfxBytes.CURVE = 32;
format.gfx.GfxBytes.base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
format.gfx.GfxBytes.scaleModes = [openfl.display.LineScaleMode.NORMAL,openfl.display.LineScaleMode.NONE,openfl.display.LineScaleMode.VERTICAL,openfl.display.LineScaleMode.HORIZONTAL];
format.gfx.GfxBytes.capsStyles = [openfl.display.CapsStyle.ROUND,openfl.display.CapsStyle.NONE,openfl.display.CapsStyle.SQUARE];
format.gfx.GfxBytes.jointStyles = [openfl.display.JointStyle.ROUND,openfl.display.JointStyle.MITER,openfl.display.JointStyle.BEVEL];
format.gfx.GfxBytes.spreadMethods = [openfl.display.SpreadMethod.PAD,openfl.display.SpreadMethod.REPEAT,openfl.display.SpreadMethod.REFLECT];
format.gfx.GfxBytes.interpolationMethods = [openfl.display.InterpolationMethod.RGB,openfl.display.InterpolationMethod.LINEAR_RGB];
format.svg.PathParser.MOVE = 77;
format.svg.PathParser.MOVER = 109;
format.svg.PathParser.LINE = 76;
format.svg.PathParser.LINER = 108;
format.svg.PathParser.HLINE = 72;
format.svg.PathParser.HLINER = 104;
format.svg.PathParser.VLINE = 86;
format.svg.PathParser.VLINER = 118;
format.svg.PathParser.CUBIC = 67;
format.svg.PathParser.CUBICR = 99;
format.svg.PathParser.SCUBIC = 83;
format.svg.PathParser.SCUBICR = 115;
format.svg.PathParser.QUAD = 81;
format.svg.PathParser.QUADR = 113;
format.svg.PathParser.SQUAD = 84;
format.svg.PathParser.SQUADR = 116;
format.svg.PathParser.ARC = 65;
format.svg.PathParser.ARCR = 97;
format.svg.PathParser.CLOSE = 90;
format.svg.PathParser.CLOSER = 122;
format.svg.PathParser.UNKNOWN = -1;
format.svg.PathParser.SEPARATOR = -2;
format.svg.PathParser.FLOAT = -3;
format.svg.PathParser.FLOAT_SIGN = -4;
format.svg.PathParser.FLOAT_DOT = -5;
format.svg.PathParser.FLOAT_EXP = -6;
format.svg.PathSegment.MOVE = 1;
format.svg.PathSegment.DRAW = 2;
format.svg.PathSegment.CURVE = 3;
format.svg.PathSegment.CUBIC = 4;
format.svg.PathSegment.ARC = 5;
format.svg.SVGData.SIN45 = 0.70710678118654752440084436210485;
format.svg.SVGData.TAN22 = 0.4142135623730950488016887242097;
format.svg.SVGData.mStyleSplit = new EReg(";","g");
format.svg.SVGData.mStyleValue = new EReg("\\s*(.*)\\s*:\\s*(.*)\\s*","");
format.svg.SVGData.mTranslateMatch = new EReg("translate\\((.*)[, ](.*)\\)","");
format.svg.SVGData.mScaleMatch = new EReg("scale\\((.*)\\)","");
format.svg.SVGData.mMatrixMatch = new EReg("matrix\\((.*)[, ](.*)[, ](.*)[, ](.*)[, ](.*)[, ](.*)\\)","");
format.svg.SVGData.mURLMatch = new EReg("url\\(#(.*)\\)","");
format.svg.SVGData.defaultFill = format.svg.FillType.FillSolid(0);
haxe.Serializer.USE_CACHE = false;
haxe.Serializer.USE_ENUM_INDEX = false;
haxe.Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe.Template.splitter = new EReg("(::[A-Za-z0-9_ ()&|!+=/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()","");
haxe.Template.expr_splitter = new EReg("(\\(|\\)|[ \r\n\t]*\"[^\"]*\"[ \r\n\t]*|[!+=/><*.&|-]+)","");
haxe.Template.expr_trim = new EReg("^[ ]*([^ ]+)[ ]*$","");
haxe.Template.expr_int = new EReg("^[0-9]+$","");
haxe.Template.expr_float = new EReg("^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$","");
haxe.Template.globals = { };
haxe.Unserializer.DEFAULT_RESOLVER = Type;
haxe.Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe.crypto.Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe.crypto.Base64.BYTES = haxe.io.Bytes.ofString(haxe.crypto.Base64.CHARS);
haxe.ds.ObjectMap.count = 0;
haxe.ui.toolkit.core.DisplayObject.__meta__ = { fields : { onInit : { exclude : null}, set_onInit : { exclude : null}, onResize : { exclude : null}, set_onResize : { exclude : null}, onReady : { exclude : null}, set_onReady : { exclude : null}, onClick : { exclude : null}, set_onClick : { exclude : null}, onMouseDown : { exclude : null}, set_onMouseDown : { exclude : null}, onMouseUp : { exclude : null}, set_onMouseUp : { exclude : null}, onMouseOver : { exclude : null}, set_onMouseOver : { exclude : null}, onMouseOut : { exclude : null}, set_onMouseOut : { exclude : null}, onMouseMove : { exclude : null}, set_onMouseMove : { exclude : null}, onDoubleClick : { exclude : null}, set_onDoubleClick : { exclude : null}, onRollOver : { exclude : null}, set_onRollOver : { exclude : null}, onRollOut : { exclude : null}, set_onRollOut : { exclude : null}, onChange : { exclude : null}, set_onChange : { exclude : null}, onScroll : { exclude : null}, set_onScroll : { exclude : null}, onAdded : { exclude : null}, set_onAdded : { exclude : null}, onAddedToStage : { exclude : null}, set_onAddedToStage : { exclude : null}, onRemoved : { exclude : null}, set_onRemoved : { exclude : null}, onRemovedFromStage : { exclude : null}, set_onRemovedFromStage : { exclude : null}, onActivate : { exclude : null}, set_onActivate : { exclude : null}, onDeactivate : { exclude : null}, set_onDeactivate : { exclude : null}, onGlyphClick : { exclude : null}, set_onGlyphClick : { exclude : null}, onMenuSelect : { exclude : null}, set_onMenuSelect : { exclude : null}, onMenuOpen : { exclude : null}, set_onMenuOpen : { exclude : null}}};
haxe.ui.toolkit.controls.Button.STATE_NORMAL = "normal";
haxe.ui.toolkit.controls.Button.STATE_OVER = "over";
haxe.ui.toolkit.controls.Button.STATE_DOWN = "down";
haxe.ui.toolkit.controls.Button.STATE_DISABLED = "disabled";
haxe.ui.richtext.RTFToolButton.__meta__ = { obj : { exclude : null}};
haxe.ui.showcase.util.Prefs.DEFAULT_SECTION = "HaxeUIComponentShowcase";
haxe.ui.showcase.views.BoxLayout.VALIGNS = ["top","center","bottom"];
haxe.ui.showcase.views.BoxLayout.HALIGNS = ["left","center","right"];
haxe.ui.showcase.views.GridLayout.VALIGNS = ["top","center","bottom"];
haxe.ui.showcase.views.GridLayout.HALIGNS = ["left","center","right"];
haxe.ui.showcase.views.HContinuousLayout.VALIGNS = ["top","center","bottom"];
haxe.ui.showcase.views.HorizontalLayout.VALIGNS = ["top","center","bottom"];
haxe.ui.showcase.views.VContinuousLayout.HALIGNS = ["left","center","right"];
haxe.ui.showcase.views.VerticalLayout.HALIGNS = ["left","center","right"];
haxe.ui.toolkit.containers.AccordionButton.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.containers.CalendarView.MONTH_NAMES = ["January","Febuary","March","April","May","June","July","August","September","October","November","December"];
haxe.ui.toolkit.containers.ExpandableButton.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.containers.ListView.__meta__ = { fields : { onComponentEvent : { exclude : null}, set_onComponentEvent : { exclude : null}}};
haxe.ui.toolkit.containers.ScrollViewLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.containers.TableViewRow.STATE_NORMAL = "normal";
haxe.ui.toolkit.containers.TableViewRow.STATE_OVER = "over";
haxe.ui.toolkit.containers.TableViewRow.STATE_SELECTED = "selected";
haxe.ui.toolkit.controls.CalendarDay.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.CalendarLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.CheckBoxValue.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.HScrollLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.OptionBoxValue.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.HProgressLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.VProgressLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.TextInputLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.VScrollLayout.__meta__ = { obj : { exclude : null}};
haxe.ui.toolkit.controls.popups.Popup.__meta__ = { fields : { clickButton : { exclude : null}}};
haxe.ui.toolkit.core.Macros.componentClasses = new haxe.ds.StringMap();
haxe.ui.toolkit.core.Macros.dataSourceClasses = new haxe.ds.StringMap();
haxe.ui.toolkit.core.Macros.themeResources = new haxe.ds.StringMap();
haxe.ui.toolkit.core.PopupButton.OK = 1;
haxe.ui.toolkit.core.PopupButton.YES = 16;
haxe.ui.toolkit.core.PopupButton.NO = 256;
haxe.ui.toolkit.core.PopupButton.CANCEL = 4096;
haxe.ui.toolkit.core.PopupButton.CONFIRM = 65536;
haxe.ui.toolkit.core.PopupButton.CLOSE = 1048576;
haxe.ui.toolkit.core.PopupButton.CUSTOM = 16777216;
haxe.ui.toolkit.core.Toolkit.useDefaultTheme = true;
haxe.ui.toolkit.core.Toolkit._defaultTransition = "slide";
haxe.ui.toolkit.core.base.HorizontalAlign.LEFT = "left";
haxe.ui.toolkit.core.base.HorizontalAlign.RIGHT = "right";
haxe.ui.toolkit.core.base.HorizontalAlign.CENTER = "center";
haxe.ui.toolkit.core.base.State.NORMAL = "normal";
haxe.ui.toolkit.core.base.State.OVER = "over";
haxe.ui.toolkit.core.base.State.DOWN = "down";
haxe.ui.toolkit.core.base.State.DISABLED = "disabled";
haxe.ui.toolkit.core.base.VerticalAlign.TOP = "top";
haxe.ui.toolkit.core.base.VerticalAlign.BOTTOM = "bottom";
haxe.ui.toolkit.core.base.VerticalAlign.CENTER = "center";
haxe.ui.toolkit.core.interfaces.Direction.HORIZONTAL = "horizontal";
haxe.ui.toolkit.core.interfaces.Direction.VERTICAL = "vertical";
haxe.ui.toolkit.core.interfaces.InvalidationFlag.LAYOUT = 1;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.DISPLAY = 16;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.SIZE = 256;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.STATE = 4096;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.DATA = 65536;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.STYLE = 1048576;
haxe.ui.toolkit.core.interfaces.InvalidationFlag.ALL = 1118481;
haxe.ui.toolkit.core.renderers.ItemRenderer.STATE_NORMAL = "normal";
haxe.ui.toolkit.core.renderers.ItemRenderer.STATE_OVER = "over";
haxe.ui.toolkit.core.renderers.ItemRenderer.STATE_SELECTED = "selected";
haxe.ui.toolkit.core.renderers.ItemRenderer.STATE_DISABLED = "disabled";
haxe.ui.toolkit.data.DataSource.SAFE_NUM = 2147483647;
haxe.ui.toolkit.data.DataSource.clsId = 0;
openfl.events.Event.ACTIVATE = "activate";
openfl.events.Event.ADDED = "added";
openfl.events.Event.ADDED_TO_STAGE = "addedToStage";
openfl.events.Event.CANCEL = "cancel";
openfl.events.Event.CHANGE = "change";
openfl.events.Event.CLOSE = "close";
openfl.events.Event.COMPLETE = "complete";
openfl.events.Event.CONNECT = "connect";
openfl.events.Event.CONTEXT3D_CREATE = "context3DCreate";
openfl.events.Event.DEACTIVATE = "deactivate";
openfl.events.Event.ENTER_FRAME = "enterFrame";
openfl.events.Event.ID3 = "id3";
openfl.events.Event.INIT = "init";
openfl.events.Event.MOUSE_LEAVE = "mouseLeave";
openfl.events.Event.OPEN = "open";
openfl.events.Event.REMOVED = "removed";
openfl.events.Event.REMOVED_FROM_STAGE = "removedFromStage";
openfl.events.Event.RENDER = "render";
openfl.events.Event.STAGE_RENDERED = "stageRendered";
openfl.events.Event.RESIZE = "resize";
openfl.events.Event.SCROLL = "scroll";
openfl.events.Event.SELECT = "select";
openfl.events.Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
openfl.events.Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
openfl.events.Event.TAB_INDEX_CHANGE = "tabIndexChange";
openfl.events.Event.UNLOAD = "unload";
openfl.events.Event.SOUND_COMPLETE = "soundComplete";
openfl.events.Event.PASTE = "paste";
haxe.ui.toolkit.events.MenuEvent.SELECT = openfl.events.Event.SELECT;
haxe.ui.toolkit.events.MenuEvent.OPEN = openfl.events.Event.OPEN;
haxe.ui.toolkit.events.UIEvent.PREFIX = "haxeui_";
haxe.ui.toolkit.events.UIEvent.INIT = "haxeui_" + "init";
haxe.ui.toolkit.events.UIEvent.RESIZE = "haxeui_" + "resize";
haxe.ui.toolkit.events.UIEvent.READY = "haxeui_" + "ready";
haxe.ui.toolkit.events.UIEvent.CLICK = "haxeui_" + "click";
haxe.ui.toolkit.events.UIEvent.MOUSE_DOWN = "haxeui_" + "mouseDown";
haxe.ui.toolkit.events.UIEvent.MOUSE_UP = "haxeui_" + "mouseUp";
haxe.ui.toolkit.events.UIEvent.MOUSE_OVER = "haxeui_" + "mouseOver";
haxe.ui.toolkit.events.UIEvent.MOUSE_OUT = "haxeui_" + "mouseOut";
haxe.ui.toolkit.events.UIEvent.MOUSE_MOVE = "haxeui_" + "mouseMove";
haxe.ui.toolkit.events.UIEvent.DOUBLE_CLICK = "haxeui_" + "doubleClick";
haxe.ui.toolkit.events.UIEvent.ROLL_OVER = "haxeui_" + "rollOver";
haxe.ui.toolkit.events.UIEvent.ROLL_OUT = "haxeui_" + "rollOut";
haxe.ui.toolkit.events.UIEvent.CHANGE = "haxeui_" + "change";
haxe.ui.toolkit.events.UIEvent.SCROLL = "haxeui_" + "scroll";
haxe.ui.toolkit.events.UIEvent.ADDED = "haxeui_" + "added";
haxe.ui.toolkit.events.UIEvent.ADDED_TO_STAGE = "haxeui_" + "addedToStage";
haxe.ui.toolkit.events.UIEvent.REMOVED = "haxeui_" + "removed";
haxe.ui.toolkit.events.UIEvent.REMOVED_FROM_STAGE = "haxeui_" + "removedFromStage";
haxe.ui.toolkit.events.UIEvent.ACTIVATE = "haxeui_" + "activate";
haxe.ui.toolkit.events.UIEvent.DEACTIVATE = "haxeui_" + "deactivate";
haxe.ui.toolkit.events.UIEvent.GLYPH_CLICK = "haxeui_" + "glyphClick";
haxe.ui.toolkit.events.UIEvent.COMPONENT_EVENT = "haxeui_" + "componentEvent";
haxe.ui.toolkit.events.UIEvent.MENU_SELECT = "haxeui_" + "menuSelect";
haxe.ui.toolkit.events.UIEvent.MENU_OPEN = "haxeui_" + "menuOpen";
haxe.ui.toolkit.style.Style.NONE = -2;
haxe.ui.toolkit.text.TextDisplay.X_PADDING = 0;
haxe.ui.toolkit.text.TextDisplay.Y_PADDING = 2;
haxe.ui.toolkit.themes.Theme.assets = new haxe.ds.StringMap();
haxe.ui.toolkit.util.FilterParser.filterParamDefaults = { blur : ["4","4","1"], dropShadow : ["4","45","0","1","4","4","1","1","false","false","false"], glow : ["16711680","1","6","6","2","1","false","false"]};
haxe.ui.toolkit.util.Identifier._objectCount = new haxe.ds.StringMap();
haxe.xml.Parser.escapes = (function($this) {
	var $r;
	var h = new haxe.ds.StringMap();
	h.set("lt","<");
	h.set("gt",">");
	h.set("amp","&");
	h.set("quot","\"");
	h.set("apos","'");
	h.set("nbsp",String.fromCharCode(160));
	$r = h;
	return $r;
}(this));
hscript.Parser.p1 = 0;
hscript.Parser.readPos = 0;
hscript.Parser.tokenMin = 0;
hscript.Parser.tokenMax = 0;
motion.actuators.SimpleActuator.actuators = new Array();
motion.actuators.SimpleActuator.actuatorsLength = 0;
motion.actuators.SimpleActuator.addedEvent = false;
motion.Actuate.defaultActuator = motion.actuators.SimpleActuator;
motion.Actuate.defaultEase = motion.easing.Expo.get_easeOut();
motion.Actuate.targetLibraries = new haxe.ds.ObjectMap();
openfl.Assets.cache = new openfl.AssetCache();
openfl.Assets.libraries = new haxe.ds.StringMap();
openfl.Assets.dispatcher = new openfl.events.EventDispatcher();
openfl.Assets.initialized = false;
openfl.Lib.HTML_ACCELEROMETER_EVENT_TYPE = "devicemotion";
openfl.Lib.HTML_ORIENTATION_EVENT_TYPE = "orientationchange";
openfl.Lib.DEFAULT_HEIGHT = 500;
openfl.Lib.DEFAULT_WIDTH = 500;
openfl.Lib.HTML_DIV_EVENT_TYPES = ["resize","mouseover","mouseout","mousewheel"];
openfl.Lib.HTML_TOUCH_EVENT_TYPES = ["touchstart","touchmove","touchend"];
openfl.Lib.HTML_TOUCH_ALT_EVENT_TYPES = ["mousedown","mousemove","mouseup"];
openfl.Lib.HTML_WINDOW_EVENT_TYPES = ["keyup","keypress","keydown","resize","blur","focus","paste"];
openfl.Lib.NME_IDENTIFIER = "haxe:openfl";
openfl.Lib.SNAP_IDENTIFIER = "haxe-openfl-svg";
openfl.Lib.VENDOR_HTML_TAG = "data-";
openfl.Lib.starttime = haxe.Timer.stamp();
openfl.display._BitmapData.MinstdGenerator.a = 16807;
openfl.display._BitmapData.MinstdGenerator.m = -2147483648 - 1;
openfl.display.BitmapDataChannel.ALPHA = 8;
openfl.display.BitmapDataChannel.BLUE = 4;
openfl.display.BitmapDataChannel.GREEN = 2;
openfl.display.BitmapDataChannel.RED = 1;
openfl.display.Graphics.TILE_SCALE = 1;
openfl.display.Graphics.TILE_ROTATION = 2;
openfl.display.Graphics.TILE_RGB = 4;
openfl.display.Graphics.TILE_ALPHA = 8;
openfl.display.Graphics.TILE_TRANS_2x2 = 16;
openfl.display.Graphics.TILE_BLEND_NORMAL = 0;
openfl.display.Graphics.TILE_BLEND_ADD = 65536;
openfl.display.Graphics.BMP_REPEAT = 16;
openfl.display.Graphics.BMP_SMOOTH = 65536;
openfl.display.Graphics.CORNER_ROUND = 0;
openfl.display.Graphics.CORNER_MITER = 4096;
openfl.display.Graphics.CORNER_BEVEL = 8192;
openfl.display.Graphics.CURVE = 2;
openfl.display.Graphics.END_NONE = 0;
openfl.display.Graphics.END_ROUND = 256;
openfl.display.Graphics.END_SQUARE = 512;
openfl.display.Graphics.LINE = 1;
openfl.display.Graphics.MOVE = 0;
openfl.display.Graphics.__MAX_DIM = 5000;
openfl.display.Graphics.PIXEL_HINTING = 16384;
openfl.display.Graphics.RADIAL = 1;
openfl.display.Graphics.SCALE_HORIZONTAL = 2;
openfl.display.Graphics.SCALE_NONE = 0;
openfl.display.Graphics.SCALE_NORMAL = 3;
openfl.display.Graphics.SCALE_VERTICAL = 1;
openfl.display.Graphics.SPREAD_REPEAT = 2;
openfl.display.Graphics.SPREAD_REFLECT = 4;
openfl.display.GraphicsPathCommand.LINE_TO = 2;
openfl.display.GraphicsPathCommand.MOVE_TO = 1;
openfl.display.GraphicsPathCommand.CURVE_TO = 3;
openfl.display.GraphicsPathCommand.WIDE_LINE_TO = 5;
openfl.display.GraphicsPathCommand.WIDE_MOVE_TO = 4;
openfl.display.GraphicsPathCommand.NO_OP = 0;
openfl.display.GraphicsPathCommand.CUBIC_CURVE_TO = 6;
openfl.events.MouseEvent.CLICK = "click";
openfl.events.MouseEvent.DOUBLE_CLICK = "doubleClick";
openfl.events.MouseEvent.MOUSE_DOWN = "mouseDown";
openfl.events.MouseEvent.MOUSE_MOVE = "mouseMove";
openfl.events.MouseEvent.MOUSE_OUT = "mouseOut";
openfl.events.MouseEvent.MOUSE_OVER = "mouseOver";
openfl.events.MouseEvent.MOUSE_UP = "mouseUp";
openfl.events.MouseEvent.MOUSE_WHEEL = "mouseWheel";
openfl.events.MouseEvent.RIGHT_CLICK = "rightClick";
openfl.events.MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";
openfl.events.MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";
openfl.events.MouseEvent.ROLL_OUT = "rollOut";
openfl.events.MouseEvent.ROLL_OVER = "rollOver";
openfl.display.Stage.NAME = "Stage";
openfl.display.Stage.OrientationPortrait = 1;
openfl.display.Stage.OrientationPortraitUpsideDown = 2;
openfl.display.Stage.OrientationLandscapeRight = 3;
openfl.display.Stage.OrientationLandscapeLeft = 4;
openfl.display.Stage.__acceleration = { x : 0.0, y : 1.0, z : 0.0};
openfl.display.Stage.DEFAULT_FRAMERATE = 0.0;
openfl.display.Stage.UI_EVENTS_QUEUE_MAX = 1000;
openfl.display.Stage.__mouseChanges = [openfl.events.MouseEvent.MOUSE_OUT,openfl.events.MouseEvent.MOUSE_OVER,openfl.events.MouseEvent.ROLL_OUT,openfl.events.MouseEvent.ROLL_OVER];
openfl.display.Stage.__touchChanges = ["touchOut","touchOver","touchRollOut","touchRollOver"];
openfl.display.StageQuality.BEST = "best";
openfl.display.StageQuality.HIGH = "high";
openfl.display.StageQuality.MEDIUM = "medium";
openfl.display.StageQuality.LOW = "low";
openfl.display.Tilesheet.TILE_SCALE = 1;
openfl.display.Tilesheet.TILE_ROTATION = 2;
openfl.display.Tilesheet.TILE_RGB = 4;
openfl.display.Tilesheet.TILE_ALPHA = 8;
openfl.display.Tilesheet.TILE_TRANS_2x2 = 16;
openfl.display.Tilesheet.TILE_BLEND_NORMAL = 0;
openfl.display.Tilesheet.TILE_BLEND_ADD = 65536;
openfl.display.Tilesheet.TILE_BLEND_MULTIPLY = 131072;
openfl.display.Tilesheet.TILE_BLEND_SCREEN = 262144;
openfl.errors.Error.DEFAULT_TO_STRING = "Error";
openfl.events.TextEvent.LINK = "link";
openfl.events.TextEvent.TEXT_INPUT = "textInput";
openfl.events.ErrorEvent.ERROR = "error";
openfl.events.Listener.sIDs = 1;
openfl.events.EventPhase.CAPTURING_PHASE = 0;
openfl.events.EventPhase.AT_TARGET = 1;
openfl.events.EventPhase.BUBBLING_PHASE = 2;
openfl.events.FocusEvent.FOCUS_IN = "focusIn";
openfl.events.FocusEvent.FOCUS_OUT = "focusOut";
openfl.events.FocusEvent.KEY_FOCUS_CHANGE = "keyFocusChange";
openfl.events.FocusEvent.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
openfl.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS = "httpResponseStatus";
openfl.events.HTTPStatusEvent.HTTP_STATUS = "httpStatus";
openfl.events.IOErrorEvent.IO_ERROR = "ioError";
openfl.events.KeyboardEvent.KEY_DOWN = "keyDown";
openfl.events.KeyboardEvent.KEY_UP = "keyUp";
openfl.events.KeyboardEvent.KEY_PRESS = "keyPressed";
openfl.events.ProgressEvent.PROGRESS = "progress";
openfl.events.ProgressEvent.SOCKET_DATA = "socketData";
openfl.events.SecurityErrorEvent.SECURITY_ERROR = "securityError";
openfl.events.TimerEvent.TIMER = "timer";
openfl.events.TimerEvent.TIMER_COMPLETE = "timerComplete";
openfl.events.TouchEvent.TOUCH_BEGIN = "touchBegin";
openfl.events.TouchEvent.TOUCH_END = "touchEnd";
openfl.events.TouchEvent.TOUCH_MOVE = "touchMove";
openfl.events.TouchEvent.TOUCH_OUT = "touchOut";
openfl.events.TouchEvent.TOUCH_OVER = "touchOver";
openfl.events.TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";
openfl.events.TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";
openfl.events.TouchEvent.TOUCH_TAP = "touchTap";
openfl.filters.DropShadowFilter.DEGREES_FULL_RADIUS = 360.0;
openfl.geom.Transform.DEG_TO_RAD = Math.PI / 180.0;
openfl.media.Sound.EXTENSION_MP3 = "mp3";
openfl.media.Sound.EXTENSION_OGG = "ogg";
openfl.media.Sound.EXTENSION_WAV = "wav";
openfl.media.Sound.EXTENSION_AAC = "aac";
openfl.media.Sound.MEDIA_TYPE_MP3 = "audio/mpeg";
openfl.media.Sound.MEDIA_TYPE_OGG = "audio/ogg; codecs=\"vorbis\"";
openfl.media.Sound.MEDIA_TYPE_WAV = "audio/wav; codecs=\"1\"";
openfl.media.Sound.MEDIA_TYPE_AAC = "audio/mp4; codecs=\"mp4a.40.2\"";
openfl.net.URLRequestMethod.DELETE = "DELETE";
openfl.net.URLRequestMethod.GET = "GET";
openfl.net.URLRequestMethod.HEAD = "HEAD";
openfl.net.URLRequestMethod.OPTIONS = "OPTIONS";
openfl.net.URLRequestMethod.POST = "POST";
openfl.net.URLRequestMethod.PUT = "PUT";
openfl.system.ApplicationDomain.currentDomain = new openfl.system.ApplicationDomain(null);
openfl.system.Capabilities.hasAccessibility = false;
openfl.system.SecurityDomain.currentDomain = new openfl.system.SecurityDomain();
openfl.text.TextField.mDefaultFont = "Bitstream_Vera_Sans";
openfl.text.FontInstance.mSolidFonts = new haxe.ds.StringMap();
openfl.text.TextFieldType.DYNAMIC = "DYNAMIC";
openfl.text.TextFieldType.INPUT = "INPUT";
openfl.ui.Keyboard.NUMBER_0 = 48;
openfl.ui.Keyboard.NUMBER_1 = 49;
openfl.ui.Keyboard.NUMBER_2 = 50;
openfl.ui.Keyboard.NUMBER_3 = 51;
openfl.ui.Keyboard.NUMBER_4 = 52;
openfl.ui.Keyboard.NUMBER_5 = 53;
openfl.ui.Keyboard.NUMBER_6 = 54;
openfl.ui.Keyboard.NUMBER_7 = 55;
openfl.ui.Keyboard.NUMBER_8 = 56;
openfl.ui.Keyboard.NUMBER_9 = 57;
openfl.ui.Keyboard.A = 65;
openfl.ui.Keyboard.B = 66;
openfl.ui.Keyboard.C = 67;
openfl.ui.Keyboard.D = 68;
openfl.ui.Keyboard.E = 69;
openfl.ui.Keyboard.F = 70;
openfl.ui.Keyboard.G = 71;
openfl.ui.Keyboard.H = 72;
openfl.ui.Keyboard.I = 73;
openfl.ui.Keyboard.J = 74;
openfl.ui.Keyboard.K = 75;
openfl.ui.Keyboard.L = 76;
openfl.ui.Keyboard.M = 77;
openfl.ui.Keyboard.N = 78;
openfl.ui.Keyboard.O = 79;
openfl.ui.Keyboard.P = 80;
openfl.ui.Keyboard.Q = 81;
openfl.ui.Keyboard.R = 82;
openfl.ui.Keyboard.S = 83;
openfl.ui.Keyboard.T = 84;
openfl.ui.Keyboard.U = 85;
openfl.ui.Keyboard.V = 86;
openfl.ui.Keyboard.W = 87;
openfl.ui.Keyboard.X = 88;
openfl.ui.Keyboard.Y = 89;
openfl.ui.Keyboard.Z = 90;
openfl.ui.Keyboard.NUMPAD_0 = 96;
openfl.ui.Keyboard.NUMPAD_1 = 97;
openfl.ui.Keyboard.NUMPAD_2 = 98;
openfl.ui.Keyboard.NUMPAD_3 = 99;
openfl.ui.Keyboard.NUMPAD_4 = 100;
openfl.ui.Keyboard.NUMPAD_5 = 101;
openfl.ui.Keyboard.NUMPAD_6 = 102;
openfl.ui.Keyboard.NUMPAD_7 = 103;
openfl.ui.Keyboard.NUMPAD_8 = 104;
openfl.ui.Keyboard.NUMPAD_9 = 105;
openfl.ui.Keyboard.NUMPAD_MULTIPLY = 106;
openfl.ui.Keyboard.NUMPAD_ADD = 107;
openfl.ui.Keyboard.NUMPAD_ENTER = 108;
openfl.ui.Keyboard.NUMPAD_SUBTRACT = 109;
openfl.ui.Keyboard.NUMPAD_DECIMAL = 110;
openfl.ui.Keyboard.NUMPAD_DIVIDE = 111;
openfl.ui.Keyboard.F1 = 112;
openfl.ui.Keyboard.F2 = 113;
openfl.ui.Keyboard.F3 = 114;
openfl.ui.Keyboard.F4 = 115;
openfl.ui.Keyboard.F5 = 116;
openfl.ui.Keyboard.F6 = 117;
openfl.ui.Keyboard.F7 = 118;
openfl.ui.Keyboard.F8 = 119;
openfl.ui.Keyboard.F9 = 120;
openfl.ui.Keyboard.F10 = 121;
openfl.ui.Keyboard.F11 = 122;
openfl.ui.Keyboard.F12 = 123;
openfl.ui.Keyboard.F13 = 124;
openfl.ui.Keyboard.F14 = 125;
openfl.ui.Keyboard.F15 = 126;
openfl.ui.Keyboard.BACKSPACE = 8;
openfl.ui.Keyboard.TAB = 9;
openfl.ui.Keyboard.ENTER = 13;
openfl.ui.Keyboard.SHIFT = 16;
openfl.ui.Keyboard.CONTROL = 17;
openfl.ui.Keyboard.CAPS_LOCK = 18;
openfl.ui.Keyboard.ESCAPE = 27;
openfl.ui.Keyboard.SPACE = 32;
openfl.ui.Keyboard.PAGE_UP = 33;
openfl.ui.Keyboard.PAGE_DOWN = 34;
openfl.ui.Keyboard.END = 35;
openfl.ui.Keyboard.HOME = 36;
openfl.ui.Keyboard.LEFT = 37;
openfl.ui.Keyboard.RIGHT = 39;
openfl.ui.Keyboard.UP = 38;
openfl.ui.Keyboard.DOWN = 40;
openfl.ui.Keyboard.INSERT = 45;
openfl.ui.Keyboard.DELETE = 46;
openfl.ui.Keyboard.NUMLOCK = 144;
openfl.ui.Keyboard.BREAK = 19;
openfl.ui.Keyboard.SEMICOLON = 186;
openfl.ui.Keyboard.EQUAL = 187;
openfl.ui.Keyboard.COMMA = 188;
openfl.ui.Keyboard.MINUS = 189;
openfl.ui.Keyboard.PERIOD = 190;
openfl.ui.Keyboard.SLASH = 191;
openfl.ui.Keyboard.BACKQUOTE = 192;
openfl.ui.Keyboard.LEFTBRACKET = 219;
openfl.ui.Keyboard.BACKSLASH = 220;
openfl.ui.Keyboard.RIGHTBRACKET = 221;
openfl.ui.Keyboard.DOM_VK_CANCEL = 3;
openfl.ui.Keyboard.DOM_VK_HELP = 6;
openfl.ui.Keyboard.DOM_VK_BACK_SPACE = 8;
openfl.ui.Keyboard.DOM_VK_TAB = 9;
openfl.ui.Keyboard.DOM_VK_CLEAR = 12;
openfl.ui.Keyboard.DOM_VK_RETURN = 13;
openfl.ui.Keyboard.DOM_VK_ENTER = 14;
openfl.ui.Keyboard.DOM_VK_SHIFT = 16;
openfl.ui.Keyboard.DOM_VK_CONTROL = 17;
openfl.ui.Keyboard.DOM_VK_ALT = 18;
openfl.ui.Keyboard.DOM_VK_PAUSE = 19;
openfl.ui.Keyboard.DOM_VK_CAPS_LOCK = 20;
openfl.ui.Keyboard.DOM_VK_ESCAPE = 27;
openfl.ui.Keyboard.DOM_VK_SPACE = 32;
openfl.ui.Keyboard.DOM_VK_PAGE_UP = 33;
openfl.ui.Keyboard.DOM_VK_PAGE_DOWN = 34;
openfl.ui.Keyboard.DOM_VK_END = 35;
openfl.ui.Keyboard.DOM_VK_HOME = 36;
openfl.ui.Keyboard.DOM_VK_LEFT = 37;
openfl.ui.Keyboard.DOM_VK_UP = 38;
openfl.ui.Keyboard.DOM_VK_RIGHT = 39;
openfl.ui.Keyboard.DOM_VK_DOWN = 40;
openfl.ui.Keyboard.DOM_VK_PRINTSCREEN = 44;
openfl.ui.Keyboard.DOM_VK_INSERT = 45;
openfl.ui.Keyboard.DOM_VK_DELETE = 46;
openfl.ui.Keyboard.DOM_VK_0 = 48;
openfl.ui.Keyboard.DOM_VK_1 = 49;
openfl.ui.Keyboard.DOM_VK_2 = 50;
openfl.ui.Keyboard.DOM_VK_3 = 51;
openfl.ui.Keyboard.DOM_VK_4 = 52;
openfl.ui.Keyboard.DOM_VK_5 = 53;
openfl.ui.Keyboard.DOM_VK_6 = 54;
openfl.ui.Keyboard.DOM_VK_7 = 55;
openfl.ui.Keyboard.DOM_VK_8 = 56;
openfl.ui.Keyboard.DOM_VK_9 = 57;
openfl.ui.Keyboard.DOM_VK_SEMICOLON = 59;
openfl.ui.Keyboard.DOM_VK_EQUALS = 61;
openfl.ui.Keyboard.DOM_VK_A = 65;
openfl.ui.Keyboard.DOM_VK_B = 66;
openfl.ui.Keyboard.DOM_VK_C = 67;
openfl.ui.Keyboard.DOM_VK_D = 68;
openfl.ui.Keyboard.DOM_VK_E = 69;
openfl.ui.Keyboard.DOM_VK_F = 70;
openfl.ui.Keyboard.DOM_VK_G = 71;
openfl.ui.Keyboard.DOM_VK_H = 72;
openfl.ui.Keyboard.DOM_VK_I = 73;
openfl.ui.Keyboard.DOM_VK_J = 74;
openfl.ui.Keyboard.DOM_VK_K = 75;
openfl.ui.Keyboard.DOM_VK_L = 76;
openfl.ui.Keyboard.DOM_VK_M = 77;
openfl.ui.Keyboard.DOM_VK_N = 78;
openfl.ui.Keyboard.DOM_VK_O = 79;
openfl.ui.Keyboard.DOM_VK_P = 80;
openfl.ui.Keyboard.DOM_VK_Q = 81;
openfl.ui.Keyboard.DOM_VK_R = 82;
openfl.ui.Keyboard.DOM_VK_S = 83;
openfl.ui.Keyboard.DOM_VK_T = 84;
openfl.ui.Keyboard.DOM_VK_U = 85;
openfl.ui.Keyboard.DOM_VK_V = 86;
openfl.ui.Keyboard.DOM_VK_W = 87;
openfl.ui.Keyboard.DOM_VK_X = 88;
openfl.ui.Keyboard.DOM_VK_Y = 89;
openfl.ui.Keyboard.DOM_VK_Z = 90;
openfl.ui.Keyboard.DOM_VK_CONTEXT_MENU = 93;
openfl.ui.Keyboard.DOM_VK_NUMPAD0 = 96;
openfl.ui.Keyboard.DOM_VK_NUMPAD1 = 97;
openfl.ui.Keyboard.DOM_VK_NUMPAD2 = 98;
openfl.ui.Keyboard.DOM_VK_NUMPAD3 = 99;
openfl.ui.Keyboard.DOM_VK_NUMPAD4 = 100;
openfl.ui.Keyboard.DOM_VK_NUMPAD5 = 101;
openfl.ui.Keyboard.DOM_VK_NUMPAD6 = 102;
openfl.ui.Keyboard.DOM_VK_NUMPAD7 = 103;
openfl.ui.Keyboard.DOM_VK_NUMPAD8 = 104;
openfl.ui.Keyboard.DOM_VK_NUMPAD9 = 105;
openfl.ui.Keyboard.DOM_VK_MULTIPLY = 106;
openfl.ui.Keyboard.DOM_VK_ADD = 107;
openfl.ui.Keyboard.DOM_VK_SEPARATOR = 108;
openfl.ui.Keyboard.DOM_VK_SUBTRACT = 109;
openfl.ui.Keyboard.DOM_VK_DECIMAL = 110;
openfl.ui.Keyboard.DOM_VK_DIVIDE = 111;
openfl.ui.Keyboard.DOM_VK_F1 = 112;
openfl.ui.Keyboard.DOM_VK_F2 = 113;
openfl.ui.Keyboard.DOM_VK_F3 = 114;
openfl.ui.Keyboard.DOM_VK_F4 = 115;
openfl.ui.Keyboard.DOM_VK_F5 = 116;
openfl.ui.Keyboard.DOM_VK_F6 = 117;
openfl.ui.Keyboard.DOM_VK_F7 = 118;
openfl.ui.Keyboard.DOM_VK_F8 = 119;
openfl.ui.Keyboard.DOM_VK_F9 = 120;
openfl.ui.Keyboard.DOM_VK_F10 = 121;
openfl.ui.Keyboard.DOM_VK_F11 = 122;
openfl.ui.Keyboard.DOM_VK_F12 = 123;
openfl.ui.Keyboard.DOM_VK_F13 = 124;
openfl.ui.Keyboard.DOM_VK_F14 = 125;
openfl.ui.Keyboard.DOM_VK_F15 = 126;
openfl.ui.Keyboard.DOM_VK_F16 = 127;
openfl.ui.Keyboard.DOM_VK_F17 = 128;
openfl.ui.Keyboard.DOM_VK_F18 = 129;
openfl.ui.Keyboard.DOM_VK_F19 = 130;
openfl.ui.Keyboard.DOM_VK_F20 = 131;
openfl.ui.Keyboard.DOM_VK_F21 = 132;
openfl.ui.Keyboard.DOM_VK_F22 = 133;
openfl.ui.Keyboard.DOM_VK_F23 = 134;
openfl.ui.Keyboard.DOM_VK_F24 = 135;
openfl.ui.Keyboard.DOM_VK_NUM_LOCK = 144;
openfl.ui.Keyboard.DOM_VK_SCROLL_LOCK = 145;
openfl.ui.Keyboard.DOM_VK_COMMA = 188;
openfl.ui.Keyboard.DOM_VK_PERIOD = 190;
openfl.ui.Keyboard.DOM_VK_SLASH = 191;
openfl.ui.Keyboard.DOM_VK_BACK_QUOTE = 192;
openfl.ui.Keyboard.DOM_VK_OPEN_BRACKET = 219;
openfl.ui.Keyboard.DOM_VK_BACK_SLASH = 220;
openfl.ui.Keyboard.DOM_VK_CLOSE_BRACKET = 221;
openfl.ui.Keyboard.DOM_VK_QUOTE = 222;
openfl.ui.Keyboard.DOM_VK_META = 224;
openfl.ui.Keyboard.DOM_VK_KANA = 21;
openfl.ui.Keyboard.DOM_VK_HANGUL = 21;
openfl.ui.Keyboard.DOM_VK_JUNJA = 23;
openfl.ui.Keyboard.DOM_VK_FINAL = 24;
openfl.ui.Keyboard.DOM_VK_HANJA = 25;
openfl.ui.Keyboard.DOM_VK_KANJI = 25;
openfl.ui.Keyboard.DOM_VK_CONVERT = 28;
openfl.ui.Keyboard.DOM_VK_NONCONVERT = 29;
openfl.ui.Keyboard.DOM_VK_ACEPT = 30;
openfl.ui.Keyboard.DOM_VK_MODECHANGE = 31;
openfl.ui.Keyboard.DOM_VK_SELECT = 41;
openfl.ui.Keyboard.DOM_VK_PRINT = 42;
openfl.ui.Keyboard.DOM_VK_EXECUTE = 43;
openfl.ui.Keyboard.DOM_VK_SLEEP = 95;
openfl.utils.Endian.BIG_ENDIAN = "bigEndian";
openfl.utils.Endian.LITTLE_ENDIAN = "littleEndian";
openfl.utils.Uuid.UID_CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
ApplicationMain.main();
})();
